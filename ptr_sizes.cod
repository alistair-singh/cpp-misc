; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24104.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	fabsl
PUBLIC	frexpl
PUBLIC	__local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
PUBLIC	_vsprintf_s_l
PUBLIC	sprintf_s
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?length@?$char_traits@D@std@@SA_KPEBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z	; std::char_traits<char>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAXAEADAEBD@Z	; std::char_traits<char>::assign
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHAEBD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	?_Init_atomic_counter@std@@YAXAEAKK@Z		; std::_Init_atomic_counter
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QEAA@AEBV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QEBA_KXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Copy_alloc
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??0runtime_error@std@@QEAA@PEBD@Z		; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??0_Locinfo@std@@QEAA@PEBD@Z			; std::_Locinfo::_Locinfo
PUBLIC	??1_Locinfo@std@@QEAA@XZ			; std::_Locinfo::~_Locinfo
PUBLIC	?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ	; std::_Locinfo::_Getcvt
PUBLIC	?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ	; std::_Locinfo::_Getlconv
PUBLIC	?_Getfalse@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Getfalse
PUBLIC	?_Gettrue@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Gettrue
PUBLIC	??0?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::_Yarn<char>
PUBLIC	??1?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	?c_str@?$_Yarn@D@std@@QEBAPEBDXZ		; std::_Yarn<char>::c_str
PUBLIC	?_Tidy@?$_Yarn@D@std@@AEAAXXZ			; std::_Yarn<char>::_Tidy
PUBLIC	??0?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::_Yarn<wchar_t>
PUBLIC	??1?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
PUBLIC	?_Tidy@?$_Yarn@_W@std@@AEAAXXZ			; std::_Yarn<wchar_t>::_Tidy
PUBLIC	??1_Facet_base@std@@UEAA@XZ			; std::_Facet_base::~_Facet_base
PUBLIC	??0_Facet_base@std@@QEAA@XZ			; std::_Facet_base::_Facet_base
PUBLIC	??_G_Facet_base@std@@UEAAPEAXI@Z		; std::_Facet_base::`scalar deleting destructor'
PUBLIC	??0id@locale@std@@QEAA@_K@Z			; std::locale::id::id
PUBLIC	??Bid@locale@std@@QEAA_KXZ			; std::locale::id::operator unsigned __int64
PUBLIC	?_Incref@facet@locale@std@@UEAAXXZ		; std::locale::facet::_Incref
PUBLIC	?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref
PUBLIC	??0facet@locale@std@@IEAA@_K@Z			; std::locale::facet::facet
PUBLIC	??1facet@locale@std@@MEAA@XZ			; std::locale::facet::~facet
PUBLIC	??_Gfacet@locale@std@@MEAAPEAXI@Z		; std::locale::facet::`scalar deleting destructor'
PUBLIC	??0locale@std@@QEAA@AEBV01@@Z			; std::locale::locale
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	?c_str@locale@std@@QEBAPEBDXZ			; std::locale::c_str
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	??0ctype_base@std@@QEAA@_K@Z			; std::ctype_base::ctype_base
PUBLIC	??1ctype_base@std@@UEAA@XZ			; std::ctype_base::~ctype_base
PUBLIC	??_Gctype_base@std@@UEAAPEAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	?widen@?$ctype@D@std@@QEBADD@Z			; std::ctype<char>::widen
PUBLIC	?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z	; std::ctype<char>::widen
PUBLIC	??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z	; std::ctype<char>::ctype<char>
PUBLIC	?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??1?$ctype@D@std@@MEAA@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z	; std::ctype<char>::_Init
PUBLIC	?_Tidy@?$ctype@D@std@@IEAAXXZ			; std::ctype<char>::_Tidy
PUBLIC	?do_tolower@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_toupper@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_widen@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z	; std::ctype<char>::do_widen
PUBLIC	?do_narrow@?$ctype@D@std@@MEBADDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z	; std::ctype<char>::do_narrow
PUBLIC	??_G?$ctype@D@std@@MEAAPEAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
PUBLIC	?iostream_category@std@@YAAEBVerror_category@1@XZ ; std::iostream_category
PUBLIC	??0error_category@std@@QEAA@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UEAA@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QEBA_NAEBV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UEAAPEAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
PUBLIC	?value@error_code@std@@QEBAHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
PUBLIC	?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QEBAHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8std@@YA_NAEBVerror_condition@0@0@Z		; std::operator==
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	??1_System_error@std@@UEAA@XZ			; std::_System_error::~_System_error
PUBLIC	??0_System_error@std@@QEAA@AEBV01@@Z		; std::_System_error::_System_error
PUBLIC	??_G_System_error@std@@UEAAPEAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QEAA@Verror_code@1@PEBD@Z	; std::system_error::system_error
PUBLIC	??1system_error@std@@UEAA@XZ			; std::system_error::~system_error
PUBLIC	??0system_error@std@@QEAA@AEBV01@@Z		; std::system_error::system_error
PUBLIC	??_Gsystem_error@std@@UEAAPEAXI@Z		; std::system_error::`scalar deleting destructor'
PUBLIC	??0_Generic_error_category@std@@QEAA@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UEBAPEBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UEAA@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UEAAPEAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QEAA@XZ	; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UEBAPEBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UEAA@XZ	; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UEAAPEAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
PUBLIC	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UEAA@XZ		; std::ios_base::failure::~failure
PUBLIC	??0failure@ios_base@std@@QEAA@AEBV012@@Z	; std::ios_base::failure::failure
PUBLIC	??_Gfailure@ios_base@std@@UEAAPEAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	?clear@ios_base@std@@QEAAXH_N@Z			; std::ios_base::clear
PUBLIC	?rdstate@ios_base@std@@QEBAHXZ			; std::ios_base::rdstate
PUBLIC	?good@ios_base@std@@QEBA_NXZ			; std::ios_base::good
PUBLIC	?flags@ios_base@std@@QEBAHXZ			; std::ios_base::flags
PUBLIC	?precision@ios_base@std@@QEBA_JXZ		; std::ios_base::precision
PUBLIC	?width@ios_base@std@@QEBA_JXZ			; std::ios_base::width
PUBLIC	?width@ios_base@std@@QEAA_J_J@Z			; std::ios_base::width
PUBLIC	?getloc@ios_base@std@@QEBA?AVlocale@2@XZ	; std::ios_base::getloc
PUBLIC	main
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
PUBLIC	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
PUBLIC	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
PUBLIC	?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
PUBLIC	??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
PUBLIC	??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
PUBLIC	?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
PUBLIC	?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
PUBLIC	?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
PUBLIC	?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
PUBLIC	?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
PUBLIC	?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
PUBLIC	?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
PUBLIC	??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
PUBLIC	??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
PUBLIC	??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
PUBLIC	??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
PUBLIC	??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
PUBLIC	?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
PUBLIC	??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
PUBLIC	?decimal_point@?$numpunct@D@std@@QEBADXZ	; std::numpunct<char>::decimal_point
PUBLIC	?thousands_sep@?$numpunct@D@std@@QEBADXZ	; std::numpunct<char>::thousands_sep
PUBLIC	?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
PUBLIC	?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
PUBLIC	?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
PUBLIC	??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z	; std::numpunct<char>::numpunct<char>
PUBLIC	?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<char>::_Getcat
PUBLIC	??1?$numpunct@D@std@@MEAA@XZ			; std::numpunct<char>::~numpunct<char>
PUBLIC	?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
PUBLIC	?do_decimal_point@?$numpunct@D@std@@MEBADXZ	; std::numpunct<char>::do_decimal_point
PUBLIC	?do_thousands_sep@?$numpunct@D@std@@MEBADXZ	; std::numpunct<char>::do_thousands_sep
PUBLIC	?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_grouping
PUBLIC	?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_falsename
PUBLIC	?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::do_truename
PUBLIC	?_Tidy@?$numpunct@D@std@@AEAAXXZ		; std::numpunct<char>::_Tidy
PUBLIC	??_G?$numpunct@D@std@@MEAAPEAXI@Z		; std::numpunct<char>::`scalar deleting destructor'
PUBLIC	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator==<std::allocator<char>,std::allocator<char> >
PUBLIC	??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z	; std::operator==<char,char>
PUBLIC	??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
PUBLIC	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
PUBLIC	??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ; std::operator!=<std::allocator<char>,std::allocator<char> >
PUBLIC	??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z	; std::operator!=<char,char>
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
PUBLIC	??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
PUBLIC	??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * __ptr64 & __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z	; std::_Maklocchr<char>
PUBLIC	??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z ; std::numpunct<char>::_Getvals<char>
PUBLIC	??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ; std::allocator<char>::destroy<char * __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	_TI2?AVruntime_error@std@@
PUBLIC	_CTA2?AVruntime_error@std@@
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVruntime_error@std@@@824
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@824
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@	; `string'
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	??_C@_04LOAJBDKD@true?$AA@			; `string'
PUBLIC	??_7_Facet_base@std@@6B@			; std::_Facet_base::`vftable'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	_TI5?AVfailure@ios_base@std@@
PUBLIC	_CTA5?AVfailure@ios_base@std@@
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVfailure@ios_base@std@@@840
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVsystem_error@std@@@840
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AV_System_error@std@@@840
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ ; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@	; `string'
PUBLIC	??_C@_04MNPECFFB@p?5?5?5?$AA@			; `string'
PUBLIC	??_C@_04KAAENAKC@i?5?5?5?$AA@			; `string'
PUBLIC	??_C@_04IKFEFPIB@s?5?5?5?$AA@			; `string'
PUBLIC	??_C@_04KEKIMHEG@vi?5?5?$AA@			; `string'
PUBLIC	??_C@_04ECLENAPB@v?5?5?5?$AA@			; `string'
PUBLIC	??_C@_04CFFBBFKL@p1?5?5?$AA@			; `string'
PUBLIC	??_C@_04DHOELKEF@p2?5?5?$AA@			; `string'
PUBLIC	??_C@_04IPFINNCA@p3?5?5?$AA@			; `string'
PUBLIC	??_C@_04KCGBOJJJ@sptr?$AA@			; `string'
PUBLIC	??_C@_04CNCBBMDJ@uptr?$AA@			; `string'
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
PUBLIC	??_C@_02BBAHNLBA@?$CFp?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	??_7?$numpunct@D@std@@6B@			; std::numpunct<char>::`vftable'
PUBLIC	??_C@_02MDKMJEGG@eE?$AA@			; `string'
PUBLIC	??_C@_02OOPEBDOJ@pP?$AA@			; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_cast@std@@@824
PUBLIC	?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
PUBLIC	?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
PUBLIC	?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<char> >::_Psave
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Facet_base@std@@6B@			; std::_Facet_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$numpunct@D@std@@6B@			; std::numpunct<char>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$numpunct@D@std@@@8			; std::numpunct<char> `RTTI Type Descriptor'
PUBLIC	??_R3?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$numpunct@D@std@@8			; std::numpunct<char>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$numpunct@D@std@@8		; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@4202a05f20000000
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	atexit:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	__std_terminate:PROC
EXTRN	_invalid_parameter_noinfo_noreturn:PROC
EXTRN	??0_Lockit@std@@QEAA@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QEAA@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	frexp:PROC
EXTRN	calloc:PROC
EXTRN	free:PROC
EXTRN	__stdio_common_vsprintf_s:PROC
EXTRN	memmove:PROC
EXTRN	strcspn:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	localeconv:PROC
EXTRN	_Getctype:PROC
EXTRN	_Getcvt:PROC
EXTRN	_Tolower:PROC
EXTRN	_Toupper:PROC
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	??_E_Facet_base@std@@UEAAPEAXI@Z:PROC		; std::_Facet_base::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	??_Efacet@locale@std@@MEAAPEAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	??_Ectype_base@std@@UEAAPEAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_E?$ctype@D@std@@MEAAPEAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	??_Eerror_category@std@@UEAAPEAXI@Z:PROC	; std::error_category::`vector deleting destructor'
EXTRN	??_E_System_error@std@@UEAAPEAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UEAAPEAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPEBDH@Z:PROC		; std::_Syserror_map
EXTRN	??_E_Generic_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_Efailure@ios_base@std@@UEAAPEAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z:PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vector deleting destructor'
EXTRN	??_E?$numpunct@D@std@@MEAAPEAXI@Z:PROC		; std::numpunct<char>::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	_Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:QWORD		; std::ctype<char>::id
EXTRN	?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cout
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DQ 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DQ 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A
_BSS	SEGMENT
?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A DB 010H DUP (?) ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
_BSS	ENDS
;	COMDAT ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::numpunct<char> >::_Psave
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN8
	DD	imagerel $LN8+85
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+53
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+66
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+28
	DD	imagerel $unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z DD imagerel $LN4
	DD	imagerel $LN4+33
	DD	imagerel $unwind$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN16
	DD	imagerel $LN16+129
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN16
	DD	imagerel $LN16+105
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD imagerel $LN18
	DD	imagerel $LN18+81
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN18
	DD	imagerel $LN18+97
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD imagerel $LN21
	DD	imagerel $LN21+97
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD imagerel $LN21
	DD	imagerel $LN21+81
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN153
	DD	imagerel $LN153+49
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD imagerel $LN141
	DD	imagerel $LN141+60
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD imagerel $LN134
	DD	imagerel $LN134+42
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN152
	DD	imagerel $LN152+42
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel $LN328
	DD	imagerel $LN328+181
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD imagerel $LN258
	DD	imagerel $LN258+128
	DD	imagerel $unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN133
	DD	imagerel $LN133+129
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN160
	DD	imagerel $LN160+35
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN232
	DD	imagerel $LN232+75
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN232+75
	DD	imagerel $LN232+253
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN232+253
	DD	imagerel $LN232+279
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN232+279
	DD	imagerel $LN232+292
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN249
	DD	imagerel $LN249+138
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN249+138
	DD	imagerel $LN249+298
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN249+298
	DD	imagerel $LN249+311
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN249+311
	DD	imagerel $LN249+324
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN208
	DD	imagerel $LN208+44
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN208+44
	DD	imagerel $LN208+235
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN208+235
	DD	imagerel $LN208+248
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN208+248
	DD	imagerel $LN208+261
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN250
	DD	imagerel $LN250+302
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN217
	DD	imagerel $LN217+304
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN180
	DD	imagerel $LN180+256
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN258
	DD	imagerel $LN258+62
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN258+62
	DD	imagerel $LN258+320
	DD	imagerel $chain$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN258+320
	DD	imagerel $LN258+346
	DD	imagerel $chain$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD imagerel $LN258+346
	DD	imagerel $LN258+359
	DD	imagerel $chain$2$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN51
	DD	imagerel $LN51+61
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN120
	DD	imagerel $LN120+200
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel $LN492
	DD	imagerel $LN492+411
	DD	imagerel $unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+51
	DD	imagerel $unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+154
	DD	imagerel $unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN103
	DD	imagerel $LN103+130
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD imagerel $LN130
	DD	imagerel $LN130+170
	DD	imagerel $unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD imagerel $LN19
	DD	imagerel $LN19+28
	DD	imagerel $unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN25
	DD	imagerel $LN25+84
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+74
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+63
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+66
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+63
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+66
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel $LN28
	DD	imagerel $LN28+201
	DD	imagerel $unwind$??0_Locinfo@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Locinfo@std@@QEAA@XZ DD imagerel $LN39
	DD	imagerel $LN39+163
	DD	imagerel $unwind$??1_Locinfo@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@D@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+35
	DD	imagerel $unwind$??1?$_Yarn@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@_W@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+35
	DD	imagerel $unwind$??1?$_Yarn@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Facet_base@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_G_Facet_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bid@locale@std@@QEAA_KXZ DD imagerel $LN8
	DD	imagerel $LN8+80
	DD	imagerel $unwind$??Bid@locale@std@@QEAA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfacet@locale@std@@MEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+43
	DD	imagerel $unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0locale@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??0locale@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+57
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+82
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gctype_base@std@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+43
	DD	imagerel $unwind$??_Gctype_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel $LN18
	DD	imagerel $LN18+57
	DD	imagerel $unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN36
	DD	imagerel $LN36+230
	DD	imagerel $unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ctype@D@std@@MEAA@XZ DD imagerel $LN19
	DD	imagerel $LN19+73
	DD	imagerel $unwind$??1?$ctype@D@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+40
	DD	imagerel $unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$ctype@D@std@@IEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+64
	DD	imagerel $unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN12
	DD	imagerel $LN12+38
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN12+38
	DD	imagerel $LN12+77
	DD	imagerel $chain$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN12+77
	DD	imagerel $LN12+96
	DD	imagerel $chain$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN12
	DD	imagerel $LN12+38
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN12+38
	DD	imagerel $LN12+77
	DD	imagerel $chain$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN12+77
	DD	imagerel $LN12+96
	DD	imagerel $chain$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+29
	DD	imagerel $unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$ctype@D@std@@MEAAPEAXI@Z DD imagerel $LN24
	DD	imagerel $LN24+106
	DD	imagerel $unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+318
	DD	imagerel $unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+40
	DD	imagerel $unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD imagerel $LN24
	DD	imagerel $LN24+63
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gerror_category@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_Gerror_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN12
	DD	imagerel $LN12+39
	DD	imagerel $unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel $LN308
	DD	imagerel $LN308+281
	DD	imagerel $unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN313
	DD	imagerel $LN313+309
	DD	imagerel $unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+80
	DD	imagerel $unwind$??0_System_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_System_error@std@@UEAAPEAXI@Z DD imagerel $LN14
	DD	imagerel $LN14+66
	DD	imagerel $unwind$??_G_System_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel $LN273
	DD	imagerel $LN273+259
	DD	imagerel $unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@AEBV01@@Z DD imagerel $LN12
	DD	imagerel $LN12+90
	DD	imagerel $unwind$??0system_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gsystem_error@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gsystem_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN146
	DD	imagerel $LN146+86
	DD	imagerel $unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+43
	DD	imagerel $unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN148
	DD	imagerel $LN148+77
	DD	imagerel $unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+43
	DD	imagerel $unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD imagerel $LN24
	DD	imagerel $LN24+123
	DD	imagerel $unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+50
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD imagerel $LN15
	DD	imagerel $LN15+90
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel $LN862
	DD	imagerel $LN862+705
	DD	imagerel $unwind$?clear@ios_base@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD imagerel $LN8
	DD	imagerel $LN8+54
	DD	imagerel $unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN24
	DD	imagerel $LN24+411
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD imagerel $LN12
	DD	imagerel $LN12+105
	DD	imagerel $unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+98
	DD	imagerel $unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA+27
	DD	imagerel $unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z DD imagerel $LN954
	DD	imagerel $LN954+399
	DD	imagerel $unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA DD imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD imagerel $LN958
	DD	imagerel $LN958+331
	DD	imagerel $unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel $LN61
	DD	imagerel $LN61+176
	DD	imagerel $unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN1030
	DD	imagerel $LN1030+583
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN14
	DD	imagerel $LN14+135
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN10
	DD	imagerel $LN10+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+49
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN26
	DD	imagerel $LN26+123
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+70
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+318
	DD	imagerel $unwind$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN32
	DD	imagerel $LN32+196
	DD	imagerel $unwind$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD imagerel $LN719
	DD	imagerel $LN719+951
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD imagerel $LN17
	DD	imagerel $LN17+243
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD imagerel $LN17
	DD	imagerel $LN17+243
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z DD imagerel $LN16
	DD	imagerel $LN16+253
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD imagerel $LN16
	DD	imagerel $LN16+253
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD imagerel $LN394
	DD	imagerel $LN394+621
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD imagerel $LN398
	DD	imagerel $LN398+625
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z DD imagerel $LN4
	DD	imagerel $LN4+156
	DD	imagerel $unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD imagerel $LN1241
	DD	imagerel $LN1241+1967
	DD	imagerel $unwind$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD imagerel $LN836
	DD	imagerel $LN836+1610
	DD	imagerel $unwind$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD imagerel $LN41
	DD	imagerel $LN41+157
	DD	imagerel $unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD imagerel $LN41
	DD	imagerel $LN41+159
	DD	imagerel $unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+43
	DD	imagerel $unwind$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z DD imagerel $LN30
	DD	imagerel $LN30+96
	DD	imagerel $unwind$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD imagerel $LN32
	DD	imagerel $LN32+318
	DD	imagerel $unwind$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN6
	DD	imagerel $LN6+32
	DD	imagerel $unwind$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN6
	DD	imagerel $LN6+32
	DD	imagerel $unwind$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN6
	DD	imagerel $LN6+32
	DD	imagerel $unwind$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD imagerel $LN11
	DD	imagerel $LN11+55
	DD	imagerel $unwind$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN31
	DD	imagerel $LN31+213
	DD	imagerel $unwind$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+44
	DD	imagerel $unwind$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$numpunct@D@std@@MEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+62
	DD	imagerel $unwind$??1?$numpunct@D@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD imagerel $LN65
	DD	imagerel $LN65+362
	DD	imagerel $unwind$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA DD imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA+35
	DD	imagerel $unwind$?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN146
	DD	imagerel $LN146+75
	DD	imagerel $unwind$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN146
	DD	imagerel $LN146+75
	DD	imagerel $unwind$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN146
	DD	imagerel $LN146+75
	DD	imagerel $unwind$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$numpunct@D@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+41
	DD	imagerel $unwind$?_Tidy@?$numpunct@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$numpunct@D@std@@MEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+94
	DD	imagerel $unwind$??_G?$numpunct@D@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN15
	DD	imagerel $LN15+100
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@4202a05f20000000
CONST	SEGMENT
__real@4202a05f20000000 DQ 04202a05f20000000r	; 1e+10
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$numpunct@D@std@@8 DD imagerel ??_R0?AV?$numpunct@D@std@@@8 ; std::numpunct<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R2?$numpunct@D@std@@8 DD imagerel ??_R1A@?0A@EA@?$numpunct@D@std@@8 ; std::numpunct<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@D@std@@8
rdata$r	SEGMENT
??_R3?$numpunct@D@std@@8 DD 00H				; std::numpunct<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$numpunct@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@D@std@@@8
data$r	SEGMENT
??_R0?AV?$numpunct@D@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::numpunct<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$numpunct@D@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$numpunct@D@std@@6B@
rdata$r	SEGMENT
??_R4?$numpunct@D@std@@6B@ DD 01H			; std::numpunct<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$numpunct@D@std@@@8
	DD	imagerel ??_R3?$numpunct@D@std@@8
	DD	imagerel ??_R4?$numpunct@D@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD imagerel ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8 DD 00H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@'
	DB	'std@@@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DD 01H ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@8
	DD	imagerel ??_R3?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@8
	DD	imagerel ??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD imagerel ??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@system_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 01H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	imagerel ??_R3failure@ios_base@std@@8
	DD	imagerel ??_R4failure@ios_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD imagerel ??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 01H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Iostream_error_category@std@@@8
	DD	imagerel ??_R3_Iostream_error_category@std@@8
	DD	imagerel ??_R4_Iostream_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD imagerel ??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 01H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Generic_error_category@std@@@8
	DD	imagerel ??_R3_Generic_error_category@std@@8
	DD	imagerel ??_R4_Generic_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD imagerel ??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD imagerel ??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 01H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	imagerel ??_R3system_error@std@@8
	DD	imagerel ??_R4system_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD imagerel ??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD imagerel ??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 01H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	imagerel ??_R3_System_error@std@@8
	DD	imagerel ??_R4_System_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD imagerel ??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD imagerel ??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 01H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVerror_category@std@@@8
	DD	imagerel ??_R3error_category@std@@8
	DD	imagerel ??_R4error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD imagerel ??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD imagerel ??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ctype_base@std@@8
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	imagerel ??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
data$r	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$ctype@D@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 01H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$ctype@D@std@@@8
	DD	imagerel ??_R3?$ctype@D@std@@8
	DD	imagerel ??_R4?$ctype@D@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD imagerel ??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD imagerel ??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
data$r	SEGMENT
??_R0?AUctype_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUctype_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 01H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AUctype_base@std@@@8
	DD	imagerel ??_R3ctype_base@std@@8
	DD	imagerel ??_R4ctype_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 01H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfacet@locale@std@@@8
	DD	imagerel ??_R3facet@locale@std@@8
	DD	imagerel ??_R4facet@locale@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD imagerel ??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$r	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD imagerel ??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$r	SEGMENT
??_R0?AVfacet@locale@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfacet@locale@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD imagerel ??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD imagerel ??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$r	SEGMENT
??_R0?AV_Facet_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Facet_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Facet_base@std@@6B@
rdata$r	SEGMENT
??_R4_Facet_base@std@@6B@ DD 01H			; std::_Facet_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Facet_base@std@@@8
	DD	imagerel ??_R3_Facet_base@std@@8
	DD	imagerel ??_R4_Facet_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@824 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02OOPEBDOJ@pP?$AA@
CONST	SEGMENT
??_C@_02OOPEBDOJ@pP?$AA@ DB 'pP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDKMJEGG@eE?$AA@
CONST	SEGMENT
??_C@_02MDKMJEGG@eE?$AA@ DB 'eE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$numpunct@D@std@@6B@
CONST	SEGMENT
??_7?$numpunct@D@std@@6B@ DQ FLAT:??_R4?$numpunct@D@std@@6B@ ; std::numpunct<char>::`vftable'
	DQ	FLAT:??_E?$numpunct@D@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_decimal_point@?$numpunct@D@std@@MEBADXZ
	DQ	FLAT:?do_thousands_sep@?$numpunct@D@std@@MEBADXZ
	DQ	FLAT:?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DQ	FLAT:?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DQ	FLAT:?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
CONST	ENDS
;	COMDAT ??_C@_02BBAHNLBA@?$CFp?$AA@
CONST	SEGMENT
??_C@_02BBAHNLBA@?$CFp?$AA@ DB '%p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ DQ FLAT:??_R4?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`vftable'
	DQ	FLAT:??_E?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
	DQ	FLAT:?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
CONST	ENDS
;	COMDAT ??_C@_04CNCBBMDJ@uptr?$AA@
CONST	SEGMENT
??_C@_04CNCBBMDJ@uptr?$AA@ DB 'uptr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KCGBOJJJ@sptr?$AA@
CONST	SEGMENT
??_C@_04KCGBOJJJ@sptr?$AA@ DB 'sptr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IPFINNCA@p3?5?5?$AA@
CONST	SEGMENT
??_C@_04IPFINNCA@p3?5?5?$AA@ DB 'p3  ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DHOELKEF@p2?5?5?$AA@
CONST	SEGMENT
??_C@_04DHOELKEF@p2?5?5?$AA@ DB 'p2  ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFFBBFKL@p1?5?5?$AA@
CONST	SEGMENT
??_C@_04CFFBBFKL@p1?5?5?$AA@ DB 'p1  ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ECLENAPB@v?5?5?5?$AA@
CONST	SEGMENT
??_C@_04ECLENAPB@v?5?5?5?$AA@ DB 'v   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KEKIMHEG@vi?5?5?$AA@
CONST	SEGMENT
??_C@_04KEKIMHEG@vi?5?5?$AA@ DB 'vi  ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IKFEFPIB@s?5?5?5?$AA@
CONST	SEGMENT
??_C@_04IKFEFPIB@s?5?5?5?$AA@ DB 's   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KAAENAKC@i?5?5?5?$AA@
CONST	SEGMENT
??_C@_04KAAENAKC@i?5?5?5?$AA@ DB 'i   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MNPECFFB@p?5?5?5?$AA@
CONST	SEGMENT
??_C@_04MNPECFFB@p?5?5?5?$AA@ DB 'p   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ DB 'ios_base::failbit se'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AV_System_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AV_System_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0_System_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVsystem_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVsystem_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0system_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVfailure@ios_base@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVfailure@ios_base@std@@@840 DD 00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0failure@ios_base@std@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
data$r	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfailure@ios_base@std@@', 00H
data$r	ENDS
;	COMDAT _CTA5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_CTA5?AVfailure@ios_base@std@@ DD 05H
	DD	imagerel _CT??_R0?AVfailure@ios_base@std@@@840
	DD	imagerel _CT??_R0?AVsystem_error@std@@@840
	DD	imagerel _CT??_R0?AV_System_error@std@@@840
	DD	imagerel _CT??_R0?AVruntime_error@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT _TI5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_TI5?AVfailure@ios_base@std@@ DD 00H
	DD	imagerel ??1failure@ios_base@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA5?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DQ FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DQ	FLAT:??_Efailure@ios_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DQ FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DQ	FLAT:??_E_Iostream_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Iostream_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DQ FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DQ	FLAT:??_E_Generic_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Generic_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DQ FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DQ	FLAT:??_Esystem_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DQ FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DQ	FLAT:??_E_System_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DQ FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DQ	FLAT:??_Eerror_category@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DQ FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DQ	FLAT:??_E?$ctype@D@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBADDD@Z
CONST	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DQ FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DQ	FLAT:??_Ectype_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DQ FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DQ	FLAT:??_Efacet@locale@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_7_Facet_base@std@@6B@
CONST	SEGMENT
??_7_Facet_base@std@@6B@ DQ FLAT:??_R4_Facet_base@std@@6B@ ; std::_Facet_base::`vftable'
	DQ	FLAT:??_E_Facet_base@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT
??_C@_04LOAJBDKD@true?$AA@ DB 'true', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@ DB 'bad locale name', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@824 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@824 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
_CTA2?AVruntime_error@std@@ DD 02H
	DD	imagerel _CT??_R0?AVruntime_error@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT _TI2?AVruntime_error@std@@
xdata$x	SEGMENT
_TI2?AVruntime_error@std@@ DD 00H
	DD	imagerel ??1runtime_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$numpunct@D@std@@MEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$numpunct@D@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD imagerel ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	0ffffffffH
	DD	imagerel ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z+71
	DD	00H
	DD	imagerel ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z+308
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	01H
	DD	imagerel $tryMap$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	05H
	DD	imagerel $ip2state$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 082019H
	DD	0126420H
	DD	011341cH
	DD	0f00cb210H
	DD	07008e00aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$numpunct@D@std@@MEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+74
	DD	00H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+121
	DD	01H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+140
	DD	02H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+166
	DD	01H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+168
	DD	00H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+170
	DD	03H
	DD	imagerel ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+173
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	08H
	DD	imagerel $ip2state$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 071a11H
	DD	017341aH
	DD	012010dH
	DD	060057006H
	DD	05004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD imagerel ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	0ffffffffH
	DD	imagerel ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z+26
	DD	00H
	DD	imagerel ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z+46
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z+38
	DD	00H
	DD	imagerel ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z+292
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z DD 061611H
	DD	0f3416H
	DD	070047208H
	DD	050026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+169
	DD	00H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+180
	DD	01H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+215
	DD	0ffffffffH
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+251
	DD	02H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+294
	DD	03H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+305
	DD	04H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+340
	DD	02H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+353
	DD	05H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+1370
	DD	02H
	DD	imagerel ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z+1477
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$38@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z DD 0b3619H
	DD	01c3428H
	DD	0140118H
	DD	0e00af00cH
	DD	0c006d008H
	DD	060037004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+240
	DD	00H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+251
	DD	01H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+285
	DD	0ffffffffH
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+321
	DD	02H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+365
	DD	03H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+376
	DD	04H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+410
	DD	02H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+423
	DD	05H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+1726
	DD	02H
	DD	imagerel ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z+1833
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$38@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	058H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z DD 0b3619H
	DD	01e3428H
	DD	0160118H
	DD	0e00af00cH
	DD	0c006d008H
	DD	060037004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
	DD	0a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z DD 051d19H
	DD	014010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z+84
	DD	00H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z+493
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z DD 0b3319H
	DD	0a6825H
	DD	01c3421H
	DD	0160115H
	DD	0e008f00aH
	DD	060057006H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z+84
	DD	00H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z+489
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z DD 0b3319H
	DD	0a6825H
	DD	01c3421H
	DD	0160115H
	DD	0e008f00aH
	DD	060057006H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+128
	DD	00H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+139
	DD	01H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+174
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+194
	DD	02H
	DD	imagerel ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z+837
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z DD 0a2f19H
	DD	0150119H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+75
	DD	00H
	DD	imagerel ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+147
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 091f11H
	DD	017641fH
	DD	016541bH
	DD	0153417H
	DD	012010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z+38
	DD	00H
	DD	imagerel ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z+292
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z DD 061611H
	DD	0f3416H
	DD	070047208H
	DD	050026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+64
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+57
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+109
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
	DD	0ffffffffH
	DD	imagerel ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z+44
	DD	00H
	DD	imagerel ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z+55
	DD	01H
	DD	imagerel ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z+91
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 041411H
	DD	0a3414H
	DD	070027206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+127
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+180
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+194
	DD	02H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+459
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+516
	DD	07H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+534
	DD	08H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+559
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+63
	DD	03H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 02H
	DD	02H
	DD	06H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$211@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	07H
	DD	imagerel ?dtor$212@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0dH
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081e19H
	DD	012341eH
	DD	0f009920dH
	DD	0c005e007H
	DD	060027003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	0ffffffffH
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+51
	DD	00H
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+118
	DD	01H
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+138
	DD	02H
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+167
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 020f11H
	DD	030027206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	0ffffffffH
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+71
	DD	00H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+124
	DD	01H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+135
	DD	02H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+214
	DD	01H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+270
	DD	07H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+288
	DD	08H
	DD	imagerel ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z+312
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+63
	DD	03H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 02H
	DD	02H
	DD	06H
	DD	01H
	DD	imagerel $handlerMap$0$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$207@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	07H
	DD	imagerel ?dtor$208@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	01H
	DD	imagerel $tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	0dH
	DD	imagerel $ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 061919H
	DD	0f6419H
	DD	0e3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z DD imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
	DD	0ffffffffH
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+75
	DD	00H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+130
	DD	01H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+149
	DD	02H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+160
	DD	03H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+196
	DD	04H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+282
	DD	01H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+334
	DD	09H
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+352
	DD	0aH
	DD	imagerel ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z+376
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA+13
	DD	05H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA+63
	DD	05H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z DD 04H
	DD	04H
	DD	08H
	DD	01H
	DD	imagerel $handlerMap$0$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	05H
	DD	00H
	DD	05H
	DD	00H
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$207@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	09H
	DD	imagerel ?dtor$208@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z DD 019930522H
	DD	0bH
	DD	imagerel $stateUnwindMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
	DD	01H
	DD	imagerel $tryMap$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
	DD	0fH
	DD	imagerel $ip2state$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z DD 071d19H
	DD	018341dH
	DD	012010cH
	DD	07003e005H
	DD	06002H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ+18
	DD	00H
	DD	imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ+92
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	01H
	DD	imagerel $tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	04H
	DD	imagerel $ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD imagerel ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	0ffffffffH
	DD	imagerel ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z+34
	DD	00H
	DD	imagerel ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z+45
	DD	01H
	DD	imagerel ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z+81
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 041411H
	DD	0a3414H
	DD	070027206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD imagerel ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	DD	0ffffffffH
	DD	imagerel ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ+30
	DD	00H
	DD	imagerel ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ+45
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 020f11H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel ?clear@ios_base@std@@QEAAXH_N@Z
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+135
	DD	00H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+162
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+343
	DD	01H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+370
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+543
	DD	02H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+570
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?clear@ios_base@std@@QEAAXH_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$71@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$138@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?clear@ios_base@std@@QEAAXH_N@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?clear@ios_base@std@@QEAAXH_N@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?clear@ios_base@std@@QEAAXH_N@Z
	DD	058H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@ios_base@std@@QEAAXH_N@Z DD 032419H
	DD	012010eH
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?clear@ios_base@std@@QEAAXH_N@Z
	DD	082H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gsystem_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+104
	DD	00H
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+131
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 042319H
	DD	0133414H
	DD	07004d208H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_System_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 041c19H
	DD	015340dH
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	0ffffffffH
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+54
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+96
	DD	01H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+115
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+249
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 042019H
	DD	07004b208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gerror_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z+38
	DD	00H
	DD	imagerel ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z+292
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 061611H
	DD	0f3416H
	DD	070047208H
	DD	050026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+38
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 020521H
	DD	065405H
	DD	imagerel $LN12
	DD	imagerel $LN12+38
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+38
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 020521H
	DD	065405H
	DD	imagerel $LN12
	DD	imagerel $LN12+38
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ctype@D@std@@MEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+84
	DD	00H
	DD	imagerel ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+181
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 092011H
	DD	01b6420H
	DD	01a541cH
	DD	0193418H
	DD	016010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gctype_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1locale@std@@QEAA@XZ DD imagerel ??1locale@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1locale@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1locale@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1locale@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0locale@std@@QEAA@AEBV01@@Z DD imagerel ??0locale@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0locale@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0locale@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0locale@std@@QEAA@AEBV01@@Z DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0locale@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bid@locale@std@@QEAA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Facet_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@_W@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@D@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD 020601H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Locinfo@std@@QEAA@XZ DD imagerel ??1_Locinfo@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Locinfo@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Locinfo@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Locinfo@std@@QEAA@XZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Locinfo@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel ??0_Locinfo@std@@QEAA@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+38
	DD	00H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+47
	DD	01H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+54
	DD	02H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+62
	DD	03H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+70
	DD	04H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+77
	DD	05H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+84
	DD	06H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+187
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Locinfo@std@@QEAA@PEBD@Z DD 041811H
	DD	0d3418H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@PEBD@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+110
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+198
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+21
	DD	02H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+37
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+14
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	08H
	DD	imagerel $ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 052119H
	DD	0e0146218H
	DD	060117012H
	DD	03010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 020021H
	DD	067400H
	DD	imagerel $LN258
	DD	imagerel $LN258+62
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 021H
	DD	imagerel $LN258
	DD	imagerel $LN258+62
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 020521H
	DD	067405H
	DD	imagerel $LN258
	DD	imagerel $LN258+62
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z DD 081501H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 020021H
	DD	067400H
	DD	imagerel $LN208
	DD	imagerel $LN208+44
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 021H
	DD	imagerel $LN208
	DD	imagerel $LN208+44
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 020521H
	DD	067405H
	DD	imagerel $LN208
	DD	imagerel $LN208+44
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 020021H
	DD	067400H
	DD	imagerel $LN249
	DD	imagerel $LN249+138
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 021H
	DD	imagerel $LN249
	DD	imagerel $LN249+138
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 020521H
	DD	067405H
	DD	imagerel $LN249
	DD	imagerel $LN249+138
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020021H
	DD	067400H
	DD	imagerel $LN232
	DD	imagerel $LN232+75
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 021H
	DD	imagerel $LN232
	DD	imagerel $LN232+75
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020521H
	DD	067405H
	DD	imagerel $LN232
	DD	imagerel $LN232+75
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN3@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN3@construct:

; 638  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z PROC	; std::allocator<char>::destroy<char * __ptr64>, COMDAT

; 644  : 		_Ptr->~_Uty();
; 645  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ENDP	; std::allocator<char>::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Ptr$ = 24
_Cvt$ = 32
??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z PROC ; std::numpunct<char>::_Getvals<char>, COMDAT

; 190  : 		_Dp = _MAKLOCCHR(_Elem2, _Ptr->decimal_point[0], _Cvt);

  00000	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00003	0f b6 10	 movzx	 edx, BYTE PTR [rax]
  00006	88 51 18	 mov	 BYTE PTR [rcx+24], dl

; 191  : 		_Kseparator = _MAKLOCCHR(_Elem2, _Ptr->thousands_sep[0], _Cvt);

  00009	49 8b 40 08	 mov	 rax, QWORD PTR [r8+8]
  0000d	0f b6 10	 movzx	 edx, BYTE PTR [rax]
  00010	88 51 19	 mov	 BYTE PTR [rcx+25], dl

; 192  : 		}

  00013	c3		 ret	 0
??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z ENDP ; std::numpunct<char>::_Getvals<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Byte$ = 8
__formal$ = 16
__formal$ = 24
??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocchr<char>, COMDAT

; 687  : 	return ((_Elem)(unsigned char)_Byte);

  00000	0f b6 c1	 movzx	 eax, cl

; 688  : 	}

  00003	c3		 ret	 0
??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocchr<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Ptr$ = 48
__formal$ = 56
__formal$ = 64
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 719  : 	{	// convert C string to _Elem sequence using _Cvtvec

$LN15:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx

; 720  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  0000d	48 83 cb ff	 or	 rbx, -1
$LL11@Maklocstr:
  00011	48 ff c3	 inc	 rbx
  00014	80 3c 19 00	 cmp	 BYTE PTR [rcx+rbx], 0
  00018	75 f7		 jne	 SHORT $LL11@Maklocstr
  0001a	48 ff c3	 inc	 rbx

; 721  : 
; 722  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001d	ba 01 00 00 00	 mov	 edx, 1
  00022	48 8b cb	 mov	 rcx, rbx
  00025	e8 00 00 00 00	 call	 calloc
  0002a	48 8b d0	 mov	 rdx, rax

; 723  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 724  : 
; 725  : 	if (!_Ptrdest)

  0002d	48 85 c0	 test	 rax, rax
  00030	74 2c		 je	 SHORT $LN13@Maklocstr

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00032	48 85 db	 test	 rbx, rbx
  00035	74 19		 je	 SHORT $LN3@Maklocstr
  00037	48 8b c8	 mov	 rcx, rax
  0003a	48 2b cf	 sub	 rcx, rdi
  0003d	0f 1f 00	 npad	 3
$LL4@Maklocstr:

; 731  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  00040	0f b6 07	 movzx	 eax, BYTE PTR [rdi]
  00043	88 04 39	 mov	 BYTE PTR [rcx+rdi], al
  00046	48 8d 7f 01	 lea	 rdi, QWORD PTR [rdi+1]
  0004a	48 83 eb 01	 sub	 rbx, 1
  0004e	75 f0		 jne	 SHORT $LL4@Maklocstr
$LN3@Maklocstr:

; 732  :  #pragma warning(pop)
; 733  : 
; 734  : 	return (_Ptrdest);

  00050	48 8b c2	 mov	 rax, rdx

; 735  : 	}

  00053	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
$LN13@Maklocstr:

; 726  : 		_Xbad_alloc();

  0005e	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00063	cc		 int	 3
$LN12@Maklocstr:
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
__formal$ = 24
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 937  : 	}

  00000	c2 00 00	 ret	 0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN8@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN8@construct:

; 755  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 756  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\type_traits
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * __ptr64 & __ptr64>, COMDAT

; 1272 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1273 : 	}

  00003	c3		 ret	 0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 762  : 		_Al.destroy(_Ptr);
; 763  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1272 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1273 : 	}

  00003	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Val1$ = 24
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 290  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1272 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1273 : 	}

  00003	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ
text$yd	SEGMENT
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ PROC ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static'', COMDAT
  00000	c2 00 00	 ret	 0
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ENDP ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>, COMDAT

; 687  : 		}

  00000	c2 00 00	 ret	 0
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>, COMDAT

; 681  : 		{	// construct _Ty inside _Storage
; 682  : 		::new (static_cast<void *>(&_Storage)) _Ty();

  00000	48 85 c9	 test	 rcx, rcx
  00003	74 12		 je	 SHORT $LN16@Immortaliz

; 616  : 		{	// default constructor

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  0000c	48 c7 41 08 05
	00 00 00	 mov	 QWORD PTR [rcx+8], 5
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN16@Immortaliz:

; 683  : 		}

  00017	48 8b c1	 mov	 rax, rcx
  0001a	c3		 ret	 0
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 942  : 	typename _Alty::propagate_on_container_copy_assignment _Tag;
; 943  : 	_Pocca(_Left, _Right, _Tag);
; 944  : 	}

  00000	c2 00 00	 ret	 0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEBU10@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT

; 702  : 	return (false);

  00000	32 c0		 xor	 al, al

; 703  : 	}

  00002	c3		 ret	 0
??$?9DD@std@@YA_NAEBV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z PROC ; std::operator!=<std::allocator<char>,std::allocator<char> >, COMDAT

; 924  : 	return (!(_Left == _Right));

  00000	32 c0		 xor	 al, al

; 925  : 	}

  00002	c3		 ret	 0
??$?9V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00000	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  00004	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00008	74 08		 je	 SHORT $LN3@Pnavail
  0000a	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  0000e	48 63 00	 movsxd	 rax, DWORD PTR [rax]

; 315  : 		}

  00011	c3		 ret	 0
$LN3@Pnavail:

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00012	33 c0		 xor	 eax, eax
  00014	48 98		 cdqe

; 315  : 		}

  00016	c3		 ret	 0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT

; 308  : 		--*_IPcount;

  00000	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00004	ff 08		 dec	 DWORD PTR [rax]

; 309  : 		return ((*_IPnext)++);

  00006	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8d 48 01	 lea	 rcx, QWORD PTR [rax+1]
  00011	48 89 0a	 mov	 QWORD PTR [rdx], rcx

; 310  : 		}

  00014	c3		 ret	 0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputn, COMDAT

; 208  : 		return (xsputn(_Ptr, _Count));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 48	 rex_jmp QWORD PTR [rax+72]
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputn
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputc, COMDAT

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00000	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]

; 199  : 		{	// put a character

  00004	44 0f b6 c2	 movzx	 r8d, dl

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00008	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0000c	74 24		 je	 SHORT $LN3@sputc
  0000e	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00012	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00014	85 c0		 test	 eax, eax
  00016	7e 1a		 jle	 SHORT $LN3@sputc

; 308  : 		--*_IPcount;

  00018	ff c8		 dec	 eax
  0001a	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0001c	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00020	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00023	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00027	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0002a	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0002d	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 203  : 		}

  00031	c3		 ret	 0
$LN3@sputc:

; 200  : 		return (0 < _Pnavail()

  00032	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00035	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00039	48 ff 60 18	 rex_jmp QWORD PTR [rax+24]
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT

; 145  : 		return (sync());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 68	 rex_jmp QWORD PTR [rax+104]
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN13@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN13@construct:

; 893  : 		_Mytraits::construct(*this, _Ptr,
; 894  : 			_STD forward<_Types>(_Args)...);
; 895  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT

; 694  : 	return (true);

  00000	b0 01		 mov	 al, 1

; 695  : 	}

  00002	c3		 ret	 0
??$?8DD@std@@YA_NAEBV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z PROC ; std::operator==<std::allocator<char>,std::allocator<char> >, COMDAT

; 915  : 	return (static_cast<const _Ty&>(_Left)

  00000	b0 01		 mov	 al, 1

; 916  : 		== static_cast<const _Other&>(_Right));
; 917  : 	}

  00002	c3		 ret	 0
??$?8V?$allocator@D@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z ENDP ; std::operator==<std::allocator<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 723  : 	return (__builtin_addressof(_Val));

  00000	48 8b c1	 mov	 rax, rcx

; 724  : 	}

  00003	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 901  : 		_Mytraits::destroy(*this, _Ptr);
; 902  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 281  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >, COMDAT

; 851  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
;	COMDAT ??_G?$numpunct@D@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$numpunct@D@std@@MEAAPEAXI@Z PROC			; std::numpunct<char>::`scalar deleting destructor', COMDAT
$LN17:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 175  : 		{	// destroy the object

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 258  : 		_CSTD free((void *)_Grouping);

  00019	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0001d	e8 00 00 00 00	 call	 free

; 259  : 		_CSTD free((void *)_Falsename);

  00022	48 8b 4f 20	 mov	 rcx, QWORD PTR [rdi+32]
  00026	e8 00 00 00 00	 call	 free

; 260  : 		_CSTD free((void *)_Truename);

  0002b	48 8b 4f 28	 mov	 rcx, QWORD PTR [rdi+40]
  0002f	e8 00 00 00 00	 call	 free
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0003b	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003e	f6 c3 01	 test	 bl, 1
  00041	74 0d		 je	 SHORT $LN15@scalar
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cf	 mov	 rcx, rdi
  0004b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN15@scalar:
  00050	48 8b c7	 mov	 rax, rdi
  00053	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??_G?$numpunct@D@std@@MEAAPEAXI@Z ENDP			; std::numpunct<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Tidy@?$numpunct@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$numpunct@D@std@@AEAAXXZ PROC			; std::numpunct<char>::_Tidy, COMDAT

; 257  : 		{	// free all storage

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 258  : 		_CSTD free((void *)_Grouping);

  00009	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0000d	e8 00 00 00 00	 call	 free

; 259  : 		_CSTD free((void *)_Falsename);

  00012	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
  00016	e8 00 00 00 00	 call	 free

; 260  : 		_CSTD free((void *)_Truename);

  0001b	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]

; 261  : 		}

  0001f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00023	5b		 pop	 rbx

; 260  : 		_CSTD free((void *)_Truename);

  00024	e9 00 00 00 00	 jmp	 free
?_Tidy@?$numpunct@D@std@@AEAAXXZ ENDP			; std::numpunct<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_truename, COMDAT

; 251  : 		{	// return name for true

$LN146:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b da	 mov	 rbx, rdx
  00009	45 33 c0	 xor	 r8d, r8d

; 252  : 		return (string_type(_Truename));

  0000c	48 8b 51 28	 mov	 rdx, QWORD PTR [rcx+40]
  00010	44 89 44 24 20	 mov	 DWORD PTR $T1[rsp], r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001d	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00021	44 88 03	 mov	 BYTE PTR [rbx], r8b

; 523  : 		return (*_First == 0 ? 0

  00024	44 38 02	 cmp	 BYTE PTR [rdx], r8b
  00027	74 11		 je	 SHORT $LN142@do_truenam
  00029	49 83 c8 ff	 or	 r8, -1
  0002d	0f 1f 00	 npad	 3
$LL144@do_truenam:
  00030	49 ff c0	 inc	 r8
  00033	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00038	75 f6		 jne	 SHORT $LL144@do_truenam
$LN142@do_truenam:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003a	48 8b cb	 mov	 rcx, rbx
  0003d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 252  : 		return (string_type(_Truename));

  00042	48 8b c3	 mov	 rax, rbx

; 253  : 		}

  00045	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_truename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_falsename, COMDAT

; 246  : 		{	// return name for false

$LN146:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b da	 mov	 rbx, rdx
  00009	45 33 c0	 xor	 r8d, r8d

; 247  : 		return (string_type(_Falsename));

  0000c	48 8b 51 20	 mov	 rdx, QWORD PTR [rcx+32]
  00010	44 89 44 24 20	 mov	 DWORD PTR $T1[rsp], r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001d	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00021	44 88 03	 mov	 BYTE PTR [rbx], r8b

; 523  : 		return (*_First == 0 ? 0

  00024	44 38 02	 cmp	 BYTE PTR [rdx], r8b
  00027	74 11		 je	 SHORT $LN142@do_falsena
  00029	49 83 c8 ff	 or	 r8, -1
  0002d	0f 1f 00	 npad	 3
$LL144@do_falsena:
  00030	49 ff c0	 inc	 r8
  00033	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00038	75 f6		 jne	 SHORT $LL144@do_falsena
$LN142@do_falsena:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003a	48 8b cb	 mov	 rcx, rbx
  0003d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 247  : 		return (string_type(_Falsename));

  00042	48 8b c3	 mov	 rax, rbx

; 248  : 		}

  00045	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_falsename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::do_grouping, COMDAT

; 241  : 		{	// return grouping string

$LN146:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b da	 mov	 rbx, rdx
  00009	45 33 c0	 xor	 r8d, r8d

; 242  : 		return (string(_Grouping));

  0000c	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  00010	44 89 44 24 20	 mov	 DWORD PTR $T1[rsp], r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001d	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00021	44 88 03	 mov	 BYTE PTR [rbx], r8b

; 523  : 		return (*_First == 0 ? 0

  00024	44 38 02	 cmp	 BYTE PTR [rdx], r8b
  00027	74 11		 je	 SHORT $LN142@do_groupin
  00029	49 83 c8 ff	 or	 r8, -1
  0002d	0f 1f 00	 npad	 3
$LL144@do_groupin:
  00030	49 ff c0	 inc	 r8
  00033	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00038	75 f6		 jne	 SHORT $LL144@do_groupin
$LN142@do_groupin:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003a	48 8b cb	 mov	 rcx, rbx
  0003d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 242  : 		return (string(_Grouping));

  00042	48 8b c3	 mov	 rax, rbx

; 243  : 		}

  00045	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::do_grouping
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_thousands_sep@?$numpunct@D@std@@MEBADXZ
_TEXT	SEGMENT
this$ = 8
?do_thousands_sep@?$numpunct@D@std@@MEBADXZ PROC	; std::numpunct<char>::do_thousands_sep, COMDAT

; 237  : 		return (_Kseparator);

  00000	0f b6 41 19	 movzx	 eax, BYTE PTR [rcx+25]

; 238  : 		}

  00004	c3		 ret	 0
?do_thousands_sep@?$numpunct@D@std@@MEBADXZ ENDP	; std::numpunct<char>::do_thousands_sep
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_decimal_point@?$numpunct@D@std@@MEBADXZ
_TEXT	SEGMENT
this$ = 8
?do_decimal_point@?$numpunct@D@std@@MEBADXZ PROC	; std::numpunct<char>::do_decimal_point, COMDAT

; 232  : 		return (_Dp);

  00000	0f b6 41 18	 movzx	 eax, BYTE PTR [rcx+24]

; 233  : 		}

  00004	c3		 ret	 0
?do_decimal_point@?$numpunct@D@std@@MEBADXZ ENDP	; std::numpunct<char>::do_decimal_point
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
_TEXT	SEGMENT
$T1 = 40
$T2 = 40
this$ = 128
_Lobj$ = 136
_Isdef$ = 144
?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z PROC	; std::numpunct<char>::_Init, COMDAT

; 202  : 		{	// initialize from _Lobj

$LN65:
  00000	48 8b c4	 mov	 rax, rsp
  00003	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00007	57		 push	 rdi
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00010	48 c7 40 a8 fe
	ff ff ff	 mov	 QWORD PTR [rax-88], -2
  00018	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  0001c	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  00020	45 0f b6 f8	 movzx	 r15d, r8b
  00024	48 8b f1	 mov	 rsi, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 127  : 		return (localeconv());

  00027	e8 00 00 00 00	 call	 localeconv
  0002c	4c 8b f0	 mov	 r14, rax

; 122  : 		return (::_Getcvt());

  0002f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00034	e8 00 00 00 00	 call	 _Getcvt
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 206  : 		_Grouping = 0;

  00039	33 c0		 xor	 eax, eax
  0003b	48 89 46 10	 mov	 QWORD PTR [rsi+16], rax

; 207  : 		_Falsename = 0;

  0003f	48 89 46 20	 mov	 QWORD PTR [rsi+32], rax

; 208  : 		_Truename = 0;

  00043	48 89 46 28	 mov	 QWORD PTR [rsi+40], rax

; 211  : 		_Grouping = _MAKLOCSTR(char, _Isdef ? "" : _Ptr->grouping,

  00047	45 84 ff	 test	 r15b, r15b
  0004a	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00051	75 04		 jne	 SHORT $LN7@Init
  00053	49 8b 7e 10	 mov	 rdi, QWORD PTR [r14+16]
$LN7@Init:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 122  : 		return (::_Getcvt());

  00057	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  0005c	e8 00 00 00 00	 call	 _Getcvt
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 720  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00061	48 83 cb ff	 or	 rbx, -1
$LL63@Init:
  00065	48 ff c3	 inc	 rbx
  00068	80 3c 1f 00	 cmp	 BYTE PTR [rdi+rbx], 0
  0006c	75 f7		 jne	 SHORT $LL63@Init
  0006e	48 ff c3	 inc	 rbx

; 721  : 
; 722  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  00071	ba 01 00 00 00	 mov	 edx, 1
  00076	48 8b cb	 mov	 rcx, rbx
  00079	e8 00 00 00 00	 call	 calloc
  0007e	48 8b d0	 mov	 rdx, rax

; 723  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 724  : 
; 725  : 	if (!_Ptrdest)

  00081	48 85 c0	 test	 rax, rax
  00084	75 05		 jne	 SHORT $LN22@Init

; 726  : 		_Xbad_alloc();

  00086	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN22@Init:

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  0008b	48 85 db	 test	 rbx, rbx
  0008e	74 20		 je	 SHORT $LN20@Init
  00090	48 8b ca	 mov	 rcx, rdx
  00093	48 2b cf	 sub	 rcx, rdi
  00096	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL21@Init:

; 731  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  000a0	0f b6 07	 movzx	 eax, BYTE PTR [rdi]
  000a3	88 04 39	 mov	 BYTE PTR [rcx+rdi], al

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  000a6	48 8d 7f 01	 lea	 rdi, QWORD PTR [rdi+1]
  000aa	48 83 eb 01	 sub	 rbx, 1
  000ae	75 f0		 jne	 SHORT $LL21@Init
$LN20@Init:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 211  : 		_Grouping = _MAKLOCSTR(char, _Isdef ? "" : _Ptr->grouping,

  000b0	48 89 56 10	 mov	 QWORD PTR [rsi+16], rdx

; 213  : 		_Falsename = _MAKLOCSTR(_Elem, _Lobj._Getfalse(), _Cvt);

  000b4	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:??_C@_05LAPONLG@false?$AA@
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 720  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  000bb	bf 06 00 00 00	 mov	 edi, 6

; 721  : 
; 722  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  000c0	8d 57 fb	 lea	 edx, QWORD PTR [rdi-5]
  000c3	8b cf		 mov	 ecx, edi
  000c5	e8 00 00 00 00	 call	 calloc
  000ca	48 8b d0	 mov	 rdx, rax

; 723  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 724  : 
; 725  : 	if (!_Ptrdest)

  000cd	48 85 c0	 test	 rax, rax
  000d0	75 05		 jne	 SHORT $LN31@Init

; 726  : 		_Xbad_alloc();

  000d2	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN31@Init:

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  000d7	48 8b ca	 mov	 rcx, rdx
  000da	48 2b cb	 sub	 rcx, rbx
  000dd	0f 1f 00	 npad	 3
$LL30@Init:

; 731  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  000e0	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  000e3	88 04 19	 mov	 BYTE PTR [rcx+rbx], al

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  000e6	48 8d 5b 01	 lea	 rbx, QWORD PTR [rbx+1]
  000ea	48 83 ef 01	 sub	 rdi, 1
  000ee	75 f0		 jne	 SHORT $LL30@Init
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 213  : 		_Falsename = _MAKLOCSTR(_Elem, _Lobj._Getfalse(), _Cvt);

  000f0	48 89 56 20	 mov	 QWORD PTR [rsi+32], rdx

; 214  : 		_Truename = _MAKLOCSTR(_Elem, _Lobj._Gettrue(), _Cvt);

  000f4	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:??_C@_04LOAJBDKD@true?$AA@
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 720  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  000fb	bf 05 00 00 00	 mov	 edi, 5

; 721  : 
; 722  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  00100	8d 57 fc	 lea	 edx, QWORD PTR [rdi-4]
  00103	8b cf		 mov	 ecx, edi
  00105	e8 00 00 00 00	 call	 calloc
  0010a	48 8b d0	 mov	 rdx, rax

; 723  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 724  : 
; 725  : 	if (!_Ptrdest)

  0010d	48 85 c0	 test	 rax, rax
  00110	75 05		 jne	 SHORT $LN39@Init

; 726  : 		_Xbad_alloc();

  00112	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN39@Init:

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00117	48 8b ca	 mov	 rcx, rdx
  0011a	48 2b cb	 sub	 rcx, rbx
  0011d	0f 1f 00	 npad	 3
$LL38@Init:

; 731  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  00120	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  00123	88 04 19	 mov	 BYTE PTR [rcx+rbx], al

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00126	48 8d 5b 01	 lea	 rbx, QWORD PTR [rbx+1]
  0012a	48 83 ef 01	 sub	 rdi, 1
  0012e	75 f0		 jne	 SHORT $LL38@Init
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 214  : 		_Truename = _MAKLOCSTR(_Elem, _Lobj._Gettrue(), _Cvt);

  00130	48 89 56 28	 mov	 QWORD PTR [rsi+40], rdx

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();
; 217  : 		_RERAISE;
; 218  : 		_CATCH_END
; 219  : 
; 220  : 		if (_Isdef)

  00134	45 84 ff	 test	 r15b, r15b
  00137	74 08		 je	 SHORT $LN3@Init

; 221  : 			{	// apply defaults for required facets
; 222  : //			_Grouping = _MAKLOCSTR(char, "", _Cvt);
; 223  : 			_Dp = _MAKLOCCHR(_Elem, '.', _Cvt);

  00139	66 c7 46 18 2e
	2c		 mov	 WORD PTR [rsi+24], 11310 ; 00002c2eH

; 224  : 			_Kseparator = _MAKLOCCHR(_Elem, ',', _Cvt);
; 225  : 			}
; 226  : 		else

  0013f	eb 13		 jmp	 SHORT $LN4@Init
$LN3@Init:

; 190  : 		_Dp = _MAKLOCCHR(_Elem2, _Ptr->decimal_point[0], _Cvt);

  00141	49 8b 06	 mov	 rax, QWORD PTR [r14]
  00144	0f b6 08	 movzx	 ecx, BYTE PTR [rax]
  00147	88 4e 18	 mov	 BYTE PTR [rsi+24], cl

; 191  : 		_Kseparator = _MAKLOCCHR(_Elem2, _Ptr->thousands_sep[0], _Cvt);

  0014a	49 8b 46 08	 mov	 rax, QWORD PTR [r14+8]
  0014e	0f b6 08	 movzx	 ecx, BYTE PTR [rax]
  00151	88 4e 19	 mov	 BYTE PTR [rsi+25], cl
$LN4@Init:

; 227  : 			_Getvals((_Elem)0, _Ptr, _Cvt);
; 228  : 		}

  00154	4c 8d 5c 24 60	 lea	 r11, QWORD PTR [rsp+96]
  00159	49 8b 5b 28	 mov	 rbx, QWORD PTR [r11+40]
  0015d	49 8b 73 30	 mov	 rsi, QWORD PTR [r11+48]
  00161	49 8b e3	 mov	 rsp, r11
  00164	41 5f		 pop	 r15
  00166	41 5e		 pop	 r14
  00168	5f		 pop	 rdi
  00169	c3		 ret	 0
$LN64@Init:
?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ENDP	; std::numpunct<char>::_Init
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 40
this$ = 128
_Lobj$ = 136
_Isdef$ = 144
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA PROC ; `std::numpunct<char>::_Init'::`1'::catch$0

; 215  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z$0:

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();

  0000d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00014	e8 00 00 00 00	 call	 ?_Tidy@?$numpunct@D@std@@AEAAXXZ ; std::numpunct<char>::_Tidy

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();
; 217  : 		_RERAISE;

  00019	33 d2		 xor	 edx, edx
  0001b	33 c9		 xor	 ecx, ecx
  0001d	e8 00 00 00 00	 call	 _CxxThrowException
  00022	90		 npad	 1
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA ENDP ; `std::numpunct<char>::_Init'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 40
this$ = 128
_Lobj$ = 136
_Isdef$ = 144
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA PROC ; `std::numpunct<char>::_Init'::`1'::catch$0

; 215  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z$0:

; 216  : 		_Tidy();

  0000d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00014	e8 00 00 00 00	 call	 ?_Tidy@?$numpunct@D@std@@AEAAXXZ ; std::numpunct<char>::_Tidy

; 217  : 		_RERAISE;

  00019	33 d2		 xor	 edx, edx
  0001b	33 c9		 xor	 ecx, ecx
  0001d	e8 00 00 00 00	 call	 _CxxThrowException
  00022	90		 npad	 1
?catch$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA ENDP ; `std::numpunct<char>::_Init'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ??1?$numpunct@D@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$numpunct@D@std@@MEAA@XZ PROC			; std::numpunct<char>::~numpunct<char>, COMDAT

; 175  : 		{	// destroy the object

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax

; 258  : 		_CSTD free((void *)_Grouping);

  00013	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00017	e8 00 00 00 00	 call	 free

; 259  : 		_CSTD free((void *)_Falsename);

  0001c	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
  00020	e8 00 00 00 00	 call	 free

; 260  : 		_CSTD free((void *)_Truename);

  00025	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  00029	e8 00 00 00 00	 call	 free
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00035	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 177  : 		}

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5b		 pop	 rbx
  0003d	c3		 ret	 0
??1?$numpunct@D@std@@MEAA@XZ ENDP			; std::numpunct<char>::~numpunct<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 176
_Ppf$ = 176
_Ploc$ = 184
$T4 = 192
?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::numpunct<char>::_Getcat, COMDAT

; 166  : 		{	// return locale category mask and construct standard facet

$LN31:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00016	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  0001a	48 8b ea	 mov	 rbp, rdx
  0001d	48 8b f9	 mov	 rdi, rcx
  00020	33 f6		 xor	 esi, esi
  00022	89 70 08	 mov	 DWORD PTR [rax+8], esi

; 167  : 		if (_Ppf != 0 && *_Ppf == 0)

  00025	48 85 c9	 test	 rcx, rcx
  00028	0f 84 8f 00 00
	00		 je	 $LN29@Getcat
  0002e	48 39 31	 cmp	 QWORD PTR [rcx], rsi
  00031	0f 85 86 00 00
	00		 jne	 $LN29@Getcat

; 168  : 			*_Ppf = new numpunct<_Elem>(

  00037	8d 4e 30	 lea	 ecx, QWORD PTR [rsi+48]
  0003a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003f	48 8b d8	 mov	 rbx, rax
  00042	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR $T4[rsp], rax
  0004a	48 85 c0	 test	 rax, rax
  0004d	74 59		 je	 SHORT $LN4@Getcat
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  0004f	48 8b 45 08	 mov	 rax, QWORD PTR [rbp+8]
  00053	48 85 c0	 test	 rax, rax
  00056	75 09		 jne	 SHORT $LN12@Getcat
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  0005f	eb 0d		 jmp	 SHORT $LN17@Getcat
$LN12@Getcat:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 3777 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00061	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  00065	48 85 d2	 test	 rdx, rdx
  00068	75 04		 jne	 SHORT $LN17@Getcat
  0006a	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
$LN17@Getcat:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 168  : 			*_Ppf = new numpunct<_Elem>(

  0006e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00073	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
  00078	90		 npad	 1
  00079	be 01 00 00 00	 mov	 esi, 1
  0007e	89 b4 24 b0 00
	00 00		 mov	 DWORD PTR $T3[rsp], esi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00085	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [rbx+8], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 160  : 		{	// construct from specified locale

  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
  00093	48 89 0b	 mov	 QWORD PTR [rbx], rcx

; 161  : 		_Init(_Lobj, _Isdef);

  00096	44 0f b6 c6	 movzx	 r8d, sil
  0009a	48 8b d0	 mov	 rdx, rax
  0009d	48 8b cb	 mov	 rcx, rbx
  000a0	e8 00 00 00 00	 call	 ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
  000a5	90		 npad	 1

; 168  : 			*_Ppf = new numpunct<_Elem>(

  000a6	eb 02		 jmp	 SHORT $LN5@Getcat
$LN4@Getcat:
  000a8	33 db		 xor	 ebx, ebx
$LN5@Getcat:
  000aa	48 89 1f	 mov	 QWORD PTR [rdi], rbx
  000ad	40 f6 c6 01	 test	 sil, 1
  000b1	74 0a		 je	 SHORT $LN29@Getcat
  000b3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  000b8	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN29@Getcat:

; 169  : 				_Locinfo(_Ploc->c_str()), 0, true);
; 170  : 		return (_X_NUMERIC);

  000bd	b8 04 00 00 00	 mov	 eax, 4

; 171  : 		}

  000c2	48 8b 9c 24 b8
	00 00 00	 mov	 rbx, QWORD PTR [rsp+184]
  000ca	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  000d1	5f		 pop	 rdi
  000d2	5e		 pop	 rsi
  000d3	5d		 pop	 rbp
  000d4	c3		 ret	 0
?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::numpunct<char>::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 176
_Ppf$ = 176
_Ploc$ = 184
$T4 = 192
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR $T4[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
$T1 = 32
$T2 = 40
$T3 = 176
_Ppf$ = 176
_Ploc$ = 184
$T4 = 192
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
  00020	40 55		 push	 rbp
  00022	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00026	48 8b ea	 mov	 rbp, rdx
  00029	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T3[rbp]
  0002f	83 e0 01	 and	 eax, 1
  00032	85 c0		 test	 eax, eax
  00034	74 10		 je	 SHORT $LN8@dtor$1
  00036	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T3[rbp], -2
  0003d	48 8d 4d 28	 lea	 rcx, QWORD PTR $T2[rbp]
  00041	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
$T1 = 32
$T2 = 40
$T3 = 176
_Ppf$ = 176
_Ploc$ = 184
$T4 = 192
?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$2
  0004c	48 8b 8a c0 00
	00 00		 mov	 rcx, QWORD PTR $T4[rdx]
  00053	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 176
_Ppf$ = 176
_Ploc$ = 184
$T4 = 192
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR $T4[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 176
_Ppf$ = 176
_Ploc$ = 184
$T4 = 192
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
  00020	40 55		 push	 rbp
  00022	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00026	48 8b ea	 mov	 rbp, rdx
  00029	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T3[rbp]
  0002f	83 e0 01	 and	 eax, 1
  00032	85 c0		 test	 eax, eax
  00034	74 10		 je	 SHORT $LN8@dtor$1
  00036	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T3[rbp], -2
  0003d	48 8d 4d 28	 lea	 rcx, QWORD PTR $T2[rbp]
  00041	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 176
_Ppf$ = 176
_Ploc$ = 184
$T4 = 192
?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<char>::_Getcat'::`1'::dtor$2
  0004c	48 8b 8a c0 00
	00 00		 mov	 rcx, QWORD PTR $T4[rdx]
  00053	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<char>::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z PROC	; std::numpunct<char>::numpunct<char>, COMDAT

; 160  : 		{	// construct from specified locale

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00016	44 89 41 08	 mov	 DWORD PTR [rcx+8], r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 160  : 		{	// construct from specified locale

  0001a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$numpunct@D@std@@6B@
  00021	48 89 01	 mov	 QWORD PTR [rcx], rax

; 161  : 		_Init(_Lobj, _Isdef);

  00024	45 0f b6 c1	 movzx	 r8d, r9b
  00028	e8 00 00 00 00	 call	 ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<char>::_Init
  0002d	90		 npad	 1

; 162  : 		}

  0002e	48 8b c3	 mov	 rax, rbx
  00031	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00035	5b		 pop	 rbx
  00036	c3		 ret	 0
??0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z ENDP	; std::numpunct<char>::numpunct<char>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$0@?0???0?$numpunct@D@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<char>::numpunct<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::truename, COMDAT

; 143  : 		{	// return name for true

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 144  : 		return (do_truename());

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx
  0000c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00014	ff 50 38	 call	 QWORD PTR [rax+56]
  00017	48 8b c3	 mov	 rax, rbx

; 145  : 		}

  0001a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::truename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::falsename, COMDAT

; 138  : 		{	// return name for false

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 139  : 		return (do_falsename());

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx
  0000c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00014	ff 50 30	 call	 QWORD PTR [rax+48]
  00017	48 8b c3	 mov	 rax, rbx

; 140  : 		}

  0001a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::falsename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<char>::grouping, COMDAT

; 133  : 		{	// return grouping string

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 134  : 		return (do_grouping());

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx
  0000c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00014	ff 50 28	 call	 QWORD PTR [rax+40]
  00017	48 8b c3	 mov	 rax, rbx

; 135  : 		}

  0001a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<char>::grouping
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?thousands_sep@?$numpunct@D@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?thousands_sep@?$numpunct@D@std@@QEBADXZ PROC		; std::numpunct<char>::thousands_sep, COMDAT

; 129  : 		return (do_thousands_sep());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 20	 rex_jmp QWORD PTR [rax+32]
?thousands_sep@?$numpunct@D@std@@QEBADXZ ENDP		; std::numpunct<char>::thousands_sep
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?decimal_point@?$numpunct@D@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?decimal_point@?$numpunct@D@std@@QEBADXZ PROC		; std::numpunct<char>::decimal_point, COMDAT

; 124  : 		return (do_decimal_point());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 18	 rex_jmp QWORD PTR [rax+24]
?decimal_point@?$numpunct@D@std@@QEBADXZ ENDP		; std::numpunct<char>::decimal_point
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::numpunct<char> >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN32:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00008	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00011	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00016	48 8b e9	 mov	 rbp, rcx

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00019	33 d2		 xor	 edx, edx
  0001b	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00026	48 8b 35 00 00
	00 00		 mov	 rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<char> >::_Psave
  0002d	48 89 74 24 70	 mov	 QWORD PTR _Psave$5[rsp], rsi

; 115  : 			if (_Id == 0)

  00032	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
  00039	48 85 ff	 test	 rdi, rdi
  0003c	75 3d		 jne	 SHORT $LN11@use_facet

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0003e	33 d2		 xor	 edx, edx
  00040	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00045	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0004a	48 39 3d 00 00
	00 00		 cmp	 QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A, rdi ; std::numpunct<char>::id
  00051	75 17		 jne	 SHORT $LN12@use_facet

; 119  : 						_Id = ++_Id_cnt;

  00053	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00059	ff c0		 inc	 eax
  0005b	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00061	48 98		 cdqe
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A, rax ; std::numpunct<char>::id
$LN12@use_facet:

; 120  : 				_END_LOCK()

  0006a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  0006f	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00074	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
$LN11@use_facet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0007b	48 8b 4d 08	 mov	 rcx, QWORD PTR [rbp+8]
  0007f	48 3b 79 18	 cmp	 rdi, QWORD PTR [rcx+24]
  00083	73 13		 jae	 SHORT $LN20@use_facet
  00085	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00089	48 8b 1c f8	 mov	 rbx, QWORD PTR [rax+rdi*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0008d	48 85 db	 test	 rbx, rbx
  00090	0f 85 8e 00 00
	00		 jne	 $LN7@use_facet
  00096	eb 02		 jmp	 SHORT $LN28@use_facet
$LN20@use_facet:

; 121  : 				}
; 122  : 			return (_Id);
; 123  : 			}
; 124  : 
; 125  : 	private:
; 126  : 		size_t _Id;	// the identifier stamp
; 127  : 
; 128  : 		__PURE_APPDOMAIN_GLOBAL static int _Id_cnt;
; 129  : 
; 130  : 	public:
; 131  : 		__CLR_OR_THIS_CALL id(const id&) = delete;
; 132  : 		id& __CLR_OR_THIS_CALL operator=(const id&) = delete;
; 133  : 		};
; 134  : 
; 135  : 	class _Locimp;
; 136  : 
; 137  : 			// CLASS facet
; 138  : 	class _CRTIMP2_PURE facet
; 139  : 		: public _Facet_base, public _Crt_new_delete
; 140  : 		{	// base class for all locale facets, performs reference counting
; 141  : 	public:
; 142  : 		static size_t __CLRCALL_OR_CDECL _Getcat(const facet ** = 0,
; 143  : 			const locale * = 0)
; 144  : 			{	// get category value, or -1 if no corresponding C category
; 145  : 			return ((size_t)(-1));
; 146  : 			}
; 147  : 
; 148  : 		virtual void __CLR_OR_THIS_CALL _Incref()
; 149  : 			{	// increment use count
; 150  : 			_MT_INCR(_Myrefs);
; 151  : 			}
; 152  : 
; 153  : 		virtual _Facet_base *__CLR_OR_THIS_CALL _Decref()
; 154  : 			{	// decrement use count
; 155  : 			if (_MT_DECR(_Myrefs) == 0)
; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}
; 160  : 
; 161  : 	private:
; 162  : 		_Atomic_counter_t _Myrefs;	// the reference count
; 163  : 
; 164  : 	protected:
; 165  : 		explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)
; 166  : 			{	// construct with initial reference count
; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}
; 169  : 
; 170  : 		virtual __CLR_OR_THIS_CALL ~facet() _NOEXCEPT
; 171  : 			{	// ensure that derived classes can be destroyed properly
; 172  : 			}
; 173  : 
; 174  : 	public:
; 175  : 		__CLR_OR_THIS_CALL facet(const facet&) = delete;
; 176  : 		facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 177  : 		};
; 178  : 
; 179  : 			// CLASS _Locimp
; 180  :  #pragma warning(push)
; 181  :  #pragma warning(disable: 4275)
; 182  : 
; 183  : 	class _CRTIMP2_PURE _Locimp
; 184  : 		: public facet
; 185  : 		{	// reference-counted actual implementation of a locale
; 186  : 	protected:
; 187  : 		__CLR_OR_THIS_CALL ~_Locimp() _NOEXCEPT
; 188  : 		{	// destroy the object
; 189  : 		_Locimp_dtor(this);
; 190  : 		}
; 191  : 
; 192  : 	private:
; 193  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 194  : 			_New_Locimp(bool _Transparent = false);
; 195  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 196  : 			_New_Locimp(const _Locimp& _Right);
; 197  : 
; 198  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 199  : 			_Locimp_dtor(_Locimp *);
; 200  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 201  : 			_Locimp_Addfac(_Locimp *, facet *, size_t);	// add a facet
; 202  : 		static void __CLRCALL_PURE_OR_CDECL
; 203  : 			_Locimp_ctor(_Locimp *, const _Locimp&);
; 204  : 
; 205  : 		friend class locale;
; 206  : 
; 207  : 		__CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 208  : 			: locale::facet(1), _Facetvec(0), _Facetcount(0),
; 209  : 				_Catmask(none), _Xparent(_Transparent),
; 210  : 					_Name("*")
; 211  : 			{	// construct an empty _Locimp
; 212  : 			}
; 213  : 
; 214  : 		__CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 215  : 			: locale::facet(1), _Facetvec(0), _Facetcount(_Right._Facetcount),
; 216  : 				_Catmask(_Right._Catmask), _Xparent(_Right._Xparent),
; 217  : 					_Name(_Right._Name.c_str())
; 218  : 			{	// construct by copying
; 219  : 			_Locimp_ctor(this, _Right);
; 220  : 			}
; 221  : 
; 222  : 		void __CLR_OR_THIS_CALL _Addfac(facet *_Pfacet, size_t _Id)
; 223  : 			{	// add a facet
; 224  : 			_Locimp_Addfac(this, _Pfacet, _Id);
; 225  : 			}
; 226  : 
; 227  : 		static _Locimp *__CLRCALL_OR_CDECL _Makeloc(const _Locinfo&,
; 228  : 			category, _Locimp *, const locale *);	// make essential facets
; 229  : 
; 230  : 		static void __CLRCALL_OR_CDECL _Makewloc(const _Locinfo&,
; 231  : 			category, _Locimp *, const locale *);	// make wchar_t facets
; 232  : 
; 233  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 234  : 		static void __CLRCALL_OR_CDECL _Makeushloc(const _Locinfo&,
; 235  : 			category, _Locimp *, const locale *);	// make ushort facets
; 236  :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 237  : 
; 238  : 		static void __CLRCALL_OR_CDECL _Makexloc(const _Locinfo&,
; 239  : 			category, _Locimp *, const locale *);	// make remaining facets
; 240  : 
; 241  : 		facet **_Facetvec;	// pointer to vector of facets
; 242  : 		size_t _Facetcount;	// size of vector of facets
; 243  : 		category _Catmask;	// mask describing implemented categories
; 244  : 		bool _Xparent;	// true if locale is transparent
; 245  : 		_Yarn<char> _Name;	// locale name, or "*" if not known
; 246  : 
; 247  : 		__PURE_APPDOMAIN_GLOBAL static _Locimp *_Clocptr;
; 248  : 
; 249  : public:
; 250  : 		_Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 251  : 		};
; 252  : 
; 253  :  #pragma warning(pop)
; 254  : 
; 255  : 	template<class _Elem,
; 256  : 		class _Traits,
; 257  : 		class _Alloc>
; 258  : 		bool operator()(const basic_string<_Elem, _Traits, _Alloc>& _Left,
; 259  : 			const basic_string<_Elem, _Traits, _Alloc>& _Right) const
; 260  : 		{	// compare _Left and _Right strings using collate facet in locale
; 261  : 		const _STD collate<_Elem>& _Coll_fac =
; 262  : 			use_facet< _STD collate<_Elem> >(*this);
; 263  : 
; 264  : 		return (_Coll_fac.compare(_Left.c_str(), _Left.c_str() + _Left.size(),
; 265  : 			_Right.c_str(), _Right.c_str() + _Right.size()) < 0);
; 266  : 		}
; 267  : 
; 268  : 	template<class _Facet>
; 269  : 		locale combine(const locale& _Loc) const
; 270  : 		{	// combine two locales
; 271  : 		_Facet *_Facptr;
; 272  : 
; 273  : 		_TRY_BEGIN
; 274  : 			_Facptr = (_Facet *)&use_facet<_Facet>(_Loc);
; 275  : 		_CATCH_ALL
; 276  : 			_Xruntime_error("locale::combine facet missing");
; 277  : 		_CATCH_END
; 278  : 
; 279  : 		_Locimp *_Newimp = _Locimp::_New_Locimp(*_Ptr);
; 280  : 		_Newimp->_Addfac(_Facptr, _Facet::id);
; 281  : 		_Newimp->_Catmask = none;
; 282  : 		_Newimp->_Name = "*";
; 283  : 		return (locale(_Newimp));
; 284  : 		}
; 285  : 
; 286  : 	template<class _Facet>
; 287  : 		locale(const locale& _Loc, const _Facet *_Facptr)
; 288  : 			: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 289  : 		{	// construct from _Loc, replacing facet with *_Facptr
; 290  : 		if (_Facptr != 0)
; 291  : 			{	// replace facet
; 292  : 			_Ptr->_Addfac((_Facet *)_Facptr, _Facet::id);
; 293  : 			_Ptr->_Catmask = none;
; 294  : 			_Ptr->_Name = "*";
; 295  : 			}
; 296  : 		}
; 297  : 
; 298  : 	locale(_Uninitialized)
; 299  : 		{	// defer construction
; 300  : 		}
; 301  : 
; 302  :  #if _NO_LOCALES
; 303  : 	locale(const locale& _Right) _THROW0()
; 304  : 		: _Ptr(0)
; 305  : 		{	// construct by copying
; 306  : 		}
; 307  : 
; 308  : 	locale() _THROW0()
; 309  : 		: _Ptr(0)
; 310  : 		{	// construct from current locale
; 311  : 		}
; 312  : 
; 313  : 	~locale() _NOEXCEPT
; 314  : 		{	// destroy the object
; 315  : 		}
; 316  : 
; 317  : 	locale& operator=(const locale& _Right) _THROW0()
; 318  : 		{	// assign a locale
; 319  : 		return (*this);
; 320  : 		}
; 321  : 
; 322  :  #else /* _NO_LOCALES */
; 323  : 	locale(const locale& _Right) _THROW0()
; 324  : 		: _Ptr(_Right._Ptr)
; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();
; 327  : 		}
; 328  : 
; 329  : 	locale() _THROW0()
; 330  : 		: _Ptr(_Init(true))
; 331  : 		{	// construct from current locale
; 332  : 		}
; 333  : 
; 334  :  #if !defined(MRTDLL) || !defined(_CRTBLD)
; 335  : 	locale(const locale& _Loc, const locale& _Other,
; 336  : 		category _Cat)
; 337  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 338  : 		{	// construct a locale by copying named facets
; 339  : 		if (_Cat != none)
; 340  : 			{	// worth adding, do it
; 341  : 			_TRY_BEGIN
; 342  : 				_BEGIN_LOCINFO(_Lobj)
; 343  : 					_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 344  : 					_Lobj._Addcats(_Loc._Ptr->_Catmask,
; 345  : 						_Loc.name().c_str());
; 346  : 					_Lobj._Addcats(_Other._Ptr->_Catmask,
; 347  : 						_Other.name().c_str());
; 348  : 					_Ptr->_Catmask = _Loc._Ptr->_Catmask
; 349  : 						| _Other._Ptr->_Catmask;
; 350  : 					_Ptr->_Name = _Lobj._Getname();
; 351  : 				_END_LOCINFO()
; 352  : 			_CATCH_ALL
; 353  : 			delete _Ptr->_Decref();
; 354  : 			_RERAISE;
; 355  : 			_CATCH_END
; 356  : 			}
; 357  : 		}
; 358  : 
; 359  : private:
; 360  : 	void _Construct(const string &_Str,
; 361  : 		category _Cat)
; 362  : 		{	// construct a locale with named facets
; 363  : 		bool _Bad = false;
; 364  : 		_Init();
; 365  : 		if (_Cat != none)
; 366  : 			{	// worth adding, do it
; 367  : 			_TRY_BEGIN
; 368  : 				_BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 369  : 					if (_Badname(_Lobj))
; 370  : 						_Bad = true;
; 371  : 					else
; 372  : 						{	// name okay, build the locale
; 373  : 						_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, 0);
; 374  : 						_Ptr->_Catmask = _Cat;
; 375  : 						_Ptr->_Name = _Str.c_str();
; 376  : 						}
; 377  : 				_END_LOCINFO()
; 378  : 			_CATCH_ALL
; 379  : 			delete _Ptr->_Decref();
; 380  : 			_RERAISE;
; 381  : 			_CATCH_END
; 382  : 			}
; 383  : 
; 384  : 		if (_Bad)
; 385  : 			{	// Don't throw within _BEGIN_LOCINFO if we can avoid it
; 386  : 			delete _Ptr->_Decref();
; 387  : 			_Xruntime_error("bad locale name");
; 388  : 			}
; 389  : 		}
; 390  : 
; 391  : public:
; 392  : 	explicit locale(const char *_Locname,
; 393  : 		category _Cat = all)
; 394  : 		: _Ptr(_Locimp::_New_Locimp())
; 395  : 		{	// construct a locale with named facets
; 396  : 		// _Locname might have been returned from setlocale().
; 397  : 		// Therefore, _Construct() takes const string&.
; 398  : 		if (_Locname == 0)
; 399  : 			_Xruntime_error("bad locale name");
; 400  : 		_Construct(_Locname, _Cat);
; 401  : 		}
; 402  : 
; 403  : 	locale(const locale& _Loc, const char *_Locname,
; 404  : 		category _Cat)
; 405  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 406  : 		{	// construct a locale by copying, replacing named facets
; 407  : 		// _Locname might have been returned from setlocale().
; 408  : 		// Therefore, _Construct() takes const string&.
; 409  : 		if (_Locname == 0)
; 410  : 			_Xruntime_error("bad locale name");
; 411  : 		_Construct(_Locname, _Cat);
; 412  : 		}
; 413  : 
; 414  : 	explicit locale(const string& _Str,
; 415  : 		category _Cat = all)
; 416  : 		: _Ptr(_Locimp::_New_Locimp())
; 417  : 		{	// construct a locale with named facets
; 418  : 		_Construct(_Str, _Cat);
; 419  : 		}
; 420  : 
; 421  : 	locale(const locale& _Loc, const string& _Str,
; 422  : 		category _Cat)
; 423  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 424  : 		{	// construct a locale by copying, replacing named facets
; 425  : 		_Construct(_Str, _Cat);
; 426  : 		}
; 427  :  #endif /* !MRTDLL || !_CRTBLD */
; 428  : 
; 429  : 	~locale() _NOEXCEPT
; 430  : 		{	// destroy the object
; 431  : 		if (_Ptr != 0)
; 432  : 			delete _Ptr->_Decref();
; 433  : 		}
; 434  : 
; 435  : 	locale& operator=(const locale& _Right) _THROW0()
; 436  : 		{	// assign a locale
; 437  : 		if (_Ptr != _Right._Ptr)
; 438  : 			{	// different implementation, point at new one
; 439  : 			delete _Ptr->_Decref();
; 440  : 			_Ptr = _Right._Ptr;
; 441  : 			_Ptr->_Incref();
; 442  : 			}
; 443  : 		return (*this);
; 444  : 		}
; 445  :  #endif /* _NO_LOCALES */
; 446  : 
; 447  : 	string name() const
; 448  : 		{	// return locale name
; 449  : 		return (_Ptr == 0 ? string() : _Ptr->_Name.c_str());
; 450  : 		}
; 451  : 
; 452  : 	const char *c_str() const
; 453  : 		{	// return locale name as NTBS
; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());
; 455  : 		}
; 456  : 
; 457  : 	const facet *_Getfacet(size_t _Id) const
; 458  : 		{	// look up a facet in locale object
; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00098	33 db		 xor	 ebx, ebx
$LN28@use_facet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0009a	80 79 24 00	 cmp	 BYTE PTR [rcx+36], 0
  0009e	74 13		 je	 SHORT $LN17@use_facet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  000a0	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  000a5	48 3b 78 18	 cmp	 rdi, QWORD PTR [rax+24]
  000a9	73 0d		 jae	 SHORT $LN29@use_facet
  000ab	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000af	48 8b 1c f8	 mov	 rbx, QWORD PTR [rax+rdi*8]
$LN17@use_facet:

; 562  : 
; 563  : 		size_t _Id = _Facet::id;
; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);
; 565  : 
; 566  : 		if (_Pf != 0)

  000b3	48 85 db	 test	 rbx, rbx
  000b6	75 6c		 jne	 SHORT $LN7@use_facet
$LN29@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  000b8	48 85 f6	 test	 rsi, rsi
  000bb	74 05		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  000bd	48 8b de	 mov	 rbx, rsi
  000c0	eb 62		 jmp	 SHORT $LN7@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  000c2	48 8b d5	 mov	 rdx, rbp
  000c5	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Psave$5[rsp]
  000ca	e8 00 00 00 00	 call	 ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<char>::_Getcat
  000cf	48 83 f8 ff	 cmp	 rax, -1
  000d3	75 31		 jne	 SHORT $LN6@use_facet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 59   :         : _Data()

  000d5	33 c0		 xor	 eax, eax
  000d7	48 89 44 24 38	 mov	 QWORD PTR $T2[rsp+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  000dc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  000e3	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h

; 125  :     {

  000e8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  000ef	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  000fb	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00100	e8 00 00 00 00	 call	 _CxxThrowException
  00105	cc		 int	 3
$LN6@use_facet:

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else
; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  00106	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  0010b	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::numpunct<char> >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 586  : 			_Pfmod->_Incref();

  00112	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00115	48 8b cb	 mov	 rcx, rbx
  00118	ff 52 08	 call	 QWORD PTR [rdx+8]

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  0011b	48 8b cb	 mov	 rcx, rbx
  0011e	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
  00123	90		 npad	 1
$LN7@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  00124	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00129	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  0012e	48 8b c3	 mov	 rax, rbx

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  00131	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  00136	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0013a	5f		 pop	 rdi
  0013b	5e		 pop	 rsi
  0013c	5d		 pop	 rbp
  0013d	c3		 ret	 0
$LN30@use_facet:
??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::numpunct<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed, COMDAT

; 662  : 		return (_Failed);

  00000	0f b6 01	 movzx	 eax, BYTE PTR [rcx]

; 663  : 		}

  00003	c3		 ret	 0
?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::failed
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++, COMDAT

; 652  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 653  : 		}

  00003	c3		 ret	 0
??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*, COMDAT

; 647  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 648  : 		}

  00003	c3		 ret	 0
??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=, COMDAT

; 637  : 		{	// store element and increment

$LN30:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	44 0f b6 c2	 movzx	 r8d, dl

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0000d	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00011	48 85 c9	 test	 rcx, rcx
  00014	74 3e		 je	 SHORT $LN3@operator

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00016	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  0001a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0001e	74 25		 je	 SHORT $LN7@operator
  00020	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00024	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00026	85 c0		 test	 eax, eax
  00028	7e 1b		 jle	 SHORT $LN7@operator

; 308  : 		--*_IPcount;

  0002a	ff c8		 dec	 eax
  0002c	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0002e	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00032	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00035	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0003c	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0003f	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00043	eb 0a		 jmp	 SHORT $LN8@operator
$LN7@operator:
  00045	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00048	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0004c	ff 50 18	 call	 QWORD PTR [rax+24]
$LN8@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 595  : 		return (_Left == _Right);

  0004f	83 f8 ff	 cmp	 eax, -1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00052	75 03		 jne	 SHORT $LN28@operator
$LN3@operator:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00054	c6 03 01	 mov	 BYTE PTR [rbx], 1
$LN28@operator:

; 642  : 		return (*this);

  00057	48 8b c3	 mov	 rax, rbx

; 643  : 		}

  0005a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005e	5b		 pop	 rbx
  0005f	c3		 ret	 0
??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAAAEAV01@D@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
;	COMDAT ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Sb$ = 16
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z PROC ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >, COMDAT

; 627  : 		: _Failed(false), _Strbuf(_Sb)

  00000	c6 01 00	 mov	 BYTE PTR [rcx], 0

; 629  : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  0000a	c3		 ret	 0
??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ENDP ; std::ostreambuf_iterator<char,std::char_traits<char> >::ostreambuf_iterator<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
;	COMDAT ??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN13@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Dest$ = 64
_Ch$ = 72
_Count$ = 80
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep, COMDAT

; 1583 : 		{	// put _Count * _Ch to _Dest

$LN41:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00014	48 8b 7c 24 50	 mov	 rdi, QWORD PTR _Count$[rsp]
  00019	41 0f b6 f1	 movzx	 esi, r9b
  0001d	49 8b d8	 mov	 rbx, r8
  00020	48 8b ea	 mov	 rbp, rdx
  00023	48 85 ff	 test	 rdi, rdi
  00026	74 58		 je	 SHORT $LN3@Rep
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@Rep:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00030	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00034	48 85 c9	 test	 rcx, rcx
  00037	74 3e		 je	 SHORT $LN12@Rep

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00039	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  0003d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00041	74 25		 je	 SHORT $LN16@Rep
  00043	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00047	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00049	85 c0		 test	 eax, eax
  0004b	7e 1b		 jle	 SHORT $LN16@Rep

; 308  : 		--*_IPcount;

  0004d	ff c8		 dec	 eax
  0004f	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  00051	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  00055	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00058	48 8d 41 01	 lea	 rax, QWORD PTR [rcx+1]
  0005c	48 89 02	 mov	 QWORD PTR [rdx], rax

; 200  : 		return (0 < _Pnavail()

  0005f	40 88 31	 mov	 BYTE PTR [rcx], sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00062	40 0f b6 c6	 movzx	 eax, sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00066	eb 0a		 jmp	 SHORT $LN17@Rep
$LN16@Rep:
  00068	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0006b	40 0f b6 d6	 movzx	 edx, sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0006f	ff 50 18	 call	 QWORD PTR [rax+24]
$LN17@Rep:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 595  : 		return (_Left == _Right);

  00072	83 f8 ff	 cmp	 eax, -1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00075	75 03		 jne	 SHORT $LN2@Rep
$LN12@Rep:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00077	c6 03 01	 mov	 BYTE PTR [rbx], 1
$LN2@Rep:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0007a	48 83 ef 01	 sub	 rdi, 1
  0007e	75 b0		 jne	 SHORT $LL4@Rep
$LN3@Rep:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  00080	0f 10 03	 movups	 xmm0, XMMWORD PTR [rbx]

; 1587 : 		}

  00083	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00088	48 8b c5	 mov	 rax, rbp
  0008b	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00090	0f 11 45 00	 movups	 XMMWORD PTR [rbp], xmm0
  00094	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00099	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009d	5f		 pop	 rdi
  0009e	c3		 ret	 0
?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Rep
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Dest$ = 64
_Ptr$ = 72
_Count$ = 80
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put, COMDAT

; 1575 : 		{	// put [_Ptr, _Ptr + _Count) to _Dest

$LN41:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00014	48 8b 5c 24 50	 mov	 rbx, QWORD PTR _Count$[rsp]
  00019	49 8b f9	 mov	 rdi, r9
  0001c	49 8b f0	 mov	 rsi, r8
  0001f	48 8b ea	 mov	 rbp, rdx
  00022	48 85 db	 test	 rbx, rbx
  00025	74 57		 je	 SHORT $LN3@Put
$LL4@Put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00027	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  0002b	48 85 c9	 test	 rcx, rcx
  0002e	74 42		 je	 SHORT $LN12@Put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00030	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00034	44 0f b6 07	 movzx	 r8d, BYTE PTR [rdi]

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 25		 je	 SHORT $LN16@Put
  0003e	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00042	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00044	85 c0		 test	 eax, eax
  00046	7e 1b		 jle	 SHORT $LN16@Put

; 308  : 		--*_IPcount;

  00048	ff c8		 dec	 eax
  0004a	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0004c	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  00050	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00053	48 8d 41 01	 lea	 rax, QWORD PTR [rcx+1]
  00057	48 89 02	 mov	 QWORD PTR [rdx], rax

; 200  : 		return (0 < _Pnavail()

  0005a	44 88 01	 mov	 BYTE PTR [rcx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0005d	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00061	eb 0a		 jmp	 SHORT $LN17@Put
$LN16@Put:
  00063	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00066	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0006a	ff 50 18	 call	 QWORD PTR [rax+24]
$LN17@Put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 595  : 		return (_Left == _Right);

  0006d	83 f8 ff	 cmp	 eax, -1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00070	75 03		 jne	 SHORT $LN2@Put
$LN12@Put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00072	c6 06 01	 mov	 BYTE PTR [rsi], 1
$LN2@Put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00075	48 ff c7	 inc	 rdi
  00078	48 83 eb 01	 sub	 rbx, 1
  0007c	75 a9		 jne	 SHORT $LL4@Put
$LN3@Put:

; 1577 : 			*_Dest = *_Ptr;
; 1578 : 		return (_Dest);

  0007e	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]

; 1579 : 		}

  00081	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00086	48 8b c5	 mov	 rax, rbp
  00089	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  0008e	0f 11 45 00	 movups	 XMMWORD PTR [rbp], xmm0
  00092	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00097	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009b	5f		 pop	 rdi
  0009c	c3		 ret	 0
?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput, COMDAT

; 1515 : 		{	// put formatted integer to _Dest

$LN836:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 8d 6c 24 f1	 lea	 rbp, QWORD PTR [rsp-15]
  00011	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00018	48 c7 45 b7 fe
	ff ff ff	 mov	 QWORD PTR $T10[rbp-145], -2
  00020	48 89 9c 24 e0
	00 00 00	 mov	 QWORD PTR [rsp+224], rbx
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 45 ff	 mov	 QWORD PTR __$ArrayPad$[rbp-145], rax
  00036	4d 8b e1	 mov	 r12, r9
  00039	4c 89 4d a7	 mov	 QWORD PTR _Iosbase$GSCopy$1$[rbp-145], r9
  0003d	4d 8b f0	 mov	 r14, r8
  00040	4c 89 45 9f	 mov	 QWORD PTR _Dest$GSCopy$1$[rbp-145], r8
  00044	48 89 55 af	 mov	 QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-145], rdx
  00048	44 0f b6 7d 6f	 movzx	 r15d, BYTE PTR _Fill$[rbp-145]
  0004d	48 8b 5d 77	 mov	 rbx, QWORD PTR _Buf$[rbp-145]
  00051	48 8b 7d 7f	 mov	 rdi, QWORD PTR _Count$[rbp-145]

; 1516 : 		_DEBUG_POINTER(_Dest);
; 1517 : 		size_t _Prefix = 0 < _Count && (*_Buf == '+' || *_Buf == '-')

  00055	48 85 ff	 test	 rdi, rdi
  00058	74 11		 je	 SHORT $LN14@Iput
  0005a	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  0005d	2c 2b		 sub	 al, 43			; 0000002bH
  0005f	a8 fd		 test	 al, 253			; 000000fdH
  00061	75 08		 jne	 SHORT $LN14@Iput
  00063	41 bd 01 00 00
	00		 mov	 r13d, 1
  00069	eb 03		 jmp	 SHORT $LN15@Iput
$LN14@Iput:
  0006b	45 33 ed	 xor	 r13d, r13d
$LN15@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  0006e	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1521 : 			&& (_Buf[_Prefix + 1] == 'x' || _Buf[_Prefix + 1] == 'X'))

  00072	25 00 0e 00 00	 and	 eax, 3584		; 00000e00H
  00077	3d 00 08 00 00	 cmp	 eax, 2048		; 00000800H
  0007c	75 1e		 jne	 SHORT $LN4@Iput
  0007e	49 8d 4d 02	 lea	 rcx, QWORD PTR [r13+2]
  00082	48 3b cf	 cmp	 rcx, rdi
  00085	77 15		 ja	 SHORT $LN4@Iput
  00087	42 80 3c 2b 30	 cmp	 BYTE PTR [rbx+r13], 48	; 00000030H
  0008c	75 0e		 jne	 SHORT $LN4@Iput
  0008e	42 0f b6 44 2b
	01		 movzx	 eax, BYTE PTR [rbx+r13+1]
  00094	2c 58		 sub	 al, 88			; 00000058H
  00096	a8 df		 test	 al, 223			; 000000dfH
  00098	4c 0f 44 e9	 cmove	 r13, rcx
$LN4@Iput:

; 1522 : 			_Prefix += 2;
; 1523 : 
; 1524 : 		const ctype<_Elem>& _Ctype_fac =

  0009c	48 8d 55 8f	 lea	 rdx, QWORD PTR $T9[rbp-145]
  000a0	49 8b cc	 mov	 rcx, r12
  000a3	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  000a8	90		 npad	 1
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  000b1	48 8b f0	 mov	 rsi, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  000b4	48 8b 4d 97	 mov	 rcx, QWORD PTR $T9[rbp-137]
  000b8	48 85 c9	 test	 rcx, rcx
  000bb	74 1a		 je	 SHORT $LN27@Iput

; 432  : 			delete _Ptr->_Decref();

  000bd	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000c0	ff 50 10	 call	 QWORD PTR [rax+16]
  000c3	48 85 c0	 test	 rax, rax
  000c6	74 0f		 je	 SHORT $LN27@Iput
  000c8	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000cb	ba 01 00 00 00	 mov	 edx, 1
  000d0	48 8b c8	 mov	 rcx, rax
  000d3	41 ff 10	 call	 QWORD PTR [r8]
  000d6	90		 npad	 1
$LN27@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000d7	48 c7 45 d7 0f
	00 00 00	 mov	 QWORD PTR _Groupstring$[rbp-121], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000df	48 c7 45 cf 00
	00 00 00	 mov	 QWORD PTR _Groupstring$[rbp-129], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000e7	c6 45 bf 00	 mov	 BYTE PTR _Groupstring$[rbp-145], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 846  : 		assign(_Count, _Ch);

  000eb	45 33 c0	 xor	 r8d, r8d
  000ee	48 8b d7	 mov	 rdx, rdi
  000f1	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-145]
  000f5	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000fa	90		 npad	 1

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000fb	4c 8d 4d bf	 lea	 r9, QWORD PTR _Groupstring$[rbp-145]
  000ff	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-121], 16
  00104	4c 0f 43 4d bf	 cmovae	 r9, QWORD PTR _Groupstring$[rbp-145]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2422 : 		return (do_widen(_First, _Last, _Dest));

  00109	48 8b 06	 mov	 rax, QWORD PTR [rsi]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1527 : 		_Ctype_fac.widen(&_Buf[0], &_Buf[_Count], &_Groupstring[0]);

  0010c	4c 8d 04 1f	 lea	 r8, QWORD PTR [rdi+rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2422 : 		return (do_widen(_First, _Last, _Dest));

  00110	48 8b d3	 mov	 rdx, rbx
  00113	48 8b ce	 mov	 rcx, rsi
  00116	ff 50 38	 call	 QWORD PTR [rax+56]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1529 : 		const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  00119	48 8d 55 8f	 lea	 rdx, QWORD PTR $T8[rbp-145]
  0011d	49 8b cc	 mov	 rcx, r12
  00120	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00125	90		 npad	 1
  00126	48 8b c8	 mov	 rcx, rax
  00129	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
  0012e	48 8b f0	 mov	 rsi, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  00131	48 8b 4d 97	 mov	 rcx, QWORD PTR $T8[rbp-137]
  00135	48 85 c9	 test	 rcx, rcx
  00138	74 1a		 je	 SHORT $LN185@Iput

; 432  : 			delete _Ptr->_Decref();

  0013a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0013d	ff 50 10	 call	 QWORD PTR [rax+16]
  00140	48 85 c0	 test	 rax, rax
  00143	74 0f		 je	 SHORT $LN185@Iput
  00145	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00148	ba 01 00 00 00	 mov	 edx, 1
  0014d	48 8b c8	 mov	 rcx, rax
  00150	41 ff 10	 call	 QWORD PTR [r8]
  00153	90		 npad	 1
$LN185@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1530 : 		const string _Grouping = _Punct_fac.grouping();

  00154	48 8d 55 df	 lea	 rdx, QWORD PTR _Grouping$[rbp-145]
  00158	48 8b ce	 mov	 rcx, rsi
  0015b	e8 00 00 00 00	 call	 ?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
  00160	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00161	48 8d 5d df	 lea	 rbx, QWORD PTR _Grouping$[rbp-145]
  00165	48 83 7d f7 10	 cmp	 QWORD PTR _Grouping$[rbp-121], 16
  0016a	48 0f 43 5d df	 cmovae	 rbx, QWORD PTR _Grouping$[rbp-145]
  0016f	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  00172	fe c8		 dec	 al
  00174	3c 7d		 cmp	 al, 125			; 0000007dH
  00176	77 5a		 ja	 SHORT $LN831@Iput
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 129  : 		return (do_thousands_sep());

  00178	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  0017b	48 8b ce	 mov	 rcx, rsi
  0017e	ff 50 20	 call	 QWORD PTR [rax+32]
  00181	0f b6 f0	 movzx	 esi, al

; 1531 : 		const char *_Pg = &_Grouping[0];
; 1532 : 		if (*_Pg != CHAR_MAX && '\0' < *_Pg)
; 1533 : 			{	// grouping specified, add thousands separators
; 1534 : 			const _Elem _Kseparator = _Punct_fac.thousands_sep();
; 1535 : 			while (*_Pg != CHAR_MAX && '\0' < *_Pg
; 1536 : 				&& (size_t)*_Pg < _Count - _Prefix)

  00184	80 3b 7f	 cmp	 BYTE PTR [rbx], 127	; 0000007fH
  00187	74 49		 je	 SHORT $LN831@Iput
  00189	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@Iput:
  00190	0f b6 0b	 movzx	 ecx, BYTE PTR [rbx]
  00193	84 c9		 test	 cl, cl
  00195	7e 3b		 jle	 SHORT $LN831@Iput
  00197	48 0f be d1	 movsx	 rdx, cl
  0019b	48 8b c7	 mov	 rax, rdi
  0019e	49 2b c5	 sub	 rax, r13
  001a1	48 3b d0	 cmp	 rdx, rax
  001a4	73 2c		 jae	 SHORT $LN831@Iput

; 1537 : 				{	// insert thousands separator
; 1538 : 				_Count -= *_Pg;

  001a6	48 2b fa	 sub	 rdi, rdx

; 1539 : 				_Groupstring.insert(_Count, 1, _Kseparator);

  001a9	44 0f b6 ce	 movzx	 r9d, sil
  001ad	41 b8 01 00 00
	00		 mov	 r8d, 1
  001b3	48 8b d7	 mov	 rdx, rdi
  001b6	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-145]
  001ba	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert

; 1540 : 				if ('\0' < _Pg[1])

  001bf	48 8d 43 01	 lea	 rax, QWORD PTR [rbx+1]
  001c3	80 38 00	 cmp	 BYTE PTR [rax], 0
  001c6	48 0f 4e c3	 cmovle	 rax, rbx
  001ca	48 8b d8	 mov	 rbx, rax

; 1531 : 		const char *_Pg = &_Grouping[0];
; 1532 : 		if (*_Pg != CHAR_MAX && '\0' < *_Pg)
; 1533 : 			{	// grouping specified, add thousands separators
; 1534 : 			const _Elem _Kseparator = _Punct_fac.thousands_sep();
; 1535 : 			while (*_Pg != CHAR_MAX && '\0' < *_Pg
; 1536 : 				&& (size_t)*_Pg < _Count - _Prefix)

  001cd	80 38 7f	 cmp	 BYTE PTR [rax], 127	; 0000007fH
  001d0	75 be		 jne	 SHORT $LL2@Iput
$LN831@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1746 : 		return (this->_Mysize());

  001d2	4c 8b 65 cf	 mov	 r12, QWORD PTR _Groupstring$[rbp-129]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 423  : 		return (_Wide);

  001d6	48 8b 45 a7	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-145]
  001da	48 8b 78 28	 mov	 rdi, QWORD PTR [rax+40]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1547 : 			|| (size_t)_Iosbase.width() <= _Count

  001de	48 85 ff	 test	 rdi, rdi
  001e1	7e 0a		 jle	 SHORT $LN16@Iput
  001e3	49 3b fc	 cmp	 rdi, r12
  001e6	76 05		 jbe	 SHORT $LN16@Iput
  001e8	49 2b fc	 sub	 rdi, r12
  001eb	eb 02		 jmp	 SHORT $LN17@Iput
$LN16@Iput:
  001ed	33 ff		 xor	 edi, edi
$LN17@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  001ef	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1551 : 			_Iosbase.flags() & ios_base::adjustfield;

  001f2	25 c0 01 00 00	 and	 eax, 448		; 000001c0H

; 1554 : 			{	// put leading fill
; 1555 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  001f7	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  001fb	0f 29 45 8f	 movaps	 XMMWORD PTR $T7[rbp-145], xmm0
  001ff	83 f8 40	 cmp	 eax, 64			; 00000040H

; 1552 : 		if (_Adjustfield != ios_base::left
; 1553 : 			&& _Adjustfield != ios_base::internal)

  00202	0f 84 d5 01 00
	00		 je	 $LN10@Iput
  00208	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0020d	0f 84 e8 00 00
	00		 je	 $LN827@Iput

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00213	48 85 ff	 test	 rdi, rdi
  00216	74 5c		 je	 SHORT $LN229@Iput
  00218	48 8b 5d 97	 mov	 rbx, QWORD PTR $T7[rbp-137]
  0021c	0f 1f 40 00	 npad	 4
$LL230@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00220	48 85 db	 test	 rbx, rbx
  00223	74 41		 je	 SHORT $LN238@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00225	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  00229	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0022d	74 25		 je	 SHORT $LN242@Iput
  0022f	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00233	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00235	85 c0		 test	 eax, eax
  00237	7e 1b		 jle	 SHORT $LN242@Iput

; 308  : 		--*_IPcount;

  00239	ff c8		 dec	 eax
  0023b	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  0023d	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00241	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00244	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00248	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0024b	44 88 3a	 mov	 BYTE PTR [rdx], r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0024e	41 0f b6 c7	 movzx	 eax, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00252	eb 0d		 jmp	 SHORT $LN243@Iput
$LN242@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00254	41 0f b6 d7	 movzx	 edx, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00258	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0025b	48 8b cb	 mov	 rcx, rbx
  0025e	ff 50 18	 call	 QWORD PTR [rax+24]
$LN243@Iput:
  00261	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00264	75 04		 jne	 SHORT $LN228@Iput
$LN238@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00266	c6 45 8f 01	 mov	 BYTE PTR $T7[rbp-145], 1
$LN228@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0026a	48 83 ef 01	 sub	 rdi, 1
  0026e	75 b0		 jne	 SHORT $LL230@Iput
  00270	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T7[rbp-145]
$LN229@Iput:

; 1554 : 			{	// put leading fill
; 1555 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  00274	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0

; 1556 : 			_Fillcount = 0;

  00278	33 ff		 xor	 edi, edi

; 1557 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0027a	0f 29 45 8f	 movaps	 XMMWORD PTR $T6[rbp-145], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0027e	48 8d 75 bf	 lea	 rsi, QWORD PTR _Groupstring$[rbp-145]
  00282	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-121], 16
  00287	48 0f 43 75 bf	 cmovae	 rsi, QWORD PTR _Groupstring$[rbp-145]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1557 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0028c	4d 8b f5	 mov	 r14, r13

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  0028f	4d 85 ed	 test	 r13, r13
  00292	0f 84 ba 01 00
	00		 je	 $LN420@Iput
  00298	48 8b 5d 97	 mov	 rbx, QWORD PTR $T6[rbp-137]
  0029c	0f 1f 40 00	 npad	 4
$LL282@Iput:

; 1577 : 			*_Dest = *_Ptr;

  002a0	44 0f b6 06	 movzx	 r8d, BYTE PTR [rsi]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  002a4	48 85 db	 test	 rbx, rbx
  002a7	74 40		 je	 SHORT $LN290@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  002a9	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  002ad	48 39 38	 cmp	 QWORD PTR [rax], rdi
  002b0	74 25		 je	 SHORT $LN294@Iput
  002b2	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  002b6	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  002b8	85 c0		 test	 eax, eax
  002ba	7e 1b		 jle	 SHORT $LN294@Iput

; 308  : 		--*_IPcount;

  002bc	ff c8		 dec	 eax
  002be	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  002c0	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  002c4	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  002c7	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  002cb	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  002ce	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  002d1	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  002d5	eb 0d		 jmp	 SHORT $LN295@Iput
$LN294@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  002d7	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  002db	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  002de	48 8b cb	 mov	 rcx, rbx
  002e1	ff 50 18	 call	 QWORD PTR [rax+24]
$LN295@Iput:
  002e4	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  002e7	75 04		 jne	 SHORT $LN280@Iput
$LN290@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  002e9	c6 45 8f 01	 mov	 BYTE PTR $T6[rbp-145], 1
$LN280@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  002ed	48 ff c6	 inc	 rsi
  002f0	49 83 ee 01	 sub	 r14, 1
  002f4	75 aa		 jne	 SHORT $LL282@Iput

; 1557 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  002f6	e9 53 01 00 00	 jmp	 $LN834@Iput
$LN827@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  002fb	48 8d 75 bf	 lea	 rsi, QWORD PTR _Groupstring$[rbp-145]
  002ff	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-121], 16
  00304	48 0f 43 75 bf	 cmovae	 rsi, QWORD PTR _Groupstring$[rbp-145]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1561 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00309	4d 8b f5	 mov	 r14, r13

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  0030c	4d 85 ed	 test	 r13, r13
  0030f	74 5f		 je	 SHORT $LN333@Iput
  00311	48 8b 5d 97	 mov	 rbx, QWORD PTR $T5[rbp-137]
$LL334@Iput:

; 1577 : 			*_Dest = *_Ptr;

  00315	44 0f b6 06	 movzx	 r8d, BYTE PTR [rsi]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00319	48 85 db	 test	 rbx, rbx
  0031c	74 41		 je	 SHORT $LN342@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0031e	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  00322	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00326	74 25		 je	 SHORT $LN346@Iput
  00328	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  0032c	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  0032e	85 c0		 test	 eax, eax
  00330	7e 1b		 jle	 SHORT $LN346@Iput

; 308  : 		--*_IPcount;

  00332	ff c8		 dec	 eax
  00334	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00336	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  0033a	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0033d	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00341	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00344	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00347	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0034b	eb 0d		 jmp	 SHORT $LN347@Iput
$LN346@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0034d	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00351	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00354	48 8b cb	 mov	 rcx, rbx
  00357	ff 50 18	 call	 QWORD PTR [rax+24]
$LN347@Iput:
  0035a	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0035d	75 04		 jne	 SHORT $LN332@Iput
$LN342@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0035f	c6 45 8f 01	 mov	 BYTE PTR $T5[rbp-145], 1
$LN332@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00363	48 ff c6	 inc	 rsi
  00366	49 83 ee 01	 sub	 r14, 1
  0036a	75 a9		 jne	 SHORT $LL334@Iput
  0036c	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T5[rbp-145]
$LN333@Iput:

; 1561 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00370	4c 8b 75 9f	 mov	 r14, QWORD PTR _Dest$GSCopy$1$[rbp-145]
  00374	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0

; 1562 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  00378	0f 29 45 8f	 movaps	 XMMWORD PTR $T4[rbp-145], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0037c	48 85 ff	 test	 rdi, rdi
  0037f	74 58		 je	 SHORT $LN368@Iput
  00381	48 8b 5d 97	 mov	 rbx, QWORD PTR $T4[rbp-137]
$LL369@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00385	48 85 db	 test	 rbx, rbx
  00388	74 41		 je	 SHORT $LN377@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0038a	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  0038e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00392	74 25		 je	 SHORT $LN381@Iput
  00394	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00398	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  0039a	85 c0		 test	 eax, eax
  0039c	7e 1b		 jle	 SHORT $LN381@Iput

; 308  : 		--*_IPcount;

  0039e	ff c8		 dec	 eax
  003a0	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  003a2	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  003a6	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  003a9	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  003ad	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  003b0	44 88 3a	 mov	 BYTE PTR [rdx], r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  003b3	41 0f b6 c7	 movzx	 eax, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  003b7	eb 0d		 jmp	 SHORT $LN382@Iput
$LN381@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  003b9	41 0f b6 d7	 movzx	 edx, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  003bd	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  003c0	48 8b cb	 mov	 rcx, rbx
  003c3	ff 50 18	 call	 QWORD PTR [rax+24]
$LN382@Iput:
  003c6	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  003c9	75 04		 jne	 SHORT $LN367@Iput
$LN377@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  003cb	c6 45 8f 01	 mov	 BYTE PTR $T4[rbp-145], 1
$LN367@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  003cf	48 83 ef 01	 sub	 rdi, 1
  003d3	75 b0		 jne	 SHORT $LL369@Iput
  003d5	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T4[rbp-145]
$LN368@Iput:

; 1563 : 			_Fillcount = 0;

  003d9	33 ff		 xor	 edi, edi

; 1564 : 			}
; 1565 : 		else

  003db	eb 79		 jmp	 SHORT $LN835@Iput
$LN10@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  003dd	48 8d 75 bf	 lea	 rsi, QWORD PTR _Groupstring$[rbp-145]
  003e1	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-121], 16
  003e6	48 0f 43 75 bf	 cmovae	 rsi, QWORD PTR _Groupstring$[rbp-145]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1566 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  003eb	4d 8b f5	 mov	 r14, r13

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  003ee	4d 85 ed	 test	 r13, r13
  003f1	74 5f		 je	 SHORT $LN420@Iput
  003f3	48 8b 5d 97	 mov	 rbx, QWORD PTR $T3[rbp-137]
$LL421@Iput:

; 1577 : 			*_Dest = *_Ptr;

  003f7	44 0f b6 06	 movzx	 r8d, BYTE PTR [rsi]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  003fb	48 85 db	 test	 rbx, rbx
  003fe	74 41		 je	 SHORT $LN429@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00400	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  00404	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00408	74 25		 je	 SHORT $LN433@Iput
  0040a	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  0040e	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00410	85 c0		 test	 eax, eax
  00412	7e 1b		 jle	 SHORT $LN433@Iput

; 308  : 		--*_IPcount;

  00414	ff c8		 dec	 eax
  00416	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00418	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  0041c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0041f	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00423	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00426	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00429	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0042d	eb 0d		 jmp	 SHORT $LN434@Iput
$LN433@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0042f	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00433	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00436	48 8b cb	 mov	 rcx, rbx
  00439	ff 50 18	 call	 QWORD PTR [rax+24]
$LN434@Iput:
  0043c	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0043f	75 04		 jne	 SHORT $LN419@Iput
$LN429@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00441	c6 45 8f 01	 mov	 BYTE PTR $T3[rbp-145], 1
$LN419@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00445	48 ff c6	 inc	 rsi
  00448	49 83 ee 01	 sub	 r14, 1
  0044c	75 a9		 jne	 SHORT $LL421@Iput
$LN834@Iput:
  0044e	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T3[rbp-145]
$LN420@Iput:

; 1566 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00452	4c 8b 75 9f	 mov	 r14, QWORD PTR _Dest$GSCopy$1$[rbp-145]
$LN835@Iput:
  00456	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0

; 1568 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  0045a	0f 29 45 8f	 movaps	 XMMWORD PTR $T2[rbp-145], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0045e	48 8d 75 bf	 lea	 rsi, QWORD PTR _Groupstring$[rbp-145]
  00462	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-121], 16
  00467	48 0f 43 75 bf	 cmovae	 rsi, QWORD PTR _Groupstring$[rbp-145]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1568 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  0046c	4d 2b e5	 sub	 r12, r13
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1678 : 		return (this->_Myptr()[_Off]);

  0046f	4a 8d 34 2e	 lea	 rsi, QWORD PTR [rsi+r13]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00473	74 66		 je	 SHORT $LN472@Iput
  00475	48 8b 5d 97	 mov	 rbx, QWORD PTR $T2[rbp-137]
  00479	0f 1f 80 00 00
	00 00		 npad	 7
$LL473@Iput:

; 1577 : 			*_Dest = *_Ptr;

  00480	44 0f b6 06	 movzx	 r8d, BYTE PTR [rsi]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00484	48 85 db	 test	 rbx, rbx
  00487	74 41		 je	 SHORT $LN481@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00489	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  0048d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00491	74 25		 je	 SHORT $LN485@Iput
  00493	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00497	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00499	85 c0		 test	 eax, eax
  0049b	7e 1b		 jle	 SHORT $LN485@Iput

; 308  : 		--*_IPcount;

  0049d	ff c8		 dec	 eax
  0049f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  004a1	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  004a5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  004a8	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  004ac	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  004af	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  004b2	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  004b6	eb 0d		 jmp	 SHORT $LN486@Iput
$LN485@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  004b8	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  004bc	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  004bf	48 8b cb	 mov	 rcx, rbx
  004c2	ff 50 18	 call	 QWORD PTR [rax+24]
$LN486@Iput:
  004c5	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  004c8	75 04		 jne	 SHORT $LN471@Iput
$LN481@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  004ca	c6 45 8f 01	 mov	 BYTE PTR $T2[rbp-145], 1
$LN471@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  004ce	48 ff c6	 inc	 rsi
  004d1	49 83 ec 01	 sub	 r12, 1
  004d5	75 a9		 jne	 SHORT $LL473@Iput
  004d7	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T2[rbp-145]
$LN472@Iput:

; 1568 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  004db	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  004df	48 8b 45 a7	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-145]
  004e3	33 f6		 xor	 esi, esi
  004e5	48 89 70 28	 mov	 QWORD PTR [rax+40], rsi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1570 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  004e9	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  004ed	0f 29 45 8f	 movaps	 XMMWORD PTR $T1[rbp-145], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  004f1	48 85 ff	 test	 rdi, rdi
  004f4	74 5d		 je	 SHORT $LN509@Iput
  004f6	48 8b 5d 97	 mov	 rbx, QWORD PTR $T1[rbp-137]
  004fa	66 0f 1f 44 00
	00		 npad	 6
$LL510@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00500	48 85 db	 test	 rbx, rbx
  00503	74 40		 je	 SHORT $LN518@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00505	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  00509	48 39 30	 cmp	 QWORD PTR [rax], rsi
  0050c	74 25		 je	 SHORT $LN522@Iput
  0050e	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00512	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00514	85 c0		 test	 eax, eax
  00516	7e 1b		 jle	 SHORT $LN522@Iput

; 308  : 		--*_IPcount;

  00518	ff c8		 dec	 eax
  0051a	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  0051c	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00520	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00523	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00527	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0052a	44 88 3a	 mov	 BYTE PTR [rdx], r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0052d	41 0f b6 c7	 movzx	 eax, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00531	eb 0d		 jmp	 SHORT $LN523@Iput
$LN522@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00533	41 0f b6 d7	 movzx	 edx, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00537	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0053a	48 8b cb	 mov	 rcx, rbx
  0053d	ff 50 18	 call	 QWORD PTR [rax+24]
$LN523@Iput:
  00540	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00543	75 04		 jne	 SHORT $LN508@Iput
$LN518@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00545	c6 45 8f 01	 mov	 BYTE PTR $T1[rbp-145], 1
$LN508@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00549	48 83 ef 01	 sub	 rdi, 1
  0054d	75 b1		 jne	 SHORT $LL510@Iput
  0054f	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T1[rbp-145]
$LN509@Iput:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  00553	48 8b 5d af	 mov	 rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-145]
  00557	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0055a	48 8b 45 f7	 mov	 rax, QWORD PTR _Grouping$[rbp-121]
  0055e	48 83 f8 10	 cmp	 rax, 16
  00562	72 51		 jb	 SHORT $LN626@Iput

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00564	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00567	48 8b 4d df	 mov	 rcx, QWORD PTR _Grouping$[rbp-145]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0056b	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00571	72 3d		 jb	 SHORT $LN621@Iput

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00573	f6 c1 1f	 test	 cl, 31
  00576	74 06		 je	 SHORT $LN622@Iput
  00578	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0057d	cc		 int	 3
$LN622@Iput:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

  0057e	48 8b 45 df	 mov	 rax, QWORD PTR _Grouping$[rbp-145]

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00582	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00586	48 3b c8	 cmp	 rcx, rax
  00589	72 06		 jb	 SHORT $LN623@Iput
  0058b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00590	cc		 int	 3
$LN623@Iput:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00591	48 8b 45 df	 mov	 rax, QWORD PTR _Grouping$[rbp-145]
  00595	48 2b c1	 sub	 rax, rcx
  00598	48 83 f8 08	 cmp	 rax, 8
  0059c	73 06		 jae	 SHORT $LN624@Iput
  0059e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  005a3	cc		 int	 3
$LN624@Iput:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  005a4	48 83 f8 27	 cmp	 rax, 39			; 00000027H
  005a8	76 06		 jbe	 SHORT $LN621@Iput
  005aa	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  005af	cc		 int	 3
$LN621@Iput:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);
; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  005b0	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN626@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  005b5	48 c7 45 f7 0f
	00 00 00	 mov	 QWORD PTR _Grouping$[rbp-121], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  005bd	48 89 75 ef	 mov	 QWORD PTR _Grouping$[rbp-129], rsi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  005c1	c6 45 df 00	 mov	 BYTE PTR _Grouping$[rbp-145], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  005c5	48 8b 45 d7	 mov	 rax, QWORD PTR _Groupstring$[rbp-121]
  005c9	48 83 f8 10	 cmp	 rax, 16
  005cd	72 51		 jb	 SHORT $LN753@Iput

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  005cf	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  005d2	48 8b 4d bf	 mov	 rcx, QWORD PTR _Groupstring$[rbp-145]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  005d6	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  005dc	72 3d		 jb	 SHORT $LN748@Iput

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  005de	f6 c1 1f	 test	 cl, 31
  005e1	74 06		 je	 SHORT $LN749@Iput
  005e3	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  005e8	cc		 int	 3
$LN749@Iput:

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  005e9	48 8b 45 bf	 mov	 rax, QWORD PTR _Groupstring$[rbp-145]
  005ed	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  005f1	48 3b c8	 cmp	 rcx, rax
  005f4	72 06		 jb	 SHORT $LN750@Iput
  005f6	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  005fb	cc		 int	 3
$LN750@Iput:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  005fc	48 8b 45 bf	 mov	 rax, QWORD PTR _Groupstring$[rbp-145]
  00600	48 2b c1	 sub	 rax, rcx
  00603	48 83 f8 08	 cmp	 rax, 8
  00607	73 06		 jae	 SHORT $LN751@Iput
  00609	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0060e	cc		 int	 3
$LN751@Iput:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0060f	48 83 f8 27	 cmp	 rax, 39			; 00000027H
  00613	76 06		 jbe	 SHORT $LN748@Iput
  00615	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0061a	cc		 int	 3
$LN748@Iput:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);
; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0061b	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN753@Iput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1570 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  00620	48 8b c3	 mov	 rax, rbx

; 1571 : 		}

  00623	48 8b 4d ff	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-145]
  00627	48 33 cc	 xor	 rcx, rsp
  0062a	e8 00 00 00 00	 call	 __security_check_cookie
  0062f	48 8b 9c 24 e0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+224]
  00637	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  0063e	41 5f		 pop	 r15
  00640	41 5e		 pop	 r14
  00642	41 5d		 pop	 r13
  00644	41 5c		 pop	 r12
  00646	5f		 pop	 rdi
  00647	5e		 pop	 rsi
  00648	5d		 pop	 rbp
  00649	c3		 ret	 0
$LN833@Iput:
?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$4@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$4
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
  00011	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$38@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$38
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$38@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$38
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
  0002e	48 8d 8a 70 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$4@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
  00011	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$38@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$38
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$38@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$38
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Iosbase$GSCopy$1$ = 56
__$ReturnUdt$GSCopy$1$ = 64
$T10 = 72
_Groupstring$ = 80
_Grouping$ = 112
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
  0002e	48 8d 8a 70 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Fmt$ = 16
_Spec$ = 24
_Flags$ = 32
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt, COMDAT

; 1488 : 		char *_Ptr = _Fmt;
; 1489 : 		*_Ptr++ = '%';

  00000	c6 02 25	 mov	 BYTE PTR [rdx], 37	; 00000025H
  00003	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]

; 1490 : 
; 1491 : 		if (_Flags & ios_base::showpos)

  00007	41 f6 c1 20	 test	 r9b, 32			; 00000020H
  0000b	74 06		 je	 SHORT $LN2@Ifmt

; 1492 : 			*_Ptr++ = '+';

  0000d	c6 00 2b	 mov	 BYTE PTR [rax], 43	; 0000002bH
  00010	48 ff c0	 inc	 rax
$LN2@Ifmt:

; 1493 : 		if (_Flags & ios_base::showbase)

  00013	41 f6 c1 08	 test	 r9b, 8
  00017	74 06		 je	 SHORT $LN3@Ifmt

; 1494 : 			*_Ptr++ = '#';

  00019	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0001c	48 ff c0	 inc	 rax
$LN3@Ifmt:

; 1495 : 		if (_Spec[0] != 'L')

  0001f	41 0f b6 08	 movzx	 ecx, BYTE PTR [r8]
  00023	80 f9 4c	 cmp	 cl, 76			; 0000004cH
  00026	74 04		 je	 SHORT $LN4@Ifmt

; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier

  00028	88 08		 mov	 BYTE PTR [rax], cl

; 1497 : 		else

  0002a	eb 0c		 jmp	 SHORT $LN5@Ifmt
$LN4@Ifmt:

; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';

  0002c	66 c7 00 49 36	 mov	 WORD PTR [rax], 13897	; 00003649H

; 1501 : 			*_Ptr++ = '6';

  00031	48 83 c0 02	 add	 rax, 2

; 1502 : 			*_Ptr++ = '4';

  00035	c6 00 34	 mov	 BYTE PTR [rax], 52	; 00000034H
$LN5@Ifmt:

; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00038	41 8b c9	 mov	 ecx, r9d
  0003b	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H
  00041	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00047	75 0f		 jne	 SHORT $LN9@Ifmt
  00049	41 b1 6f	 mov	 r9b, 111		; 0000006fH
  0004c	44 88 48 01	 mov	 BYTE PTR [rax+1], r9b

; 1507 : 			: _Basefield != ios_base::hex ? _Spec[1]	// 'd' or 'u'
; 1508 : 			: _Flags & ios_base::uppercase ? 'X' : 'x';
; 1509 : 		*_Ptr = '\0';

  00050	c6 40 02 00	 mov	 BYTE PTR [rax+2], 0

; 1510 : 		return (_Fmt);

  00054	48 8b c2	 mov	 rax, rdx

; 1511 : 		}

  00057	c3		 ret	 0
$LN9@Ifmt:
  00058	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0005e	74 11		 je	 SHORT $LN7@Ifmt
  00060	45 0f b6 48 01	 movzx	 r9d, BYTE PTR [r8+1]
  00065	44 88 48 01	 mov	 BYTE PTR [rax+1], r9b

; 1507 : 			: _Basefield != ios_base::hex ? _Spec[1]	// 'd' or 'u'
; 1508 : 			: _Flags & ios_base::uppercase ? 'X' : 'x';
; 1509 : 		*_Ptr = '\0';

  00069	c6 40 02 00	 mov	 BYTE PTR [rax+2], 0

; 1510 : 		return (_Fmt);

  0006d	48 8b c2	 mov	 rax, rdx

; 1511 : 		}

  00070	c3		 ret	 0
$LN7@Ifmt:

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00071	41 c0 e1 03	 shl	 r9b, 3
  00075	41 f6 d1	 not	 r9b
  00078	41 80 e1 20	 and	 r9b, 32			; 00000020H
  0007c	41 80 c9 58	 or	 r9b, 88			; 00000058H
  00080	44 88 48 01	 mov	 BYTE PTR [rax+1], r9b

; 1507 : 			: _Basefield != ios_base::hex ? _Spec[1]	// 'd' or 'u'
; 1508 : 			: _Flags & ios_base::uppercase ? 'X' : 'x';
; 1509 : 		*_Ptr = '\0';

  00084	c6 40 02 00	 mov	 BYTE PTR [rax+2], 0

; 1510 : 		return (_Fmt);

  00088	48 8b c2	 mov	 rax, rdx

; 1511 : 		}

  0008b	c3		 ret	 0
?_Ifmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ifmt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput, COMDAT

; 1413 : 		{	// put formatted floating-point to _Dest

$LN1241:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 8d 6c 24 f1	 lea	 rbp, QWORD PTR [rsp-15]
  00011	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00018	48 c7 45 b7 fe
	ff ff ff	 mov	 QWORD PTR $T10[rbp-161], -2
  00020	48 89 9c 24 f0
	00 00 00	 mov	 QWORD PTR [rsp+240], rbx
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 45 ff	 mov	 QWORD PTR __$ArrayPad$[rbp-161], rax
  00036	4d 8b e9	 mov	 r13, r9
  00039	4c 89 4d a7	 mov	 QWORD PTR _Iosbase$GSCopy$1$[rbp-161], r9
  0003d	4c 89 45 9f	 mov	 QWORD PTR _Dest$GSCopy$1$[rbp-161], r8
  00041	48 89 55 af	 mov	 QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-161], rdx
  00045	44 0f b6 65 6f	 movzx	 r12d, BYTE PTR _Fill$[rbp-161]
  0004a	48 8b 5d 77	 mov	 rbx, QWORD PTR _Buf$[rbp-161]
  0004e	48 8b 7d 7f	 mov	 rdi, QWORD PTR _Count$[rbp-161]

; 1414 : 		_DEBUG_POINTER(_Dest);
; 1415 : 		size_t _Prefix = 0 < _Count && (*_Buf == '+' || *_Buf == '-')

  00052	48 85 ff	 test	 rdi, rdi
  00055	74 11		 je	 SHORT $LN16@Fput
  00057	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  0005a	2c 2b		 sub	 al, 43			; 0000002bH
  0005c	a8 fd		 test	 al, 253			; 000000fdH
  0005e	75 08		 jne	 SHORT $LN16@Fput
  00060	41 b8 01 00 00
	00		 mov	 r8d, 1
  00066	eb 03		 jmp	 SHORT $LN1234@Fput
$LN16@Fput:
  00068	45 33 c0	 xor	 r8d, r8d
$LN1234@Fput:
  0006b	4c 89 45 97	 mov	 QWORD PTR _Prefix$1$[rbp-161], r8
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  0006f	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1419 : 		if ((_Iosbase.flags() & ios_base::floatfield) != ios_base::hexfloat)

  00073	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  00078	3d 00 30 00 00	 cmp	 eax, 12288		; 00003000H
  0007d	74 09		 je	 SHORT $LN4@Fput

; 1420 : 			_Exps = "eE";

  0007f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02MDKMJEGG@eE?$AA@

; 1421 : 		else

  00086	eb 29		 jmp	 SHORT $LN6@Fput
$LN4@Fput:

; 1422 : 			{	// correct for hexadecimal floating-point
; 1423 : 			_Exps = "pP";

  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02OOPEBDOJ@pP?$AA@

; 1424 : 			if (_Prefix + 2 <= _Count && _Buf[_Prefix] == '0'
; 1425 : 				&& (_Buf[_Prefix + 1] == 'x' || _Buf[_Prefix + 1] == 'X'))

  0008f	49 8d 48 02	 lea	 rcx, QWORD PTR [r8+2]
  00093	48 3b cf	 cmp	 rcx, rdi
  00096	77 19		 ja	 SHORT $LN6@Fput
  00098	42 80 3c 03 30	 cmp	 BYTE PTR [rbx+r8], 48	; 00000030H
  0009d	75 12		 jne	 SHORT $LN6@Fput
  0009f	42 0f b6 44 03
	01		 movzx	 eax, BYTE PTR [rbx+r8+1]
  000a5	2c 58		 sub	 al, 88			; 00000058H
  000a7	a8 df		 test	 al, 223			; 000000dfH
  000a9	4c 0f 44 c1	 cmove	 r8, rcx
  000ad	4c 89 45 97	 mov	 QWORD PTR _Prefix$1$[rbp-161], r8
$LN6@Fput:

; 1426 : 				_Prefix += 2;
; 1427 : 			}
; 1428 : 		const size_t _Eoff =
; 1429 : 			_CSTD strcspn(&_Buf[0], _Exps);	// find exponent

  000b1	48 8b cb	 mov	 rcx, rbx
  000b4	e8 00 00 00 00	 call	 strcspn
  000b9	4c 8b f8	 mov	 r15, rax

; 1430 : 		char _Dp[2] = {"."};

  000bc	b8 2e 00 00 00	 mov	 eax, 46			; 0000002eH
  000c1	66 89 45 8f	 mov	 WORD PTR _Dp$[rbp-161], ax

; 1431 : 		_Dp[0] = _CSTD localeconv()->decimal_point[0];

  000c5	e8 00 00 00 00	 call	 localeconv
  000ca	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000cd	0f b6 01	 movzx	 eax, BYTE PTR [rcx]
  000d0	88 45 8f	 mov	 BYTE PTR _Dp$[rbp-161], al

; 1432 : 		const size_t _Poff =
; 1433 : 			_CSTD strcspn(&_Buf[0], &_Dp[0]);	// find decimal point

  000d3	48 8d 55 8f	 lea	 rdx, QWORD PTR _Dp$[rbp-161]
  000d7	48 8b cb	 mov	 rcx, rbx
  000da	e8 00 00 00 00	 call	 strcspn
  000df	48 8b f0	 mov	 rsi, rax

; 1434 : 
; 1435 : 		const ctype<_Elem>& _Ctype_fac =

  000e2	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T9[rsp]
  000e7	49 8b cd	 mov	 rcx, r13
  000ea	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  000ef	90		 npad	 1
  000f0	48 8b c8	 mov	 rcx, rax
  000f3	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  000f8	4c 8b f0	 mov	 r14, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  000fb	48 8b 4d 87	 mov	 rcx, QWORD PTR $T9[rbp-153]
  000ff	48 85 c9	 test	 rcx, rcx
  00102	74 19		 je	 SHORT $LN29@Fput

; 432  : 			delete _Ptr->_Decref();

  00104	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00107	ff 50 10	 call	 QWORD PTR [rax+16]
  0010a	48 8b c8	 mov	 rcx, rax
  0010d	48 85 c0	 test	 rax, rax
  00110	74 0b		 je	 SHORT $LN29@Fput
  00112	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00115	ba 01 00 00 00	 mov	 edx, 1
  0011a	ff 10		 call	 QWORD PTR [rax]
  0011c	90		 npad	 1
$LN29@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0011d	48 c7 45 d7 0f
	00 00 00	 mov	 QWORD PTR _Groupstring$[rbp-137], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00125	48 c7 45 cf 00
	00 00 00	 mov	 QWORD PTR _Groupstring$[rbp-145], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0012d	c6 45 bf 00	 mov	 BYTE PTR _Groupstring$[rbp-161], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 846  : 		assign(_Count, _Ch);

  00131	45 33 c0	 xor	 r8d, r8d
  00134	48 8b d7	 mov	 rdx, rdi
  00137	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-161]
  0013b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00140	90		 npad	 1

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00141	4c 8d 4d bf	 lea	 r9, QWORD PTR _Groupstring$[rbp-161]
  00145	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  0014a	4c 0f 43 4d bf	 cmovae	 r9, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2422 : 		return (do_widen(_First, _Last, _Dest));

  0014f	49 8b 06	 mov	 rax, QWORD PTR [r14]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1438 : 		_Ctype_fac.widen(&_Buf[0], &_Buf[_Count], &_Groupstring[0]);

  00152	4c 8d 04 1f	 lea	 r8, QWORD PTR [rdi+rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2422 : 		return (do_widen(_First, _Last, _Dest));

  00156	48 8b d3	 mov	 rdx, rbx
  00159	49 8b ce	 mov	 rcx, r14
  0015c	ff 50 38	 call	 QWORD PTR [rax+56]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1440 : 		const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  0015f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T8[rsp]
  00164	49 8b cd	 mov	 rcx, r13
  00167	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  0016c	90		 npad	 1
  0016d	48 8b c8	 mov	 rcx, rax
  00170	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
  00175	48 8b d8	 mov	 rbx, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  00178	48 8b 4d 87	 mov	 rcx, QWORD PTR $T8[rbp-153]
  0017c	48 85 c9	 test	 rcx, rcx
  0017f	74 19		 je	 SHORT $LN187@Fput

; 432  : 			delete _Ptr->_Decref();

  00181	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00184	ff 50 10	 call	 QWORD PTR [rax+16]
  00187	48 8b c8	 mov	 rcx, rax
  0018a	48 85 c0	 test	 rax, rax
  0018d	74 0b		 je	 SHORT $LN187@Fput
  0018f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00192	ba 01 00 00 00	 mov	 edx, 1
  00197	ff 10		 call	 QWORD PTR [rax]
  00199	90		 npad	 1
$LN187@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1441 : 		const string _Grouping = _Punct_fac.grouping();

  0019a	48 8d 55 df	 lea	 rdx, QWORD PTR _Grouping$[rbp-161]
  0019e	48 8b cb	 mov	 rcx, rbx
  001a1	e8 00 00 00 00	 call	 ?grouping@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::grouping
  001a6	90		 npad	 1

; 129  : 		return (do_thousands_sep());

  001a7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  001aa	48 8b cb	 mov	 rcx, rbx
  001ad	ff 50 20	 call	 QWORD PTR [rax+32]
  001b0	44 0f b6 e8	 movzx	 r13d, al

; 1442 : 		const _Elem _Kseparator = _Punct_fac.thousands_sep();
; 1443 : 
; 1444 : 		if (_Poff != _Count)

  001b4	48 3b f7	 cmp	 rsi, rdi
  001b7	74 20		 je	 SHORT $LN1235@Fput

; 124  : 		return (do_decimal_point());

  001b9	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  001bc	48 8b cb	 mov	 rcx, rbx
  001bf	ff 50 18	 call	 QWORD PTR [rax+24]
  001c2	0f b6 c8	 movzx	 ecx, al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  001c5	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  001c9	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  001ce	48 0f 43 45 bf	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1445 : 			_Groupstring[_Poff] = _Punct_fac.decimal_point();

  001d3	88 0c 30	 mov	 BYTE PTR [rax+rsi], cl

; 1446 : 
; 1447 : 		size_t _Off = _Poff == _Count ? _Eoff : _Poff;

  001d6	48 3b f7	 cmp	 rsi, rdi
$LN1235@Fput:
  001d9	49 0f 44 f7	 cmove	 rsi, r15
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  001dd	4c 8d 75 df	 lea	 r14, QWORD PTR _Grouping$[rbp-161]
  001e1	48 83 7d f7 10	 cmp	 QWORD PTR _Grouping$[rbp-137], 16
  001e6	4c 0f 43 75 df	 cmovae	 r14, QWORD PTR _Grouping$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1450 : 			&& (size_t)*_Pg < _Off - _Prefix)

  001eb	48 8b 5d cf	 mov	 rbx, QWORD PTR _Groupstring$[rbp-145]
  001ef	41 80 3e 7f	 cmp	 BYTE PTR [r14], 127	; 0000007fH
  001f3	0f 84 2b 01 00
	00		 je	 $LN3@Fput
  001f9	4c 8b 7d 97	 mov	 r15, QWORD PTR _Prefix$1$[rbp-161]
  001fd	0f 1f 00	 npad	 3
$LL2@Fput:
  00200	41 0f b6 06	 movzx	 eax, BYTE PTR [r14]
  00204	84 c0		 test	 al, al
  00206	0f 8e 18 01 00
	00		 jle	 $LN3@Fput
  0020c	48 0f be c8	 movsx	 rcx, al
  00210	48 8b c6	 mov	 rax, rsi
  00213	49 2b c7	 sub	 rax, r15
  00216	48 3b c8	 cmp	 rcx, rax
  00219	0f 83 05 01 00
	00		 jae	 $LN3@Fput

; 1451 : 			{	// add thousands separator
; 1452 : 			_Groupstring.insert(_Off -= *_Pg, (size_t)1, _Kseparator);

  0021f	48 2b f1	 sub	 rsi, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2269 : 		if (this->_Mysize() < _Off)

  00222	48 3b de	 cmp	 rbx, rsi
  00225	0f 82 ec 00 00
	00		 jb	 $LN1197@Fput

; 1274 : 		if (npos - this->_Mysize() <= _Count)

  0022b	48 8b c3	 mov	 rax, rbx
  0022e	48 f7 d0	 not	 rax
  00231	48 83 f8 01	 cmp	 rax, 1
  00235	0f 86 cf 00 00
	00		 jbe	 $LN1198@Fput

; 1275 : 			_Xlen();	// result too long
; 1276 : 		const size_type _Num = this->_Mysize() + _Count;

  0023b	48 8d 7b 01	 lea	 rdi, QWORD PTR [rbx+1]

; 2223 : 		if (max_size() < _Newsize)

  0023f	48 83 ff fe	 cmp	 rdi, -2
  00243	0f 87 b4 00 00
	00		 ja	 $LN1199@Fput

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  00249	48 39 7d d7	 cmp	 QWORD PTR _Groupstring$[rbp-137], rdi
  0024d	73 11		 jae	 SHORT $LN270@Fput

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0024f	4c 8b c3	 mov	 r8, rbx
  00252	48 8b d7	 mov	 rdx, rdi
  00255	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-161]
  00259	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  0025e	eb 1a		 jmp	 SHORT $LN1236@Fput
$LN270@Fput:

; 2227 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)
; 2228 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2229 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2230 : 		else if (_Newsize == 0)

  00260	48 85 ff	 test	 rdi, rdi
  00263	75 1e		 jne	 SHORT $LN1238@Fput

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00265	48 89 7d cf	 mov	 QWORD PTR _Groupstring$[rbp-145], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00269	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  0026d	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  00272	48 0f 43 45 bf	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00277	40 88 38	 mov	 BYTE PTR [rax], dil
$LN1236@Fput:
  0027a	48 8b 5d cf	 mov	 rbx, QWORD PTR _Groupstring$[rbp-145]
  0027e	48 85 ff	 test	 rdi, rdi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1277 : 		if (0 < _Count && _Grow(_Num))

  00281	74 61		 je	 SHORT $LN598@Fput
$LN1238@Fput:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00283	4c 8d 45 bf	 lea	 r8, QWORD PTR _Groupstring$[rbp-161]
  00287	48 8b 55 bf	 mov	 rdx, QWORD PTR _Groupstring$[rbp-161]
  0028b	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  00290	4c 0f 43 c2	 cmovae	 r8, rdx
  00294	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-161]
  00298	48 0f 43 ca	 cmovae	 rcx, rdx

; 1279 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  0029c	48 2b de	 sub	 rbx, rsi
  0029f	48 8d 49 01	 lea	 rcx, QWORD PTR [rcx+1]
  002a3	48 8d 0c 31	 lea	 rcx, QWORD PTR [rcx+rsi]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  002a7	74 10		 je	 SHORT $LN531@Fput
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1279 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  002a9	49 8d 14 30	 lea	 rdx, QWORD PTR [r8+rsi]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  002ad	4c 8b c3	 mov	 r8, rbx
  002b0	e8 00 00 00 00	 call	 memmove
  002b5	48 8b 55 bf	 mov	 rdx, QWORD PTR _Groupstring$[rbp-161]
$LN531@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  002b9	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  002bd	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  002c2	48 0f 43 c2	 cmovae	 rax, rdx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  002c6	44 88 2c 30	 mov	 BYTE PTR [rax+rsi], r13b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  002ca	48 89 7d cf	 mov	 QWORD PTR _Groupstring$[rbp-145], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  002ce	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  002d2	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  002d7	48 0f 43 45 bf	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  002dc	c6 04 07 00	 mov	 BYTE PTR [rdi+rax], 0
  002e0	48 8b 5d cf	 mov	 rbx, QWORD PTR _Groupstring$[rbp-145]
$LN598@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1453 : 			if ('\0' < _Pg[1])

  002e4	49 8d 46 01	 lea	 rax, QWORD PTR [r14+1]
  002e8	80 38 00	 cmp	 BYTE PTR [rax], 0
  002eb	49 0f 4e c6	 cmovle	 rax, r14
  002ef	4c 8b f0	 mov	 r14, rax

; 1450 : 			&& (size_t)*_Pg < _Off - _Prefix)

  002f2	80 38 7f	 cmp	 BYTE PTR [rax], 127	; 0000007fH
  002f5	0f 85 05 ff ff
	ff		 jne	 $LL2@Fput
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  002fb	eb 27		 jmp	 SHORT $LN3@Fput
$LN1199@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2264 : 		_Xlength_error("string too long");

  002fd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00304	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00309	cc		 int	 3
$LN1198@Fput:
  0030a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00311	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00316	cc		 int	 3
$LN1197@Fput:

; 2281 : 		_Xout_of_range("invalid string position");

  00317	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0031e	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00323	cc		 int	 3
$LN3@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 423  : 		return (_Wide);

  00324	48 8b 45 a7	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-161]
  00328	48 8b 70 28	 mov	 rsi, QWORD PTR [rax+40]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1459 : 			|| (size_t)_Iosbase.width() <= _Count

  0032c	48 85 f6	 test	 rsi, rsi
  0032f	7e 0a		 jle	 SHORT $LN18@Fput
  00331	48 3b f3	 cmp	 rsi, rbx
  00334	76 05		 jbe	 SHORT $LN18@Fput
  00336	48 2b f3	 sub	 rsi, rbx
  00339	eb 02		 jmp	 SHORT $LN19@Fput
$LN18@Fput:
  0033b	33 f6		 xor	 esi, esi
$LN19@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  0033d	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1463 : 			_Iosbase.flags() & ios_base::adjustfield;

  00340	25 c0 01 00 00	 and	 eax, 448		; 000001c0H

; 1466 : 			{	// put leading fill
; 1467 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  00345	4c 8b 75 9f	 mov	 r14, QWORD PTR _Dest$GSCopy$1$[rbp-161]
  00349	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  0034d	0f 29 44 24 20	 movaps	 XMMWORD PTR $T7[rsp], xmm0
  00352	83 f8 40	 cmp	 eax, 64			; 00000040H

; 1464 : 		if (_Adjustfield != ios_base::left
; 1465 : 			&& _Adjustfield != ios_base::internal)

  00355	0f 84 e5 01 00
	00		 je	 $LN12@Fput
  0035b	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  00360	0f 84 e9 00 00
	00		 je	 $LN1228@Fput

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00366	48 85 f6	 test	 rsi, rsi
  00369	74 5b		 je	 SHORT $LN622@Fput
  0036b	48 8b 7d 87	 mov	 rdi, QWORD PTR $T7[rbp-153]
  0036f	90		 npad	 1
$LL623@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00370	48 85 ff	 test	 rdi, rdi
  00373	74 41		 je	 SHORT $LN631@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00375	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  00379	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0037d	74 25		 je	 SHORT $LN635@Fput
  0037f	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00383	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00385	85 c0		 test	 eax, eax
  00387	7e 1b		 jle	 SHORT $LN635@Fput

; 308  : 		--*_IPcount;

  00389	ff c8		 dec	 eax
  0038b	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  0038d	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00391	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00394	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00398	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0039b	44 88 22	 mov	 BYTE PTR [rdx], r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0039e	41 0f b6 c4	 movzx	 eax, r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  003a2	eb 0d		 jmp	 SHORT $LN636@Fput
$LN635@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  003a4	41 0f b6 d4	 movzx	 edx, r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  003a8	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  003ab	48 8b cf	 mov	 rcx, rdi
  003ae	ff 50 18	 call	 QWORD PTR [rax+24]
$LN636@Fput:
  003b1	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  003b4	75 05		 jne	 SHORT $LN621@Fput
$LN631@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  003b6	c6 44 24 20 01	 mov	 BYTE PTR $T7[rsp], 1
$LN621@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  003bb	48 83 ee 01	 sub	 rsi, 1
  003bf	75 af		 jne	 SHORT $LL623@Fput
  003c1	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T7[rsp]
$LN622@Fput:

; 1466 : 			{	// put leading fill
; 1467 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  003c6	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0

; 1468 : 			_Fillcount = 0;

  003ca	33 f6		 xor	 esi, esi

; 1469 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  003cc	0f 29 44 24 20	 movaps	 XMMWORD PTR $T6[rsp], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  003d1	4c 8d 75 bf	 lea	 r14, QWORD PTR _Groupstring$[rbp-161]
  003d5	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  003da	4c 0f 43 75 bf	 cmovae	 r14, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1469 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  003df	4c 8b 6d 97	 mov	 r13, QWORD PTR _Prefix$1$[rbp-161]
  003e3	4d 8b fd	 mov	 r15, r13

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  003e6	4d 85 ed	 test	 r13, r13
  003e9	0f 84 ce 01 00
	00		 je	 $LN813@Fput
  003ef	48 8b 7d 87	 mov	 rdi, QWORD PTR $T6[rbp-153]
$LL675@Fput:

; 1577 : 			*_Dest = *_Ptr;

  003f3	45 0f b6 06	 movzx	 r8d, BYTE PTR [r14]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  003f7	48 85 ff	 test	 rdi, rdi
  003fa	74 40		 je	 SHORT $LN683@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  003fc	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  00400	48 39 30	 cmp	 QWORD PTR [rax], rsi
  00403	74 25		 je	 SHORT $LN687@Fput
  00405	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00409	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  0040b	85 c0		 test	 eax, eax
  0040d	7e 1b		 jle	 SHORT $LN687@Fput

; 308  : 		--*_IPcount;

  0040f	ff c8		 dec	 eax
  00411	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00413	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00417	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0041a	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0041e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00421	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00424	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00428	eb 0d		 jmp	 SHORT $LN688@Fput
$LN687@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0042a	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0042e	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00431	48 8b cf	 mov	 rcx, rdi
  00434	ff 50 18	 call	 QWORD PTR [rax+24]
$LN688@Fput:
  00437	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0043a	75 05		 jne	 SHORT $LN673@Fput
$LN683@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0043c	c6 44 24 20 01	 mov	 BYTE PTR $T6[rsp], 1
$LN673@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00441	49 ff c6	 inc	 r14
  00444	49 83 ef 01	 sub	 r15, 1
  00448	75 a9		 jne	 SHORT $LL675@Fput

; 1469 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0044a	e9 69 01 00 00	 jmp	 $LN1239@Fput
$LN1228@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0044f	4c 8d 75 bf	 lea	 r14, QWORD PTR _Groupstring$[rbp-161]
  00453	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  00458	4c 0f 43 75 bf	 cmovae	 r14, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1473 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0045d	4c 8b 6d 97	 mov	 r13, QWORD PTR _Prefix$1$[rbp-161]
  00461	4d 8b fd	 mov	 r15, r13

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00464	4d 85 ed	 test	 r13, r13
  00467	74 64		 je	 SHORT $LN726@Fput
  00469	48 8b 7d 87	 mov	 rdi, QWORD PTR $T5[rbp-153]
  0046d	0f 1f 00	 npad	 3
$LL727@Fput:

; 1577 : 			*_Dest = *_Ptr;

  00470	45 0f b6 06	 movzx	 r8d, BYTE PTR [r14]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00474	48 85 ff	 test	 rdi, rdi
  00477	74 41		 je	 SHORT $LN735@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00479	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  0047d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00481	74 25		 je	 SHORT $LN739@Fput
  00483	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00487	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00489	85 c0		 test	 eax, eax
  0048b	7e 1b		 jle	 SHORT $LN739@Fput

; 308  : 		--*_IPcount;

  0048d	ff c8		 dec	 eax
  0048f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00491	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00495	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00498	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0049c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0049f	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  004a2	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  004a6	eb 0d		 jmp	 SHORT $LN740@Fput
$LN739@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  004a8	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  004ac	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  004af	48 8b cf	 mov	 rcx, rdi
  004b2	ff 50 18	 call	 QWORD PTR [rax+24]
$LN740@Fput:
  004b5	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  004b8	75 05		 jne	 SHORT $LN725@Fput
$LN735@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  004ba	c6 44 24 20 01	 mov	 BYTE PTR $T5[rsp], 1
$LN725@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  004bf	49 ff c6	 inc	 r14
  004c2	49 83 ef 01	 sub	 r15, 1
  004c6	75 a8		 jne	 SHORT $LL727@Fput
  004c8	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T5[rsp]
$LN726@Fput:

; 1473 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  004cd	4c 8b 7d 9f	 mov	 r15, QWORD PTR _Dest$GSCopy$1$[rbp-161]
  004d1	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0

; 1474 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  004d5	0f 29 44 24 20	 movaps	 XMMWORD PTR $T4[rsp], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  004da	48 85 f6	 test	 rsi, rsi
  004dd	74 5a		 je	 SHORT $LN761@Fput
  004df	48 8b 7d 87	 mov	 rdi, QWORD PTR $T4[rbp-153]
$LL762@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  004e3	48 85 ff	 test	 rdi, rdi
  004e6	74 41		 je	 SHORT $LN770@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  004e8	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  004ec	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  004f0	74 25		 je	 SHORT $LN774@Fput
  004f2	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  004f6	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  004f8	85 c0		 test	 eax, eax
  004fa	7e 1b		 jle	 SHORT $LN774@Fput

; 308  : 		--*_IPcount;

  004fc	ff c8		 dec	 eax
  004fe	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00500	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00504	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00507	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0050b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0050e	44 88 22	 mov	 BYTE PTR [rdx], r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00511	41 0f b6 c4	 movzx	 eax, r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00515	eb 0d		 jmp	 SHORT $LN775@Fput
$LN774@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00517	41 0f b6 d4	 movzx	 edx, r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0051b	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0051e	48 8b cf	 mov	 rcx, rdi
  00521	ff 50 18	 call	 QWORD PTR [rax+24]
$LN775@Fput:
  00524	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00527	75 05		 jne	 SHORT $LN760@Fput
$LN770@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00529	c6 44 24 20 01	 mov	 BYTE PTR $T4[rsp], 1
$LN760@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0052e	48 83 ee 01	 sub	 rsi, 1
  00532	75 af		 jne	 SHORT $LL762@Fput
  00534	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T4[rsp]
$LN761@Fput:

; 1475 : 			_Fillcount = 0;

  00539	33 f6		 xor	 esi, esi

; 1476 : 			}
; 1477 : 		else

  0053b	e9 81 00 00 00	 jmp	 $LN1240@Fput
$LN12@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00540	4c 8d 75 bf	 lea	 r14, QWORD PTR _Groupstring$[rbp-161]
  00544	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  00549	4c 0f 43 75 bf	 cmovae	 r14, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1478 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0054e	4c 8b 6d 97	 mov	 r13, QWORD PTR _Prefix$1$[rbp-161]
  00552	4d 8b fd	 mov	 r15, r13

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00555	4d 85 ed	 test	 r13, r13
  00558	74 63		 je	 SHORT $LN813@Fput
  0055a	48 8b 7d 87	 mov	 rdi, QWORD PTR $T3[rbp-153]
  0055e	66 90		 npad	 2
$LL814@Fput:

; 1577 : 			*_Dest = *_Ptr;

  00560	45 0f b6 06	 movzx	 r8d, BYTE PTR [r14]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00564	48 85 ff	 test	 rdi, rdi
  00567	74 41		 je	 SHORT $LN822@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00569	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  0056d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00571	74 25		 je	 SHORT $LN826@Fput
  00573	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00577	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00579	85 c0		 test	 eax, eax
  0057b	7e 1b		 jle	 SHORT $LN826@Fput

; 308  : 		--*_IPcount;

  0057d	ff c8		 dec	 eax
  0057f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00581	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00585	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00588	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0058c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0058f	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00592	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00596	eb 0d		 jmp	 SHORT $LN827@Fput
$LN826@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00598	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0059c	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0059f	48 8b cf	 mov	 rcx, rdi
  005a2	ff 50 18	 call	 QWORD PTR [rax+24]
$LN827@Fput:
  005a5	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  005a8	75 05		 jne	 SHORT $LN812@Fput
$LN822@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  005aa	c6 44 24 20 01	 mov	 BYTE PTR $T3[rsp], 1
$LN812@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  005af	49 ff c6	 inc	 r14
  005b2	49 83 ef 01	 sub	 r15, 1
  005b6	75 a8		 jne	 SHORT $LL814@Fput
$LN1239@Fput:
  005b8	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T3[rsp]
$LN813@Fput:

; 1478 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  005bd	4c 8b 7d 9f	 mov	 r15, QWORD PTR _Dest$GSCopy$1$[rbp-161]
$LN1240@Fput:
  005c1	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0

; 1480 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  005c5	0f 29 44 24 20	 movaps	 XMMWORD PTR $T2[rsp], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  005ca	4c 8d 75 bf	 lea	 r14, QWORD PTR _Groupstring$[rbp-161]
  005ce	48 83 7d d7 10	 cmp	 QWORD PTR _Groupstring$[rbp-137], 16
  005d3	4c 0f 43 75 bf	 cmovae	 r14, QWORD PTR _Groupstring$[rbp-161]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1480 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  005d8	49 2b dd	 sub	 rbx, r13
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1678 : 		return (this->_Myptr()[_Off]);

  005db	4f 8d 34 2e	 lea	 r14, QWORD PTR [r14+r13]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  005df	74 61		 je	 SHORT $LN865@Fput
  005e1	48 8b 7d 87	 mov	 rdi, QWORD PTR $T2[rbp-153]
$LL866@Fput:

; 1577 : 			*_Dest = *_Ptr;

  005e5	45 0f b6 06	 movzx	 r8d, BYTE PTR [r14]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  005e9	48 85 ff	 test	 rdi, rdi
  005ec	74 41		 je	 SHORT $LN874@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  005ee	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  005f2	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  005f6	74 25		 je	 SHORT $LN878@Fput
  005f8	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  005fc	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  005fe	85 c0		 test	 eax, eax
  00600	7e 1b		 jle	 SHORT $LN878@Fput

; 308  : 		--*_IPcount;

  00602	ff c8		 dec	 eax
  00604	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00606	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  0060a	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0060d	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00611	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00614	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00617	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0061b	eb 0d		 jmp	 SHORT $LN879@Fput
$LN878@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0061d	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00621	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00624	48 8b cf	 mov	 rcx, rdi
  00627	ff 50 18	 call	 QWORD PTR [rax+24]
$LN879@Fput:
  0062a	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0062d	75 05		 jne	 SHORT $LN864@Fput
$LN874@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0062f	c6 44 24 20 01	 mov	 BYTE PTR $T2[rsp], 1
$LN864@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00634	49 ff c6	 inc	 r14
  00637	48 83 eb 01	 sub	 rbx, 1
  0063b	75 a8		 jne	 SHORT $LL866@Fput
  0063d	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T2[rsp]
$LN865@Fput:

; 1480 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  00642	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  00646	48 8b 45 a7	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-161]
  0064a	33 ff		 xor	 edi, edi
  0064c	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1482 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  00650	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  00654	0f 29 44 24 20	 movaps	 XMMWORD PTR $T1[rsp], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00659	48 85 f6	 test	 rsi, rsi
  0065c	74 59		 je	 SHORT $LN902@Fput
  0065e	48 8b 5d 87	 mov	 rbx, QWORD PTR $T1[rbp-153]
$LL903@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00662	48 85 db	 test	 rbx, rbx
  00665	74 40		 je	 SHORT $LN911@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00667	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  0066b	48 39 38	 cmp	 QWORD PTR [rax], rdi
  0066e	74 25		 je	 SHORT $LN915@Fput
  00670	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00674	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00676	85 c0		 test	 eax, eax
  00678	7e 1b		 jle	 SHORT $LN915@Fput

; 308  : 		--*_IPcount;

  0067a	ff c8		 dec	 eax
  0067c	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  0067e	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00682	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00685	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00689	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0068c	44 88 22	 mov	 BYTE PTR [rdx], r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0068f	41 0f b6 c4	 movzx	 eax, r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00693	eb 0d		 jmp	 SHORT $LN916@Fput
$LN915@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00695	41 0f b6 d4	 movzx	 edx, r12b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00699	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0069c	48 8b cb	 mov	 rcx, rbx
  0069f	ff 50 18	 call	 QWORD PTR [rax+24]
$LN916@Fput:
  006a2	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  006a5	75 05		 jne	 SHORT $LN901@Fput
$LN911@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  006a7	c6 44 24 20 01	 mov	 BYTE PTR $T1[rsp], 1
$LN901@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  006ac	48 83 ee 01	 sub	 rsi, 1
  006b0	75 b0		 jne	 SHORT $LL903@Fput
  006b2	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T1[rsp]
$LN902@Fput:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  006b7	48 8b 5d af	 mov	 rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-161]
  006bb	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  006be	48 8b 45 f7	 mov	 rax, QWORD PTR _Grouping$[rbp-137]
  006c2	48 83 f8 10	 cmp	 rax, 16
  006c6	72 51		 jb	 SHORT $LN1019@Fput

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  006c8	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  006cb	48 8b 4d df	 mov	 rcx, QWORD PTR _Grouping$[rbp-161]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  006cf	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  006d5	72 3d		 jb	 SHORT $LN1014@Fput

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  006d7	f6 c1 1f	 test	 cl, 31
  006da	74 06		 je	 SHORT $LN1015@Fput
  006dc	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  006e1	cc		 int	 3
$LN1015@Fput:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

  006e2	48 8b 45 df	 mov	 rax, QWORD PTR _Grouping$[rbp-161]

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  006e6	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  006ea	48 3b c8	 cmp	 rcx, rax
  006ed	72 06		 jb	 SHORT $LN1016@Fput
  006ef	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  006f4	cc		 int	 3
$LN1016@Fput:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  006f5	48 8b 45 df	 mov	 rax, QWORD PTR _Grouping$[rbp-161]
  006f9	48 2b c1	 sub	 rax, rcx
  006fc	48 83 f8 08	 cmp	 rax, 8
  00700	73 06		 jae	 SHORT $LN1017@Fput
  00702	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00707	cc		 int	 3
$LN1017@Fput:

; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00708	48 83 f8 27	 cmp	 rax, 39			; 00000027H
  0070c	76 06		 jbe	 SHORT $LN1014@Fput
  0070e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00713	cc		 int	 3
$LN1014@Fput:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);
; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00714	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN1019@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00719	48 c7 45 f7 0f
	00 00 00	 mov	 QWORD PTR _Grouping$[rbp-137], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00721	48 89 7d ef	 mov	 QWORD PTR _Grouping$[rbp-145], rdi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00725	c6 45 df 00	 mov	 BYTE PTR _Grouping$[rbp-161], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00729	48 8b 4d d7	 mov	 rcx, QWORD PTR _Groupstring$[rbp-137]
  0072d	48 83 f9 10	 cmp	 rcx, 16
  00731	72 52		 jb	 SHORT $LN1146@Fput

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00733	48 8d 41 01	 lea	 rax, QWORD PTR [rcx+1]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00737	48 8b 4d bf	 mov	 rcx, QWORD PTR _Groupstring$[rbp-161]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0073b	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00741	72 3d		 jb	 SHORT $LN1141@Fput

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00743	f6 c1 1f	 test	 cl, 31
  00746	74 06		 je	 SHORT $LN1142@Fput
  00748	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0074d	cc		 int	 3
$LN1142@Fput:

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0074e	48 8b 45 bf	 mov	 rax, QWORD PTR _Groupstring$[rbp-161]
  00752	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00756	48 3b c8	 cmp	 rcx, rax
  00759	72 06		 jb	 SHORT $LN1143@Fput
  0075b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00760	cc		 int	 3
$LN1143@Fput:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00761	48 8b 45 bf	 mov	 rax, QWORD PTR _Groupstring$[rbp-161]
  00765	48 2b c1	 sub	 rax, rcx
  00768	48 83 f8 08	 cmp	 rax, 8
  0076c	73 06		 jae	 SHORT $LN1144@Fput
  0076e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00773	cc		 int	 3
$LN1144@Fput:

; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00774	48 83 f8 27	 cmp	 rax, 39			; 00000027H
  00778	76 06		 jbe	 SHORT $LN1141@Fput
  0077a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0077f	cc		 int	 3
$LN1141@Fput:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);
; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00780	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN1146@Fput:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1482 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  00785	48 8b c3	 mov	 rax, rbx

; 1483 : 		}

  00788	48 8b 4d ff	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-161]
  0078c	48 33 cc	 xor	 rcx, rsp
  0078f	e8 00 00 00 00	 call	 __security_check_cookie
  00794	48 8b 9c 24 f0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+240]
  0079c	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  007a3	41 5f		 pop	 r15
  007a5	41 5e		 pop	 r14
  007a7	41 5d		 pop	 r13
  007a9	41 5c		 pop	 r12
  007ab	5f		 pop	 rdi
  007ac	5e		 pop	 rsi
  007ad	5d		 pop	 rbp
  007ae	c3		 ret	 0
$LN1233@Fput:
?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$4@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$4
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
  00011	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$38@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$38
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$38@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$38
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
  0002e	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$4@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
  00011	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$38@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$38
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$38@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$38
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Prefix$1$ = 56
_Dest$GSCopy$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
  0002e	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z
_TEXT	SEGMENT
this$ = 8
_Fmt$ = 16
_Spec$ = 24
_Flags$ = 32
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt, COMDAT

; 1384 : 		char *_Ptr = _Fmt;
; 1385 : 		*_Ptr++ = '%';

  00000	c6 02 25	 mov	 BYTE PTR [rdx], 37	; 00000025H
  00003	4c 8b d2	 mov	 r10, rdx
  00006	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]

; 1386 : 
; 1387 : 		if (_Flags & ios_base::showpos)

  0000a	41 f6 c1 20	 test	 r9b, 32			; 00000020H
  0000e	74 06		 je	 SHORT $LN2@Ffmt

; 1388 : 			*_Ptr++ = '+';

  00010	c6 00 2b	 mov	 BYTE PTR [rax], 43	; 0000002bH
  00013	48 ff c0	 inc	 rax
$LN2@Ffmt:

; 1389 : 		if (_Flags & ios_base::showpoint)

  00016	41 f6 c1 10	 test	 r9b, 16
  0001a	74 06		 je	 SHORT $LN3@Ffmt

; 1390 : 			*_Ptr++ = '#';

  0001c	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0001f	48 ff c0	 inc	 rax
$LN3@Ffmt:

; 1391 : 		*_Ptr++ = '.';

  00022	66 c7 00 2e 2a	 mov	 WORD PTR [rax], 10798	; 00002a2eH

; 1392 : 		*_Ptr++ = '*';	// for precision argument

  00027	48 83 c0 02	 add	 rax, 2

; 1393 : 		if (_Spec != '\0')

  0002b	45 84 c0	 test	 r8b, r8b
  0002e	74 06		 je	 SHORT $LN4@Ffmt

; 1394 : 			*_Ptr++ = _Spec;	// 'L' qualifier for long double only

  00030	44 88 00	 mov	 BYTE PTR [rax], r8b
  00033	48 ff c0	 inc	 rax
$LN4@Ffmt:

; 1395 : 
; 1396 : 		ios_base::fmtflags _Ffl = _Flags & ios_base::floatfield;

  00036	41 8b c9	 mov	 ecx, r9d
  00039	81 e1 00 30 00
	00		 and	 ecx, 12288		; 00003000H

; 1397 : 		if (_Flags & ios_base::uppercase)

  0003f	41 f6 c1 04	 test	 r9b, 4
  00043	74 3b		 je	 SHORT $LN5@Ffmt
  00045	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0004b	74 3b		 je	 SHORT $LN17@Ffmt
  0004d	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  00053	75 0c		 jne	 SHORT $LN8@Ffmt
  00055	b2 41		 mov	 dl, 65			; 00000041H

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00057	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  00059	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  0005d	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  00060	c3		 ret	 0
$LN8@Ffmt:
  00061	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00067	ba 47 00 00 00	 mov	 edx, 71			; 00000047H
  0006c	41 b8 45 00 00
	00		 mov	 r8d, 69			; 00000045H

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00072	41 0f 44 d0	 cmove	 edx, r8d
  00076	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  00078	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  0007c	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  0007f	c3		 ret	 0
$LN5@Ffmt:
  00080	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00086	75 0c		 jne	 SHORT $LN14@Ffmt
$LN17@Ffmt:
  00088	b2 66		 mov	 dl, 102			; 00000066H
  0008a	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  0008c	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  00090	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  00093	c3		 ret	 0
$LN14@Ffmt:
  00094	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0009a	75 0c		 jne	 SHORT $LN12@Ffmt
  0009c	b2 61		 mov	 dl, 97			; 00000061H
  0009e	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  000a0	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  000a4	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  000a7	c3		 ret	 0
$LN12@Ffmt:
  000a8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  000ae	ba 67 00 00 00	 mov	 edx, 103		; 00000067H
  000b3	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
  000b9	41 0f 44 d0	 cmove	 edx, r8d
  000bd	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  000bf	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  000c3	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  000c6	c3		 ret	 0
?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Ffmt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z
_TEXT	SEGMENT
$T1 = 64
_Buf$ = 80
__$ArrayPad$ = 144
this$ = 192
__$ReturnUdt$ = 200
_Dest$ = 208
_Iosbase$ = 216
_Fill$ = 224
_Val$ = 232
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1373 : 		{	// put formatted void pointer to _Dest

$LN4:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1374 : 		char _Buf[2 * _MAX_INT_DIG];
; 1375 : 
; 1376 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00021	49 8b f9	 mov	 rdi, r9
  00024	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02BBAHNLBA@?$CFp?$AA@
  0002b	4c 8b 8c 24 e8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00033	48 8b f2	 mov	 rsi, rdx
  00036	48 8b d9	 mov	 rbx, rcx
  00039	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  0003e	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00048	e8 00 00 00 00	 call	 sprintf_s
  0004d	48 63 c8	 movsxd	 rcx, eax
  00050	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  00055	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  0005a	48 8d 44 24 50	 lea	 rax, QWORD PTR _Buf$[rsp]
  0005f	0f b6 8c 24 e0
	00 00 00	 movzx	 ecx, BYTE PTR _Fill$[rsp]
  00067	4c 8b cf	 mov	 r9, rdi
  0006a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0006f	48 8b d6	 mov	 rdx, rsi
  00072	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  00076	48 8b cb	 mov	 rcx, rbx
  00079	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  0007e	48 8b c6	 mov	 rax, rsi

; 1377 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), "%p", _Val)));
; 1378 : 		}

  00081	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00089	48 33 cc	 xor	 rcx, rsp
  0008c	e8 00 00 00 00	 call	 __security_check_cookie
  00091	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00098	5f		 pop	 rdi
  00099	5e		 pop	 rsi
  0009a	5b		 pop	 rbx
  0009b	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z
_TEXT	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1349 : 		{	// put formatted long double to _Dest

$LN398:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	41 56		 push	 r14
  00008	41 57		 push	 r15
  0000a	48 8d 68 b1	 lea	 rbp, QWORD PTR [rax-79]
  0000e	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00015	48 c7 45 bf fe
	ff ff ff	 mov	 QWORD PTR $T2[rbp-137], -2
  0001d	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00021	0f 29 70 c8	 movaps	 XMMWORD PTR [rax-56], xmm6
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 45 07	 mov	 QWORD PTR __$ArrayPad$[rbp-137], rax
  00033	49 8b f9	 mov	 rdi, r9
  00036	4d 8b f8	 mov	 r15, r8
  00039	48 8b f2	 mov	 rsi, rdx
  0003c	4c 8b f1	 mov	 r14, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0003f	41 ba 0f 00 00
	00		 mov	 r10d, 15
  00045	4c 89 55 ef	 mov	 QWORD PTR _Buf$[rbp-113], r10

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00049	45 33 c9	 xor	 r9d, r9d
  0004c	4c 89 4d e7	 mov	 QWORD PTR _Buf$[rbp-121], r9
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00050	44 88 4d d7	 mov	 BYTE PTR _Buf$[rbp-137], r9b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  00054	8b 47 18	 mov	 eax, DWORD PTR [rdi+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1353 : 			== ios_base::fixed;

  00057	25 00 30 00 00	 and	 eax, 12288		; 00003000H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 411  : 		return (_Prec);

  0005c	48 8b 5f 20	 mov	 rbx, QWORD PTR [rdi+32]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1354 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  00060	48 85 db	 test	 rbx, rbx
  00063	7f 0c		 jg	 SHORT $LN5@do_put
  00065	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  0006a	74 05		 je	 SHORT $LN5@do_put
  0006c	bb 06 00 00 00	 mov	 ebx, 6
$LN5@do_put:

; 1355 : 			? 6 : _Iosbase.precision();	// desired precision
; 1356 : 		size_t _Bufsize = (size_t)_Precision;

  00071	48 8b d3	 mov	 rdx, rbx
  00074	f2 0f 10 75 7f	 movsd	 xmm6, QWORD PTR _Val$[rbp-137]
  00079	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H

; 1357 : 		if (_Isfixed && 1e10 < _CSTD fabsl(_Val))

  0007e	75 4d		 jne	 SHORT $LN2@do_put
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h

; 842  :     return fabs((double)_X);

  00080	0f 28 c6	 movaps	 xmm0, xmm6
  00083	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1357 : 		if (_Isfixed && 1e10 < _CSTD fabsl(_Val))

  0008a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4202a05f20000000
  00092	76 39		 jbe	 SHORT $LN2@do_put
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h

; 863  :     return frexp((double)_X, _Y);

  00094	48 8d 55 b7	 lea	 rdx, QWORD PTR _Ptwo$1[rbp-137]
  00098	0f 28 c6	 movaps	 xmm0, xmm6
  0009b	e8 00 00 00 00	 call	 frexp
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1361 : 			_Bufsize += _CSTD abs(_Ptwo) * 30103L / 100000L;

  000a0	8b 45 b7	 mov	 eax, DWORD PTR _Ptwo$1[rbp-137]
  000a3	99		 cdq
  000a4	33 c2		 xor	 eax, edx
  000a6	2b c2		 sub	 eax, edx
  000a8	69 c8 97 75 00
	00		 imul	 ecx, eax, 30103		; 00007597H
  000ae	b8 89 b5 f8 14	 mov	 eax, 351843721		; 14f8b589H
  000b3	f7 e9		 imul	 ecx
  000b5	c1 fa 0d	 sar	 edx, 13
  000b8	8b c2		 mov	 eax, edx
  000ba	c1 e8 1f	 shr	 eax, 31
  000bd	03 d0		 add	 edx, eax
  000bf	48 63 d2	 movsxd	 rdx, edx
  000c2	48 03 d3	 add	 rdx, rbx
  000c5	4c 8b 55 ef	 mov	 r10, QWORD PTR _Buf$[rbp-113]
  000c9	4c 8b 4d e7	 mov	 r9, QWORD PTR _Buf$[rbp-121]
$LN2@do_put:

; 1362 : 			}
; 1363 : 		_Buf.resize(_Bufsize + 50);	// add fudge factor

  000cd	48 83 c2 32	 add	 rdx, 50			; 00000032H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1762 : 		if (_Newsize <= this->_Mysize())

  000d1	49 3b d1	 cmp	 rdx, r9
  000d4	77 17		 ja	 SHORT $LN154@do_put

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d6	48 89 55 e7	 mov	 QWORD PTR _Buf$[rbp-121], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000da	48 8d 45 d7	 lea	 rax, QWORD PTR _Buf$[rbp-137]
  000de	49 83 fa 10	 cmp	 r10, 16
  000e2	48 0f 43 45 d7	 cmovae	 rax, QWORD PTR _Buf$[rbp-137]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000e7	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1764 : 		else

  000eb	eb 0f		 jmp	 SHORT $LN155@do_put
$LN154@do_put:

; 1765 : 			append(_Newsize - this->_Mysize(), _Ch);

  000ed	49 2b d1	 sub	 rdx, r9
  000f0	45 33 c0	 xor	 r8d, r8d
  000f3	48 8d 4d d7	 lea	 rcx, QWORD PTR _Buf$[rbp-137]
  000f7	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN155@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  000fc	8b 57 18	 mov	 edx, DWORD PTR [rdi+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1385 : 		*_Ptr++ = '%';

  000ff	c6 45 f7 25	 mov	 BYTE PTR _Fmt$[rbp-137], 37 ; 00000025H
  00103	48 8d 45 f8	 lea	 rax, QWORD PTR _Fmt$[rbp-136]

; 1386 : 
; 1387 : 		if (_Flags & ios_base::showpos)

  00107	f6 c2 20	 test	 dl, 32			; 00000020H
  0010a	74 08		 je	 SHORT $LN207@do_put

; 1388 : 			*_Ptr++ = '+';

  0010c	c6 45 f8 2b	 mov	 BYTE PTR _Fmt$[rbp-136], 43 ; 0000002bH
  00110	48 8d 45 f9	 lea	 rax, QWORD PTR _Fmt$[rbp-135]
$LN207@do_put:

; 1389 : 		if (_Flags & ios_base::showpoint)

  00114	f6 c2 10	 test	 dl, 16
  00117	74 06		 je	 SHORT $LN208@do_put

; 1390 : 			*_Ptr++ = '#';

  00119	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0011c	48 ff c0	 inc	 rax
$LN208@do_put:

; 1391 : 		*_Ptr++ = '.';

  0011f	66 c7 00 2e 2a	 mov	 WORD PTR [rax], 10798	; 00002a2eH

; 1392 : 		*_Ptr++ = '*';	// for precision argument
; 1393 : 		if (_Spec != '\0')
; 1394 : 			*_Ptr++ = _Spec;	// 'L' qualifier for long double only

  00124	c6 40 02 4c	 mov	 BYTE PTR [rax+2], 76	; 0000004cH

; 1395 : 
; 1396 : 		ios_base::fmtflags _Ffl = _Flags & ios_base::floatfield;

  00128	8b ca		 mov	 ecx, edx
  0012a	81 e1 00 30 00
	00		 and	 ecx, 12288		; 00003000H

; 1397 : 		if (_Flags & ios_base::uppercase)

  00130	f6 c2 04	 test	 dl, 4
  00133	74 23		 je	 SHORT $LN210@do_put
  00135	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0013b	75 04		 jne	 SHORT $LN215@do_put
  0013d	b2 66		 mov	 dl, 102			; 00000066H
  0013f	eb 44		 jmp	 SHORT $LN218@do_put
$LN215@do_put:
  00141	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  00147	75 04		 jne	 SHORT $LN213@do_put
  00149	b2 41		 mov	 dl, 65			; 00000041H
  0014b	eb 38		 jmp	 SHORT $LN218@do_put
$LN213@do_put:
  0014d	ba 47 00 00 00	 mov	 edx, 71			; 00000047H
  00152	44 8d 42 fe	 lea	 r8d, QWORD PTR [rdx-2]

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else

  00156	eb 23		 jmp	 SHORT $LN397@do_put
$LN210@do_put:
  00158	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H

; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0015e	75 04		 jne	 SHORT $LN219@do_put
  00160	b2 66		 mov	 dl, 102			; 00000066H
  00162	eb 21		 jmp	 SHORT $LN218@do_put
$LN219@do_put:
  00164	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  0016a	75 04		 jne	 SHORT $LN217@do_put
  0016c	b2 61		 mov	 dl, 97			; 00000061H
  0016e	eb 15		 jmp	 SHORT $LN218@do_put
$LN217@do_put:
  00170	ba 67 00 00 00	 mov	 edx, 103		; 00000067H
  00175	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
$LN397@do_put:
  0017b	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00181	41 0f 44 d0	 cmove	 edx, r8d
$LN218@do_put:
  00185	88 50 03	 mov	 BYTE PTR [rax+3], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  00188	c6 40 04 00	 mov	 BYTE PTR [rax+4], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0018c	48 8d 4d d7	 lea	 rcx, QWORD PTR _Buf$[rbp-137]
  00190	48 83 7d ef 10	 cmp	 QWORD PTR _Buf$[rbp-113], 16
  00195	48 0f 43 4d d7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-137]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1365 : 		int _Ngen = _CSTD sprintf_s((char *)_Buf.c_str(), _Buf.size(),

  0019a	f2 0f 11 74 24
	20		 movsd	 QWORD PTR [rsp+32], xmm6
  001a0	44 8b cb	 mov	 r9d, ebx
  001a3	4c 8d 45 f7	 lea	 r8, QWORD PTR _Fmt$[rbp-137]
  001a7	48 8b 55 e7	 mov	 rdx, QWORD PTR _Buf$[rbp-121]
  001ab	e8 00 00 00 00	 call	 sprintf_s

; 1368 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001b0	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  001b4	0f 29 45 c7	 movaps	 XMMWORD PTR $T3[rbp-137], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  001b8	48 8d 4d d7	 lea	 rcx, QWORD PTR _Buf$[rbp-137]
  001bc	48 83 7d ef 10	 cmp	 QWORD PTR _Buf$[rbp-113], 16
  001c1	48 0f 43 4d d7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-137]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1368 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001c6	48 98		 cdqe
  001c8	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001cd	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001d2	0f b6 45 77	 movzx	 eax, BYTE PTR _Fill$[rbp-137]
  001d6	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  001da	4c 8b cf	 mov	 r9, rdi
  001dd	4c 8d 45 c7	 lea	 r8, QWORD PTR $T3[rbp-137]
  001e1	48 8b d6	 mov	 rdx, rsi
  001e4	49 8b ce	 mov	 rcx, r14
  001e7	e8 00 00 00 00	 call	 ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
  001ec	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  001ed	48 8b 45 ef	 mov	 rax, QWORD PTR _Buf$[rbp-113]
  001f1	48 83 f8 10	 cmp	 rax, 16
  001f5	72 4c		 jb	 SHORT $LN353@do_put

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  001f7	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  001fa	48 8b 4d d7	 mov	 rcx, QWORD PTR _Buf$[rbp-137]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  001fe	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00204	72 38		 jb	 SHORT $LN348@do_put

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00206	f6 c1 1f	 test	 cl, 31
  00209	74 06		 je	 SHORT $LN349@do_put
  0020b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00210	cc		 int	 3
$LN349@do_put:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00211	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00215	48 3b c1	 cmp	 rax, rcx
  00218	72 06		 jb	 SHORT $LN350@do_put
  0021a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0021f	cc		 int	 3
$LN350@do_put:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00220	48 2b c8	 sub	 rcx, rax
  00223	48 83 f9 08	 cmp	 rcx, 8
  00227	73 06		 jae	 SHORT $LN351@do_put
  00229	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0022e	cc		 int	 3
$LN351@do_put:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0022f	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00233	76 06		 jbe	 SHORT $LN352@do_put
  00235	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0023a	cc		 int	 3
$LN352@do_put:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0023b	48 8b c8	 mov	 rcx, rax
$LN348@do_put:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0023e	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN353@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1368 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  00243	48 8b c6	 mov	 rax, rsi

; 1369 : 		}

  00246	48 8b 4d 07	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-137]
  0024a	48 33 cc	 xor	 rcx, rsp
  0024d	e8 00 00 00 00	 call	 __security_check_cookie
  00252	48 8b 9c 24 e0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+224]
  0025a	0f 28 b4 24 a0
	00 00 00	 movaps	 xmm6, XMMWORD PTR [rsp+160]
  00262	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00269	41 5f		 pop	 r15
  0026b	41 5e		 pop	 r14
  0026d	5f		 pop	 rdi
  0026e	5e		 pop	 rsi
  0026f	5d		 pop	 rbp
  00270	c3		 ret	 0
$LN396@do_put:
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z
_TEXT	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1325 : 		{	// put formatted double to _Dest

$LN394:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	41 56		 push	 r14
  00008	41 57		 push	 r15
  0000a	48 8d 68 b1	 lea	 rbp, QWORD PTR [rax-79]
  0000e	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00015	48 c7 45 bf fe
	ff ff ff	 mov	 QWORD PTR $T2[rbp-137], -2
  0001d	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00021	0f 29 70 c8	 movaps	 XMMWORD PTR [rax-56], xmm6
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 45 07	 mov	 QWORD PTR __$ArrayPad$[rbp-137], rax
  00033	49 8b f9	 mov	 rdi, r9
  00036	4d 8b f8	 mov	 r15, r8
  00039	48 8b f2	 mov	 rsi, rdx
  0003c	4c 8b f1	 mov	 r14, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0003f	41 ba 0f 00 00
	00		 mov	 r10d, 15
  00045	4c 89 55 ef	 mov	 QWORD PTR _Buf$[rbp-113], r10

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00049	45 33 c9	 xor	 r9d, r9d
  0004c	4c 89 4d e7	 mov	 QWORD PTR _Buf$[rbp-121], r9
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00050	44 88 4d d7	 mov	 BYTE PTR _Buf$[rbp-137], r9b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  00054	8b 47 18	 mov	 eax, DWORD PTR [rdi+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1329 : 			== ios_base::fixed;

  00057	25 00 30 00 00	 and	 eax, 12288		; 00003000H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 411  : 		return (_Prec);

  0005c	48 8b 5f 20	 mov	 rbx, QWORD PTR [rdi+32]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1330 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  00060	48 85 db	 test	 rbx, rbx
  00063	7f 0c		 jg	 SHORT $LN5@do_put
  00065	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  0006a	74 05		 je	 SHORT $LN5@do_put
  0006c	bb 06 00 00 00	 mov	 ebx, 6
$LN5@do_put:

; 1331 : 			? 6 : _Iosbase.precision();	// desired precision
; 1332 : 		size_t _Bufsize = (size_t)_Precision;

  00071	48 8b d3	 mov	 rdx, rbx
  00074	f2 0f 10 75 7f	 movsd	 xmm6, QWORD PTR _Val$[rbp-137]
  00079	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H

; 1333 : 		if (_Isfixed && 1e10 < _CSTD fabs(_Val))

  0007e	75 4d		 jne	 SHORT $LN2@do_put
  00080	0f 28 c6	 movaps	 xmm0, xmm6
  00083	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
  0008a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4202a05f20000000
  00092	76 39		 jbe	 SHORT $LN2@do_put

; 1334 : 			{	// f or F format
; 1335 : 			int _Ptwo;
; 1336 : 			(void)_CSTD frexp(_Val, &_Ptwo);

  00094	48 8d 55 b7	 lea	 rdx, QWORD PTR _Ptwo$1[rbp-137]
  00098	0f 28 c6	 movaps	 xmm0, xmm6
  0009b	e8 00 00 00 00	 call	 frexp

; 1337 : 			_Bufsize += _CSTD abs(_Ptwo) * 30103L / 100000L;

  000a0	8b 45 b7	 mov	 eax, DWORD PTR _Ptwo$1[rbp-137]
  000a3	99		 cdq
  000a4	33 c2		 xor	 eax, edx
  000a6	2b c2		 sub	 eax, edx
  000a8	69 c8 97 75 00
	00		 imul	 ecx, eax, 30103		; 00007597H
  000ae	b8 89 b5 f8 14	 mov	 eax, 351843721		; 14f8b589H
  000b3	f7 e9		 imul	 ecx
  000b5	c1 fa 0d	 sar	 edx, 13
  000b8	8b c2		 mov	 eax, edx
  000ba	c1 e8 1f	 shr	 eax, 31
  000bd	03 d0		 add	 edx, eax
  000bf	48 63 d2	 movsxd	 rdx, edx
  000c2	48 03 d3	 add	 rdx, rbx
  000c5	4c 8b 55 ef	 mov	 r10, QWORD PTR _Buf$[rbp-113]
  000c9	4c 8b 4d e7	 mov	 r9, QWORD PTR _Buf$[rbp-121]
$LN2@do_put:

; 1338 : 			}
; 1339 : 		_Buf.resize(_Bufsize + 50);	// add fudge factor

  000cd	48 83 c2 32	 add	 rdx, 50			; 00000032H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1762 : 		if (_Newsize <= this->_Mysize())

  000d1	49 3b d1	 cmp	 rdx, r9
  000d4	77 17		 ja	 SHORT $LN150@do_put

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d6	48 89 55 e7	 mov	 QWORD PTR _Buf$[rbp-121], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000da	48 8d 45 d7	 lea	 rax, QWORD PTR _Buf$[rbp-137]
  000de	49 83 fa 10	 cmp	 r10, 16
  000e2	48 0f 43 45 d7	 cmovae	 rax, QWORD PTR _Buf$[rbp-137]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000e7	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1764 : 		else

  000eb	eb 0f		 jmp	 SHORT $LN151@do_put
$LN150@do_put:

; 1765 : 			append(_Newsize - this->_Mysize(), _Ch);

  000ed	49 2b d1	 sub	 rdx, r9
  000f0	45 33 c0	 xor	 r8d, r8d
  000f3	48 8d 4d d7	 lea	 rcx, QWORD PTR _Buf$[rbp-137]
  000f7	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN151@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  000fc	8b 57 18	 mov	 edx, DWORD PTR [rdi+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1385 : 		*_Ptr++ = '%';

  000ff	c6 45 f7 25	 mov	 BYTE PTR _Fmt$[rbp-137], 37 ; 00000025H
  00103	48 8d 45 f8	 lea	 rax, QWORD PTR _Fmt$[rbp-136]

; 1386 : 
; 1387 : 		if (_Flags & ios_base::showpos)

  00107	f6 c2 20	 test	 dl, 32			; 00000020H
  0010a	74 08		 je	 SHORT $LN203@do_put

; 1388 : 			*_Ptr++ = '+';

  0010c	c6 45 f8 2b	 mov	 BYTE PTR _Fmt$[rbp-136], 43 ; 0000002bH
  00110	48 8d 45 f9	 lea	 rax, QWORD PTR _Fmt$[rbp-135]
$LN203@do_put:

; 1389 : 		if (_Flags & ios_base::showpoint)

  00114	f6 c2 10	 test	 dl, 16
  00117	74 06		 je	 SHORT $LN204@do_put

; 1390 : 			*_Ptr++ = '#';

  00119	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0011c	48 ff c0	 inc	 rax
$LN204@do_put:

; 1391 : 		*_Ptr++ = '.';

  0011f	66 c7 00 2e 2a	 mov	 WORD PTR [rax], 10798	; 00002a2eH

; 1392 : 		*_Ptr++ = '*';	// for precision argument
; 1393 : 		if (_Spec != '\0')
; 1394 : 			*_Ptr++ = _Spec;	// 'L' qualifier for long double only
; 1395 : 
; 1396 : 		ios_base::fmtflags _Ffl = _Flags & ios_base::floatfield;

  00124	8b ca		 mov	 ecx, edx
  00126	81 e1 00 30 00
	00		 and	 ecx, 12288		; 00003000H

; 1397 : 		if (_Flags & ios_base::uppercase)

  0012c	f6 c2 04	 test	 dl, 4
  0012f	74 23		 je	 SHORT $LN206@do_put
  00131	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00137	75 04		 jne	 SHORT $LN211@do_put
  00139	b2 66		 mov	 dl, 102			; 00000066H
  0013b	eb 44		 jmp	 SHORT $LN214@do_put
$LN211@do_put:
  0013d	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  00143	75 04		 jne	 SHORT $LN209@do_put
  00145	b2 41		 mov	 dl, 65			; 00000041H
  00147	eb 38		 jmp	 SHORT $LN214@do_put
$LN209@do_put:
  00149	ba 47 00 00 00	 mov	 edx, 71			; 00000047H
  0014e	44 8d 42 fe	 lea	 r8d, QWORD PTR [rdx-2]

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else

  00152	eb 23		 jmp	 SHORT $LN393@do_put
$LN206@do_put:
  00154	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H

; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0015a	75 04		 jne	 SHORT $LN215@do_put
  0015c	b2 66		 mov	 dl, 102			; 00000066H
  0015e	eb 21		 jmp	 SHORT $LN214@do_put
$LN215@do_put:
  00160	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  00166	75 04		 jne	 SHORT $LN213@do_put
  00168	b2 61		 mov	 dl, 97			; 00000061H
  0016a	eb 15		 jmp	 SHORT $LN214@do_put
$LN213@do_put:
  0016c	ba 67 00 00 00	 mov	 edx, 103		; 00000067H
  00171	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
$LN393@do_put:
  00177	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0017d	41 0f 44 d0	 cmove	 edx, r8d
$LN214@do_put:
  00181	88 50 02	 mov	 BYTE PTR [rax+2], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  00184	c6 40 03 00	 mov	 BYTE PTR [rax+3], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00188	48 8d 4d d7	 lea	 rcx, QWORD PTR _Buf$[rbp-137]
  0018c	48 83 7d ef 10	 cmp	 QWORD PTR _Buf$[rbp-113], 16
  00191	48 0f 43 4d d7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-137]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1341 : 		int _Ngen = _CSTD sprintf_s((char *)_Buf.c_str(), _Buf.size(),

  00196	f2 0f 11 74 24
	20		 movsd	 QWORD PTR [rsp+32], xmm6
  0019c	44 8b cb	 mov	 r9d, ebx
  0019f	4c 8d 45 f7	 lea	 r8, QWORD PTR _Fmt$[rbp-137]
  001a3	48 8b 55 e7	 mov	 rdx, QWORD PTR _Buf$[rbp-121]
  001a7	e8 00 00 00 00	 call	 sprintf_s

; 1344 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001ac	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  001b0	0f 29 45 c7	 movaps	 XMMWORD PTR $T3[rbp-137], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  001b4	48 8d 4d d7	 lea	 rcx, QWORD PTR _Buf$[rbp-137]
  001b8	48 83 7d ef 10	 cmp	 QWORD PTR _Buf$[rbp-113], 16
  001bd	48 0f 43 4d d7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-137]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1344 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001c2	48 98		 cdqe
  001c4	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001c9	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001ce	0f b6 45 77	 movzx	 eax, BYTE PTR _Fill$[rbp-137]
  001d2	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  001d6	4c 8b cf	 mov	 r9, rdi
  001d9	4c 8d 45 c7	 lea	 r8, QWORD PTR $T3[rbp-137]
  001dd	48 8b d6	 mov	 rdx, rsi
  001e0	49 8b ce	 mov	 rcx, r14
  001e3	e8 00 00 00 00	 call	 ?_Fput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Fput
  001e8	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  001e9	48 8b 45 ef	 mov	 rax, QWORD PTR _Buf$[rbp-113]
  001ed	48 83 f8 10	 cmp	 rax, 16
  001f1	72 4c		 jb	 SHORT $LN349@do_put

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  001f3	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  001f6	48 8b 4d d7	 mov	 rcx, QWORD PTR _Buf$[rbp-137]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  001fa	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00200	72 38		 jb	 SHORT $LN344@do_put

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00202	f6 c1 1f	 test	 cl, 31
  00205	74 06		 je	 SHORT $LN345@do_put
  00207	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0020c	cc		 int	 3
$LN345@do_put:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0020d	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00211	48 3b c1	 cmp	 rax, rcx
  00214	72 06		 jb	 SHORT $LN346@do_put
  00216	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0021b	cc		 int	 3
$LN346@do_put:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0021c	48 2b c8	 sub	 rcx, rax
  0021f	48 83 f9 08	 cmp	 rcx, 8
  00223	73 06		 jae	 SHORT $LN347@do_put
  00225	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0022a	cc		 int	 3
$LN347@do_put:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0022b	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0022f	76 06		 jbe	 SHORT $LN348@do_put
  00231	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00236	cc		 int	 3
$LN348@do_put:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00237	48 8b c8	 mov	 rcx, rax
$LN344@do_put:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0023a	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN349@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1344 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  0023f	48 8b c6	 mov	 rax, rsi

; 1345 : 		}

  00242	48 8b 4d 07	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-137]
  00246	48 33 cc	 xor	 rcx, rsp
  00249	e8 00 00 00 00	 call	 __security_check_cookie
  0024e	48 8b 9c 24 e0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+224]
  00256	0f 28 b4 24 a0
	00 00 00	 movaps	 xmm6, XMMWORD PTR [rsp+160]
  0025e	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00265	41 5f		 pop	 r15
  00267	41 5e		 pop	 r14
  00269	5f		 pop	 rdi
  0026a	5e		 pop	 rsi
  0026b	5d		 pop	 rbp
  0026c	c3		 ret	 0
$LN392@do_put:
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 144
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Val$ = 264
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1315 : 		{	// put formatted unsigned long long to _Dest

$LN16:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00021	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00024	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  00029	41 8b 51 18	 mov	 edx, DWORD PTR [r9+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1489 : 		*_Ptr++ = '%';

  0002d	48 8d 44 24 51	 lea	 rax, QWORD PTR _Fmt$[rsp+1]

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00032	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00037	49 8b d9	 mov	 rbx, r9
  0003a	48 8b f1	 mov	 rsi, rcx

; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	f6 c2 20	 test	 dl, 32			; 00000020H
  00040	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00042	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00047	48 8d 44 24 52	 lea	 rax, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004c	f6 c2 08	 test	 dl, 8
  0004f	74 06		 je	 SHORT $LN8@do_put

; 1494 : 			*_Ptr++ = '#';

  00051	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  00054	48 ff c0	 inc	 rax
$LN8@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00057	8b ca		 mov	 ecx, edx
  00059	66 c7 00 49 36	 mov	 WORD PTR [rax], 13897	; 00003649H
  0005e	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H
  00064	c6 40 02 34	 mov	 BYTE PTR [rax+2], 52	; 00000034H
  00068	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0006e	75 04		 jne	 SHORT $LN13@do_put
  00070	b2 6f		 mov	 dl, 111			; 0000006fH
  00072	eb 17		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  00074	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  0007a	74 04		 je	 SHORT $LN11@do_put
  0007c	b2 75		 mov	 dl, 117			; 00000075H
  0007e	eb 0b		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00080	c0 e2 03	 shl	 dl, 3
  00083	f6 d2		 not	 dl
  00085	80 e2 20	 and	 dl, 32			; 00000020H
  00088	80 ca 58	 or	 dl, 88			; 00000058H
$LN12@do_put:

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0008b	4c 8b 8c 24 f8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00093	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00098	88 50 03	 mov	 BYTE PTR [rax+3], dl

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009b	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  000a0	ba 40 00 00 00	 mov	 edx, 64			; 00000040H

; 1509 : 		*_Ptr = '\0';

  000a5	c6 40 04 00	 mov	 BYTE PTR [rax+4], 0

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  000a9	e8 00 00 00 00	 call	 sprintf_s
  000ae	48 63 c8	 movsxd	 rcx, eax
  000b1	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b6	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000bb	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000c0	0f b6 8c 24 f0
	00 00 00	 movzx	 ecx, BYTE PTR _Fill$[rsp]
  000c8	4c 8b cb	 mov	 r9, rbx
  000cb	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d0	48 8b d7	 mov	 rdx, rdi
  000d3	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  000d7	48 8b ce	 mov	 rcx, rsi
  000da	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000df	48 8b c7	 mov	 rax, rdi

; 1319 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "Lu",
; 1320 : 				_Iosbase.flags()), _Val)));
; 1321 : 		}

  000e2	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000ea	48 33 cc	 xor	 rcx, rsp
  000ed	e8 00 00 00 00	 call	 __security_check_cookie
  000f2	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000f9	5f		 pop	 rdi
  000fa	5e		 pop	 rsi
  000fb	5b		 pop	 rbx
  000fc	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1305 : 		{	// put formatted long long to _Dest

$LN16:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00021	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00024	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  00029	41 8b 51 18	 mov	 edx, DWORD PTR [r9+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1489 : 		*_Ptr++ = '%';

  0002d	48 8d 44 24 51	 lea	 rax, QWORD PTR _Fmt$[rsp+1]

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00032	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00037	49 8b d9	 mov	 rbx, r9
  0003a	48 8b f1	 mov	 rsi, rcx

; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	f6 c2 20	 test	 dl, 32			; 00000020H
  00040	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00042	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00047	48 8d 44 24 52	 lea	 rax, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004c	f6 c2 08	 test	 dl, 8
  0004f	74 06		 je	 SHORT $LN8@do_put

; 1494 : 			*_Ptr++ = '#';

  00051	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  00054	48 ff c0	 inc	 rax
$LN8@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00057	8b ca		 mov	 ecx, edx
  00059	66 c7 00 49 36	 mov	 WORD PTR [rax], 13897	; 00003649H
  0005e	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H
  00064	c6 40 02 34	 mov	 BYTE PTR [rax+2], 52	; 00000034H
  00068	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0006e	75 04		 jne	 SHORT $LN13@do_put
  00070	b2 6f		 mov	 dl, 111			; 0000006fH
  00072	eb 17		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  00074	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  0007a	74 04		 je	 SHORT $LN11@do_put
  0007c	b2 64		 mov	 dl, 100			; 00000064H
  0007e	eb 0b		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00080	c0 e2 03	 shl	 dl, 3
  00083	f6 d2		 not	 dl
  00085	80 e2 20	 and	 dl, 32			; 00000020H
  00088	80 ca 58	 or	 dl, 88			; 00000058H
$LN12@do_put:

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0008b	4c 8b 8c 24 f8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00093	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00098	88 50 03	 mov	 BYTE PTR [rax+3], dl

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009b	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  000a0	ba 40 00 00 00	 mov	 edx, 64			; 00000040H

; 1509 : 		*_Ptr = '\0';

  000a5	c6 40 04 00	 mov	 BYTE PTR [rax+4], 0

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  000a9	e8 00 00 00 00	 call	 sprintf_s
  000ae	48 63 c8	 movsxd	 rcx, eax
  000b1	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b6	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000bb	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000c0	0f b6 8c 24 f0
	00 00 00	 movzx	 ecx, BYTE PTR _Fill$[rsp]
  000c8	4c 8b cb	 mov	 r9, rbx
  000cb	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d0	48 8b d7	 mov	 rdx, rdi
  000d3	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  000d7	48 8b ce	 mov	 rcx, rsi
  000da	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000df	48 8b c7	 mov	 rax, rdi

; 1309 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "Ld",
; 1310 : 				_Iosbase.flags()), _Val)));
; 1311 : 		}

  000e2	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000ea	48 33 cc	 xor	 rcx, rsp
  000ed	e8 00 00 00 00	 call	 __security_check_cookie
  000f2	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000f9	5f		 pop	 rdi
  000fa	5e		 pop	 rsi
  000fb	5b		 pop	 rbx
  000fc	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1295 : 		{	// put formatted unsigned long to _Dest

$LN17:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  00021	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1295 : 		{	// put formatted unsigned long to _Dest

  00025	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00028	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H

; 1295 : 		{	// put formatted unsigned long to _Dest

  0002d	49 8b d9	 mov	 rbx, r9

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00030	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00035	48 8b f1	 mov	 rsi, rcx

; 1489 : 		*_Ptr++ = '%';

  00038	48 8d 54 24 51	 lea	 rdx, QWORD PTR _Fmt$[rsp+1]

; 1490 : 
; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	a8 20		 test	 al, 32			; 00000020H
  0003f	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00041	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00046	48 8d 54 24 52	 lea	 rdx, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004b	a8 08		 test	 al, 8
  0004d	74 06		 je	 SHORT $LN15@do_put

; 1494 : 			*_Ptr++ = '#';

  0004f	c6 02 23	 mov	 BYTE PTR [rdx], 35	; 00000023H
  00052	48 ff c2	 inc	 rdx
$LN15@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00055	8b c8		 mov	 ecx, eax
  00057	c6 02 6c	 mov	 BYTE PTR [rdx], 108	; 0000006cH
  0005a	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H
  00060	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00066	75 04		 jne	 SHORT $LN13@do_put
  00068	b0 6f		 mov	 al, 111			; 0000006fH
  0006a	eb 15		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  0006c	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  00072	74 04		 je	 SHORT $LN11@do_put
  00074	b0 75		 mov	 al, 117			; 00000075H
  00076	eb 09		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00078	c0 e0 03	 shl	 al, 3
  0007b	f6 d0		 not	 al
  0007d	24 20		 and	 al, 32			; 00000020H
  0007f	0c 58		 or	 al, 88			; 00000058H
$LN12@do_put:

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00081	44 8b 8c 24 f8
	00 00 00	 mov	 r9d, DWORD PTR _Val$[rsp]
  00089	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0008e	88 42 01	 mov	 BYTE PTR [rdx+1], al

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00091	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]

; 1509 : 		*_Ptr = '\0';

  00096	c6 42 02 00	 mov	 BYTE PTR [rdx+2], 0

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0009f	e8 00 00 00 00	 call	 sprintf_s
  000a4	48 63 c8	 movsxd	 rcx, eax
  000a7	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000ac	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000b1	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000b6	0f b6 8c 24 f0
	00 00 00	 movzx	 ecx, BYTE PTR _Fill$[rsp]
  000be	4c 8b cb	 mov	 r9, rbx
  000c1	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c6	48 8b d7	 mov	 rdx, rdi
  000c9	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  000cd	48 8b ce	 mov	 rcx, rsi
  000d0	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000d5	48 8b c7	 mov	 rax, rdi

; 1299 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "lu",
; 1300 : 				_Iosbase.flags()), _Val)));
; 1301 : 		}

  000d8	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e0	48 33 cc	 xor	 rcx, rsp
  000e3	e8 00 00 00 00	 call	 __security_check_cookie
  000e8	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000ef	5f		 pop	 rdi
  000f0	5e		 pop	 rsi
  000f1	5b		 pop	 rbx
  000f2	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1285 : 		{	// put formatted long to _Dest

$LN17:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  00021	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1285 : 		{	// put formatted long to _Dest

  00025	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00028	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H

; 1285 : 		{	// put formatted long to _Dest

  0002d	49 8b d9	 mov	 rbx, r9

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00030	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00035	48 8b f1	 mov	 rsi, rcx

; 1489 : 		*_Ptr++ = '%';

  00038	48 8d 54 24 51	 lea	 rdx, QWORD PTR _Fmt$[rsp+1]

; 1490 : 
; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	a8 20		 test	 al, 32			; 00000020H
  0003f	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00041	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00046	48 8d 54 24 52	 lea	 rdx, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004b	a8 08		 test	 al, 8
  0004d	74 06		 je	 SHORT $LN15@do_put

; 1494 : 			*_Ptr++ = '#';

  0004f	c6 02 23	 mov	 BYTE PTR [rdx], 35	; 00000023H
  00052	48 ff c2	 inc	 rdx
$LN15@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00055	8b c8		 mov	 ecx, eax
  00057	c6 02 6c	 mov	 BYTE PTR [rdx], 108	; 0000006cH
  0005a	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H
  00060	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00066	75 04		 jne	 SHORT $LN13@do_put
  00068	b0 6f		 mov	 al, 111			; 0000006fH
  0006a	eb 15		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  0006c	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  00072	74 04		 je	 SHORT $LN11@do_put
  00074	b0 64		 mov	 al, 100			; 00000064H
  00076	eb 09		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00078	c0 e0 03	 shl	 al, 3
  0007b	f6 d0		 not	 al
  0007d	24 20		 and	 al, 32			; 00000020H
  0007f	0c 58		 or	 al, 88			; 00000058H
$LN12@do_put:

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00081	44 8b 8c 24 f8
	00 00 00	 mov	 r9d, DWORD PTR _Val$[rsp]
  00089	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0008e	88 42 01	 mov	 BYTE PTR [rdx+1], al

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00091	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]

; 1509 : 		*_Ptr = '\0';

  00096	c6 42 02 00	 mov	 BYTE PTR [rdx+2], 0

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0009f	e8 00 00 00 00	 call	 sprintf_s
  000a4	48 63 c8	 movsxd	 rcx, eax
  000a7	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000ac	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000b1	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000b6	0f b6 8c 24 f0
	00 00 00	 movzx	 ecx, BYTE PTR _Fill$[rsp]
  000be	4c 8b cb	 mov	 r9, rbx
  000c1	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c6	48 8b d7	 mov	 rdx, rdi
  000c9	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  000cd	48 8b ce	 mov	 rcx, rsi
  000d0	e8 00 00 00 00	 call	 ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Iput
  000d5	48 8b c7	 mov	 rax, rdi

; 1289 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "ld",
; 1290 : 				_Iosbase.flags()), _Val)));
; 1291 : 		}

  000d8	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e0	48 33 cc	 xor	 rcx, rsp
  000e3	e8 00 00 00 00	 call	 __security_check_cookie
  000e8	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000ef	5f		 pop	 rdi
  000f0	5e		 pop	 rsi
  000f1	5b		 pop	 rbx
  000f2	c3		 ret	 0
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
__$ReturnUdt$GSCopy$1$ = 64
$T6 = 72
_Str$7 = 80
$T8 = 112
$T9 = 112
__$ArrayPad$ = 144
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put, COMDAT

; 1255 : 		{	// put formatted bool to _Dest

$LN719:
  00000	40 55		 push	 rbp
  00002	53		 push	 rbx
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 54		 push	 r12
  00007	41 55		 push	 r13
  00009	41 56		 push	 r14
  0000b	41 57		 push	 r15
  0000d	48 8d 6c 24 f1	 lea	 rbp, QWORD PTR [rsp-15]
  00012	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H
  00019	48 c7 45 af fe
	ff ff ff	 mov	 QWORD PTR $T6[rbp-153], -2
  00021	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00028	48 33 c4	 xor	 rax, rsp
  0002b	48 89 45 f7	 mov	 QWORD PTR __$ArrayPad$[rbp-153], rax
  0002f	4d 8b e9	 mov	 r13, r9
  00032	4d 8b e0	 mov	 r12, r8
  00035	48 8b da	 mov	 rbx, rdx
  00038	48 89 55 a7	 mov	 QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-153], rdx
  0003c	44 0f b6 7d 77	 movzx	 r15d, BYTE PTR _Fill$[rbp-153]

; 1256 : 		_DEBUG_POINTER(_Dest);
; 1257 : 		if (!(_Iosbase.flags() & ios_base::boolalpha))

  00041	41 f7 41 18 00
	40 00 00	 test	 DWORD PTR [r9+24], 16384 ; 00004000H
  00049	75 28		 jne	 SHORT $LN2@do_put

; 1258 : 			return (do_put(_Dest, _Iosbase, _Fill, (long)_Val));

  0004b	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  0004f	0f 29 45 97	 movaps	 XMMWORD PTR $T4[rbp-153], xmm0
  00053	4c 8b 11	 mov	 r10, QWORD PTR [rcx]
  00056	0f b6 55 7f	 movzx	 edx, BYTE PTR _Val$[rbp-153]
  0005a	89 54 24 28	 mov	 DWORD PTR [rsp+40], edx
  0005e	44 88 7c 24 20	 mov	 BYTE PTR [rsp+32], r15b
  00063	4c 8d 45 97	 lea	 r8, QWORD PTR $T4[rbp-153]
  00067	48 8b d3	 mov	 rdx, rbx
  0006a	41 ff 52 48	 call	 QWORD PTR [r10+72]
  0006e	e9 21 03 00 00	 jmp	 $LN663@do_put
$LN2@do_put:

; 1259 : 		else
; 1260 : 			{	// put "false" or "true"
; 1261 : 			const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  00073	48 8d 55 97	 lea	 rdx, QWORD PTR $T5[rbp-153]
  00077	49 8b cd	 mov	 rcx, r13
  0007a	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  0007f	90		 npad	 1
  00080	48 8b c8	 mov	 rcx, rax
  00083	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<char> >
  00088	48 8b d8	 mov	 rbx, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  0008b	48 8b 4d 9f	 mov	 rcx, QWORD PTR $T5[rbp-145]
  0008f	48 85 c9	 test	 rcx, rcx
  00092	74 1a		 je	 SHORT $LN19@do_put

; 432  : 			delete _Ptr->_Decref();

  00094	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00097	ff 52 10	 call	 QWORD PTR [rdx+16]
  0009a	48 85 c0	 test	 rax, rax
  0009d	74 0f		 je	 SHORT $LN19@do_put
  0009f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000a2	ba 01 00 00 00	 mov	 edx, 1
  000a7	48 8b c8	 mov	 rcx, rax
  000aa	41 ff 10	 call	 QWORD PTR [r8]
  000ad	90		 npad	 1
$LN19@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000ae	48 c7 45 cf 0f
	00 00 00	 mov	 QWORD PTR _Str$7[rbp-129], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000b6	48 c7 45 c7 00
	00 00 00	 mov	 QWORD PTR _Str$7[rbp-137], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000be	c6 45 b7 00	 mov	 BYTE PTR _Str$7[rbp-153], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1264 : 				_Str.assign(_Punct_fac.truename());

  000c2	48 8d 55 d7	 lea	 rdx, QWORD PTR $T9[rbp-153]
  000c6	48 8b cb	 mov	 rcx, rbx

; 1262 : 			_Mystr _Str;
; 1263 : 			if (_Val)

  000c9	80 7d 7f 00	 cmp	 BYTE PTR _Val$[rbp-153], 0
  000cd	74 67		 je	 SHORT $LN4@do_put

; 1264 : 				_Str.assign(_Punct_fac.truename());

  000cf	e8 00 00 00 00	 call	 ?truename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::truename
  000d4	48 8b d0	 mov	 rdx, rax
  000d7	48 8d 4d b7	 lea	 rcx, QWORD PTR _Str$7[rbp-153]
  000db	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000e0	48 8b 45 ef	 mov	 rax, QWORD PTR $T9[rbp-129]
  000e4	48 83 f8 10	 cmp	 rax, 16
  000e8	0f 82 af 00 00
	00		 jb	 $LN367@do_put

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000ee	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  000f1	48 8b 4d d7	 mov	 rcx, QWORD PTR $T9[rbp-153]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000f5	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000fb	0f 82 97 00 00
	00		 jb	 $LN362@do_put

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00101	f6 c1 1f	 test	 cl, 31
  00104	74 06		 je	 SHORT $LN236@do_put
  00106	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0010b	cc		 int	 3
$LN236@do_put:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0010c	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00110	48 3b c1	 cmp	 rax, rcx
  00113	72 06		 jb	 SHORT $LN237@do_put
  00115	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0011a	cc		 int	 3
$LN237@do_put:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0011b	48 2b c8	 sub	 rcx, rax
  0011e	48 83 f9 08	 cmp	 rcx, 8
  00122	73 06		 jae	 SHORT $LN238@do_put
  00124	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00129	cc		 int	 3
$LN238@do_put:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0012a	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0012e	76 65		 jbe	 SHORT $LN366@do_put
  00130	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00135	cc		 int	 3
$LN4@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1266 : 				_Str.assign(_Punct_fac.falsename());

  00136	e8 00 00 00 00	 call	 ?falsename@?$numpunct@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<char>::falsename
  0013b	48 8b d0	 mov	 rdx, rax
  0013e	48 8d 4d b7	 lea	 rcx, QWORD PTR _Str$7[rbp-153]
  00142	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00147	48 8b 45 ef	 mov	 rax, QWORD PTR $T8[rbp-129]
  0014b	48 83 f8 10	 cmp	 rax, 16
  0014f	72 4c		 jb	 SHORT $LN367@do_put

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00151	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00154	48 8b 4d d7	 mov	 rcx, QWORD PTR $T8[rbp-153]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00158	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0015e	72 38		 jb	 SHORT $LN362@do_put

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00160	f6 c1 1f	 test	 cl, 31
  00163	74 06		 je	 SHORT $LN363@do_put
  00165	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0016a	cc		 int	 3
$LN363@do_put:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0016b	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0016f	48 3b c1	 cmp	 rax, rcx
  00172	72 06		 jb	 SHORT $LN364@do_put
  00174	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00179	cc		 int	 3
$LN364@do_put:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0017a	48 2b c8	 sub	 rcx, rax
  0017d	48 83 f9 08	 cmp	 rcx, 8
  00181	73 06		 jae	 SHORT $LN365@do_put
  00183	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00188	cc		 int	 3
$LN365@do_put:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00189	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0018d	76 06		 jbe	 SHORT $LN366@do_put
  0018f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00194	cc		 int	 3
$LN366@do_put:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00195	48 8b c8	 mov	 rcx, rax
$LN362@do_put:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00198	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN367@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 423  : 		return (_Wide);

  0019d	49 8b 7d 28	 mov	 rdi, QWORD PTR [r13+40]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1269 : 				|| (size_t)_Iosbase.width() <= _Str.size()

  001a1	48 8b 75 c7	 mov	 rsi, QWORD PTR _Str$7[rbp-137]
  001a5	48 85 ff	 test	 rdi, rdi
  001a8	7e 0a		 jle	 SHORT $LN8@do_put
  001aa	48 3b fe	 cmp	 rdi, rsi
  001ad	76 05		 jbe	 SHORT $LN8@do_put
  001af	48 2b fe	 sub	 rdi, rsi
  001b2	eb 02		 jmp	 SHORT $LN9@do_put
$LN8@do_put:
  001b4	33 ff		 xor	 edi, edi
$LN9@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  001b6	41 8b 45 18	 mov	 eax, DWORD PTR [r13+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1272 : 			if ((_Iosbase.flags() & ios_base::adjustfield) != ios_base::left)

  001ba	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  001bf	83 f8 40	 cmp	 eax, 64			; 00000040H
  001c2	74 71		 je	 SHORT $LN6@do_put

; 1273 : 				{	// put leading fill
; 1274 : 				_Dest = _Rep(_Dest, _Fill, _Fillcount);

  001c4	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  001c9	0f 29 45 97	 movaps	 XMMWORD PTR $T3[rbp-153], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  001cd	48 85 ff	 test	 rdi, rdi
  001d0	74 5c		 je	 SHORT $LN444@do_put
  001d2	48 8b 5d 9f	 mov	 rbx, QWORD PTR $T3[rbp-145]
$LL445@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  001d6	48 85 db	 test	 rbx, rbx
  001d9	74 41		 je	 SHORT $LN453@do_put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  001db	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  001df	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  001e3	74 25		 je	 SHORT $LN457@do_put
  001e5	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  001e9	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  001eb	85 c0		 test	 eax, eax
  001ed	7e 1b		 jle	 SHORT $LN457@do_put

; 308  : 		--*_IPcount;

  001ef	ff c8		 dec	 eax
  001f1	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  001f3	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  001f7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  001fa	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  001fe	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00201	44 88 3a	 mov	 BYTE PTR [rdx], r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00204	41 0f b6 c7	 movzx	 eax, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00208	eb 0d		 jmp	 SHORT $LN458@do_put
$LN457@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0020a	41 0f b6 d7	 movzx	 edx, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0020e	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00211	48 8b cb	 mov	 rcx, rbx
  00214	ff 50 18	 call	 QWORD PTR [rax+24]
$LN458@do_put:
  00217	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0021a	75 04		 jne	 SHORT $LN443@do_put
$LN453@do_put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0021c	c6 45 97 01	 mov	 BYTE PTR $T3[rbp-153], 1
$LN443@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00220	48 83 ef 01	 sub	 rdi, 1
  00224	75 b0		 jne	 SHORT $LL445@do_put
  00226	48 8b 75 c7	 mov	 rsi, QWORD PTR _Str$7[rbp-137]
  0022a	0f 28 45 97	 movaps	 xmm0, XMMWORD PTR $T3[rbp-153]
$LN444@do_put:

; 1273 : 				{	// put leading fill
; 1274 : 				_Dest = _Rep(_Dest, _Fill, _Fillcount);

  0022e	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0

; 1275 : 				_Fillcount = 0;

  00233	33 ff		 xor	 edi, edi
$LN6@do_put:

; 1276 : 				}
; 1277 : 			_Dest = _Put(_Dest, _Str.c_str(), _Str.size());	// put field

  00235	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  0023a	0f 29 45 97	 movaps	 XMMWORD PTR $T2[rbp-153], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0023e	4c 8d 75 b7	 lea	 r14, QWORD PTR _Str$7[rbp-153]
  00242	48 8b 4d b7	 mov	 rcx, QWORD PTR _Str$7[rbp-153]
  00246	48 8b 45 cf	 mov	 rax, QWORD PTR _Str$7[rbp-129]
  0024a	48 83 f8 10	 cmp	 rax, 16
  0024e	4c 0f 43 f1	 cmovae	 r14, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00252	48 85 f6	 test	 rsi, rsi
  00255	74 6c		 je	 SHORT $LN509@do_put
  00257	48 8b 5d 9f	 mov	 rbx, QWORD PTR $T2[rbp-145]
  0025b	0f 1f 44 00 00	 npad	 5
$LL510@do_put:

; 1577 : 			*_Dest = *_Ptr;

  00260	45 0f b6 06	 movzx	 r8d, BYTE PTR [r14]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00264	48 85 db	 test	 rbx, rbx
  00267	74 41		 je	 SHORT $LN518@do_put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00269	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  0026d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00271	74 25		 je	 SHORT $LN522@do_put
  00273	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00277	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00279	85 c0		 test	 eax, eax
  0027b	7e 1b		 jle	 SHORT $LN522@do_put

; 308  : 		--*_IPcount;

  0027d	ff c8		 dec	 eax
  0027f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00281	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00285	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00288	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0028c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0028f	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00292	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00296	eb 0d		 jmp	 SHORT $LN523@do_put
$LN522@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00298	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0029c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0029f	48 8b cb	 mov	 rcx, rbx
  002a2	ff 50 18	 call	 QWORD PTR [rax+24]
$LN523@do_put:
  002a5	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  002a8	75 04		 jne	 SHORT $LN508@do_put
$LN518@do_put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  002aa	c6 45 97 01	 mov	 BYTE PTR $T2[rbp-153], 1
$LN508@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  002ae	49 ff c6	 inc	 r14
  002b1	48 83 ee 01	 sub	 rsi, 1
  002b5	75 a9		 jne	 SHORT $LL510@do_put
  002b7	48 8b 45 cf	 mov	 rax, QWORD PTR _Str$7[rbp-129]
  002bb	48 8b 4d b7	 mov	 rcx, QWORD PTR _Str$7[rbp-153]
  002bf	0f 28 45 97	 movaps	 xmm0, XMMWORD PTR $T2[rbp-153]
$LN509@do_put:

; 1276 : 				}
; 1277 : 			_Dest = _Put(_Dest, _Str.c_str(), _Str.size());	// put field

  002c3	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  002c8	49 c7 45 28 00
	00 00 00	 mov	 QWORD PTR [r13+40], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1279 : 			return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  002d0	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  002d5	0f 29 45 97	 movaps	 XMMWORD PTR $T1[rbp-153], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  002d9	48 85 ff	 test	 rdi, rdi
  002dc	74 60		 je	 SHORT $LN546@do_put
  002de	48 8b 5d 9f	 mov	 rbx, QWORD PTR $T1[rbp-145]
$LL547@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  002e2	48 85 db	 test	 rbx, rbx
  002e5	74 41		 je	 SHORT $LN555@do_put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  002e7	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  002eb	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  002ef	74 25		 je	 SHORT $LN559@do_put
  002f1	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  002f5	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  002f7	85 c0		 test	 eax, eax
  002f9	7e 1b		 jle	 SHORT $LN559@do_put

; 308  : 		--*_IPcount;

  002fb	ff c8		 dec	 eax
  002fd	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  002ff	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00303	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00306	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0030a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0030d	44 88 3a	 mov	 BYTE PTR [rdx], r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00310	41 0f b6 c7	 movzx	 eax, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00314	eb 0d		 jmp	 SHORT $LN560@do_put
$LN559@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00316	41 0f b6 d7	 movzx	 edx, r15b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0031a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0031d	48 8b cb	 mov	 rcx, rbx
  00320	ff 50 18	 call	 QWORD PTR [rax+24]
$LN560@do_put:
  00323	83 f8 ff	 cmp	 eax, -1

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00326	75 04		 jne	 SHORT $LN545@do_put
$LN555@do_put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00328	c6 45 97 01	 mov	 BYTE PTR $T1[rbp-153], 1
$LN545@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0032c	48 83 ef 01	 sub	 rdi, 1
  00330	75 b0		 jne	 SHORT $LL547@do_put
  00332	48 8b 45 cf	 mov	 rax, QWORD PTR _Str$7[rbp-129]
  00336	48 8b 4d b7	 mov	 rcx, QWORD PTR _Str$7[rbp-153]
  0033a	0f 28 45 97	 movaps	 xmm0, XMMWORD PTR $T1[rbp-153]
$LN546@do_put:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  0033e	48 8b 5d a7	 mov	 rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-153]
  00342	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00345	48 83 f8 10	 cmp	 rax, 16
  00349	72 49		 jb	 SHORT $LN663@do_put

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0034b	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0034e	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00354	72 39		 jb	 SHORT $LN658@do_put

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00356	f6 45 b7 1f	 test	 BYTE PTR _Str$7[rbp-153], 31
  0035a	74 06		 je	 SHORT $LN659@do_put
  0035c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00361	cc		 int	 3
$LN659@do_put:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00362	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00366	48 3b c1	 cmp	 rax, rcx
  00369	72 06		 jb	 SHORT $LN660@do_put
  0036b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00370	cc		 int	 3
$LN660@do_put:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00371	48 2b c8	 sub	 rcx, rax
  00374	48 83 f9 08	 cmp	 rcx, 8
  00378	73 06		 jae	 SHORT $LN661@do_put
  0037a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0037f	cc		 int	 3
$LN661@do_put:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00380	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00384	76 06		 jbe	 SHORT $LN662@do_put
  00386	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0038b	cc		 int	 3
$LN662@do_put:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0038c	48 8b c8	 mov	 rcx, rax
$LN658@do_put:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0038f	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN663@do_put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1279 : 			return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  00394	48 8b c3	 mov	 rax, rbx

; 1280 : 			}
; 1281 : 		}

  00397	48 8b 4d f7	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-153]
  0039b	48 33 cc	 xor	 rcx, rsp
  0039e	e8 00 00 00 00	 call	 __security_check_cookie
  003a3	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  003aa	41 5f		 pop	 r15
  003ac	41 5e		 pop	 r14
  003ae	41 5d		 pop	 r13
  003b0	41 5c		 pop	 r12
  003b2	5f		 pop	 rdi
  003b3	5e		 pop	 rsi
  003b4	5b		 pop	 rbx
  003b5	5d		 pop	 rbp
  003b6	c3		 ret	 0
$LN718@do_put:
?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
__$ReturnUdt$GSCopy$1$ = 64
$T6 = 72
_Str$7 = 80
$T8 = 112
$T9 = 112
__$ArrayPad$ = 144
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR $T5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
__$ReturnUdt$GSCopy$1$ = 64
$T6 = 72
_Str$7 = 80
$T8 = 112
$T9 = 112
__$ArrayPad$ = 144
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$4@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$4
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
__$ReturnUdt$GSCopy$1$ = 64
$T6 = 72
_Str$7 = 80
$T8 = 112
$T9 = 112
__$ArrayPad$ = 144
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
  00011	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR _Str$7[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
__$ReturnUdt$GSCopy$1$ = 64
$T6 = 72
_Str$7 = 80
$T8 = 112
$T9 = 112
__$ArrayPad$ = 144
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR $T5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
__$ReturnUdt$GSCopy$1$ = 64
$T6 = 72
_Str$7 = 80
$T8 = 112
$T9 = 112
__$ArrayPad$ = 144
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$4@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
__$ReturnUdt$GSCopy$1$ = 64
$T6 = 72
_Str$7 = 80
$T8 = 112
$T9 = 112
__$ArrayPad$ = 144
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
  00011	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR _Str$7[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::do_put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
__$ReturnUdt$ = 88
_Dest$ = 96
_Iosbase$ = 104
_Fill$ = 112
_Val$ = 120
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put, COMDAT

; 1230 : 		{	// put formatted unsigned long long to _Dest

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 1231 : 		return (do_put(_Dest, _Iosbase, _Fill, _Val));

  00006	48 8b 44 24 78	 mov	 rax, QWORD PTR _Val$[rsp]
  0000b	48 8b da	 mov	 rbx, rdx
  0000e	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00012	4c 8b 11	 mov	 r10, QWORD PTR [rcx]
  00015	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T1[rsp]
  0001a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0001f	0f b6 44 24 70	 movzx	 eax, BYTE PTR _Fill$[rsp]
  00024	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00028	0f 29 44 24 30	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  0002d	41 ff 52 30	 call	 QWORD PTR [r10+48]
  00031	48 8b c3	 mov	 rax, rbx

; 1232 : 		}

  00034	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00038	5b		 pop	 rbx
  00039	c3		 ret	 0
?put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Lobj$ = 16
_Refs$ = 24
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT

; 1197 : 		{	// construct from specified locale

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00007	44 89 41 08	 mov	 DWORD PTR [rcx+8], r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1197 : 		{	// construct from specified locale

  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1198 : 		_Init(_Lobj);
; 1199 : 		}

  0000e	48 8b c1	 mov	 rax, rcx
  00011	c3		 ret	 0
??0?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init, COMDAT

; 1184 : 		}

  00000	c2 00 00	 ret	 0
?_Init@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1180 : 		}

  0000a	c3		 ret	 0
??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::~num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
;	COMDAT ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 40
$T2 = 160
$T3 = 160
_Ppf$ = 160
_Ploc$ = 168
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat, COMDAT

; 1168 : 		{	// return locale category mask and construct standard facet

$LN32:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000b	48 c7 40 88 fe
	ff ff ff	 mov	 QWORD PTR [rax-120], -2
  00013	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00017	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  0001b	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  0001f	48 8b ea	 mov	 rbp, rdx
  00022	48 8b f9	 mov	 rdi, rcx
  00025	33 f6		 xor	 esi, esi
  00027	89 b4 24 a0 00
	00 00		 mov	 DWORD PTR $T2[rsp], esi

; 1169 : 		if (_Ppf != 0 && *_Ppf == 0)

  0002e	48 85 c9	 test	 rcx, rcx
  00031	74 73		 je	 SHORT $LN30@Getcat
  00033	48 39 31	 cmp	 QWORD PTR [rcx], rsi
  00036	75 6e		 jne	 SHORT $LN30@Getcat

; 1170 : 			*_Ppf = new num_put<_Elem, _OutIt>(

  00038	8d 4e 10	 lea	 ecx, QWORD PTR [rsi+16]
  0003b	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00040	48 8b d8	 mov	 rbx, rax
  00043	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR $T3[rsp], rax
  0004b	48 85 c0	 test	 rax, rax
  0004e	74 41		 je	 SHORT $LN4@Getcat
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  00050	48 8b 45 08	 mov	 rax, QWORD PTR [rbp+8]
  00054	48 85 c0	 test	 rax, rax
  00057	75 09		 jne	 SHORT $LN12@Getcat
  00059	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00060	eb 0d		 jmp	 SHORT $LN17@Getcat
$LN12@Getcat:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 3777 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00062	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  00066	48 85 d2	 test	 rdx, rdx
  00069	75 04		 jne	 SHORT $LN17@Getcat
  0006b	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
$LN17@Getcat:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1170 : 			*_Ppf = new num_put<_Elem, _OutIt>(

  0006f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  00074	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
  00079	be 01 00 00 00	 mov	 esi, 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  0007e	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [rbx+8], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1197 : 		{	// construct from specified locale

  00085	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
  0008c	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1170 : 			*_Ppf = new num_put<_Elem, _OutIt>(

  0008f	eb 02		 jmp	 SHORT $LN5@Getcat
$LN4@Getcat:
  00091	33 db		 xor	 ebx, ebx
$LN5@Getcat:
  00093	48 89 1f	 mov	 QWORD PTR [rdi], rbx
  00096	40 f6 c6 01	 test	 sil, 1
  0009a	74 0a		 je	 SHORT $LN30@Getcat
  0009c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  000a1	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN30@Getcat:

; 1171 : 				_Locinfo(_Ploc->c_str()));
; 1172 : 		return (_X_NUMERIC);

  000a6	b8 04 00 00 00	 mov	 eax, 4

; 1173 : 		}

  000ab	4c 8d 9c 24 90
	00 00 00	 lea	 r11, QWORD PTR [rsp+144]
  000b3	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000b7	49 8b 6b 20	 mov	 rbp, QWORD PTR [r11+32]
  000bb	49 8b 73 28	 mov	 rsi, QWORD PTR [r11+40]
  000bf	49 8b e3	 mov	 rsp, r11
  000c2	5f		 pop	 rdi
  000c3	c3		 ret	 0
?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
$T3 = 160
_Ppf$ = 160
_Ploc$ = 168
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 10 00 00 00	 mov	 edx, 16
  0000e	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
$T3 = 160
_Ppf$ = 160
_Ploc$ = 168
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 10 00 00 00	 mov	 edx, 16
  0000e	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN32:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00008	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00011	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00016	48 8b e9	 mov	 rbp, rcx

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00019	33 d2		 xor	 edx, edx
  0001b	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00026	48 8b 35 00 00
	00 00		 mov	 rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave
  0002d	48 89 74 24 70	 mov	 QWORD PTR _Psave$5[rsp], rsi

; 115  : 			if (_Id == 0)

  00032	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
  00039	48 85 ff	 test	 rdi, rdi
  0003c	75 3d		 jne	 SHORT $LN11@use_facet

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0003e	33 d2		 xor	 edx, edx
  00040	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00045	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0004a	48 39 3d 00 00
	00 00		 cmp	 QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, rdi ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
  00051	75 17		 jne	 SHORT $LN12@use_facet

; 119  : 						_Id = ++_Id_cnt;

  00053	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00059	ff c0		 inc	 eax
  0005b	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00061	48 98		 cdqe
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A, rax ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
$LN12@use_facet:

; 120  : 				_END_LOCK()

  0006a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  0006f	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00074	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
$LN11@use_facet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0007b	48 8b 4d 08	 mov	 rcx, QWORD PTR [rbp+8]
  0007f	48 3b 79 18	 cmp	 rdi, QWORD PTR [rcx+24]
  00083	73 13		 jae	 SHORT $LN20@use_facet
  00085	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00089	48 8b 1c f8	 mov	 rbx, QWORD PTR [rax+rdi*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0008d	48 85 db	 test	 rbx, rbx
  00090	0f 85 8e 00 00
	00		 jne	 $LN7@use_facet
  00096	eb 02		 jmp	 SHORT $LN28@use_facet
$LN20@use_facet:

; 121  : 				}
; 122  : 			return (_Id);
; 123  : 			}
; 124  : 
; 125  : 	private:
; 126  : 		size_t _Id;	// the identifier stamp
; 127  : 
; 128  : 		__PURE_APPDOMAIN_GLOBAL static int _Id_cnt;
; 129  : 
; 130  : 	public:
; 131  : 		__CLR_OR_THIS_CALL id(const id&) = delete;
; 132  : 		id& __CLR_OR_THIS_CALL operator=(const id&) = delete;
; 133  : 		};
; 134  : 
; 135  : 	class _Locimp;
; 136  : 
; 137  : 			// CLASS facet
; 138  : 	class _CRTIMP2_PURE facet
; 139  : 		: public _Facet_base, public _Crt_new_delete
; 140  : 		{	// base class for all locale facets, performs reference counting
; 141  : 	public:
; 142  : 		static size_t __CLRCALL_OR_CDECL _Getcat(const facet ** = 0,
; 143  : 			const locale * = 0)
; 144  : 			{	// get category value, or -1 if no corresponding C category
; 145  : 			return ((size_t)(-1));
; 146  : 			}
; 147  : 
; 148  : 		virtual void __CLR_OR_THIS_CALL _Incref()
; 149  : 			{	// increment use count
; 150  : 			_MT_INCR(_Myrefs);
; 151  : 			}
; 152  : 
; 153  : 		virtual _Facet_base *__CLR_OR_THIS_CALL _Decref()
; 154  : 			{	// decrement use count
; 155  : 			if (_MT_DECR(_Myrefs) == 0)
; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}
; 160  : 
; 161  : 	private:
; 162  : 		_Atomic_counter_t _Myrefs;	// the reference count
; 163  : 
; 164  : 	protected:
; 165  : 		explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)
; 166  : 			{	// construct with initial reference count
; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}
; 169  : 
; 170  : 		virtual __CLR_OR_THIS_CALL ~facet() _NOEXCEPT
; 171  : 			{	// ensure that derived classes can be destroyed properly
; 172  : 			}
; 173  : 
; 174  : 	public:
; 175  : 		__CLR_OR_THIS_CALL facet(const facet&) = delete;
; 176  : 		facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 177  : 		};
; 178  : 
; 179  : 			// CLASS _Locimp
; 180  :  #pragma warning(push)
; 181  :  #pragma warning(disable: 4275)
; 182  : 
; 183  : 	class _CRTIMP2_PURE _Locimp
; 184  : 		: public facet
; 185  : 		{	// reference-counted actual implementation of a locale
; 186  : 	protected:
; 187  : 		__CLR_OR_THIS_CALL ~_Locimp() _NOEXCEPT
; 188  : 		{	// destroy the object
; 189  : 		_Locimp_dtor(this);
; 190  : 		}
; 191  : 
; 192  : 	private:
; 193  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 194  : 			_New_Locimp(bool _Transparent = false);
; 195  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 196  : 			_New_Locimp(const _Locimp& _Right);
; 197  : 
; 198  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 199  : 			_Locimp_dtor(_Locimp *);
; 200  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 201  : 			_Locimp_Addfac(_Locimp *, facet *, size_t);	// add a facet
; 202  : 		static void __CLRCALL_PURE_OR_CDECL
; 203  : 			_Locimp_ctor(_Locimp *, const _Locimp&);
; 204  : 
; 205  : 		friend class locale;
; 206  : 
; 207  : 		__CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 208  : 			: locale::facet(1), _Facetvec(0), _Facetcount(0),
; 209  : 				_Catmask(none), _Xparent(_Transparent),
; 210  : 					_Name("*")
; 211  : 			{	// construct an empty _Locimp
; 212  : 			}
; 213  : 
; 214  : 		__CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 215  : 			: locale::facet(1), _Facetvec(0), _Facetcount(_Right._Facetcount),
; 216  : 				_Catmask(_Right._Catmask), _Xparent(_Right._Xparent),
; 217  : 					_Name(_Right._Name.c_str())
; 218  : 			{	// construct by copying
; 219  : 			_Locimp_ctor(this, _Right);
; 220  : 			}
; 221  : 
; 222  : 		void __CLR_OR_THIS_CALL _Addfac(facet *_Pfacet, size_t _Id)
; 223  : 			{	// add a facet
; 224  : 			_Locimp_Addfac(this, _Pfacet, _Id);
; 225  : 			}
; 226  : 
; 227  : 		static _Locimp *__CLRCALL_OR_CDECL _Makeloc(const _Locinfo&,
; 228  : 			category, _Locimp *, const locale *);	// make essential facets
; 229  : 
; 230  : 		static void __CLRCALL_OR_CDECL _Makewloc(const _Locinfo&,
; 231  : 			category, _Locimp *, const locale *);	// make wchar_t facets
; 232  : 
; 233  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 234  : 		static void __CLRCALL_OR_CDECL _Makeushloc(const _Locinfo&,
; 235  : 			category, _Locimp *, const locale *);	// make ushort facets
; 236  :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 237  : 
; 238  : 		static void __CLRCALL_OR_CDECL _Makexloc(const _Locinfo&,
; 239  : 			category, _Locimp *, const locale *);	// make remaining facets
; 240  : 
; 241  : 		facet **_Facetvec;	// pointer to vector of facets
; 242  : 		size_t _Facetcount;	// size of vector of facets
; 243  : 		category _Catmask;	// mask describing implemented categories
; 244  : 		bool _Xparent;	// true if locale is transparent
; 245  : 		_Yarn<char> _Name;	// locale name, or "*" if not known
; 246  : 
; 247  : 		__PURE_APPDOMAIN_GLOBAL static _Locimp *_Clocptr;
; 248  : 
; 249  : public:
; 250  : 		_Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 251  : 		};
; 252  : 
; 253  :  #pragma warning(pop)
; 254  : 
; 255  : 	template<class _Elem,
; 256  : 		class _Traits,
; 257  : 		class _Alloc>
; 258  : 		bool operator()(const basic_string<_Elem, _Traits, _Alloc>& _Left,
; 259  : 			const basic_string<_Elem, _Traits, _Alloc>& _Right) const
; 260  : 		{	// compare _Left and _Right strings using collate facet in locale
; 261  : 		const _STD collate<_Elem>& _Coll_fac =
; 262  : 			use_facet< _STD collate<_Elem> >(*this);
; 263  : 
; 264  : 		return (_Coll_fac.compare(_Left.c_str(), _Left.c_str() + _Left.size(),
; 265  : 			_Right.c_str(), _Right.c_str() + _Right.size()) < 0);
; 266  : 		}
; 267  : 
; 268  : 	template<class _Facet>
; 269  : 		locale combine(const locale& _Loc) const
; 270  : 		{	// combine two locales
; 271  : 		_Facet *_Facptr;
; 272  : 
; 273  : 		_TRY_BEGIN
; 274  : 			_Facptr = (_Facet *)&use_facet<_Facet>(_Loc);
; 275  : 		_CATCH_ALL
; 276  : 			_Xruntime_error("locale::combine facet missing");
; 277  : 		_CATCH_END
; 278  : 
; 279  : 		_Locimp *_Newimp = _Locimp::_New_Locimp(*_Ptr);
; 280  : 		_Newimp->_Addfac(_Facptr, _Facet::id);
; 281  : 		_Newimp->_Catmask = none;
; 282  : 		_Newimp->_Name = "*";
; 283  : 		return (locale(_Newimp));
; 284  : 		}
; 285  : 
; 286  : 	template<class _Facet>
; 287  : 		locale(const locale& _Loc, const _Facet *_Facptr)
; 288  : 			: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 289  : 		{	// construct from _Loc, replacing facet with *_Facptr
; 290  : 		if (_Facptr != 0)
; 291  : 			{	// replace facet
; 292  : 			_Ptr->_Addfac((_Facet *)_Facptr, _Facet::id);
; 293  : 			_Ptr->_Catmask = none;
; 294  : 			_Ptr->_Name = "*";
; 295  : 			}
; 296  : 		}
; 297  : 
; 298  : 	locale(_Uninitialized)
; 299  : 		{	// defer construction
; 300  : 		}
; 301  : 
; 302  :  #if _NO_LOCALES
; 303  : 	locale(const locale& _Right) _THROW0()
; 304  : 		: _Ptr(0)
; 305  : 		{	// construct by copying
; 306  : 		}
; 307  : 
; 308  : 	locale() _THROW0()
; 309  : 		: _Ptr(0)
; 310  : 		{	// construct from current locale
; 311  : 		}
; 312  : 
; 313  : 	~locale() _NOEXCEPT
; 314  : 		{	// destroy the object
; 315  : 		}
; 316  : 
; 317  : 	locale& operator=(const locale& _Right) _THROW0()
; 318  : 		{	// assign a locale
; 319  : 		return (*this);
; 320  : 		}
; 321  : 
; 322  :  #else /* _NO_LOCALES */
; 323  : 	locale(const locale& _Right) _THROW0()
; 324  : 		: _Ptr(_Right._Ptr)
; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();
; 327  : 		}
; 328  : 
; 329  : 	locale() _THROW0()
; 330  : 		: _Ptr(_Init(true))
; 331  : 		{	// construct from current locale
; 332  : 		}
; 333  : 
; 334  :  #if !defined(MRTDLL) || !defined(_CRTBLD)
; 335  : 	locale(const locale& _Loc, const locale& _Other,
; 336  : 		category _Cat)
; 337  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 338  : 		{	// construct a locale by copying named facets
; 339  : 		if (_Cat != none)
; 340  : 			{	// worth adding, do it
; 341  : 			_TRY_BEGIN
; 342  : 				_BEGIN_LOCINFO(_Lobj)
; 343  : 					_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 344  : 					_Lobj._Addcats(_Loc._Ptr->_Catmask,
; 345  : 						_Loc.name().c_str());
; 346  : 					_Lobj._Addcats(_Other._Ptr->_Catmask,
; 347  : 						_Other.name().c_str());
; 348  : 					_Ptr->_Catmask = _Loc._Ptr->_Catmask
; 349  : 						| _Other._Ptr->_Catmask;
; 350  : 					_Ptr->_Name = _Lobj._Getname();
; 351  : 				_END_LOCINFO()
; 352  : 			_CATCH_ALL
; 353  : 			delete _Ptr->_Decref();
; 354  : 			_RERAISE;
; 355  : 			_CATCH_END
; 356  : 			}
; 357  : 		}
; 358  : 
; 359  : private:
; 360  : 	void _Construct(const string &_Str,
; 361  : 		category _Cat)
; 362  : 		{	// construct a locale with named facets
; 363  : 		bool _Bad = false;
; 364  : 		_Init();
; 365  : 		if (_Cat != none)
; 366  : 			{	// worth adding, do it
; 367  : 			_TRY_BEGIN
; 368  : 				_BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 369  : 					if (_Badname(_Lobj))
; 370  : 						_Bad = true;
; 371  : 					else
; 372  : 						{	// name okay, build the locale
; 373  : 						_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, 0);
; 374  : 						_Ptr->_Catmask = _Cat;
; 375  : 						_Ptr->_Name = _Str.c_str();
; 376  : 						}
; 377  : 				_END_LOCINFO()
; 378  : 			_CATCH_ALL
; 379  : 			delete _Ptr->_Decref();
; 380  : 			_RERAISE;
; 381  : 			_CATCH_END
; 382  : 			}
; 383  : 
; 384  : 		if (_Bad)
; 385  : 			{	// Don't throw within _BEGIN_LOCINFO if we can avoid it
; 386  : 			delete _Ptr->_Decref();
; 387  : 			_Xruntime_error("bad locale name");
; 388  : 			}
; 389  : 		}
; 390  : 
; 391  : public:
; 392  : 	explicit locale(const char *_Locname,
; 393  : 		category _Cat = all)
; 394  : 		: _Ptr(_Locimp::_New_Locimp())
; 395  : 		{	// construct a locale with named facets
; 396  : 		// _Locname might have been returned from setlocale().
; 397  : 		// Therefore, _Construct() takes const string&.
; 398  : 		if (_Locname == 0)
; 399  : 			_Xruntime_error("bad locale name");
; 400  : 		_Construct(_Locname, _Cat);
; 401  : 		}
; 402  : 
; 403  : 	locale(const locale& _Loc, const char *_Locname,
; 404  : 		category _Cat)
; 405  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 406  : 		{	// construct a locale by copying, replacing named facets
; 407  : 		// _Locname might have been returned from setlocale().
; 408  : 		// Therefore, _Construct() takes const string&.
; 409  : 		if (_Locname == 0)
; 410  : 			_Xruntime_error("bad locale name");
; 411  : 		_Construct(_Locname, _Cat);
; 412  : 		}
; 413  : 
; 414  : 	explicit locale(const string& _Str,
; 415  : 		category _Cat = all)
; 416  : 		: _Ptr(_Locimp::_New_Locimp())
; 417  : 		{	// construct a locale with named facets
; 418  : 		_Construct(_Str, _Cat);
; 419  : 		}
; 420  : 
; 421  : 	locale(const locale& _Loc, const string& _Str,
; 422  : 		category _Cat)
; 423  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 424  : 		{	// construct a locale by copying, replacing named facets
; 425  : 		_Construct(_Str, _Cat);
; 426  : 		}
; 427  :  #endif /* !MRTDLL || !_CRTBLD */
; 428  : 
; 429  : 	~locale() _NOEXCEPT
; 430  : 		{	// destroy the object
; 431  : 		if (_Ptr != 0)
; 432  : 			delete _Ptr->_Decref();
; 433  : 		}
; 434  : 
; 435  : 	locale& operator=(const locale& _Right) _THROW0()
; 436  : 		{	// assign a locale
; 437  : 		if (_Ptr != _Right._Ptr)
; 438  : 			{	// different implementation, point at new one
; 439  : 			delete _Ptr->_Decref();
; 440  : 			_Ptr = _Right._Ptr;
; 441  : 			_Ptr->_Incref();
; 442  : 			}
; 443  : 		return (*this);
; 444  : 		}
; 445  :  #endif /* _NO_LOCALES */
; 446  : 
; 447  : 	string name() const
; 448  : 		{	// return locale name
; 449  : 		return (_Ptr == 0 ? string() : _Ptr->_Name.c_str());
; 450  : 		}
; 451  : 
; 452  : 	const char *c_str() const
; 453  : 		{	// return locale name as NTBS
; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());
; 455  : 		}
; 456  : 
; 457  : 	const facet *_Getfacet(size_t _Id) const
; 458  : 		{	// look up a facet in locale object
; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00098	33 db		 xor	 ebx, ebx
$LN28@use_facet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0009a	80 79 24 00	 cmp	 BYTE PTR [rcx+36], 0
  0009e	74 13		 je	 SHORT $LN17@use_facet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  000a0	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  000a5	48 3b 78 18	 cmp	 rdi, QWORD PTR [rax+24]
  000a9	73 0d		 jae	 SHORT $LN29@use_facet
  000ab	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000af	48 8b 1c f8	 mov	 rbx, QWORD PTR [rax+rdi*8]
$LN17@use_facet:

; 562  : 
; 563  : 		size_t _Id = _Facet::id;
; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);
; 565  : 
; 566  : 		if (_Pf != 0)

  000b3	48 85 db	 test	 rbx, rbx
  000b6	75 6c		 jne	 SHORT $LN7@use_facet
$LN29@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  000b8	48 85 f6	 test	 rsi, rsi
  000bb	74 05		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  000bd	48 8b de	 mov	 rbx, rsi
  000c0	eb 62		 jmp	 SHORT $LN7@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  000c2	48 8b d5	 mov	 rdx, rbp
  000c5	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Psave$5[rsp]
  000ca	e8 00 00 00 00	 call	 ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::_Getcat
  000cf	48 83 f8 ff	 cmp	 rax, -1
  000d3	75 31		 jne	 SHORT $LN6@use_facet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 59   :         : _Data()

  000d5	33 c0		 xor	 eax, eax
  000d7	48 89 44 24 38	 mov	 QWORD PTR $T2[rsp+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  000dc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  000e3	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h

; 125  :     {

  000e8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  000ef	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  000fb	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00100	e8 00 00 00 00	 call	 _CxxThrowException
  00105	cc		 int	 3
$LN6@use_facet:

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else
; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  00106	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  0010b	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 586  : 			_Pfmod->_Incref();

  00112	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00115	48 8b cb	 mov	 rcx, rbx
  00118	ff 52 08	 call	 QWORD PTR [rdx+8]

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  0011b	48 8b cb	 mov	 rcx, rbx
  0011e	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
  00123	90		 npad	 1
$LN7@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  00124	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00129	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  0012e	48 8b c3	 mov	 rax, rbx

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  00131	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  00136	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0013a	5f		 pop	 rdi
  0013b	5e		 pop	 rsi
  0013c	5d		 pop	 rbp
  0013d	c3		 ret	 0
$LN30@use_facet:
??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 142  : 			return (_Ok);

  00000	0f b6 41 08	 movzx	 eax, BYTE PTR [rcx+8]

; 143  : 			}

  00004	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 130  : 			{	// destroy the object

$LN13:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 131  :  #if _HAS_EXCEPTIONS
; 132  : 			if (!_XSTD uncaught_exception())

  00012	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00017	90		 npad	 1
  00018	84 c0		 test	 al, al
  0001a	75 09		 jne	 SHORT $LN2@sentry

; 133  : 				this->_Myostr._Osfx();

  0001c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0001f	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  00024	90		 npad	 1
$LN2@sentry:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00025	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00028	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0002b	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  0002f	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00034	48 85 c9	 test	 rcx, rcx
  00037	74 07		 je	 SHORT $LN12@sentry

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00039	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
  0003f	90		 npad	 1
$LN12@sentry:

; 134  : 
; 135  :  #else /* _HAS_EXCEPTIONS */
; 136  : 			this->_Myostr._Osfx();
; 137  :  #endif /* _HAS_EXCEPTIONS */
; 138  : 			}

  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5b		 pop	 rbx
  00045	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 123  : 			{	// construct locking and testing stream

$LN26:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	48 8b da	 mov	 rbx, rdx
  0001b	48 8b f9	 mov	 rdi, rcx

; 99   : 			: _Myostr(_Ostr)

  0001e	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 101  : 			if (_Myostr.rdbuf() != 0)

  00021	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00024	4c 63 40 04	 movsxd	 r8, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00028	49 8b 4c 10 48	 mov	 rcx, QWORD PTR [r8+rdx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0002d	48 85 c9	 test	 rcx, rcx
  00030	74 07		 je	 SHORT $LN6@sentry

; 102  : 				_Myostr.rdbuf()->_Lock();

  00032	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00035	ff 50 08	 call	 QWORD PTR [rax+8]
  00038	90		 npad	 1
$LN6@sentry:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00039	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00040	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00045	75 14		 jne	 SHORT $LN2@sentry
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 80   : 		return (_Tiestr);

  00047	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0004c	48 85 c9	 test	 rcx, rcx
  0004f	74 0a		 je	 SHORT $LN2@sentry
  00051	48 3b cb	 cmp	 rcx, rbx
  00054	74 05		 je	 SHORT $LN2@sentry

; 125  : 				_Ostr.tie()->flush();

  00056	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN2@sentry:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0005b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0005e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00062	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
  00067	0f 94 c0	 sete	 al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0006a	88 47 08	 mov	 BYTE PTR [rdi+8], al

; 127  : 			}

  0006d	48 8b c7	 mov	 rax, rdi
  00070	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00075	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00079	5f		 pop	 rdi
  0007a	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 106  : 			{	// destroy after unlocking

$LN8:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 107  : 			if (_Myostr.rdbuf() != 0)

  0000d	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00010	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00013	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00017	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
  0001c	48 85 c9	 test	 rcx, rcx
  0001f	74 0b		 je	 SHORT $LN2@Sentry_bas

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00021	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 109  : 			}

  00024	48 83 c4 38	 add	 rsp, 56			; 00000038H

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00028	48 ff 60 10	 rex_jmp QWORD PTR [rax+16]
$LN2@Sentry_bas:

; 109  : 			}

  0002c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00030	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 100  : 			{	// lock the stream buffer, if there

$LN10:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 99   : 			: _Myostr(_Ostr)

  00006	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 100  : 			{	// lock the stream buffer, if there

  00009	48 8b d9	 mov	 rbx, rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  0000c	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000f	4c 63 40 04	 movsxd	 r8, DWORD PTR [rax+4]
  00013	49 8b 4c 10 48	 mov	 rcx, QWORD PTR [r8+rdx+72]
  00018	48 85 c9	 test	 rcx, rcx
  0001b	74 06		 je	 SHORT $LN8@Sentry_bas

; 102  : 				_Myostr.rdbuf()->_Lock();

  0001d	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00020	ff 50 08	 call	 QWORD PTR [rax+8]
$LN8@Sentry_bas:

; 103  : 			}

  00023	48 8b c3	 mov	 rax, rbx
  00026	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002a	5b		 pop	 rbx
  0002b	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1272 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1273 : 	}

  00003	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$ = 16
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 581  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>, COMDAT

; 1288 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1289 : 	}

  00003	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Ostr$ = 80
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 991  : 	{	// insert newline and flush stream

$LN14:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 50	 mov	 QWORD PTR [rsp+80], rbx
  00014	48 8b d9	 mov	 rbx, rcx

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00017	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0001a	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  0001e	48 03 cb	 add	 rcx, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 131  : 		const _Ctype& _Ctype_fac = _USE(getloc(), _Ctype);

  00021	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00026	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  0002b	90		 npad	 1
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  00034	48 8b f8	 mov	 rdi, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR $T2[rsp+8]
  0003c	48 85 c9	 test	 rcx, rcx
  0003f	74 1a		 je	 SHORT $LN9@endl

; 432  : 			delete _Ptr->_Decref();

  00041	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00044	ff 52 10	 call	 QWORD PTR [rdx+16]
  00047	48 85 c0	 test	 rax, rax
  0004a	74 0f		 je	 SHORT $LN9@endl
  0004c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0004f	ba 01 00 00 00	 mov	 edx, 1
  00054	48 8b c8	 mov	 rcx, rax
  00057	41 ff 10	 call	 QWORD PTR [r8]
  0005a	90		 npad	 1
$LN9@endl:

; 2416 : 		return (do_widen(_Byte));

  0005b	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0005e	b2 0a		 mov	 dl, 10
  00060	48 8b cf	 mov	 rcx, rdi
  00063	ff 50 40	 call	 QWORD PTR [rax+64]
  00066	0f b6 d0	 movzx	 edx, al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00069	48 8b cb	 mov	 rcx, rbx
  0006c	e8 00 00 00 00	 call	 ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put

; 993  : 	_Ostr.flush();

  00071	48 8b cb	 mov	 rcx, rbx
  00074	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 994  : 	return (_Ostr);

  00079	48 8b c3	 mov	 rax, rbx

; 995  : 	}

  0007c	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00081	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Ostr$ = 80
?dtor$0@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA PROC ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA ENDP ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$0
$T1 = 32
$T2 = 40
_Ostr$ = 80
?dtor$1@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA PROC ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$1
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA ENDP ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Ostr$ = 80
?dtor$0@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA PROC ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA ENDP ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Ostr$ = 80
?dtor$1@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA PROC ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$1
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0???$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z@4HA ENDP ; `std::endl<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 780  : 	{	// insert NTBS into char stream

$LN1030:
  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	41 54		 push	 r12
  00005	41 56		 push	 r14
  00007	41 57		 push	 r15
  00009	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000d	48 c7 44 24 40
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00016	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001e	4c 8b fa	 mov	 r15, rdx
  00021	48 8b f1	 mov	 rsi, rcx
  00024	48 89 4c 24 28	 mov	 QWORD PTR _Ostr$GSCopy$[rsp], rcx

; 781  : 	typedef char _Elem;
; 782  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 783  : 	ios_base::iostate _State = ios_base::goodbit;

  00029	33 db		 xor	 ebx, ebx
  0002b	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0002f	38 1a		 cmp	 BYTE PTR [rdx], bl
  00031	75 05		 jne	 SHORT $LN26@operator
  00033	45 33 f6	 xor	 r14d, r14d
  00036	eb 11		 jmp	 SHORT $LN27@operator
$LN26@operator:
  00038	49 83 ce ff	 or	 r14, -1
  0003c	0f 1f 40 00	 npad	 4
$LL1023@operator:
  00040	49 ff c6	 inc	 r14
  00043	42 38 1c 32	 cmp	 BYTE PTR [rdx+r14], bl
  00047	75 f7		 jne	 SHORT $LL1023@operator
$LN27@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  00049	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0004c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 423  : 		return (_Wide);

  00050	48 8b 7c 31 28	 mov	 rdi, QWORD PTR [rcx+rsi+40]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  00055	48 85 ff	 test	 rdi, rdi
  00058	7e 0a		 jle	 SHORT $LN17@operator
  0005a	49 3b fe	 cmp	 rdi, r14
  0005d	7e 05		 jle	 SHORT $LN17@operator
  0005f	49 2b fe	 sub	 rdi, r14
  00062	eb 02		 jmp	 SHORT $LN18@operator
$LN17@operator:
  00064	33 ff		 xor	 edi, edi
$LN18@operator:

; 99   : 			: _Myostr(_Ostr)

  00066	4c 8b e6	 mov	 r12, rsi
  00069	48 89 74 24 30	 mov	 QWORD PTR _Ok$[rsp], rsi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  0006e	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  00073	48 85 c9	 test	 rcx, rcx
  00076	74 07		 je	 SHORT $LN39@operator

; 102  : 				_Myostr.rdbuf()->_Lock();

  00078	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0007b	ff 50 08	 call	 QWORD PTR [rax+8]
  0007e	90		 npad	 1
$LN39@operator:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0007f	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00082	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00086	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0008b	75 14		 jne	 SHORT $LN35@operator
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 80   : 		return (_Tiestr);

  0008d	48 8b 4c 31 50	 mov	 rcx, QWORD PTR [rcx+rsi+80]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00092	48 85 c9	 test	 rcx, rcx
  00095	74 0a		 je	 SHORT $LN35@operator
  00097	48 3b ce	 cmp	 rcx, rsi
  0009a	74 05		 je	 SHORT $LN35@operator

; 125  : 				_Ostr.tie()->flush();

  0009c	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN35@operator:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  000a1	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000a4	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  000a8	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
  000ad	0f 94 c0	 sete	 al
  000b0	88 44 24 38	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 789  : 	if (!_Ok)

  000b4	84 c0		 test	 al, al
  000b6	75 0a		 jne	 SHORT $LN8@operator

; 790  : 		_State |= ios_base::badbit;

  000b8	bb 04 00 00 00	 mov	 ebx, 4

; 791  : 	else

  000bd	e9 19 01 00 00	 jmp	 $LN22@operator
$LN8@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 378  : 		return (_Fmtfl);

  000c2	8b 44 31 18	 mov	 eax, DWORD PTR [rcx+rsi+24]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 794  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  000c6	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  000cb	83 f8 40	 cmp	 eax, 64			; 00000040H
  000ce	74 66		 je	 SHORT $LN1020@operator
$LL4@operator:

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  000d0	48 85 ff	 test	 rdi, rdi
  000d3	7e 59		 jle	 SHORT $LN3@operator

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

  000d5	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000d8	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 113  : 		return (_Fillch);

  000dc	44 0f b6 44 31
	58		 movzx	 r8d, BYTE PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  000e2	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  000e7	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  000eb	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000ef	74 25		 je	 SHORT $LN69@operator
  000f1	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  000f5	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  000f7	85 c0		 test	 eax, eax
  000f9	7e 1b		 jle	 SHORT $LN69@operator

; 308  : 		--*_IPcount;

  000fb	ff c8		 dec	 eax
  000fd	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  000ff	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00103	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00106	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0010a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0010d	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00110	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00114	eb 0a		 jmp	 SHORT $LN70@operator
$LN69@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00116	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0011a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0011d	ff 50 18	 call	 QWORD PTR [rax+24]
$LN70@operator:
  00120	83 f8 ff	 cmp	 eax, -1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00123	0f 84 89 00 00
	00		 je	 $LN1028@operator

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  00129	48 ff cf	 dec	 rdi
  0012c	eb a2		 jmp	 SHORT $LL4@operator
$LN3@operator:
  0012e	85 db		 test	 ebx, ebx

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  00130	0f 85 85 00 00
	00		 jne	 $LN6@operator
$LN1020@operator:
  00136	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00139	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  0013d	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 208  : 		return (xsputn(_Ptr, _Count));

  00142	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00145	4d 8b c6	 mov	 r8, r14
  00148	49 8b d7	 mov	 rdx, r15
  0014b	ff 50 48	 call	 QWORD PTR [rax+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  0014e	49 3b c6	 cmp	 rax, r14
  00151	75 5f		 jne	 SHORT $LN1028@operator
$LL1024@operator:

; 806  : 
; 807  : 		if (_State == ios_base::goodbit)
; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00153	48 85 ff	 test	 rdi, rdi
  00156	7e 63		 jle	 SHORT $LN6@operator

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00158	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  0015b	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 113  : 		return (_Fillch);

  0015f	44 0f b6 44 31
	58		 movzx	 r8d, BYTE PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  00165	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0016a	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  0016e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00172	74 25		 je	 SHORT $LN99@operator
  00174	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00178	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  0017a	85 c0		 test	 eax, eax
  0017c	7e 1b		 jle	 SHORT $LN99@operator

; 308  : 		--*_IPcount;

  0017e	ff c8		 dec	 eax
  00180	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  00182	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00186	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00189	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0018d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00190	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00193	41 0f b6 c0	 movzx	 eax, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00197	eb 0a		 jmp	 SHORT $LN100@operator
$LN99@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00199	41 0f b6 d0	 movzx	 edx, r8b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0019d	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  001a0	ff 50 18	 call	 QWORD PTR [rax+24]
$LN100@operator:
  001a3	83 f8 ff	 cmp	 eax, -1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

  001a6	75 05		 jne	 SHORT $LN5@operator

; 810  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 811  : 					{	// insertion failed, quit
; 812  : 					_State |= ios_base::badbit;

  001a8	83 cb 04	 or	 ebx, 4

; 813  : 					break;

  001ab	eb 0a		 jmp	 SHORT $LN1027@operator
$LN5@operator:

; 806  : 
; 807  : 		if (_State == ios_base::goodbit)
; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  001ad	48 ff cf	 dec	 rdi
  001b0	eb a1		 jmp	 SHORT $LL1024@operator
$LN1028@operator:

; 805  : 			_State |= ios_base::badbit;

  001b2	bb 04 00 00 00	 mov	 ebx, 4
$LN1027@operator:

; 797  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 798  : 					{	// insertion failed, quit
; 799  : 					_State |= ios_base::badbit;

  001b7	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
$LN6@operator:

; 814  : 					}
; 815  : 		_Ostr.width(0);

  001bb	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001be	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  001c2	48 c7 44 31 28
	00 00 00 00	 mov	 QWORD PTR [rcx+rsi+40], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
  001cb	eb 0e		 jmp	 SHORT $LN22@operator
$LN23@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
  001cd	8b 5c 24 20	 mov	 ebx, DWORD PTR _State$[rsp]
  001d1	4c 8b 64 24 30	 mov	 r12, QWORD PTR _Ok$[rsp]
  001d6	48 8b 74 24 28	 mov	 rsi, QWORD PTR _Ostr$GSCopy$[rsp]
$LN22@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 819  : 	_Ostr.setstate(_State);

  001db	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001de	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  001e2	48 03 ce	 add	 rcx, rsi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 59   : 		if (_State != goodbit)

  001e5	85 db		 test	 ebx, ebx
  001e7	74 1b		 je	 SHORT $LN994@operator
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  001e9	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  001ec	0b c3		 or	 eax, ebx
  001ee	8b d0		 mov	 edx, eax
  001f0	83 ca 04	 or	 edx, 4
  001f3	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  001f8	0f 45 d0	 cmovne	 edx, eax

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  001fb	45 33 c0	 xor	 r8d, r8d
  001fe	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00203	90		 npad	 1
$LN994@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  00204	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00209	84 c0		 test	 al, al
  0020b	75 09		 jne	 SHORT $LN1003@operator

; 133  : 				this->_Myostr._Osfx();

  0020d	49 8b cc	 mov	 rcx, r12
  00210	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  00215	90		 npad	 1
$LN1003@operator:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00216	49 8b 0c 24	 mov	 rcx, QWORD PTR [r12]
  0021a	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  0021e	4a 8b 4c 22 48	 mov	 rcx, QWORD PTR [rdx+r12+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00223	48 85 c9	 test	 rcx, rcx
  00226	74 07		 je	 SHORT $LN1007@operator

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00228	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0022b	ff 52 10	 call	 QWORD PTR [rdx+16]
  0022e	90		 npad	 1
$LN1007@operator:

; 820  : 	return (_Ostr);

  0022f	48 8b c6	 mov	 rax, rsi

; 821  : 	}

  00232	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  0023a	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0023e	41 5f		 pop	 r15
  00240	41 5e		 pop	 r14
  00242	41 5c		 pop	 r12
  00244	5f		 pop	 rdi
  00245	5e		 pop	 rsi
  00246	c3		 ret	 0
$LN1026@operator:
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0

; 816  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN128@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN128@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN131@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 816  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1029@catch$0
$LN131@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1029@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$211@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$211
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$211@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$211
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$212@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$212
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$212@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$212
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 816  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN128@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN128@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN131@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 816  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1029@catch$0
$LN131@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1029@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$211@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$211
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$211@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$211
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$212@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$212
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$212@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$212
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
_TEXT	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT

; 574  : 		{	// flush output stream

$LN61:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 575  : 		if (_Myios::rdbuf() != 0)

  00012	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00015	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00019	48 83 7c 0a 48
	00		 cmp	 QWORD PTR [rdx+rcx+72], 0
  0001f	0f 84 82 00 00
	00		 je	 $LN60@flush

; 576  : 			{	// buffer exists, flush it
; 577  : 			const sentry _Ok(*this);

  00025	48 8b d1	 mov	 rdx, rcx
  00028	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ok$2[rsp]
  0002d	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00032	90		 npad	 1

; 579  : 			if (_Ok && _Myios::rdbuf()->pubsync() == -1)

  00033	80 7c 24 30 00	 cmp	 BYTE PTR _Ok$2[rsp+8], 0
  00038	74 3c		 je	 SHORT $LN40@flush
  0003a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003d	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00041	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 145  : 		return (sync());

  00046	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00049	ff 50 68	 call	 QWORD PTR [rax+104]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 579  : 			if (_Ok && _Myios::rdbuf()->pubsync() == -1)

  0004c	83 f8 ff	 cmp	 eax, -1
  0004f	75 25		 jne	 SHORT $LN40@flush

; 580  : 				_Myios::setstate(ios_base::badbit);	// sync failed

  00051	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00054	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00058	48 03 cb	 add	 rcx, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  0005b	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
  0005e	83 ca 04	 or	 edx, 4
  00061	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00066	0f 45 51 10	 cmovne	 edx, DWORD PTR [rcx+16]
  0006a	83 ca 04	 or	 edx, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0006d	45 33 c0	 xor	 r8d, r8d
  00070	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00075	90		 npad	 1
$LN40@flush:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  00076	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  0007b	84 c0		 test	 al, al
  0007d	75 0b		 jne	 SHORT $LN49@flush

; 133  : 				this->_Myostr._Osfx();

  0007f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Ok$2[rsp]
  00084	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  00089	90		 npad	 1
$LN49@flush:

; 107  : 			if (_Myostr.rdbuf() != 0)

  0008a	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Ok$2[rsp]
  0008f	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00092	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00096	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  0009b	48 85 c9	 test	 rcx, rcx
  0009e	74 07		 je	 SHORT $LN53@flush

; 108  : 				_Myostr.rdbuf()->_Unlock();

  000a0	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000a3	ff 50 10	 call	 QWORD PTR [rax+16]
  000a6	90		 npad	 1
$LN53@flush:
$LN60@flush:

; 581  : 			}
; 582  : 		return (*this);

  000a7	48 8b c3	 mov	 rax, rbx

; 583  : 		}

  000aa	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ae	5b		 pop	 rbx
  000af	c3		 ret	 0
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Ok$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
  00011	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Ok$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
  00011	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
_TEXT	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::put, COMDAT

; 533  : 		{	// insert a character

$LN958:
  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 70	 mov	 QWORD PTR [rsp+112], rbx
  00014	48 89 74 24 78	 mov	 QWORD PTR [rsp+120], rsi
  00019	0f b6 f2	 movzx	 esi, dl
  0001c	48 8b d9	 mov	 rbx, rcx
  0001f	48 89 4c 24 28	 mov	 QWORD PTR this$GSCopy$[rsp], rcx

; 534  : 		ios_base::iostate _State = ios_base::goodbit;

  00024	33 ff		 xor	 edi, edi
  00026	89 7c 24 20	 mov	 DWORD PTR _State$[rsp], edi

; 99   : 			: _Myostr(_Ostr)

  0002a	48 89 4c 24 38	 mov	 QWORD PTR _Ok$[rsp], rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  0002f	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00032	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00036	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0003b	48 85 c9	 test	 rcx, rcx
  0003e	74 07		 je	 SHORT $LN17@put

; 102  : 				_Myostr.rdbuf()->_Lock();

  00040	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00043	ff 50 08	 call	 QWORD PTR [rax+8]
  00046	90		 npad	 1
$LN17@put:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00047	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0004a	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  0004e	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00053	75 14		 jne	 SHORT $LN13@put
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 80   : 		return (_Tiestr);

  00055	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0005a	48 85 c9	 test	 rcx, rcx
  0005d	74 0a		 je	 SHORT $LN13@put
  0005f	48 3b cb	 cmp	 rcx, rbx
  00062	74 05		 je	 SHORT $LN13@put

; 125  : 				_Ostr.tie()->flush();

  00064	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN13@put:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  00069	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0006c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00070	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
  00075	0f 94 c0	 sete	 al
  00078	88 44 24 40	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 537  : 		if (!_Ok)

  0007c	84 c0		 test	 al, al
  0007e	75 07		 jne	 SHORT $LN2@put

; 538  : 			_State |= ios_base::badbit;

  00080	b9 04 00 00 00	 mov	 ecx, 4

; 539  : 		else

  00085	eb 5a		 jmp	 SHORT $LN10@put
$LN2@put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00087	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0008c	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  00090	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00094	74 25		 je	 SHORT $LN43@put
  00096	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  0009a	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  0009c	85 c0		 test	 eax, eax
  0009e	7e 1b		 jle	 SHORT $LN43@put

; 308  : 		--*_IPcount;

  000a0	ff c8		 dec	 eax
  000a2	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  000a4	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  000a8	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ab	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  000af	48 89 01	 mov	 QWORD PTR [rcx], rax
  000b2	40 88 32	 mov	 BYTE PTR [rdx], sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  000b5	40 0f b6 c6	 movzx	 eax, sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  000b9	eb 0a		 jmp	 SHORT $LN44@put
$LN43@put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  000bb	40 0f b6 d6	 movzx	 edx, sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 200  : 		return (0 < _Pnavail()

  000bf	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000c2	ff 50 18	 call	 QWORD PTR [rax+24]
$LN44@put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 542  : 			if (_Traits::eq_int_type(_Traits::eof(),

  000c5	b9 04 00 00 00	 mov	 ecx, 4
  000ca	83 f8 ff	 cmp	 eax, -1
  000cd	0f 44 f9	 cmove	 edi, ecx
  000d0	8b cf		 mov	 ecx, edi
  000d2	89 4c 24 20	 mov	 DWORD PTR _State$[rsp], ecx
  000d6	eb 09		 jmp	 SHORT $LN10@put
$LN11@put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
  000d8	8b 4c 24 20	 mov	 ecx, DWORD PTR _State$[rsp]
  000dc	48 8b 5c 24 28	 mov	 rbx, QWORD PTR this$GSCopy$[rsp]
$LN10@put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 543  : 				_Myios::rdbuf()->sputc(_Ch)))
; 544  : 				_State |= ios_base::badbit;
; 545  : 			_CATCH_IO_END
; 546  : 			}
; 547  : 
; 548  : 		_Myios::setstate(_State);

  000e1	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000e4	4c 63 48 04	 movsxd	 r9, DWORD PTR [rax+4]
  000e8	4c 03 cb	 add	 r9, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 59   : 		if (_State != goodbit)

  000eb	85 c9		 test	 ecx, ecx
  000ed	74 1f		 je	 SHORT $LN936@put
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  000ef	41 8b 41 10	 mov	 eax, DWORD PTR [r9+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  000f3	0b c1		 or	 eax, ecx
  000f5	8b d0		 mov	 edx, eax
  000f7	83 ca 04	 or	 edx, 4
  000fa	49 83 79 48 00	 cmp	 QWORD PTR [r9+72], 0
  000ff	0f 45 d0	 cmovne	 edx, eax

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00102	45 33 c0	 xor	 r8d, r8d
  00105	49 8b c9	 mov	 rcx, r9
  00108	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  0010d	90		 npad	 1
$LN936@put:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  0010e	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00113	84 c0		 test	 al, al
  00115	75 09		 jne	 SHORT $LN945@put

; 133  : 				this->_Myostr._Osfx();

  00117	48 8b cb	 mov	 rcx, rbx
  0011a	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  0011f	90		 npad	 1
$LN945@put:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00120	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00123	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00127	48 8b 4c 1a 48	 mov	 rcx, QWORD PTR [rdx+rbx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  0012c	48 85 c9	 test	 rcx, rcx
  0012f	74 07		 je	 SHORT $LN949@put

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00131	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00134	ff 52 10	 call	 QWORD PTR [rdx+16]
  00137	90		 npad	 1
$LN949@put:

; 549  : 		return (*this);

  00138	48 8b c3	 mov	 rax, rbx

; 550  : 		}

  0013b	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  00140	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00145	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00149	5f		 pop	 rdi
  0014a	c3		 ret	 0
$LN956@put:
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$0

; 543  : 				_Myios::rdbuf()->sputc(_Ch)))
; 544  : 				_State |= ios_base::badbit;
; 545  : 			_CATCH_IO_END

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN70@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN70@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN73@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 543  : 				_Myios::rdbuf()->sputc(_Ch)))
; 544  : 				_State |= ios_base::badbit;
; 545  : 			_CATCH_IO_END

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$0
  00055	eb 0a		 jmp	 SHORT $LN957@catch$0
$LN73@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN957@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$0
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$207@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$207
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$207@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$207
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$208@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$208
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$208@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$208
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 545  : 			_CATCH_IO_END

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN70@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN70@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN73@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 545  : 			_CATCH_IO_END

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$0
  00055	eb 0a		 jmp	 SHORT $LN957@catch$0
$LN73@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN957@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$207@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$207
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$207@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$207
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$208@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$208
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$208@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$208
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
_TEXT	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT

; 396  : 		{	// insert an unsigned long long

$LN954:
  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	41 56		 push	 r14
  00005	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000c	48 c7 44 24 50
	fe ff ff ff	 mov	 QWORD PTR $T3[rsp], -2
  00015	48 89 9c 24 c0
	00 00 00	 mov	 QWORD PTR [rsp+192], rbx
  0001d	4c 8b f2	 mov	 r14, rdx
  00020	48 8b d9	 mov	 rbx, rcx
  00023	48 89 4c 24 38	 mov	 QWORD PTR this$GSCopy$[rsp], rcx

; 397  : 		ios_base::iostate _State = ios_base::goodbit;

  00028	33 ff		 xor	 edi, edi
  0002a	89 7c 24 30	 mov	 DWORD PTR _State$[rsp], edi

; 99   : 			: _Myostr(_Ostr)

  0002e	48 89 4c 24 58	 mov	 QWORD PTR _Ok$[rsp], rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  00033	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00036	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  0003a	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0003f	48 85 c9	 test	 rcx, rcx
  00042	74 07		 je	 SHORT $LN19@operator

; 102  : 				_Myostr.rdbuf()->_Lock();

  00044	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00047	ff 50 08	 call	 QWORD PTR [rax+8]
  0004a	90		 npad	 1
$LN19@operator:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0004b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0004e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00052	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00057	75 14		 jne	 SHORT $LN15@operator
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 80   : 		return (_Tiestr);

  00059	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0005e	48 85 c9	 test	 rcx, rcx
  00061	74 0a		 je	 SHORT $LN15@operator
  00063	48 3b cb	 cmp	 rcx, rbx
  00066	74 05		 je	 SHORT $LN15@operator

; 125  : 				_Ostr.tie()->flush();

  00068	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN15@operator:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0006d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00070	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00074	48 03 cb	 add	 rcx, rbx

; 339  : 		return (rdstate() == goodbit);

  00077	83 79 10 00	 cmp	 DWORD PTR [rcx+16], 0
  0007b	0f 94 c0	 sete	 al
  0007e	88 44 24 60	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 400  : 		if (_Ok)

  00082	84 c0		 test	 al, al
  00084	0f 84 9b 00 00
	00		 je	 $LN12@operator

; 401  : 			{	// state okay, use facet to insert
; 402  : 			const _Nput& _Nput_fac = _USE(this->getloc(), _Nput);

  0008a	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T4[rsp]
  0008f	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00094	90		 npad	 1
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > >
  0009d	48 8b f0	 mov	 rsi, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  000a0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR $T4[rsp+8]
  000a5	48 85 c9	 test	 rcx, rcx
  000a8	74 1a		 je	 SHORT $LN44@operator

; 432  : 			delete _Ptr->_Decref();

  000aa	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000ad	ff 50 10	 call	 QWORD PTR [rax+16]
  000b0	48 85 c0	 test	 rax, rax
  000b3	74 0f		 je	 SHORT $LN44@operator
  000b5	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000b8	ba 01 00 00 00	 mov	 edx, 1
  000bd	48 8b c8	 mov	 rcx, rax
  000c0	41 ff 10	 call	 QWORD PTR [r8]
  000c3	90		 npad	 1
$LN44@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 406  : 				_Myios::fill(), _Val).failed())

  000c4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c7	4c 63 48 04	 movsxd	 r9, DWORD PTR [rax+4]
  000cb	4c 03 cb	 add	 r9, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  000ce	49 8b 41 48	 mov	 rax, QWORD PTR [r9+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 627  : 		: _Failed(false), _Strbuf(_Sb)

  000d2	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000d7	48 89 44 24 48	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 113  : 		return (_Fillch);

  000dc	41 0f b6 41 58	 movzx	 eax, BYTE PTR [r9+88]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocnum

; 1231 : 		return (do_put(_Dest, _Iosbase, _Fill, _Val));

  000e1	0f 28 44 24 40	 movaps	 xmm0, XMMWORD PTR $T2[rsp]
  000e6	66 0f 7f 44 24
	40		 movdqa	 XMMWORD PTR $T1[rsp], xmm0
  000ec	4c 8b 16	 mov	 r10, QWORD PTR [rsi]
  000ef	4c 89 74 24 28	 mov	 QWORD PTR [rsp+40], r14
  000f4	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000f8	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000fd	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T5[rsp]
  00102	48 8b ce	 mov	 rcx, rsi
  00105	41 ff 52 30	 call	 QWORD PTR [r10+48]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 406  : 				_Myios::fill(), _Val).failed())

  00109	b8 04 00 00 00	 mov	 eax, 4
  0010e	80 7c 24 78 00	 cmp	 BYTE PTR $T5[rsp], 0
  00113	0f 45 f8	 cmovne	 edi, eax
  00116	89 7c 24 30	 mov	 DWORD PTR _State$[rsp], edi
  0011a	eb 09		 jmp	 SHORT $LN12@operator
$LN13@operator:

; 407  : 				_State |= ios_base::badbit;
; 408  : 			_CATCH_IO_END

  0011c	8b 7c 24 30	 mov	 edi, DWORD PTR _State$[rsp]
  00120	48 8b 5c 24 38	 mov	 rbx, QWORD PTR this$GSCopy$[rsp]
$LN12@operator:

; 409  : 			}
; 410  : 
; 411  : 		_Myios::setstate(_State);

  00125	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00128	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  0012c	48 03 cb	 add	 rcx, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 59   : 		if (_State != goodbit)

  0012f	85 ff		 test	 edi, edi
  00131	74 1b		 je	 SHORT $LN932@operator
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00133	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00136	0b c7		 or	 eax, edi
  00138	8b d0		 mov	 edx, eax
  0013a	83 ca 04	 or	 edx, 4
  0013d	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00142	0f 45 d0	 cmovne	 edx, eax

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00145	45 33 c0	 xor	 r8d, r8d
  00148	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  0014d	90		 npad	 1
$LN932@operator:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  0014e	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00153	84 c0		 test	 al, al
  00155	75 09		 jne	 SHORT $LN941@operator

; 133  : 				this->_Myostr._Osfx();

  00157	48 8b cb	 mov	 rcx, rbx
  0015a	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  0015f	90		 npad	 1
$LN941@operator:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00160	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00163	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00167	48 8b 4c 1a 48	 mov	 rcx, QWORD PTR [rdx+rbx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  0016c	48 85 c9	 test	 rcx, rcx
  0016f	74 07		 je	 SHORT $LN945@operator

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00171	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00174	ff 52 10	 call	 QWORD PTR [rdx+16]
  00177	90		 npad	 1
$LN945@operator:

; 412  : 		return (*this);

  00178	48 8b c3	 mov	 rax, rbx

; 413  : 		}

  0017b	48 8b 9c 24 c0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+192]
  00183	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0018a	41 5e		 pop	 r14
  0018c	5f		 pop	 rdi
  0018d	5e		 pop	 rsi
  0018e	c3		 ret	 0
$LN952@operator:
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$2
  00000	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$2
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
  0000c	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
  00018	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$3@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$3
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$3
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$0

; 407  : 				_State |= ios_base::badbit;
; 408  : 			_CATCH_IO_END

  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00033	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z$0:
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  0003a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003d	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00041	48 03 d1	 add	 rdx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00044	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00047	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0004a	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0004f	75 03		 jne	 SHORT $LN66@catch$0
  00051	83 c8 04	 or	 eax, 4
$LN66@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00054	83 e0 17	 and	 eax, 23
  00057	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  0005a	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0005d	75 09		 jne	 SHORT $LN69@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 407  : 				_State |= ios_base::badbit;
; 408  : 			_CATCH_IO_END

  0005f	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$0
  00066	eb 0a		 jmp	 SHORT $LN953@catch$0
$LN69@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 292  : 			_RERAISE;

  00068	33 d2		 xor	 edx, edx
  0006a	33 c9		 xor	 ecx, ecx
  0006c	e8 00 00 00 00	 call	 _CxxThrowException
  00071	90		 npad	 1
$LN953@catch$0:
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
  00078	cc		 int	 3
?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$0
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$207@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$207
  00079	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$207@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$207
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$208@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$208
  0007e	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$208@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$208
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$2
  00000	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
  0000c	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
  00018	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$3@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$3
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 408  : 			_CATCH_IO_END

  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00033	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z$0:
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  0003a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003d	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00041	48 03 d1	 add	 rdx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 315  : 		return (_Mystate);

  00044	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00047	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0004a	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0004f	75 03		 jne	 SHORT $LN66@catch$0
  00051	83 c8 04	 or	 eax, 4
$LN66@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00054	83 e0 17	 and	 eax, 23
  00057	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  0005a	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0005d	75 09		 jne	 SHORT $LN69@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 408  : 			_CATCH_IO_END

  0005f	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$0
  00066	eb 0a		 jmp	 SHORT $LN953@catch$0
$LN69@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 292  : 			_RERAISE;

  00068	33 d2		 xor	 edx, edx
  0006a	33 c9		 xor	 ecx, ecx
  0006c	e8 00 00 00 00	 call	 _CxxThrowException
  00071	90		 npad	 1
$LN953@catch$0:
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
  00078	cc		 int	 3
?catch$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$207@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$207
  00079	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$207@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$207
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
_Ok$ = 88
$T4 = 104
$T5 = 120
this$ = 176
_Val$ = 184
?dtor$208@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$208
  0007e	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$208@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::operator<<'::`1'::dtor$208
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
_TEXT	SEGMENT
this$ = 8
_Pfn$ = 16
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT

; 198  : 		_DEBUG_POINTER(_Pfn);
; 199  : 		return ((*_Pfn)(*this));

  00000	48 ff e2	 rex_jmp rdx
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Osfx, COMDAT

; 165  : 		{	// perform any wrapup

$LN30:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 167  : 		if (this->good() && this->flags() & ios_base::unitbuf)

  00012	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00015	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00019	83 7c 0a 10 00	 cmp	 DWORD PTR [rdx+rcx+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 167  : 		if (this->good() && this->flags() & ios_base::unitbuf)

  0001e	75 3c		 jne	 SHORT $LN21@Osfx
  00020	f6 44 0a 18 02	 test	 BYTE PTR [rdx+rcx+24], 2
  00025	74 35		 je	 SHORT $LN21@Osfx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 92   : 		return (_Mystrbuf);

  00027	48 8b 4c 0a 48	 mov	 rcx, QWORD PTR [rdx+rcx+72]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\streambuf

; 145  : 		return (sync());

  0002c	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002f	ff 50 68	 call	 QWORD PTR [rax+104]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 168  : 			if (_Myios::rdbuf()->pubsync() == -1)	// flush stream as needed

  00032	83 f8 ff	 cmp	 eax, -1
  00035	75 25		 jne	 SHORT $LN21@Osfx

; 169  : 				_Myios::setstate(ios_base::badbit);

  00037	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003a	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  0003e	48 03 cb	 add	 rcx, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00041	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
  00044	83 ca 04	 or	 edx, 4
  00047	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  0004c	0f 45 51 10	 cmovne	 edx, DWORD PTR [rcx+16]
  00050	83 ca 04	 or	 edx, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00053	45 33 c0	 xor	 r8d, r8d
  00056	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  0005b	90		 npad	 1
$LN21@Osfx:
$LN9@Osfx:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 172  : 		}

  0005c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00060	5b		 pop	 rbx
  00061	c3		 ret	 0
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:

; 170  : 		_CATCH_ALL
; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:

; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
;	COMDAT ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Byte$ = 88
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z PROC ; std::basic_ios<char,std::char_traits<char> >::widen, COMDAT

; 130  : 		{	// convert _Byte to character using imbued locale

$LN12:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 50	 mov	 QWORD PTR [rsp+80], rbx
  00014	0f b6 fa	 movzx	 edi, dl

; 131  : 		const _Ctype& _Ctype_fac = _USE(getloc(), _Ctype);

  00017	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  0001c	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00021	90		 npad	 1
  00022	48 8b c8	 mov	 rcx, rax
  00025	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
  0002a	48 8b d8	 mov	 rbx, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 431  : 		if (_Ptr != 0)

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR $T2[rsp+8]
  00032	48 85 c9	 test	 rcx, rcx
  00035	74 1a		 je	 SHORT $LN7@widen

; 432  : 			delete _Ptr->_Decref();

  00037	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003a	ff 52 10	 call	 QWORD PTR [rdx+16]
  0003d	48 85 c0	 test	 rax, rax
  00040	74 0f		 je	 SHORT $LN7@widen
  00042	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00045	ba 01 00 00 00	 mov	 edx, 1
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	41 ff 10	 call	 QWORD PTR [r8]
  00050	90		 npad	 1
$LN7@widen:

; 2416 : 		return (do_widen(_Byte));

  00051	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00054	40 0f b6 d7	 movzx	 edx, dil
  00058	48 8b cb	 mov	 rcx, rbx
  0005b	ff 50 40	 call	 QWORD PTR [rax+64]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios

; 133  : 		}

  0005e	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00063	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::widen
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Byte$ = 88
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
$T1 = 32
$T2 = 40
this$ = 80
_Byte$ = 88
?dtor$1@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$1
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Byte$ = 88
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 80
_Byte$ = 88
?dtor$1@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$1
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
;	COMDAT ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ PROC ; std::basic_ios<char,std::char_traits<char> >::fill, COMDAT

; 113  : 		return (_Fillch);

  00000	0f b6 41 58	 movzx	 eax, BYTE PTR [rcx+88]

; 114  : 		}

  00004	c3		 ret	 0
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ENDP ; std::basic_ios<char,std::char_traits<char> >::fill
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT

; 92   : 		return (_Mystrbuf);

  00000	48 8b 41 48	 mov	 rax, QWORD PTR [rcx+72]

; 93   : 		}

  00004	c3		 ret	 0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT

; 80   : 		return (_Tiestr);

  00000	48 8b 41 50	 mov	 rax, QWORD PTR [rcx+80]

; 81   : 		}

  00004	c3		 ret	 0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT

; 59   : 		if (_State != goodbit)

  00000	85 d2		 test	 edx, edx
  00002	74 17		 je	 SHORT $LN2@setstate

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00004	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]
  00007	0b c2		 or	 eax, edx
  00009	8b d0		 mov	 edx, eax
  0000b	83 ca 04	 or	 edx, 4
  0000e	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00013	0f 45 d0	 cmovne	 edx, eax

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00016	e9 00 00 00 00	 jmp	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
$LN2@setstate:

; 61   : 		}

  0001b	c3		 ret	 0
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ios
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT

; 44   : 		{	// set state, possibly reraise exception

  00000	8b c2		 mov	 eax, edx
  00002	83 ca 04	 or	 edx, 4
  00005	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  0000a	0f 45 d0	 cmovne	 edx, eax

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0000d	e9 00 00 00 00	 jmp	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream
; File c:\users\alist_000\cppmisc\ptr_sizes.cc
;	COMDAT main
_TEXT	SEGMENT
main	PROC						; COMDAT

; 26   : int main() {

$LN24:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 27   :   std::cout << "p   " << sizeof(int *) << std::endl;

  00004	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04MNPECFFB@p?5?5?5?$AA@
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00012	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00017	48 8b c8	 mov	 rcx, rax
  0001a	ba 08 00 00 00	 mov	 edx, 8
  0001f	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 28   :   std::cout << "i   " << sizeof(int) << std::endl;

  0002c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04KAAENAKC@i?5?5?5?$AA@
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0003a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0003f	48 8b c8	 mov	 rcx, rax
  00042	ba 04 00 00 00	 mov	 edx, 4
  00047	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 29   :   std::cout << "s   " << sizeof(std::string) << std::endl;

  00054	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04IKFEFPIB@s?5?5?5?$AA@
  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00062	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00067	48 8b c8	 mov	 rcx, rax
  0006a	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0006f	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 30   :   std::cout << "vi  " << sizeof(std::vector<int>) << std::endl;

  0007c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04KEKIMHEG@vi?5?5?$AA@
  00083	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0008a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0008f	48 8b c8	 mov	 rcx, rax
  00092	ba 18 00 00 00	 mov	 edx, 24
  00097	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  0009c	48 8b c8	 mov	 rcx, rax
  0009f	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 31   :   std::cout << "v   " << sizeof(std::vector<Pointer1>) << std::endl;

  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04ECLENAPB@v?5?5?5?$AA@
  000ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  000b2	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  000b7	48 8b c8	 mov	 rcx, rax
  000ba	ba 18 00 00 00	 mov	 edx, 24
  000bf	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 32   :   std::cout << "p1  " << sizeof(Pointer1) << std::endl;

  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04CFFBBFKL@p1?5?5?$AA@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  000da	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  000df	48 8b c8	 mov	 rcx, rax
  000e2	ba 10 00 00 00	 mov	 edx, 16
  000e7	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  000ec	48 8b c8	 mov	 rcx, rax
  000ef	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 33   :   std::cout << "p2  " << sizeof(Pointer2) << std::endl;

  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04DHOELKEF@p2?5?5?$AA@
  000fb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00102	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00107	48 8b c8	 mov	 rcx, rax
  0010a	ba 10 00 00 00	 mov	 edx, 16
  0010f	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  00114	48 8b c8	 mov	 rcx, rax
  00117	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 34   :   std::cout << "p3  " << sizeof(Pointer3) << std::endl;

  0011c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04IPFINNCA@p3?5?5?$AA@
  00123	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0012a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0012f	48 8b c8	 mov	 rcx, rax
  00132	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00137	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  0013c	48 8b c8	 mov	 rcx, rax
  0013f	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 35   :   std::cout << "sptr" << sizeof(std::shared_ptr<int>) << std::endl;

  00144	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04KCGBOJJJ@sptr?$AA@
  0014b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00152	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00157	48 8b c8	 mov	 rcx, rax
  0015a	ba 10 00 00 00	 mov	 edx, 16
  0015f	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  00164	48 8b c8	 mov	 rcx, rax
  00167	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 36   :   std::cout << "uptr" << sizeof(std::unique_ptr<int>) << std::endl;

  0016c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04CNCBBMDJ@uptr?$AA@
  00173	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  0017a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0017f	48 8b c8	 mov	 rcx, rax
  00182	ba 08 00 00 00	 mov	 edx, 8
  00187	e8 00 00 00 00	 call	 ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\ostream

; 199  : 		return ((*_Pfn)(*this));

  0018c	48 8b c8	 mov	 rcx, rax
  0018f	e8 00 00 00 00	 call	 ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
; File c:\users\alist_000\cppmisc\ptr_sizes.cc

; 37   :   return 0;

  00194	33 c0		 xor	 eax, eax

; 38   : }

  00196	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0019a	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ PROC		; std::ios_base::getloc, COMDAT

; 434  : 		{	// get locale

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 28
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  0000f	48 8b da	 mov	 rbx, rdx
  00012	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 435  : 		return (*_Ploc);

  0001a	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 324  : 		: _Ptr(_Right._Ptr)

  0001e	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00022	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();

  00026	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00029	ff 50 08	 call	 QWORD PTR [rax+8]
  0002c	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 435  : 		return (*_Ploc);

  0002d	48 8b c3	 mov	 rax, rbx

; 436  : 		}

  00030	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00034	5b		 pop	 rbx
  00035	c3		 ret	 0
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ENDP		; std::ios_base::getloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$1@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA PROC ; `std::ios_base::getloc'::`1'::dtor$1
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA ENDP ; `std::ios_base::getloc'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$1@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA PROC ; `std::ios_base::getloc'::`1'::dtor$1
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA ENDP ; `std::ios_base::getloc'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEAA_J_J@Z
_TEXT	SEGMENT
this$ = 8
_Newwidth$ = 16
?width@ios_base@std@@QEAA_J_J@Z PROC			; std::ios_base::width, COMDAT

; 428  : 		streamsize _Oldwidth = _Wide;

  00000	48 8b 41 28	 mov	 rax, QWORD PTR [rcx+40]

; 429  : 		_Wide = _Newwidth;

  00004	48 89 51 28	 mov	 QWORD PTR [rcx+40], rdx

; 430  : 		return (_Oldwidth);
; 431  : 		}

  00008	c3		 ret	 0
?width@ios_base@std@@QEAA_J_J@Z ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?width@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::width, COMDAT

; 423  : 		return (_Wide);

  00000	48 8b 41 28	 mov	 rax, QWORD PTR [rcx+40]

; 424  : 		}

  00004	c3		 ret	 0
?width@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?precision@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?precision@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::precision, COMDAT

; 411  : 		return (_Prec);

  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]

; 412  : 		}

  00004	c3		 ret	 0
?precision@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::precision
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?flags@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?flags@ios_base@std@@QEBAHXZ PROC			; std::ios_base::flags, COMDAT

; 378  : 		return (_Fmtfl);

  00000	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]

; 379  : 		}

  00003	c3		 ret	 0
?flags@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::flags
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?good@ios_base@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?good@ios_base@std@@QEBA_NXZ PROC			; std::ios_base::good, COMDAT

; 338  : 		{	// test if no state bits are set

  00000	83 79 10 00	 cmp	 DWORD PTR [rcx+16], 0
  00004	0f 94 c0	 sete	 al

; 339  : 		return (rdstate() == goodbit);
; 340  : 		}

  00007	c3		 ret	 0
?good@ios_base@std@@QEBA_NXZ ENDP			; std::ios_base::good
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?rdstate@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?rdstate@ios_base@std@@QEBAHXZ PROC			; std::ios_base::rdstate, COMDAT

; 315  : 		return (_Mystate);

  00000	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]

; 316  : 		}

  00003	c3		 ret	 0
?rdstate@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::rdstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ?clear@ios_base@std@@QEAAXH_N@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 88
$T11 = 96
$T12 = 96
$T13 = 96
__$ArrayPad$ = 128
this$ = 160
_State$ = 168
_Reraise$ = 176
?clear@ios_base@std@@QEAAXH_N@Z PROC			; std::ios_base::clear, COMDAT

; 287  : 		{	// set state, possibly reraise exception

$LN862:
  00000	40 55		 push	 rbp
  00002	48 8d 6c 24 a9	 lea	 rbp, QWORD PTR [rsp-87]
  00007	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000e	48 c7 45 1f fe
	ff ff ff	 mov	 QWORD PTR $T10[rbp-57], -2
  00016	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001d	48 33 c4	 xor	 rax, rsp
  00020	48 89 45 47	 mov	 QWORD PTR __$ArrayPad$[rbp-57], rax

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00024	83 e2 17	 and	 edx, 23
  00027	89 51 10	 mov	 DWORD PTR [rcx+16], edx

; 289  : 		if ((_Mystate & _Except) == 0)

  0002a	8b 41 14	 mov	 eax, DWORD PTR [rcx+20]
  0002d	23 c2		 and	 eax, edx
  0002f	0f 84 77 02 00
	00		 je	 $LN9@clear

; 290  : 			;
; 291  : 		else if (_Reraise)

  00035	45 84 c0	 test	 r8b, r8b
  00038	74 0a		 je	 SHORT $LN4@clear

; 292  : 			_RERAISE;

  0003a	33 d2		 xor	 edx, edx
  0003c	33 c9		 xor	 ecx, ecx
  0003e	e8 00 00 00 00	 call	 _CxxThrowException
  00043	cc		 int	 3
$LN4@clear:

; 293  : 		else if (_Mystate & _Except & badbit)

  00044	a8 04		 test	 al, 4
  00046	0f 84 c8 00 00
	00		 je	 $LN6@clear
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  0004c	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00051	c7 45 e7 01 00
	00 00		 mov	 DWORD PTR $T6[rbp-57], 1
  00058	48 89 45 ef	 mov	 QWORD PTR $T6[rbp-49], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0005c	48 c7 45 3f 0f
	00 00 00	 mov	 QWORD PTR $T13[rbp-33], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00064	48 c7 45 37 00
	00 00 00	 mov	 QWORD PTR $T13[rbp-41], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0006c	c6 45 27 00	 mov	 BYTE PTR $T13[rbp-57], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00070	41 b8 14 00 00
	00		 mov	 r8d, 20
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
  0007d	48 8d 4d 27	 lea	 rcx, QWORD PTR $T13[rbp-57]
  00081	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00086	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  00087	0f 28 45 e7	 movaps	 xmm0, XMMWORD PTR $T6[rbp-57]
  0008b	66 0f 7f 45 e7	 movdqa	 XMMWORD PTR $T3[rbp-57], xmm0
  00090	4c 8d 45 27	 lea	 r8, QWORD PTR $T13[rbp-57]
  00094	48 8d 55 e7	 lea	 rdx, QWORD PTR $T3[rbp-57]
  00098	48 8d 4d f7	 lea	 rcx, QWORD PTR $T9[rbp-57]
  0009c	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  000a1	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000a2	48 8b 45 3f	 mov	 rax, QWORD PTR $T13[rbp-33]
  000a6	48 83 f8 10	 cmp	 rax, 16
  000aa	72 4c		 jb	 SHORT $LN250@clear

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000ac	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  000af	48 8b 4d 27	 mov	 rcx, QWORD PTR $T13[rbp-57]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000b3	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000b9	72 38		 jb	 SHORT $LN245@clear

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000bb	f6 c1 1f	 test	 cl, 31
  000be	74 06		 je	 SHORT $LN246@clear
  000c0	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c5	cc		 int	 3
$LN246@clear:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000c6	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000ca	48 3b c1	 cmp	 rax, rcx
  000cd	72 06		 jb	 SHORT $LN247@clear
  000cf	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d4	cc		 int	 3
$LN247@clear:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000d5	48 2b c8	 sub	 rcx, rax
  000d8	48 83 f9 08	 cmp	 rcx, 8
  000dc	73 06		 jae	 SHORT $LN248@clear
  000de	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000e3	cc		 int	 3
$LN248@clear:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000e4	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000e8	76 06		 jbe	 SHORT $LN249@clear
  000ea	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000ef	cc		 int	 3
$LN249@clear:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000f0	48 8b c8	 mov	 rcx, rax
$LN245@clear:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000f3	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN250@clear:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 238  : 			{	// construct with message

  000f8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  000ff	48 89 45 f7	 mov	 QWORD PTR $T9[rbp-57], rax

; 294  : 			_THROW_NCEE(failure, "ios_base::badbit set");

  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  0010a	48 8d 4d f7	 lea	 rcx, QWORD PTR $T9[rbp-57]
  0010e	e8 00 00 00 00	 call	 _CxxThrowException
  00113	cc		 int	 3
$LN6@clear:

; 295  : 		else if (_Mystate & _Except & failbit)

  00114	a8 02		 test	 al, 2
  00116	0f 84 c8 00 00
	00		 je	 $LN8@clear
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  0011c	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00121	c7 45 e7 01 00
	00 00		 mov	 DWORD PTR $T5[rbp-57], 1
  00128	48 89 45 ef	 mov	 QWORD PTR $T5[rbp-49], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0012c	48 c7 45 3f 0f
	00 00 00	 mov	 QWORD PTR $T12[rbp-33], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00134	48 c7 45 37 00
	00 00 00	 mov	 QWORD PTR $T12[rbp-41], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0013c	c6 45 27 00	 mov	 BYTE PTR $T12[rbp-57], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00140	41 b8 15 00 00
	00		 mov	 r8d, 21
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
  0014d	48 8d 4d 27	 lea	 rcx, QWORD PTR $T12[rbp-57]
  00151	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00156	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  00157	0f 28 45 e7	 movaps	 xmm0, XMMWORD PTR $T5[rbp-57]
  0015b	66 0f 7f 45 e7	 movdqa	 XMMWORD PTR $T2[rbp-57], xmm0
  00160	4c 8d 45 27	 lea	 r8, QWORD PTR $T12[rbp-57]
  00164	48 8d 55 e7	 lea	 rdx, QWORD PTR $T2[rbp-57]
  00168	48 8d 4d f7	 lea	 rcx, QWORD PTR $T8[rbp-57]
  0016c	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  00171	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00172	48 8b 45 3f	 mov	 rax, QWORD PTR $T12[rbp-33]
  00176	48 83 f8 10	 cmp	 rax, 16
  0017a	72 4c		 jb	 SHORT $LN534@clear

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0017c	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0017f	48 8b 4d 27	 mov	 rcx, QWORD PTR $T12[rbp-57]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00183	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00189	72 38		 jb	 SHORT $LN529@clear

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0018b	f6 c1 1f	 test	 cl, 31
  0018e	74 06		 je	 SHORT $LN530@clear
  00190	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00195	cc		 int	 3
$LN530@clear:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00196	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0019a	48 3b c1	 cmp	 rax, rcx
  0019d	72 06		 jb	 SHORT $LN531@clear
  0019f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001a4	cc		 int	 3
$LN531@clear:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  001a5	48 2b c8	 sub	 rcx, rax
  001a8	48 83 f9 08	 cmp	 rcx, 8
  001ac	73 06		 jae	 SHORT $LN532@clear
  001ae	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001b3	cc		 int	 3
$LN532@clear:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  001b4	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  001b8	76 06		 jbe	 SHORT $LN533@clear
  001ba	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001bf	cc		 int	 3
$LN533@clear:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  001c0	48 8b c8	 mov	 rcx, rax
$LN529@clear:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  001c3	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN534@clear:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 238  : 			{	// construct with message

  001c8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  001cf	48 89 45 f7	 mov	 QWORD PTR $T8[rbp-57], rax

; 296  : 			_THROW_NCEE(failure, "ios_base::failbit set");

  001d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  001da	48 8d 4d f7	 lea	 rcx, QWORD PTR $T8[rbp-57]
  001de	e8 00 00 00 00	 call	 _CxxThrowException
  001e3	cc		 int	 3
$LN8@clear:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  001e4	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  001e9	c7 45 e7 01 00
	00 00		 mov	 DWORD PTR $T4[rbp-57], 1
  001f0	48 89 45 ef	 mov	 QWORD PTR $T4[rbp-49], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  001f4	48 c7 45 3f 0f
	00 00 00	 mov	 QWORD PTR $T11[rbp-33], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  001fc	48 c7 45 37 00
	00 00 00	 mov	 QWORD PTR $T11[rbp-41], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00204	c6 45 27 00	 mov	 BYTE PTR $T11[rbp-57], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00208	41 b8 14 00 00
	00		 mov	 r8d, 20
  0020e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
  00215	48 8d 4d 27	 lea	 rcx, QWORD PTR $T11[rbp-57]
  00219	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0021e	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  0021f	0f 28 45 e7	 movaps	 xmm0, XMMWORD PTR $T4[rbp-57]
  00223	66 0f 7f 45 e7	 movdqa	 XMMWORD PTR $T1[rbp-57], xmm0
  00228	4c 8d 45 27	 lea	 r8, QWORD PTR $T11[rbp-57]
  0022c	48 8d 55 e7	 lea	 rdx, QWORD PTR $T1[rbp-57]
  00230	48 8d 4d f7	 lea	 rcx, QWORD PTR $T7[rbp-57]
  00234	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  00239	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0023a	48 8b 45 3f	 mov	 rax, QWORD PTR $T11[rbp-33]
  0023e	48 83 f8 10	 cmp	 rax, 16
  00242	72 4c		 jb	 SHORT $LN817@clear

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00244	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00247	48 8b 4d 27	 mov	 rcx, QWORD PTR $T11[rbp-57]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0024b	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00251	72 38		 jb	 SHORT $LN812@clear

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00253	f6 c1 1f	 test	 cl, 31
  00256	74 06		 je	 SHORT $LN813@clear
  00258	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0025d	cc		 int	 3
$LN813@clear:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0025e	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00262	48 3b c1	 cmp	 rax, rcx
  00265	72 06		 jb	 SHORT $LN814@clear
  00267	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0026c	cc		 int	 3
$LN814@clear:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0026d	48 2b c8	 sub	 rcx, rax
  00270	48 83 f9 08	 cmp	 rcx, 8
  00274	73 06		 jae	 SHORT $LN815@clear
  00276	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0027b	cc		 int	 3
$LN815@clear:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0027c	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00280	76 06		 jbe	 SHORT $LN816@clear
  00282	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00287	cc		 int	 3
$LN816@clear:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00288	48 8b c8	 mov	 rcx, rax
$LN812@clear:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0028b	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN817@clear:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase

; 238  : 			{	// construct with message

  00290	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00297	48 89 45 f7	 mov	 QWORD PTR $T7[rbp-57], rax

; 297  : 		else
; 298  : 			_THROW_NCEE(failure, "ios_base::eofbit set");

  0029b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  002a2	48 8d 4d f7	 lea	 rcx, QWORD PTR $T7[rbp-57]
  002a6	e8 00 00 00 00	 call	 _CxxThrowException
  002ab	cc		 int	 3
$LN9@clear:

; 299  : 		}

  002ac	48 8b 4d 47	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-57]
  002b0	48 33 cc	 xor	 rcx, rsp
  002b3	e8 00 00 00 00	 call	 __security_check_cookie
  002b8	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  002bf	5d		 pop	 rbp
  002c0	c3		 ret	 0
$LN861@clear:
?clear@ios_base@std@@QEAAXH_N@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 88
$T11 = 96
$T12 = 96
$T13 = 96
__$ArrayPad$ = 128
this$ = 160
_State$ = 168
_Reraise$ = 176
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$4
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T13[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$4
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 88
$T11 = 96
$T12 = 96
$T13 = 96
__$ArrayPad$ = 128
this$ = 160
_State$ = 168
_Reraise$ = 176
?dtor$71@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$71
  0000c	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T12[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$71@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$71
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 88
$T11 = 96
$T12 = 96
$T13 = 96
__$ArrayPad$ = 128
this$ = 160
_State$ = 168
_Reraise$ = 176
?dtor$138@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$138
  00018	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T11[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$138@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$138
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 88
$T11 = 96
$T12 = 96
$T13 = 96
__$ArrayPad$ = 128
this$ = 160
_State$ = 168
_Reraise$ = 176
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$4
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T13[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 88
$T11 = 96
$T12 = 96
$T13 = 96
__$ArrayPad$ = 128
this$ = 160
_State$ = 168
_Reraise$ = 176
?dtor$71@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$71
  0000c	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T12[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$71@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$71
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 48
$T8 = 48
$T9 = 48
$T10 = 88
$T11 = 96
$T12 = 96
$T13 = 96
__$ArrayPad$ = 128
this$ = 160
_State$ = 168
_Reraise$ = 176
?dtor$138@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$138
  00018	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T11[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$138@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$138
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??_Gfailure@ios_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfailure@ios_base@std@@UEAAPEAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
$LN20:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN18@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN18@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gfailure@ios_base@std@@UEAAPEAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0failure@ios_base@std@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0failure@ios_base@std@@QEAA@AEBV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
$LN15:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00041	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 89 07	 mov	 QWORD PTR [rdi], rax
  0004d	48 8b c7	 mov	 rax, rdi
  00050	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0failure@ios_base@std@@QEAA@AEBV012@@Z ENDP		; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??1failure@ios_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1failure@ios_base@std@@UEAA@XZ PROC			; std::ios_base::failure::~failure, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1failure@ios_base@std@@UEAA@XZ ENDP			; std::ios_base::failure::~failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xiosbase
;	COMDAT ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Message$ = 72
_Errcode$ = 80
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z PROC ; std::ios_base::failure::failure, COMDAT

; 238  : 			{	// construct with message

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 237  : 			: system_error(_Errcode, _Message)

  00006	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  0000a	4c 8b c2	 mov	 r8, rdx

; 238  : 			{	// construct with message

  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00015	0f 29 44 24 20	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  0001a	e8 00 00 00 00	 call	 ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ; std::system_error::system_error
  0001f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00026	48 89 03	 mov	 QWORD PTR [rbx], rax

; 239  : 			}

  00029	48 8b c3	 mov	 rax, rbx
  0002c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00030	5b		 pop	 rbx
  00031	c3		 ret	 0
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ENDP ; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
_TEXT	SEGMENT
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ PROC ; std::_Immortalize<std::_Iostream_error_category>, COMDAT

; 697  : 	{	// return a reference to an object that will live forever

$LN24:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 698  : 	/* MAGIC */ static _Immortalizer<_Ty> _Static;

  00004	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  00013	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  00018	48 8b 0c c8	 mov	 rcx, QWORD PTR [rax+rcx*8]
  0001c	8b 04 0a	 mov	 eax, DWORD PTR [rdx+rcx]
  0001f	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, eax ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00025	7f 0c		 jg	 SHORT $LN22@Immortaliz
$LN20@Immortaliz:

; 699  : 	return (*reinterpret_cast<_Ty *>(&_Static._Storage));

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static

; 700  : 	}

  0002e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00032	c3		 ret	 0
$LN22@Immortaliz:

; 698  : 	/* MAGIC */ static _Immortalizer<_Ty> _Static;

  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0003a	e8 00 00 00 00	 call	 _Init_thread_header
  0003f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, -1 ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00046	75 df		 jne	 SHORT $LN20@Immortaliz

; 616  : 		{	// default constructor

  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  0004f	48 c7 05 08 00
	00 00 05 00 00
	00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A+8, 5

; 698  : 	/* MAGIC */ static _Immortalizer<_Ty> _Static;

  0005a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''

; 616  : 		{	// default constructor

  00061	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A, rax

; 698  : 	/* MAGIC */ static _Immortalizer<_Ty> _Static;

  00068	e8 00 00 00 00	 call	 atexit
  0006d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00074	e8 00 00 00 00	 call	 _Init_thread_footer
  00079	eb ac		 jmp	 SHORT $LN20@Immortaliz
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ENDP ; std::_Immortalize<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??_G_Iostream_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Iostream_error_category@std@@UEAAPEAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN13@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Iostream_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??1_Iostream_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Iostream_error_category@std@@UEAA@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	c3		 ret	 0
??1_Iostream_error_category@std@@UEAA@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT

; 626  : 		{	// convert to name of error

$LN148:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	33 c0		 xor	 eax, eax
  00008	48 8b da	 mov	 rbx, rdx
  0000b	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax

; 627  : 		if (_Errcode == (int)io_errc::stream)

  0000f	41 83 f8 01	 cmp	 r8d, 1
  00013	75 2a		 jne	 SHORT $LN2@message
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 42 18 0f
	00 00 00	 mov	 QWORD PTR [rdx+24], 15

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0001d	44 8d 40 15	 lea	 r8d, QWORD PTR [rax+21]

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00021	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00025	48 8b cb	 mov	 rcx, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00028	88 02		 mov	 BYTE PTR [rdx], al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0002a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
  00031	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 630  : 			return (_Generic_error_category::message(_Errcode));

  00036	48 8b c3	 mov	 rax, rbx

; 631  : 		}

  00039	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
$LN2@message:

; 630  : 			return (_Generic_error_category::message(_Errcode));

  0003f	e8 00 00 00 00	 call	 ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
  00044	48 8b c3	 mov	 rax, rbx

; 631  : 		}

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5b		 pop	 rbx
  0004c	c3		 ret	 0
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Iostream_error_category@std@@UEBAPEBDXZ PROC	; std::_Iostream_error_category::name, COMDAT

; 622  : 		return ("iostream");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08LLGCOLLL@iostream?$AA@

; 623  : 		}

  00007	c3		 ret	 0
?name@_Iostream_error_category@std@@UEBAPEBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Iostream_error_category@std@@QEAA@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT

; 616  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  00007	48 c7 41 08 05
	00 00 00	 mov	 QWORD PTR [rcx+8], 5
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 618  : 		}

  00012	48 8b c1	 mov	 rax, rcx
  00015	c3		 ret	 0
??0_Iostream_error_category@std@@QEAA@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??_G_Generic_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Generic_error_category@std@@UEAAPEAXI@Z PROC	; std::_Generic_error_category::`scalar deleting destructor', COMDAT
$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN10@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN10@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Generic_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??1_Generic_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Generic_error_category@std@@UEAA@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	c3		 ret	 0
??1_Generic_error_category@std@@UEAA@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT

; 605  : 		{	// convert to name of error

$LN146:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	33 db		 xor	 ebx, ebx

; 606  : 		return (_Syserror_map(_Errcode));

  0000c	41 8b c8	 mov	 ecx, r8d
  0000f	89 5c 24 20	 mov	 DWORD PTR $T1[rsp], ebx
  00013	48 8b fa	 mov	 rdi, rdx
  00016	e8 00 00 00 00	 call	 ?_Syserror_map@std@@YAPEBDH@Z ; std::_Syserror_map
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001b	48 c7 47 18 0f
	00 00 00	 mov	 QWORD PTR [rdi+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00023	48 89 5f 10	 mov	 QWORD PTR [rdi+16], rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00027	88 1f		 mov	 BYTE PTR [rdi], bl

; 523  : 		return (*_First == 0 ? 0

  00029	38 18		 cmp	 BYTE PTR [rax], bl
  0002b	74 0d		 je	 SHORT $LN142@message
  0002d	48 83 cb ff	 or	 rbx, -1
$LL144@message:
  00031	48 ff c3	 inc	 rbx
  00034	80 3c 18 00	 cmp	 BYTE PTR [rax+rbx], 0
  00038	75 f7		 jne	 SHORT $LL144@message
$LN142@message:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003a	4c 8b c3	 mov	 r8, rbx
  0003d	48 8b d0	 mov	 rdx, rax
  00040	48 8b cf	 mov	 rcx, rdi
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 607  : 		}

  00048	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0004d	48 8b c7	 mov	 rax, rdi
  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Generic_error_category@std@@UEBAPEBDXZ PROC	; std::_Generic_error_category::name, COMDAT

; 601  : 		return ("generic");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_07DCLBNMLN@generic?$AA@

; 602  : 		}

  00007	c3		 ret	 0
?name@_Generic_error_category@std@@UEBAPEBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Generic_error_category@std@@QEAA@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT

; 595  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Generic_error_category@std@@6B@

; 596  : 		_Addr = _Generic_addr;

  00007	48 c7 41 08 03
	00 00 00	 mov	 QWORD PTR [rcx+8], 3
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 597  : 		}

  00012	48 8b c1	 mov	 rax, rcx
  00015	c3		 ret	 0
??0_Generic_error_category@std@@QEAA@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??_Gsystem_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gsystem_error@std@@UEAAPEAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
$LN17:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN15@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN15@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gsystem_error@std@@UEAAPEAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0system_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0system_error@std@@QEAA@AEBV01@@Z PROC		; std::system_error::system_error, COMDAT
$LN12:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7system_error@std@@6B@
  00041	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 89 07	 mov	 QWORD PTR [rdi], rax
  0004d	48 8b c7	 mov	 rax, rdi
  00050	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0system_error@std@@QEAA@AEBV01@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??1system_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1system_error@std@@UEAA@XZ PROC			; std::system_error::~system_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1system_error@std@@UEAA@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z PROC	; std::system_error::system_error, COMDAT

; 548  : 		{	// construct from error code and message string

$LN273:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	57		 push	 rdi
  00004	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00008	49 c7 43 a8 fe
	ff ff ff	 mov	 QWORD PTR [r11-88], -2
  00010	49 89 5b 20	 mov	 QWORD PTR [r11+32], rbx
  00014	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001b	48 33 c4	 xor	 rax, rsp
  0001e	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00023	49 8b c0	 mov	 rax, r8
  00026	48 8b fa	 mov	 rdi, rdx
  00029	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0002c	49 c7 43 e0 0f
	00 00 00	 mov	 QWORD PTR [r11-32], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00034	45 33 c0	 xor	 r8d, r8d
  00037	4d 89 43 d8	 mov	 QWORD PTR [r11-40], r8
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0003b	45 88 43 c8	 mov	 BYTE PTR [r11-56], r8b

; 523  : 		return (*_First == 0 ? 0

  0003f	44 38 00	 cmp	 BYTE PTR [rax], r8b
  00042	74 16		 je	 SHORT $LN142@system_err
  00044	49 83 c8 ff	 or	 r8, -1
  00048	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL271@system_err:
  00050	49 ff c0	 inc	 r8
  00053	42 80 3c 00 00	 cmp	 BYTE PTR [rax+r8], 0
  00058	75 f6		 jne	 SHORT $LL271@system_err
$LN142@system_err:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0005a	48 8b d0	 mov	 rdx, rax
  0005d	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T2[rsp]
  00062	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00067	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  00068	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  0006b	0f 29 44 24 30	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00070	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T2[rsp]
  00075	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T1[rsp]
  0007a	48 8b cb	 mov	 rcx, rbx
  0007d	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  00082	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00083	48 8b 44 24 58	 mov	 rax, QWORD PTR $T2[rsp+24]
  00088	48 83 f8 10	 cmp	 rax, 16
  0008c	72 4d		 jb	 SHORT $LN228@system_err

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0008e	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00091	48 8b 4c 24 40	 mov	 rcx, QWORD PTR $T2[rsp]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00096	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0009c	72 38		 jb	 SHORT $LN223@system_err

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0009e	f6 c1 1f	 test	 cl, 31
  000a1	74 06		 je	 SHORT $LN224@system_err
  000a3	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a8	cc		 int	 3
$LN224@system_err:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000a9	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000ad	48 3b c1	 cmp	 rax, rcx
  000b0	72 06		 jb	 SHORT $LN225@system_err
  000b2	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000b7	cc		 int	 3
$LN225@system_err:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000b8	48 2b c8	 sub	 rcx, rax
  000bb	48 83 f9 08	 cmp	 rcx, 8
  000bf	73 06		 jae	 SHORT $LN226@system_err
  000c1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c6	cc		 int	 3
$LN226@system_err:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000c7	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000cb	76 06		 jbe	 SHORT $LN227@system_err
  000cd	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d2	cc		 int	 3
$LN227@system_err:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000d3	48 8b c8	 mov	 rcx, rax
$LN223@system_err:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000d6	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN228@system_err:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 548  : 		{	// construct from error code and message string

  000db	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7system_error@std@@6B@
  000e2	48 89 03	 mov	 QWORD PTR [rbx], rax

; 549  : 		}

  000e5	48 8b c3	 mov	 rax, rbx
  000e8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000ed	48 33 cc	 xor	 rcx, rsp
  000f0	e8 00 00 00 00	 call	 __security_check_cookie
  000f5	48 8b 9c 24 98
	00 00 00	 mov	 rbx, QWORD PTR [rsp+152]
  000fd	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00101	5f		 pop	 rdi
  00102	c3		 ret	 0
$LN272@system_err:
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ENDP	; std::system_error::system_error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??_G_System_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_System_error@std@@UEAAPEAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN12@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_G_System_error@std@@UEAAPEAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0_System_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0_System_error@std@@QEAA@AEBV01@@Z PROC		; std::_System_error::_System_error, COMDAT
$LN9:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8b c7	 mov	 rax, rdi
  0003d	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00041	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00046	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0_System_error@std@@QEAA@AEBV01@@Z ENDP		; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??1_System_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_System_error@std@@UEAA@XZ PROC			; std::_System_error::~_System_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1_System_error@std@@UEAA@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
$T2 = 32
$T3 = 48
$T4 = 80
__$ArrayPad$ = 112
this$ = 144
_Errcode$ = 152
_Message$ = 160
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT

; 523  : 		{	// construct from error code and message string

$LN313:
  00000	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00014	48 33 c4	 xor	 rax, rsp
  00017	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0001c	49 8b c0	 mov	 rax, r8
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001f	48 c7 44 24 48
	0f 00 00 00	 mov	 QWORD PTR $T3[rsp+24], 15
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 523  : 		{	// construct from error code and message string

  00028	48 8b fa	 mov	 rdi, rdx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002b	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR $T3[rsp+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 523  : 		{	// construct from error code and message string

  00034	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00037	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  00044	49 83 c9 ff	 or	 r9, -1
  00048	45 33 c0	 xor	 r8d, r8d
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  00050	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  00053	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T3[rsp]
  00058	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T2[rsp]
  0005d	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  00062	0f 29 44 24 20	 movaps	 XMMWORD PTR $T2[rsp], xmm0
  00067	e8 00 00 00 00	 call	 ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0006c	48 83 78 18 10	 cmp	 QWORD PTR [rax+24], 16
  00071	72 03		 jb	 SHORT $LN173@System_err
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN173@System_err:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 52   :         : _Data()

  00076	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 53   :     {
; 54   :         __std_exception_data _InitData = { _Message, true };

  0007a	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00086	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
  0008b	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0008e	33 c9		 xor	 ecx, ecx
  00090	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00093	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00097	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  0009c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept

; 163  : 		{	// construct from message string

  000a1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  000a8	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000ab	48 8b 44 24 68	 mov	 rax, QWORD PTR $T4[rsp+24]
  000b0	48 83 f8 10	 cmp	 rax, 16
  000b4	72 35		 jb	 SHORT $LN264@System_err
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  000b6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T4[rsp]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000bb	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000be	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000c4	72 20		 jb	 SHORT $LN259@System_err

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000c6	f6 c1 1f	 test	 cl, 31
  000c9	75 52		 jne	 SHORT $LN308@System_err

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000cb	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000cf	48 3b c1	 cmp	 rax, rcx
  000d2	73 4f		 jae	 SHORT $LN310@System_err

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000d4	48 2b c8	 sub	 rcx, rax
  000d7	48 83 f9 08	 cmp	 rcx, 8
  000db	72 4c		 jb	 SHORT $LN311@System_err

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000dd	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000e1	77 4c		 ja	 SHORT $LN312@System_err

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000e3	48 8b c8	 mov	 rcx, rax
$LN259@System_err:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000e6	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN264@System_err:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 523  : 		{	// construct from error code and message string

  000eb	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  000f2	48 89 03	 mov	 QWORD PTR [rbx], rax

; 524  : 		}

  000f5	48 8b c3	 mov	 rax, rbx
  000f8	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  000fb	0f 11 43 18	 movups	 XMMWORD PTR [rbx+24], xmm0
  000ff	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00104	48 33 cc	 xor	 rcx, rsp
  00107	e8 00 00 00 00	 call	 __security_check_cookie
  0010c	48 8b 9c 24 a8
	00 00 00	 mov	 rbx, QWORD PTR [rsp+168]
  00114	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0011b	5f		 pop	 rdi
  0011c	c3		 ret	 0
$LN308@System_err:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0011d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00122	cc		 int	 3
$LN310@System_err:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00123	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00128	cc		 int	 3
$LN311@System_err:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00129	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0012e	cc		 int	 3
$LN312@System_err:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0012f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00134	cc		 int	 3
$LN307@System_err:
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT

; 513  : 		{	// compose error message

$LN308:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00008	48 c7 44 24 28
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  00011	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00018	48 33 c4	 xor	 rax, rsp
  0001b	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00020	49 8b f8	 mov	 rdi, r8
  00023	48 8b f2	 mov	 rsi, rdx
  00026	48 8b d9	 mov	 rbx, rcx
  00029	4c 89 44 24 30	 mov	 QWORD PTR _Message$GSCopy$[rsp], r8
  0002e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00036	49 83 78 10 00	 cmp	 QWORD PTR [r8+16], 0

; 514  : 		if (!_Message.empty())

  0003b	74 15		 je	 SHORT $LN2@Makestr
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1101 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  0003d	41 b8 02 00 00
	00		 mov	 r8d, 2
  00043	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5?$AA@
  0004a	48 8b cf	 mov	 rcx, rdi
  0004d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@Makestr:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 516  : 		_Message.append(_Errcode.message());

  00052	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  00057	48 8b ce	 mov	 rcx, rsi
  0005a	e8 00 00 00 00	 call	 ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
  0005f	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1059 : 		return (append(_Right, 0, npos));

  00060	49 83 c9 ff	 or	 r9, -1
  00064	45 33 c0	 xor	 r8d, r8d
  00067	48 8b d0	 mov	 rdx, rax
  0006a	48 8b cf	 mov	 rcx, rdi
  0006d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  00072	90		 npad	 1

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00073	48 8b 44 24 50	 mov	 rax, QWORD PTR $T3[rsp+24]
  00078	48 83 f8 10	 cmp	 rax, 16
  0007c	72 4d		 jb	 SHORT $LN112@Makestr

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0007e	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00081	48 8b 4c 24 38	 mov	 rcx, QWORD PTR $T3[rsp]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00086	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0008c	72 38		 jb	 SHORT $LN107@Makestr

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0008e	f6 c1 1f	 test	 cl, 31
  00091	74 06		 je	 SHORT $LN108@Makestr
  00093	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00098	cc		 int	 3
$LN108@Makestr:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00099	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0009d	48 3b c1	 cmp	 rax, rcx
  000a0	72 06		 jb	 SHORT $LN109@Makestr
  000a2	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a7	cc		 int	 3
$LN109@Makestr:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000a8	48 2b c8	 sub	 rcx, rax
  000ab	48 83 f9 08	 cmp	 rcx, 8
  000af	73 06		 jae	 SHORT $LN110@Makestr
  000b1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000b6	cc		 int	 3
$LN110@Makestr:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000b7	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000bb	76 06		 jbe	 SHORT $LN111@Makestr
  000bd	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c2	cc		 int	 3
$LN111@Makestr:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000c3	48 8b c8	 mov	 rcx, rax
$LN107@Makestr:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000c6	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN112@Makestr:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000cb	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d3	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000db	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000e0	72 05		 jb	 SHORT $LN295@Makestr
  000e2	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000e5	eb 03		 jmp	 SHORT $LN296@Makestr
$LN295@Makestr:
  000e7	48 8b c3	 mov	 rax, rbx
$LN296@Makestr:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000ea	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 907  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  000ed	48 8b d7	 mov	 rdx, rdi
  000f0	48 8b cb	 mov	 rcx, rbx
  000f3	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
  000f8	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error

; 517  : 		return (_Message);

  000f9	48 8b cf	 mov	 rcx, rdi
  000fc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00101	48 8b c3	 mov	 rax, rbx

; 518  : 		}

  00104	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00109	48 33 cc	 xor	 rcx, rsp
  0010c	e8 00 00 00 00	 call	 __security_check_cookie
  00111	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00115	5f		 pop	 rdi
  00116	5e		 pop	 rsi
  00117	5b		 pop	 rbx
  00118	c3		 ret	 0
$LN307@Makestr:
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _Message$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _Message$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??8std@@YA_NAEBVerror_condition@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??8std@@YA_NAEBVerror_condition@0@0@Z PROC		; std::operator==, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	4c 8b 49 08	 mov	 r9, QWORD PTR [rcx+8]
  00008	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0000c	4d 39 41 08	 cmp	 QWORD PTR [r9+8], r8

; 393  : 	return (_Left.category() == _Right.category()

  00010	75 09		 jne	 SHORT $LN3@operator
  00012	8b 02		 mov	 eax, DWORD PTR [rdx]
  00014	39 01		 cmp	 DWORD PTR [rcx], eax
  00016	75 03		 jne	 SHORT $LN3@operator
  00018	b0 01		 mov	 al, 1

; 394  : 		&& _Left.value() == _Right.value());
; 395  : 	}

  0001a	c3		 ret	 0
$LN3@operator:

; 393  : 	return (_Left.category() == _Right.category()

  0001b	32 c0		 xor	 al, al

; 394  : 		&& _Left.value() == _Right.value());
; 395  : 	}

  0001d	c3		 ret	 0
??8std@@YA_NAEBVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT

; 346  : 		return (*_Mycat);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 347  : 		}

  00004	c3		 ret	 0
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?value@error_condition@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_condition@std@@QEBAHXZ PROC		; std::error_condition::value, COMDAT

; 341  : 		return (_Myval);

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 342  : 		}

  00002	c3		 ret	 0
?value@error_condition@std@@QEBAHXZ ENDP		; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 308  : 		}

  00002	48 8b c1	 mov	 rax, rcx
  00005	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  00009	c3		 ret	 0
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT

; 279  : 		{	// get name of error code

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 280  : 		return (category().message(value()));

  00006	44 8b 01	 mov	 r8d, DWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx

; 273  : 		return (*_Mycat);

  0000c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00010	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 280  : 		return (category().message(value()));

  00018	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0001b	ff 50 10	 call	 QWORD PTR [rax+16]
  0001e	48 8b c3	 mov	 rax, rbx

; 281  : 		}

  00021	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00025	5b		 pop	 rbx
  00026	c3		 ret	 0
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?category@error_code@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_code@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_code::category, COMDAT

; 273  : 		return (*_Mycat);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 274  : 		}

  00004	c3		 ret	 0
?category@error_code@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?value@error_code@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_code@std@@QEBAHXZ PROC			; std::error_code::value, COMDAT

; 268  : 		return (_Myval);

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 269  : 		}

  00002	c3		 ret	 0
?value@error_code@std@@QEBAHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 235  : 		}

  00002	48 8b c1	 mov	 rax, rcx
  00005	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  00009	c3		 ret	 0
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??_Gerror_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gerror_category@std@@UEAAPEAXI@Z PROC		; std::error_category::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN7@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN7@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_Gerror_category@std@@UEAAPEAXI@Z ENDP		; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??8error_category@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8error_category@std@@QEBA_NAEBV01@@Z PROC		; std::error_category::operator==, COMDAT

; 191  : 		{	// compare categories for equality

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  00008	0f 94 c0	 sete	 al

; 192  : 		return (_Addr == _Right._Addr);
; 193  : 		}

  0000b	c3		 ret	 0
??8error_category@std@@QEBA_NAEBV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
_TEXT	SEGMENT
this$ = 8
_Code$ = 16
_Errval$ = 24
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  00008	4c 39 49 08	 cmp	 QWORD PTR [rcx+8], r9

; 463  : 	return (*this == _Code.category() && _Code.value() == _Errval);

  0000c	75 08		 jne	 SHORT $LN3@equivalent
  0000e	44 39 02	 cmp	 DWORD PTR [rdx], r8d
  00011	75 03		 jne	 SHORT $LN3@equivalent
  00013	b0 01		 mov	 al, 1

; 464  : 	}

  00015	c3		 ret	 0
$LN3@equivalent:

; 463  : 	return (*this == _Code.category() && _Code.value() == _Errval);

  00016	32 c0		 xor	 al, al

; 464  : 	}

  00018	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Errval$ = 72
_Cond$ = 80
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT

; 455  : 	{	// test if error code same condition

$LN24:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	49 8b d8	 mov	 rbx, r8
  0000c	44 8b c2	 mov	 r8d, edx
  0000f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00014	ff 50 18	 call	 QWORD PTR [rax+24]

; 192  : 		return (_Addr == _Right._Addr);

  00017	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  0001b	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0001f	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00023	49 39 51 08	 cmp	 QWORD PTR [r9+8], rdx

; 393  : 	return (_Left.category() == _Right.category()

  00027	75 0e		 jne	 SHORT $LN5@equivalent
  00029	8b 0b		 mov	 ecx, DWORD PTR [rbx]
  0002b	39 08		 cmp	 DWORD PTR [rax], ecx
  0002d	75 08		 jne	 SHORT $LN5@equivalent

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  0002f	b0 01		 mov	 al, 1

; 457  : 	}

  00031	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00035	5b		 pop	 rbx
  00036	c3		 ret	 0
$LN5@equivalent:

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  00037	32 c0		 xor	 al, al

; 457  : 	}

  00039	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Errval$ = 24
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	44 89 02	 mov	 DWORD PTR [rdx], r8d

; 449  : 	return (error_condition(_Errval, *this));

  00003	48 8b c2	 mov	 rax, rdx

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00006	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 450  : 	}

  0000a	c3		 ret	 0
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??1error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1error_category@std@@UEAA@XZ PROC			; std::error_category::~error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 175  : 		}

  0000a	c3		 ret	 0
??1error_category@std@@UEAA@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ??0error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0error_category@std@@QEAA@XZ PROC			; std::error_category::error_category, COMDAT

; 169  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@

; 170  : 		_Addr = reinterpret_cast<uintptr_t>(this);

  00007	48 89 49 08	 mov	 QWORD PTR [rcx+8], rcx
  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 171  : 		}

  0000e	48 8b c1	 mov	 rax, rcx
  00011	c3		 ret	 0
??0error_category@std@@QEAA@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?iostream_category@std@@YAAEBVerror_category@1@XZ
_TEXT	SEGMENT
?iostream_category@std@@YAAEBVerror_category@1@XZ PROC	; std::iostream_category, COMDAT

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  00000	e9 00 00 00 00	 jmp	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
?iostream_category@std@@YAAEBVerror_category@1@XZ ENDP	; std::iostream_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\system_error
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Errno$ = 56
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z PROC ; std::make_error_code, COMDAT

; 479  : 	{	// make an error_code

$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	8b da		 mov	 ebx, edx
  0000c	48 8b f9	 mov	 rdi, rcx

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  0000f	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00014	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 480  : 	return (error_code((int)_Errno, iostream_category()));

  00018	48 8b c7	 mov	 rax, rdi

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  0001b	89 1f		 mov	 DWORD PTR [rdi], ebx

; 481  : 	}

  0001d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00022	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00026	5f		 pop	 rdi
  00027	c3		 ret	 0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN32:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00008	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00011	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00016	48 8b e9	 mov	 rbp, rcx

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00019	33 d2		 xor	 edx, edx
  0001b	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00026	48 8b 35 00 00
	00 00		 mov	 rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
  0002d	48 89 74 24 70	 mov	 QWORD PTR _Psave$5[rsp], rsi

; 115  : 			if (_Id == 0)

  00032	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
  00039	48 85 ff	 test	 rdi, rdi
  0003c	75 3d		 jne	 SHORT $LN11@use_facet

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0003e	33 d2		 xor	 edx, edx
  00040	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00045	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0004a	48 39 3d 00 00
	00 00		 cmp	 QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rdi ; std::ctype<char>::id
  00051	75 17		 jne	 SHORT $LN12@use_facet

; 119  : 						_Id = ++_Id_cnt;

  00053	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00059	ff c0		 inc	 eax
  0005b	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00061	48 98		 cdqe
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rax ; std::ctype<char>::id
$LN12@use_facet:

; 120  : 				_END_LOCK()

  0006a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  0006f	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00074	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
$LN11@use_facet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0007b	48 8b 4d 08	 mov	 rcx, QWORD PTR [rbp+8]
  0007f	48 3b 79 18	 cmp	 rdi, QWORD PTR [rcx+24]
  00083	73 13		 jae	 SHORT $LN20@use_facet
  00085	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00089	48 8b 1c f8	 mov	 rbx, QWORD PTR [rax+rdi*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0008d	48 85 db	 test	 rbx, rbx
  00090	0f 85 8e 00 00
	00		 jne	 $LN7@use_facet
  00096	eb 02		 jmp	 SHORT $LN28@use_facet
$LN20@use_facet:

; 121  : 				}
; 122  : 			return (_Id);
; 123  : 			}
; 124  : 
; 125  : 	private:
; 126  : 		size_t _Id;	// the identifier stamp
; 127  : 
; 128  : 		__PURE_APPDOMAIN_GLOBAL static int _Id_cnt;
; 129  : 
; 130  : 	public:
; 131  : 		__CLR_OR_THIS_CALL id(const id&) = delete;
; 132  : 		id& __CLR_OR_THIS_CALL operator=(const id&) = delete;
; 133  : 		};
; 134  : 
; 135  : 	class _Locimp;
; 136  : 
; 137  : 			// CLASS facet
; 138  : 	class _CRTIMP2_PURE facet
; 139  : 		: public _Facet_base, public _Crt_new_delete
; 140  : 		{	// base class for all locale facets, performs reference counting
; 141  : 	public:
; 142  : 		static size_t __CLRCALL_OR_CDECL _Getcat(const facet ** = 0,
; 143  : 			const locale * = 0)
; 144  : 			{	// get category value, or -1 if no corresponding C category
; 145  : 			return ((size_t)(-1));
; 146  : 			}
; 147  : 
; 148  : 		virtual void __CLR_OR_THIS_CALL _Incref()
; 149  : 			{	// increment use count
; 150  : 			_MT_INCR(_Myrefs);
; 151  : 			}
; 152  : 
; 153  : 		virtual _Facet_base *__CLR_OR_THIS_CALL _Decref()
; 154  : 			{	// decrement use count
; 155  : 			if (_MT_DECR(_Myrefs) == 0)
; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}
; 160  : 
; 161  : 	private:
; 162  : 		_Atomic_counter_t _Myrefs;	// the reference count
; 163  : 
; 164  : 	protected:
; 165  : 		explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)
; 166  : 			{	// construct with initial reference count
; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}
; 169  : 
; 170  : 		virtual __CLR_OR_THIS_CALL ~facet() _NOEXCEPT
; 171  : 			{	// ensure that derived classes can be destroyed properly
; 172  : 			}
; 173  : 
; 174  : 	public:
; 175  : 		__CLR_OR_THIS_CALL facet(const facet&) = delete;
; 176  : 		facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 177  : 		};
; 178  : 
; 179  : 			// CLASS _Locimp
; 180  :  #pragma warning(push)
; 181  :  #pragma warning(disable: 4275)
; 182  : 
; 183  : 	class _CRTIMP2_PURE _Locimp
; 184  : 		: public facet
; 185  : 		{	// reference-counted actual implementation of a locale
; 186  : 	protected:
; 187  : 		__CLR_OR_THIS_CALL ~_Locimp() _NOEXCEPT
; 188  : 		{	// destroy the object
; 189  : 		_Locimp_dtor(this);
; 190  : 		}
; 191  : 
; 192  : 	private:
; 193  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 194  : 			_New_Locimp(bool _Transparent = false);
; 195  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 196  : 			_New_Locimp(const _Locimp& _Right);
; 197  : 
; 198  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 199  : 			_Locimp_dtor(_Locimp *);
; 200  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 201  : 			_Locimp_Addfac(_Locimp *, facet *, size_t);	// add a facet
; 202  : 		static void __CLRCALL_PURE_OR_CDECL
; 203  : 			_Locimp_ctor(_Locimp *, const _Locimp&);
; 204  : 
; 205  : 		friend class locale;
; 206  : 
; 207  : 		__CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 208  : 			: locale::facet(1), _Facetvec(0), _Facetcount(0),
; 209  : 				_Catmask(none), _Xparent(_Transparent),
; 210  : 					_Name("*")
; 211  : 			{	// construct an empty _Locimp
; 212  : 			}
; 213  : 
; 214  : 		__CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 215  : 			: locale::facet(1), _Facetvec(0), _Facetcount(_Right._Facetcount),
; 216  : 				_Catmask(_Right._Catmask), _Xparent(_Right._Xparent),
; 217  : 					_Name(_Right._Name.c_str())
; 218  : 			{	// construct by copying
; 219  : 			_Locimp_ctor(this, _Right);
; 220  : 			}
; 221  : 
; 222  : 		void __CLR_OR_THIS_CALL _Addfac(facet *_Pfacet, size_t _Id)
; 223  : 			{	// add a facet
; 224  : 			_Locimp_Addfac(this, _Pfacet, _Id);
; 225  : 			}
; 226  : 
; 227  : 		static _Locimp *__CLRCALL_OR_CDECL _Makeloc(const _Locinfo&,
; 228  : 			category, _Locimp *, const locale *);	// make essential facets
; 229  : 
; 230  : 		static void __CLRCALL_OR_CDECL _Makewloc(const _Locinfo&,
; 231  : 			category, _Locimp *, const locale *);	// make wchar_t facets
; 232  : 
; 233  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 234  : 		static void __CLRCALL_OR_CDECL _Makeushloc(const _Locinfo&,
; 235  : 			category, _Locimp *, const locale *);	// make ushort facets
; 236  :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 237  : 
; 238  : 		static void __CLRCALL_OR_CDECL _Makexloc(const _Locinfo&,
; 239  : 			category, _Locimp *, const locale *);	// make remaining facets
; 240  : 
; 241  : 		facet **_Facetvec;	// pointer to vector of facets
; 242  : 		size_t _Facetcount;	// size of vector of facets
; 243  : 		category _Catmask;	// mask describing implemented categories
; 244  : 		bool _Xparent;	// true if locale is transparent
; 245  : 		_Yarn<char> _Name;	// locale name, or "*" if not known
; 246  : 
; 247  : 		__PURE_APPDOMAIN_GLOBAL static _Locimp *_Clocptr;
; 248  : 
; 249  : public:
; 250  : 		_Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 251  : 		};
; 252  : 
; 253  :  #pragma warning(pop)
; 254  : 
; 255  : 	template<class _Elem,
; 256  : 		class _Traits,
; 257  : 		class _Alloc>
; 258  : 		bool operator()(const basic_string<_Elem, _Traits, _Alloc>& _Left,
; 259  : 			const basic_string<_Elem, _Traits, _Alloc>& _Right) const
; 260  : 		{	// compare _Left and _Right strings using collate facet in locale
; 261  : 		const _STD collate<_Elem>& _Coll_fac =
; 262  : 			use_facet< _STD collate<_Elem> >(*this);
; 263  : 
; 264  : 		return (_Coll_fac.compare(_Left.c_str(), _Left.c_str() + _Left.size(),
; 265  : 			_Right.c_str(), _Right.c_str() + _Right.size()) < 0);
; 266  : 		}
; 267  : 
; 268  : 	template<class _Facet>
; 269  : 		locale combine(const locale& _Loc) const
; 270  : 		{	// combine two locales
; 271  : 		_Facet *_Facptr;
; 272  : 
; 273  : 		_TRY_BEGIN
; 274  : 			_Facptr = (_Facet *)&use_facet<_Facet>(_Loc);
; 275  : 		_CATCH_ALL
; 276  : 			_Xruntime_error("locale::combine facet missing");
; 277  : 		_CATCH_END
; 278  : 
; 279  : 		_Locimp *_Newimp = _Locimp::_New_Locimp(*_Ptr);
; 280  : 		_Newimp->_Addfac(_Facptr, _Facet::id);
; 281  : 		_Newimp->_Catmask = none;
; 282  : 		_Newimp->_Name = "*";
; 283  : 		return (locale(_Newimp));
; 284  : 		}
; 285  : 
; 286  : 	template<class _Facet>
; 287  : 		locale(const locale& _Loc, const _Facet *_Facptr)
; 288  : 			: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 289  : 		{	// construct from _Loc, replacing facet with *_Facptr
; 290  : 		if (_Facptr != 0)
; 291  : 			{	// replace facet
; 292  : 			_Ptr->_Addfac((_Facet *)_Facptr, _Facet::id);
; 293  : 			_Ptr->_Catmask = none;
; 294  : 			_Ptr->_Name = "*";
; 295  : 			}
; 296  : 		}
; 297  : 
; 298  : 	locale(_Uninitialized)
; 299  : 		{	// defer construction
; 300  : 		}
; 301  : 
; 302  :  #if _NO_LOCALES
; 303  : 	locale(const locale& _Right) _THROW0()
; 304  : 		: _Ptr(0)
; 305  : 		{	// construct by copying
; 306  : 		}
; 307  : 
; 308  : 	locale() _THROW0()
; 309  : 		: _Ptr(0)
; 310  : 		{	// construct from current locale
; 311  : 		}
; 312  : 
; 313  : 	~locale() _NOEXCEPT
; 314  : 		{	// destroy the object
; 315  : 		}
; 316  : 
; 317  : 	locale& operator=(const locale& _Right) _THROW0()
; 318  : 		{	// assign a locale
; 319  : 		return (*this);
; 320  : 		}
; 321  : 
; 322  :  #else /* _NO_LOCALES */
; 323  : 	locale(const locale& _Right) _THROW0()
; 324  : 		: _Ptr(_Right._Ptr)
; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();
; 327  : 		}
; 328  : 
; 329  : 	locale() _THROW0()
; 330  : 		: _Ptr(_Init(true))
; 331  : 		{	// construct from current locale
; 332  : 		}
; 333  : 
; 334  :  #if !defined(MRTDLL) || !defined(_CRTBLD)
; 335  : 	locale(const locale& _Loc, const locale& _Other,
; 336  : 		category _Cat)
; 337  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 338  : 		{	// construct a locale by copying named facets
; 339  : 		if (_Cat != none)
; 340  : 			{	// worth adding, do it
; 341  : 			_TRY_BEGIN
; 342  : 				_BEGIN_LOCINFO(_Lobj)
; 343  : 					_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 344  : 					_Lobj._Addcats(_Loc._Ptr->_Catmask,
; 345  : 						_Loc.name().c_str());
; 346  : 					_Lobj._Addcats(_Other._Ptr->_Catmask,
; 347  : 						_Other.name().c_str());
; 348  : 					_Ptr->_Catmask = _Loc._Ptr->_Catmask
; 349  : 						| _Other._Ptr->_Catmask;
; 350  : 					_Ptr->_Name = _Lobj._Getname();
; 351  : 				_END_LOCINFO()
; 352  : 			_CATCH_ALL
; 353  : 			delete _Ptr->_Decref();
; 354  : 			_RERAISE;
; 355  : 			_CATCH_END
; 356  : 			}
; 357  : 		}
; 358  : 
; 359  : private:
; 360  : 	void _Construct(const string &_Str,
; 361  : 		category _Cat)
; 362  : 		{	// construct a locale with named facets
; 363  : 		bool _Bad = false;
; 364  : 		_Init();
; 365  : 		if (_Cat != none)
; 366  : 			{	// worth adding, do it
; 367  : 			_TRY_BEGIN
; 368  : 				_BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 369  : 					if (_Badname(_Lobj))
; 370  : 						_Bad = true;
; 371  : 					else
; 372  : 						{	// name okay, build the locale
; 373  : 						_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, 0);
; 374  : 						_Ptr->_Catmask = _Cat;
; 375  : 						_Ptr->_Name = _Str.c_str();
; 376  : 						}
; 377  : 				_END_LOCINFO()
; 378  : 			_CATCH_ALL
; 379  : 			delete _Ptr->_Decref();
; 380  : 			_RERAISE;
; 381  : 			_CATCH_END
; 382  : 			}
; 383  : 
; 384  : 		if (_Bad)
; 385  : 			{	// Don't throw within _BEGIN_LOCINFO if we can avoid it
; 386  : 			delete _Ptr->_Decref();
; 387  : 			_Xruntime_error("bad locale name");
; 388  : 			}
; 389  : 		}
; 390  : 
; 391  : public:
; 392  : 	explicit locale(const char *_Locname,
; 393  : 		category _Cat = all)
; 394  : 		: _Ptr(_Locimp::_New_Locimp())
; 395  : 		{	// construct a locale with named facets
; 396  : 		// _Locname might have been returned from setlocale().
; 397  : 		// Therefore, _Construct() takes const string&.
; 398  : 		if (_Locname == 0)
; 399  : 			_Xruntime_error("bad locale name");
; 400  : 		_Construct(_Locname, _Cat);
; 401  : 		}
; 402  : 
; 403  : 	locale(const locale& _Loc, const char *_Locname,
; 404  : 		category _Cat)
; 405  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 406  : 		{	// construct a locale by copying, replacing named facets
; 407  : 		// _Locname might have been returned from setlocale().
; 408  : 		// Therefore, _Construct() takes const string&.
; 409  : 		if (_Locname == 0)
; 410  : 			_Xruntime_error("bad locale name");
; 411  : 		_Construct(_Locname, _Cat);
; 412  : 		}
; 413  : 
; 414  : 	explicit locale(const string& _Str,
; 415  : 		category _Cat = all)
; 416  : 		: _Ptr(_Locimp::_New_Locimp())
; 417  : 		{	// construct a locale with named facets
; 418  : 		_Construct(_Str, _Cat);
; 419  : 		}
; 420  : 
; 421  : 	locale(const locale& _Loc, const string& _Str,
; 422  : 		category _Cat)
; 423  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 424  : 		{	// construct a locale by copying, replacing named facets
; 425  : 		_Construct(_Str, _Cat);
; 426  : 		}
; 427  :  #endif /* !MRTDLL || !_CRTBLD */
; 428  : 
; 429  : 	~locale() _NOEXCEPT
; 430  : 		{	// destroy the object
; 431  : 		if (_Ptr != 0)
; 432  : 			delete _Ptr->_Decref();
; 433  : 		}
; 434  : 
; 435  : 	locale& operator=(const locale& _Right) _THROW0()
; 436  : 		{	// assign a locale
; 437  : 		if (_Ptr != _Right._Ptr)
; 438  : 			{	// different implementation, point at new one
; 439  : 			delete _Ptr->_Decref();
; 440  : 			_Ptr = _Right._Ptr;
; 441  : 			_Ptr->_Incref();
; 442  : 			}
; 443  : 		return (*this);
; 444  : 		}
; 445  :  #endif /* _NO_LOCALES */
; 446  : 
; 447  : 	string name() const
; 448  : 		{	// return locale name
; 449  : 		return (_Ptr == 0 ? string() : _Ptr->_Name.c_str());
; 450  : 		}
; 451  : 
; 452  : 	const char *c_str() const
; 453  : 		{	// return locale name as NTBS
; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());
; 455  : 		}
; 456  : 
; 457  : 	const facet *_Getfacet(size_t _Id) const
; 458  : 		{	// look up a facet in locale object
; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00098	33 db		 xor	 ebx, ebx
$LN28@use_facet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0009a	80 79 24 00	 cmp	 BYTE PTR [rcx+36], 0
  0009e	74 13		 je	 SHORT $LN17@use_facet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  000a0	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  000a5	48 3b 78 18	 cmp	 rdi, QWORD PTR [rax+24]
  000a9	73 0d		 jae	 SHORT $LN29@use_facet
  000ab	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000af	48 8b 1c f8	 mov	 rbx, QWORD PTR [rax+rdi*8]
$LN17@use_facet:

; 562  : 
; 563  : 		size_t _Id = _Facet::id;
; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);
; 565  : 
; 566  : 		if (_Pf != 0)

  000b3	48 85 db	 test	 rbx, rbx
  000b6	75 6c		 jne	 SHORT $LN7@use_facet
$LN29@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  000b8	48 85 f6	 test	 rsi, rsi
  000bb	74 05		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  000bd	48 8b de	 mov	 rbx, rsi
  000c0	eb 62		 jmp	 SHORT $LN7@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  000c2	48 8b d5	 mov	 rdx, rbp
  000c5	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Psave$5[rsp]
  000ca	e8 00 00 00 00	 call	 ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
  000cf	48 83 f8 ff	 cmp	 rax, -1
  000d3	75 31		 jne	 SHORT $LN6@use_facet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 59   :         : _Data()

  000d5	33 c0		 xor	 eax, eax
  000d7	48 89 44 24 38	 mov	 QWORD PTR $T2[rsp+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  000dc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  000e3	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h

; 125  :     {

  000e8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  000ef	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  000fb	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00100	e8 00 00 00 00	 call	 _CxxThrowException
  00105	cc		 int	 3
$LN6@use_facet:

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else
; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  00106	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  0010b	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::ctype<char> >::_Psave

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 586  : 			_Pfmod->_Incref();

  00112	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00115	48 8b cb	 mov	 rcx, rbx
  00118	ff 52 08	 call	 QWORD PTR [rdx+8]

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  0011b	48 8b cb	 mov	 rcx, rbx
  0011e	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
  00123	90		 npad	 1
$LN7@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  00124	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00129	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  0012e	48 8b c3	 mov	 rax, rbx

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  00131	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  00136	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0013a	5f		 pop	 rdi
  0013b	5e		 pop	 rsi
  0013c	5d		 pop	 rbp
  0013d	c3		 ret	 0
$LN30@use_facet:
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
;	COMDAT ??_G?$ctype@D@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$ctype@D@std@@MEAAPEAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
$LN24:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2491 : 		{	// destroy the object

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
  00011	8b fa		 mov	 edi, edx
  00013	48 89 01	 mov	 QWORD PTR [rcx], rax
  00016	48 8b d9	 mov	 rbx, rcx

; 2502 : 		if (0 < _Ctype._Delfl)

  00019	8b 41 20	 mov	 eax, DWORD PTR [rcx+32]
  0001c	85 c0		 test	 eax, eax
  0001e	7e 0b		 jle	 SHORT $LN22@scalar

; 2503 : 			_CSTD free((void *)_Ctype._Table);

  00020	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00024	e8 00 00 00 00	 call	 free
  00029	eb 0b		 jmp	 SHORT $LN10@scalar
$LN22@scalar:

; 2504 : 		else if (_Ctype._Delfl < 0)

  0002b	79 09		 jns	 SHORT $LN10@scalar

; 2505 : 			delete[] _Ctype._Table;

  0002d	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00031	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN10@scalar:

; 2506 : 
; 2507 : 		_CSTD free(_Ctype._LocaleName);

  00036	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  0003a	e8 00 00 00 00	 call	 free
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  0003f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00046	48 89 03	 mov	 QWORD PTR [rbx], rax
  00049	40 f6 c7 01	 test	 dil, 1
  0004d	74 0d		 je	 SHORT $LN21@scalar
  0004f	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00054	48 8b cb	 mov	 rcx, rbx
  00057	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN21@scalar:
  0005c	48 8b c3	 mov	 rax, rbx
  0005f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00064	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
??_G?$ctype@D@std@@MEAAPEAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
__formal$ = 72
_Dest$ = 80
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z PROC	; std::ctype<char>::do_narrow, COMDAT

; 2558 : 		{	// narrow elements in [_First, _Last) to chars

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2559 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2560 : 		_CSTD memcpy(_Dest, _First, _Last - _First);

  00006	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0000b	49 8b d8	 mov	 rbx, r8
  0000e	4c 2b c2	 sub	 r8, rdx
  00011	e8 00 00 00 00	 call	 memcpy

; 2561 : 		return (_Last);

  00016	48 8b c3	 mov	 rax, rbx

; 2562 : 		}

  00019	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001d	5b		 pop	 rbx
  0001e	c3		 ret	 0
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z ENDP	; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBADDD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
__formal$ = 24
?do_narrow@?$ctype@D@std@@MEBADDD@Z PROC		; std::ctype<char>::do_narrow, COMDAT

; 2553 : 		return (_Ch);

  00000	0f b6 c2	 movzx	 eax, dl

; 2554 : 		}

  00003	c3		 ret	 0
?do_narrow@?$ctype@D@std@@MEBADDD@Z ENDP		; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z PROC	; std::ctype<char>::do_widen, COMDAT

; 2545 : 		{	// widen chars in [_First, _Last)

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	49 8b d8	 mov	 rbx, r8

; 2546 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2547 : 		_CSTD memcpy(_Dest, _First, _Last - _First);

  00009	49 8b c9	 mov	 rcx, r9
  0000c	4c 2b c2	 sub	 r8, rdx
  0000f	e8 00 00 00 00	 call	 memcpy

; 2548 : 		return (_Last);

  00014	48 8b c3	 mov	 rax, rbx

; 2549 : 		}

  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5b		 pop	 rbx
  0001c	c3		 ret	 0
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z ENDP	; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Byte$ = 16
?do_widen@?$ctype@D@std@@MEBADD@Z PROC			; std::ctype<char>::do_widen, COMDAT

; 2540 : 		return (_Byte);

  00000	0f b6 c2	 movzx	 eax, dl

; 2541 : 		}

  00003	c3		 ret	 0
?do_widen@?$ctype@D@std@@MEBADD@Z ENDP			; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_toupper, COMDAT

; 2531 : 		{	// convert [_First, _Last) in place to upper case

$LN12:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	33 ff		 xor	 edi, edi
  00011	49 8b f0	 mov	 rsi, r8
  00014	48 2b f2	 sub	 rsi, rdx
  00017	48 8b da	 mov	 rbx, rdx
  0001a	49 3b d0	 cmp	 rdx, r8
  0001d	48 0f 47 f7	 cmova	 rsi, rdi

; 2532 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 2533 : 		for (; _First != _Last; ++_First)

  00021	48 85 f6	 test	 rsi, rsi
  00024	74 27		 je	 SHORT $LN10@do_toupper
  00026	48 89 6c 24 30	 mov	 QWORD PTR [rsp+48], rbp
  0002b	48 8d 69 10	 lea	 rbp, QWORD PTR [rcx+16]
  0002f	90		 npad	 1
$LL4@do_toupper:

; 2534 : 			*_First = (_Elem)_Toupper((unsigned char)*_First, &_Ctype);

  00030	0f b6 0b	 movzx	 ecx, BYTE PTR [rbx]
  00033	48 8b d5	 mov	 rdx, rbp
  00036	e8 00 00 00 00	 call	 _Toupper
  0003b	88 03		 mov	 BYTE PTR [rbx], al
  0003d	48 ff c7	 inc	 rdi
  00040	48 ff c3	 inc	 rbx
  00043	48 3b fe	 cmp	 rdi, rsi
  00046	75 e8		 jne	 SHORT $LL4@do_toupper
  00048	48 8b 6c 24 30	 mov	 rbp, QWORD PTR [rsp+48]
$LN10@do_toupper:

; 2535 : 		return ((const _Elem *)_First);
; 2536 : 		}

  0004d	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00052	48 8b c3	 mov	 rax, rbx
  00055	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0005a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005e	5f		 pop	 rdi
  0005f	c3		 ret	 0
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_toupper@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_toupper, COMDAT

; 2525 : 		{	// convert element to upper case

  00000	0f b6 c2	 movzx	 eax, dl

; 2526 : 		return ((_Elem)_Toupper((unsigned char)_Ch, &_Ctype));

  00003	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]
  00007	8b c8		 mov	 ecx, eax
  00009	e9 00 00 00 00	 jmp	 _Toupper
?do_toupper@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_tolower, COMDAT

; 2517 : 		{	// convert [_First, _Last) in place to lower case

$LN12:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	33 ff		 xor	 edi, edi
  00011	49 8b f0	 mov	 rsi, r8
  00014	48 2b f2	 sub	 rsi, rdx
  00017	48 8b da	 mov	 rbx, rdx
  0001a	49 3b d0	 cmp	 rdx, r8
  0001d	48 0f 47 f7	 cmova	 rsi, rdi

; 2518 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 2519 : 		for (; _First != _Last; ++_First)

  00021	48 85 f6	 test	 rsi, rsi
  00024	74 27		 je	 SHORT $LN10@do_tolower
  00026	48 89 6c 24 30	 mov	 QWORD PTR [rsp+48], rbp
  0002b	48 8d 69 10	 lea	 rbp, QWORD PTR [rcx+16]
  0002f	90		 npad	 1
$LL4@do_tolower:

; 2520 : 			*_First = (_Elem)_Tolower((unsigned char)*_First, &_Ctype);

  00030	0f b6 0b	 movzx	 ecx, BYTE PTR [rbx]
  00033	48 8b d5	 mov	 rdx, rbp
  00036	e8 00 00 00 00	 call	 _Tolower
  0003b	88 03		 mov	 BYTE PTR [rbx], al
  0003d	48 ff c7	 inc	 rdi
  00040	48 ff c3	 inc	 rbx
  00043	48 3b fe	 cmp	 rdi, rsi
  00046	75 e8		 jne	 SHORT $LL4@do_tolower
  00048	48 8b 6c 24 30	 mov	 rbp, QWORD PTR [rsp+48]
$LN10@do_tolower:

; 2521 : 		return ((const _Elem *)_First);
; 2522 : 		}

  0004d	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00052	48 8b c3	 mov	 rax, rbx
  00055	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0005a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005e	5f		 pop	 rdi
  0005f	c3		 ret	 0
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_tolower@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_tolower, COMDAT

; 2511 : 		{	// convert element to lower case

  00000	0f b6 c2	 movzx	 eax, dl

; 2512 : 		return ((_Elem)_Tolower((unsigned char)_Ch, &_Ctype));

  00003	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]
  00007	8b c8		 mov	 ecx, eax
  00009	e9 00 00 00 00	 jmp	 _Tolower
?do_tolower@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?_Tidy@?$ctype@D@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$ctype@D@std@@IEAAXXZ PROC			; std::ctype<char>::_Tidy, COMDAT

; 2501 : 		{	// free any allocated storage

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2502 : 		if (0 < _Ctype._Delfl)

  00006	8b 41 20	 mov	 eax, DWORD PTR [rcx+32]
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	85 c0		 test	 eax, eax
  0000e	7e 17		 jle	 SHORT $LN6@Tidy

; 2503 : 			_CSTD free((void *)_Ctype._Table);

  00010	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00014	e8 00 00 00 00	 call	 free

; 2506 : 
; 2507 : 		_CSTD free(_Ctype._LocaleName);

  00019	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]

; 2508 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx

; 2506 : 
; 2507 : 		_CSTD free(_Ctype._LocaleName);

  00022	e9 00 00 00 00	 jmp	 free
$LN6@Tidy:

; 2504 : 		else if (_Ctype._Delfl < 0)

  00027	79 09		 jns	 SHORT $LN4@Tidy

; 2505 : 			delete[] _Ctype._Table;

  00029	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0002d	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN4@Tidy:

; 2506 : 
; 2507 : 		_CSTD free(_Ctype._LocaleName);

  00032	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]

; 2508 : 		}

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5b		 pop	 rbx

; 2506 : 
; 2507 : 		_CSTD free(_Ctype._LocaleName);

  0003b	e9 00 00 00 00	 jmp	 free
?_Tidy@?$ctype@D@std@@IEAAXXZ ENDP			; std::ctype<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Lobj$ = 88
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z PROC	; std::ctype<char>::_Init, COMDAT

; 2496 : 		{	// initialize from _Lobj

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 117  : 		return (::_Getctype());

  00009	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0000e	e8 00 00 00 00	 call	 _Getctype
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2497 : 		_Ctype = _Lobj._Getctype();

  00013	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00016	0f 11 43 10	 movups	 XMMWORD PTR [rbx+16], xmm0
  0001a	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  0001e	0f 11 4b 20	 movups	 XMMWORD PTR [rbx+32], xmm1

; 2498 : 		}

  00022	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00026	5b		 pop	 rbx
  00027	c3		 ret	 0
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z ENDP	; std::ctype<char>::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??1?$ctype@D@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ctype@D@std@@MEAA@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT

; 2491 : 		{	// destroy the object

$LN19:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2502 : 		if (0 < _Ctype._Delfl)

  00013	8b 41 20	 mov	 eax, DWORD PTR [rcx+32]
  00016	85 c0		 test	 eax, eax
  00018	7e 0b		 jle	 SHORT $LN17@ctype

; 2503 : 			_CSTD free((void *)_Ctype._Table);

  0001a	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0001e	e8 00 00 00 00	 call	 free
  00023	eb 0b		 jmp	 SHORT $LN6@ctype
$LN17@ctype:

; 2504 : 		else if (_Ctype._Delfl < 0)

  00025	79 09		 jns	 SHORT $LN6@ctype

; 2505 : 			delete[] _Ctype._Table;

  00027	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0002b	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN6@ctype:

; 2506 : 
; 2507 : 		_CSTD free(_Ctype._LocaleName);

  00030	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  00034	e8 00 00 00 00	 call	 free
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00040	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2493 : 		}

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5b		 pop	 rbx
  00048	c3		 ret	 0
??1?$ctype@D@std@@MEAA@XZ ENDP				; std::ctype<char>::~ctype<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 72
$T4 = 192
$T5 = 192
_Ppf$ = 192
_Ploc$ = 200
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT

; 2468 : 		{	// return locale category mask and construct standard facet

$LN36:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00014	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00018	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  0001c	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  00020	48 8b ea	 mov	 rbp, rdx
  00023	48 8b f9	 mov	 rdi, rcx
  00026	33 f6		 xor	 esi, esi
  00028	89 b4 24 c0 00
	00 00		 mov	 DWORD PTR $T4[rsp], esi

; 2469 : 		if (_Ppf != 0 && *_Ppf == 0)

  0002f	48 85 c9	 test	 rcx, rcx
  00032	0f 84 90 00 00
	00		 je	 $LN34@Getcat
  00038	48 39 31	 cmp	 QWORD PTR [rcx], rsi
  0003b	0f 85 87 00 00
	00		 jne	 $LN34@Getcat

; 2470 : 			*_Ppf = new ctype<_Elem>(

  00041	8d 4e 30	 lea	 ecx, QWORD PTR [rsi+48]
  00044	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00049	48 8b d8	 mov	 rbx, rax
  0004c	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR $T5[rsp], rax
  00054	48 85 c0	 test	 rax, rax
  00057	74 5a		 je	 SHORT $LN4@Getcat

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  00059	48 8b 45 08	 mov	 rax, QWORD PTR [rbp+8]
  0005d	48 85 c0	 test	 rax, rax
  00060	75 09		 jne	 SHORT $LN12@Getcat
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00069	eb 0d		 jmp	 SHORT $LN17@Getcat
$LN12@Getcat:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 3777 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  0006b	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  0006f	48 85 d2	 test	 rdx, rdx
  00072	75 04		 jne	 SHORT $LN17@Getcat
  00074	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
$LN17@Getcat:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2470 : 			*_Ppf = new ctype<_Elem>(

  00078	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T3[rsp]
  0007d	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
  00082	be 01 00 00 00	 mov	 esi, 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00087	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [rbx+8], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2462 : 		{	// construct from current locale

  0008e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
  00095	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 117  : 		return (::_Getctype());

  00098	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  0009d	e8 00 00 00 00	 call	 _Getctype
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2497 : 		_Ctype = _Lobj._Getctype();

  000a2	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000a5	0f 11 43 10	 movups	 XMMWORD PTR [rbx+16], xmm0
  000a9	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  000ad	0f 11 4b 20	 movups	 XMMWORD PTR [rbx+32], xmm1

; 2470 : 			*_Ppf = new ctype<_Elem>(

  000b1	eb 02		 jmp	 SHORT $LN5@Getcat
$LN4@Getcat:
  000b3	33 db		 xor	 ebx, ebx
$LN5@Getcat:
  000b5	48 89 1f	 mov	 QWORD PTR [rdi], rbx
  000b8	40 f6 c6 01	 test	 sil, 1
  000bc	74 0a		 je	 SHORT $LN34@Getcat
  000be	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T3[rsp]
  000c3	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN34@Getcat:

; 2471 : 				_Locinfo(_Ploc->c_str()));
; 2472 : 		return (_X_CTYPE);

  000c8	b8 02 00 00 00	 mov	 eax, 2

; 2473 : 		}

  000cd	4c 8d 9c 24 b0
	00 00 00	 lea	 r11, QWORD PTR [rsp+176]
  000d5	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000d9	49 8b 6b 20	 mov	 rbp, QWORD PTR [r11+32]
  000dd	49 8b 73 28	 mov	 rsi, QWORD PTR [r11+40]
  000e1	49 8b e3	 mov	 rsp, r11
  000e4	5f		 pop	 rdi
  000e5	c3		 ret	 0
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::ctype<char>::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 72
$T4 = 192
$T5 = 192
_Ppf$ = 192
_Ploc$ = 200
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 72
$T4 = 192
$T5 = 192
_Ppf$ = 192
_Ploc$ = 200
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Lobj$ = 88
_Refs$ = 96
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC		; std::ctype<char>::ctype<char>, COMDAT

; 2462 : 		{	// construct from current locale

$LN18:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  0000d	44 89 41 08	 mov	 DWORD PTR [rcx+8], r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2462 : 		{	// construct from current locale

  00011	48 89 01	 mov	 QWORD PTR [rcx], rax
  00014	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 117  : 		return (::_Getctype());

  00017	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001c	e8 00 00 00 00	 call	 _Getctype
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2497 : 		_Ctype = _Lobj._Getctype();

  00021	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00024	0f 11 43 10	 movups	 XMMWORD PTR [rbx+16], xmm0
  00028	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]

; 2463 : 		_Init(_Lobj);
; 2464 : 		}

  0002c	48 8b c3	 mov	 rax, rbx

; 2497 : 		_Ctype = _Lobj._Getctype();

  0002f	0f 11 4b 20	 movups	 XMMWORD PTR [rbx+32], xmm1

; 2463 : 		_Init(_Lobj);
; 2464 : 		}

  00033	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00037	5b		 pop	 rbx
  00038	c3		 ret	 0
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP		; std::ctype<char>::ctype<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
_Dest$ = 32
?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z PROC		; std::ctype<char>::widen, COMDAT

; 2422 : 		return (do_widen(_First, _Last, _Dest));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 38	 rex_jmp QWORD PTR [rax+56]
?widen@?$ctype@D@std@@QEBAPEBDPEBD0PEAD@Z ENDP		; std::ctype<char>::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?widen@?$ctype@D@std@@QEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Byte$ = 16
?widen@?$ctype@D@std@@QEBADD@Z PROC			; std::ctype<char>::widen, COMDAT

; 2416 : 		return (do_widen(_Byte));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 40	 rex_jmp QWORD PTR [rax+64]
?widen@?$ctype@D@std@@QEBADD@Z ENDP			; std::ctype<char>::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
;	COMDAT ??_Gctype_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gctype_base@std@@UEAAPEAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN13@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_Gctype_base@std@@UEAAPEAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??1ctype_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ctype_base@std@@UEAA@XZ PROC				; std::ctype_base::~ctype_base, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2108 : 		}

  0000a	c3		 ret	 0
??1ctype_base@std@@UEAA@XZ ENDP				; std::ctype_base::~ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??0ctype_base@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Refs$ = 16
??0ctype_base@std@@QEAA@_K@Z PROC			; std::ctype_base::ctype_base, COMDAT

; 2103 : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ctype_base@std@@6B@
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00007	89 51 08	 mov	 DWORD PTR [rcx+8], edx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 2103 : 		{	// default constructor

  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2104 : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0ctype_base@std@@QEAA@_K@Z ENDP			; std::ctype_base::ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Id$ = 56
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 458  : 		{	// look up a facet in locale object

$LN12:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0000d	33 ff		 xor	 edi, edi
  0000f	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00013	48 3b 5a 18	 cmp	 rbx, QWORD PTR [rdx+24]
  00017	73 0f		 jae	 SHORT $LN6@Getfacet
  00019	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  0001d	48 8b 04 d8	 mov	 rax, QWORD PTR [rax+rbx*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  00021	48 85 c0	 test	 rax, rax
  00024	75 21		 jne	 SHORT $LN4@Getfacet
  00026	eb 03		 jmp	 SHORT $LN10@Getfacet
$LN6@Getfacet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00028	48 8b c7	 mov	 rax, rdi
$LN10@Getfacet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0002b	40 38 7a 24	 cmp	 BYTE PTR [rdx+36], dil
  0002f	74 16		 je	 SHORT $LN4@Getfacet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  00031	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  00036	48 3b 58 18	 cmp	 rbx, QWORD PTR [rax+24]
  0003a	73 08		 jae	 SHORT $LN8@Getfacet
  0003c	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00040	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]
$LN8@Getfacet:
  00044	48 8b c7	 mov	 rax, rdi
$LN4@Getfacet:

; 467  : 				? _Ptr0->_Facetvec[_Id]	// get from current locale
; 468  : 				: 0);	// no entry in current locale
; 469  : 			}
; 470  : 		}

  00047	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?c_str@locale@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@locale@std@@QEBAPEBDXZ PROC			; std::locale::c_str, COMDAT

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 85 c0	 test	 rax, rax
  00007	75 08		 jne	 SHORT $LN3@c_str
  00009	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@

; 455  : 		}

  00010	c3		 ret	 0
$LN3@c_str:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 3777 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00011	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00015	48 85 c9	 test	 rcx, rcx
  00018	74 04		 je	 SHORT $LN7@c_str
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  0001a	48 8b c1	 mov	 rax, rcx

; 455  : 		}

  0001d	c3		 ret	 0
$LN7@c_str:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 3777 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  0001e	48 83 c0 30	 add	 rax, 48			; 00000030H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 455  : 		}

  00022	c3		 ret	 0
?c_str@locale@std@@QEBAPEBDXZ ENDP			; std::locale::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 430  : 		{	// destroy the object

$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 431  : 		if (_Ptr != 0)

  0000d	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00011	48 85 c9	 test	 rcx, rcx
  00014	74 1e		 je	 SHORT $LN4@locale

; 432  : 			delete _Ptr->_Decref();

  00016	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00019	ff 50 10	 call	 QWORD PTR [rax+16]
  0001c	90		 npad	 1
  0001d	48 85 c0	 test	 rax, rax
  00020	74 12		 je	 SHORT $LN4@locale
  00022	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b c8	 mov	 rcx, rax

; 433  : 		}

  0002d	48 83 c4 38	 add	 rsp, 56			; 00000038H

; 432  : 			delete _Ptr->_Decref();

  00031	49 ff 20	 rex_jmp QWORD PTR [r8]
$LN4@locale:

; 433  : 		}

  00034	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00038	c3		 ret	 0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??0locale@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??0locale@std@@QEAA@AEBV01@@Z PROC			; std::locale::locale, COMDAT

; 325  : 		{	// construct by copying

$LN3:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 324  : 		: _Ptr(_Right._Ptr)

  00012	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00016	48 89 4b 08	 mov	 QWORD PTR [rbx+8], rcx

; 326  : 		_Ptr->_Incref();

  0001a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0001d	ff 50 08	 call	 QWORD PTR [rax+8]
  00020	90		 npad	 1

; 327  : 		}

  00021	48 8b c3	 mov	 rax, rbx
  00024	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
??0locale@std@@QEAA@AEBV01@@Z ENDP			; std::locale::locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
;	COMDAT ??_Gfacet@locale@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfacet@locale@std@@MEAAPEAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN10@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN10@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_Gfacet@locale@std@@MEAAPEAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??1facet@locale@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1facet@locale@std@@MEAA@XZ PROC			; std::locale::facet::~facet, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 172  : 			}

  0000a	c3		 ret	 0
??1facet@locale@std@@MEAA@XZ ENDP			; std::locale::facet::~facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??0facet@locale@std@@IEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Initrefs$ = 16
??0facet@locale@std@@IEAA@_K@Z PROC			; std::locale::facet::facet, COMDAT

; 166  : 			{	// construct with initial reference count

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7facet@locale@std@@6B@
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00007	89 51 08	 mov	 DWORD PTR [rcx+8], edx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale

; 166  : 			{	// construct with initial reference count

  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0facet@locale@std@@IEAA@_K@Z ENDP			; std::locale::facet::facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
_TEXT	SEGMENT
this$ = 8
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ PROC ; std::locale::facet::_Decref, COMDAT

; 155  : 			if (_MT_DECR(_Myrefs) == 0)

  00000	f0 83 41 08 ff	 lock add DWORD PTR [rcx+8], -1
  00005	b8 00 00 00 00	 mov	 eax, 0
  0000a	48 0f 44 c1	 cmove	 rax, rcx

; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}

  0000e	c3		 ret	 0
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ENDP ; std::locale::facet::_Decref
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ?_Incref@facet@locale@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Incref@facet@locale@std@@UEAAXXZ PROC			; std::locale::facet::_Incref, COMDAT

; 150  : 			_MT_INCR(_Myrefs);

  00000	f0 ff 41 08	 lock inc DWORD PTR [rcx+8]

; 151  : 			}

  00004	c3		 ret	 0
?_Incref@facet@locale@std@@UEAAXXZ ENDP			; std::locale::facet::_Incref
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??Bid@locale@std@@QEAA_KXZ
_TEXT	SEGMENT
_Lock$1 = 48
this$ = 48
??Bid@locale@std@@QEAA_KXZ PROC				; std::locale::id::operator unsigned __int64, COMDAT

; 114  : 			{	// get stamp, with lazy allocation

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 115  : 			if (_Id == 0)

  00006	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	75 38		 jne	 SHORT $LN6@operator

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0000f	33 d2		 xor	 edx, edx
  00011	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$1[rsp]
  00016	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0001b	48 83 3b 00	 cmp	 QWORD PTR [rbx], 0
  0001f	75 13		 jne	 SHORT $LN3@operator

; 119  : 						_Id = ++_Id_cnt;

  00021	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00027	ff c0		 inc	 eax
  00029	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  0002f	48 98		 cdqe
  00031	48 89 03	 mov	 QWORD PTR [rbx], rax
$LN3@operator:

; 120  : 				_END_LOCK()

  00034	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$1[rsp]
  00039	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit

; 121  : 				}
; 122  : 			return (_Id);

  0003e	48 8b 03	 mov	 rax, QWORD PTR [rbx]

; 123  : 			}

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5b		 pop	 rbx
  00046	c3		 ret	 0
$LN6@operator:

; 121  : 				}
; 122  : 			return (_Id);

  00047	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 123  : 			}

  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5b		 pop	 rbx
  0004f	c3		 ret	 0
??Bid@locale@std@@QEAA_KXZ ENDP				; std::locale::id::operator unsigned __int64
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocale
;	COMDAT ??0id@locale@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??0id@locale@std@@QEAA@_K@Z PROC			; std::locale::id::id, COMDAT

; 109  : 			: _Id(_Val)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 111  : 			}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0id@locale@std@@QEAA@_K@Z ENDP			; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
;	COMDAT ??_G_Facet_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Facet_base@std@@UEAAPEAXI@Z PROC			; std::_Facet_base::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN7@scalar
  00018	ba 08 00 00 00	 mov	 edx, 8
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN7@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Facet_base@std@@UEAAPEAXI@Z ENDP			; std::_Facet_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Facet_base@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Facet_base@std@@QEAA@XZ PROC			; std::_Facet_base::_Facet_base, COMDAT
  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0_Facet_base@std@@QEAA@XZ ENDP			; std::_Facet_base::_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xfacet
;	COMDAT ??1_Facet_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Facet_base@std@@UEAA@XZ PROC			; std::_Facet_base::~_Facet_base, COMDAT

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 25   : 		}

  0000a	c3		 ret	 0
??1_Facet_base@std@@UEAA@XZ ENDP			; std::_Facet_base::~_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ PROC			; std::_Yarn<wchar_t>::_Tidy, COMDAT

; 3792 : 		{	// discard any string

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3793 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN4@Tidy

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN4@Tidy:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3803 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ ENDP			; std::_Yarn<wchar_t>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ??1?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>, COMDAT

; 3766 : 		{	// destroy the object

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3793 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN6@Yarn

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN6@Yarn:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3767 : 		_Tidy();
; 3768 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
??1?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ??0?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::_Yarn<wchar_t>, COMDAT

; 3715 : 		: _Myptr(0), _Nul(0)

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax
  00005	66 89 41 08	 mov	 WORD PTR [rcx+8], ax

; 3717 : 		}

  00009	48 8b c1	 mov	 rax, rcx
  0000c	c3		 ret	 0
??0?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ?_Tidy@?$_Yarn@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@D@std@@AEAAXXZ PROC			; std::_Yarn<char>::_Tidy, COMDAT

; 3792 : 		{	// discard any string

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3793 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN4@Tidy

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN4@Tidy:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3803 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
?_Tidy@?$_Yarn@D@std@@AEAAXXZ ENDP			; std::_Yarn<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ PROC			; std::_Yarn<char>::c_str, COMDAT

; 3777 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 85 c0	 test	 rax, rax
  00006	75 04		 jne	 SHORT $LN4@c_str
  00008	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]
$LN4@c_str:

; 3778 : 		}

  0000c	c3		 ret	 0
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ ENDP			; std::_Yarn<char>::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ??1?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT

; 3766 : 		{	// destroy the object

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3793 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN6@Yarn

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN6@Yarn:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3767 : 		_Tidy();
; 3768 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
??1?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ??0?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::_Yarn<char>, COMDAT

; 3715 : 		: _Myptr(0), _Nul(0)

  00000	48 c7 01 00 00
	00 00		 mov	 QWORD PTR [rcx], 0

; 3717 : 		}

  00007	48 8b c1	 mov	 rax, rcx
  0000a	c6 41 08 00	 mov	 BYTE PTR [rcx+8], 0
  0000e	c3		 ret	 0
??0?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
;	COMDAT ?_Gettrue@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ PROC			; std::_Locinfo::_Gettrue, COMDAT

; 172  : 		return ("true");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_04LOAJBDKD@true?$AA@

; 173  : 		}

  00007	c3		 ret	 0
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ ENDP			; std::_Locinfo::_Gettrue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
;	COMDAT ?_Getfalse@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ PROC		; std::_Locinfo::_Getfalse, COMDAT

; 167  : 		return ("false");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_05LAPONLG@false?$AA@

; 168  : 		}

  00007	c3		 ret	 0
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ ENDP		; std::_Locinfo::_Getfalse
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
;	COMDAT ?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ
_TEXT	SEGMENT
this$ = 8
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ PROC		; std::_Locinfo::_Getlconv, COMDAT

; 127  : 		return (localeconv());

  00000	e9 00 00 00 00	 jmp	 localeconv
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ ENDP		; std::_Locinfo::_Getlconv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
;	COMDAT ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 96
__$ReturnUdt$ = 104
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ PROC		; std::_Locinfo::_Getcvt, COMDAT

; 121  : 		{	// return codecvt stuff

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 122  : 		return (::_Getcvt());

  00006	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0000b	48 8b da	 mov	 rbx, rdx
  0000e	e8 00 00 00 00	 call	 _Getcvt
  00013	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00016	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  0001a	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  0001d	f2 0f 10 40 20	 movsd	 xmm0, QWORD PTR [rax+32]
  00022	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00025	0f 11 4b 10	 movups	 XMMWORD PTR [rbx+16], xmm1
  00029	f2 0f 11 43 20	 movsd	 QWORD PTR [rbx+32], xmm0
  0002e	89 43 28	 mov	 DWORD PTR [rbx+40], eax
  00031	48 8b c3	 mov	 rax, rbx

; 123  : 		}

  00034	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00038	5b		 pop	 rbx
  00039	c3		 ret	 0
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ENDP		; std::_Locinfo::_Getcvt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
;	COMDAT ?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 80
__$ReturnUdt$ = 88
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT

; 116  : 		{	// return ctype stuff

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 117  : 		return (::_Getctype());

  00006	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0000b	48 8b da	 mov	 rbx, rdx
  0000e	e8 00 00 00 00	 call	 _Getctype
  00013	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00016	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  0001a	48 8b c3	 mov	 rax, rbx
  0001d	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  00020	0f 11 4b 10	 movups	 XMMWORD PTR [rbx+16], xmm1

; 118  : 		}

  00024	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
;	COMDAT ??1_Locinfo@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Locinfo@std@@QEAA@XZ PROC				; std::_Locinfo::~_Locinfo, COMDAT

; 94   : 		{	// destroy the object

$LN39:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	48 8b d9	 mov	 rbx, rcx

; 95   : 		_Locinfo_dtor(this);

  00017	e8 00 00 00 00	 call	 ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor
  0001c	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 3793 : 		if (_Myptr != 0)

  0001d	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00021	48 85 c9	 test	 rcx, rcx
  00024	74 06		 je	 SHORT $LN7@Locinfo

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00026	e8 00 00 00 00	 call	 free
  0002b	90		 npad	 1
$LN7@Locinfo:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  0002c	33 ff		 xor	 edi, edi
  0002e	48 89 7b 58	 mov	 QWORD PTR [rbx+88], rdi

; 3793 : 		if (_Myptr != 0)

  00032	48 8b 4b 48	 mov	 rcx, QWORD PTR [rbx+72]
  00036	48 85 c9	 test	 rcx, rcx
  00039	74 06		 je	 SHORT $LN13@Locinfo

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  0003b	e8 00 00 00 00	 call	 free
  00040	90		 npad	 1
$LN13@Locinfo:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  00041	48 89 7b 48	 mov	 QWORD PTR [rbx+72], rdi

; 3793 : 		if (_Myptr != 0)

  00045	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
  00049	48 85 c9	 test	 rcx, rcx
  0004c	74 06		 je	 SHORT $LN19@Locinfo

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  0004e	e8 00 00 00 00	 call	 free
  00053	90		 npad	 1
$LN19@Locinfo:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  00054	48 89 7b 38	 mov	 QWORD PTR [rbx+56], rdi

; 3793 : 		if (_Myptr != 0)

  00058	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  0005c	48 85 c9	 test	 rcx, rcx
  0005f	74 06		 je	 SHORT $LN25@Locinfo

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00061	e8 00 00 00 00	 call	 free
  00066	90		 npad	 1
$LN25@Locinfo:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  00067	48 89 7b 28	 mov	 QWORD PTR [rbx+40], rdi

; 3793 : 		if (_Myptr != 0)

  0006b	48 8b 4b 18	 mov	 rcx, QWORD PTR [rbx+24]
  0006f	48 85 c9	 test	 rcx, rcx
  00072	74 06		 je	 SHORT $LN31@Locinfo

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00074	e8 00 00 00 00	 call	 free
  00079	90		 npad	 1
$LN31@Locinfo:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  0007a	48 89 7b 18	 mov	 QWORD PTR [rbx+24], rdi

; 3793 : 		if (_Myptr != 0)

  0007e	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00082	48 85 c9	 test	 rcx, rcx
  00085	74 06		 je	 SHORT $LN37@Locinfo

; 3794 : 
; 3795 :  #ifdef _DEBUG
; 3796 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3797 : 
; 3798 :  #else /* _DEBUG */
; 3799 : 			_CSTD free(_Myptr);

  00087	e8 00 00 00 00	 call	 free
  0008c	90		 npad	 1
$LN37@Locinfo:

; 3800 :  #endif /* _DEBUG */
; 3801 : 
; 3802 : 		_Myptr = 0;

  0008d	48 89 7b 08	 mov	 QWORD PTR [rbx+8], rdi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 96   : 		}

  00091	48 8b cb	 mov	 rcx, rbx
  00094	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00099	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009d	5f		 pop	 rdi
  0009e	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
??1_Locinfo@std@@QEAA@XZ ENDP				; std::_Locinfo::~_Locinfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo
;	COMDAT ??0_Locinfo@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
??0_Locinfo@std@@QEAA@PEBD@Z PROC			; std::_Locinfo::_Locinfo, COMDAT

; 76   : 		{	// construct from NTBS

$LN28:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 68	 mov	 QWORD PTR [rsp+104], rbx
  00018	48 8b fa	 mov	 rdi, rdx
  0001b	48 8b d9	 mov	 rbx, rcx

; 73   : 		: _Lock(_LOCK_LOCALE)

  0001e	33 d2		 xor	 edx, edx
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility

; 3715 : 		: _Myptr(0), _Nul(0)

  00026	33 c0		 xor	 eax, eax
  00028	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax
  0002c	88 43 10	 mov	 BYTE PTR [rbx+16], al
  0002f	48 89 43 18	 mov	 QWORD PTR [rbx+24], rax
  00033	88 43 20	 mov	 BYTE PTR [rbx+32], al
  00036	48 89 43 28	 mov	 QWORD PTR [rbx+40], rax
  0003a	66 89 43 30	 mov	 WORD PTR [rbx+48], ax
  0003e	48 89 43 38	 mov	 QWORD PTR [rbx+56], rax
  00042	66 89 43 40	 mov	 WORD PTR [rbx+64], ax
  00046	48 89 43 48	 mov	 QWORD PTR [rbx+72], rax
  0004a	88 43 50	 mov	 BYTE PTR [rbx+80], al
  0004d	48 89 43 58	 mov	 QWORD PTR [rbx+88], rax
  00051	88 43 60	 mov	 BYTE PTR [rbx+96], al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 77   : 		if (_Pch == 0)

  00054	48 85 ff	 test	 rdi, rdi
  00057	75 56		 jne	 SHORT $LN2@Locinfo
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 53   :     {

  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00060	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax

; 52   :         : _Data()

  00065	33 c0		 xor	 eax, eax
  00067	48 89 44 24 40	 mov	 QWORD PTR $T3[rsp+8], rax
  0006c	48 89 44 24 48	 mov	 QWORD PTR $T3[rsp+16], rax

; 54   :         __std_exception_data _InitData = { _Message, true };

  00071	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
  00078	48 89 44 24 28	 mov	 QWORD PTR _InitData$2[rsp], rax
  0007d	c6 44 24 30 01	 mov	 BYTE PTR _InitData$2[rsp+8], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00082	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T3[rsp+8]
  00087	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _InitData$2[rsp]
  0008c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept

; 168  : 		{	// construct from message string

  00091	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00098	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xlocinfo

; 78   : 			_THROW_NCEE(runtime_error, "bad locale name");

  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
  000a4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T3[rsp]
  000a9	e8 00 00 00 00	 call	 _CxxThrowException
  000ae	cc		 int	 3
$LN2@Locinfo:

; 79   : 		_Locinfo_ctor(this, _Pch);

  000af	48 8b d7	 mov	 rdx, rdi
  000b2	48 8b cb	 mov	 rcx, rbx
  000b5	e8 00 00 00 00	 call	 ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
  000ba	90		 npad	 1

; 80   : 		}

  000bb	48 8b c3	 mov	 rax, rbx
  000be	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  000c3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c7	5f		 pop	 rdi
  000c8	c3		 ret	 0
$LN27@Locinfo:
??0_Locinfo@std@@QEAA@PEBD@Z ENDP			; std::_Locinfo::_Locinfo
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
  00000	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
  0000c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00013	48 83 c1 08	 add	 rcx, 8
  00017	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
  0001c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00023	48 83 c1 18	 add	 rcx, 24
  00027	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
  0002c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00033	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00037	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
  0003c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00043	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00047	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
  0004c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00053	48 83 c1 48	 add	 rcx, 72			; 00000048H
  00057	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
  0005c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00063	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00067	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
  00000	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
  0000c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00013	48 83 c1 08	 add	 rcx, 8
  00017	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
  0001c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00023	48 83 c1 18	 add	 rcx, 24
  00027	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
  0002c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00033	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00037	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
  0003c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00043	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00047	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
  0004c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00053	48 83 c1 48	 add	 rcx, 72			; 00000048H
  00057	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
  0005c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00063	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00067	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN9@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN9@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx

; 65   :         : _Data()

  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 66   :     {

  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  00033	48 89 03	 mov	 QWORD PTR [rbx], rax
  00036	48 8b c3	 mov	 rax, rbx
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 59   :         : _Data()

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  0000d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_typeinfo.h

; 125  :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 126  :     }

  0001b	48 8b c1	 mov	 rax, rcx
  0001e	c3		 ret	 0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN9@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN9@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx

; 65   :         : _Data()

  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 66   :     {

  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00033	48 89 03	 mov	 QWORD PTR [rbx], rax
  00036	48 8b c3	 mov	 rax, rbx
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
_InitData$1 = 32
this$ = 64
_Message$ = 72
??0runtime_error@std@@QEAA@PEBD@Z PROC			; std::runtime_error::runtime_error, COMDAT

; 168  : 		{	// construct from message string

$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 54   :         __std_exception_data _InitData = { _Message, true };

  00009	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept

; 168  : 		{	// construct from message string

  0000e	48 8b c2	 mov	 rax, rdx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 53   :     {

  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 54   :         __std_exception_data _InitData = { _Message, true };

  0001c	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  00021	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  00024	33 c9		 xor	 ecx, ecx
  00026	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00029	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  0002d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  00032	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept

; 168  : 		{	// construct from message string

  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  0003e	48 89 03	 mov	 QWORD PTR [rbx], rax

; 169  : 		}

  00041	48 8b c3	 mov	 rax, rbx
  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
??0runtime_error@std@@QEAA@PEBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
this$ = 64
_Message$ = 72
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT

; 163  : 		{	// construct from message string

$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00006	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept

; 163  : 		{	// construct from message string

  0000b	48 8b c2	 mov	 rax, rdx
  0000e	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00011	72 03		 jb	 SHORT $LN17@runtime_er
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00013	48 8b 02	 mov	 rax, QWORD PTR [rdx]
$LN17@runtime_er:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h

; 52   :         : _Data()

  00016	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 53   :     {
; 54   :         __std_exception_data _InitData = { _Message, true };

  0001a	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00026	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
  0002b	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0002e	33 c9		 xor	 ecx, ecx
  00030	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00033	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00037	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  0003c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\stdexcept

; 163  : 		{	// construct from message string

  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00048	48 89 03	 mov	 QWORD PTR [rbx], rax

; 164  : 		}

  0004b	48 8b c3	 mov	 rax, rbx
  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5b		 pop	 rbx
  00053	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT

; 2280 : 		{	// report an out_of_range error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2281 : 		_Xout_of_range("invalid string position");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00010	cc		 int	 3
$LN3@Xran:
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT

; 2268 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2269 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 05		 jb	 SHORT $LN17@Check_offs

; 2270 : 			_Xran();
; 2271 : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN17@Check_offs:

; 2281 : 		_Xout_of_range("invalid string position");

  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0001b	cc		 int	 3
$LN16@Check_offs:
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 2263 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2264 : 		_Xlength_error("string too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Built$ = 56
_Newsize$ = 64
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 2246 : 		{	// initialize buffer, deallocating any storage

$LN130:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f0	 mov	 rsi, r8
  00012	48 8b d9	 mov	 rbx, rcx

; 2247 : 		if (!_Built)

  00015	84 d2		 test	 dl, dl
  00017	74 4f		 je	 SHORT $LN82@Tidy

; 2248 : 			;
; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00019	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0001e	72 48		 jb	 SHORT $LN82@Tidy

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;

  00020	48 8b 39	 mov	 rdi, QWORD PTR [rcx]

; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)

  00023	4d 85 c0	 test	 r8, r8
  00026	74 08		 je	 SHORT $LN55@Tidy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  00028	48 8b d7	 mov	 rdx, rdi
  0002b	e8 00 00 00 00	 call	 memcpy
$LN55@Tidy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00030	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00034	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00037	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0003d	72 21		 jb	 SHORT $LN77@Tidy

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0003f	40 f6 c7 1f	 test	 dil, 31
  00043	75 4d		 jne	 SHORT $LN125@Tidy

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00045	48 8b 47 f8	 mov	 rax, QWORD PTR [rdi-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00049	48 3b c7	 cmp	 rax, rdi
  0004c	73 4a		 jae	 SHORT $LN127@Tidy

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0004e	48 2b f8	 sub	 rdi, rax
  00051	48 83 ff 08	 cmp	 rdi, 8
  00055	72 47		 jb	 SHORT $LN128@Tidy

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00057	48 83 ff 27	 cmp	 rdi, 39			; 00000027H
  0005b	77 47		 ja	 SHORT $LN129@Tidy

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0005d	48 8b f8	 mov	 rdi, rax
$LN77@Tidy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00060	48 8b cf	 mov	 rcx, rdi
  00063	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN82@Tidy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00068	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00070	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00074	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00079	72 03		 jb	 SHORT $LN116@Tidy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0007b	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN116@Tidy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0007e	c6 04 33 00	 mov	 BYTE PTR [rbx+rsi], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2260 : 		}

  00082	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00087	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0008c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00090	5f		 pop	 rdi
  00091	c3		 ret	 0
$LN125@Tidy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00092	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00097	cc		 int	 3
$LN127@Tidy:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00098	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0009d	cc		 int	 3
$LN128@Tidy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0009e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a3	cc		 int	 3
$LN129@Tidy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000a4	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a9	cc		 int	 3
$LN124@Tidy:
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT

; 2237 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 35		 je	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00005	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00009	48 83 f8 10	 cmp	 rax, 16
  0000d	72 05		 jb	 SHORT $LN16@Inside
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0000f	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00012	eb 03		 jmp	 SHORT $LN17@Inside
$LN16@Inside:
  00014	4c 8b c1	 mov	 r8, rcx
$LN17@Inside:

; 2237 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00017	49 3b d0	 cmp	 rdx, r8
  0001a	72 1e		 jb	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001c	48 83 f8 10	 cmp	 rax, 16
  00020	72 05		 jb	 SHORT $LN31@Inside
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00022	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00025	eb 03		 jmp	 SHORT $LN32@Inside
$LN31@Inside:
  00027	4c 8b c1	 mov	 r8, rcx
$LN32@Inside:

; 2237 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002a	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  0002e	49 8d 0c 00	 lea	 rcx, QWORD PTR [r8+rax]
  00032	48 3b ca	 cmp	 rcx, rdx
  00035	76 03		 jbe	 SHORT $LN4@Inside

; 2240 : 		else
; 2241 : 			return (true);

  00037	b0 01		 mov	 al, 1

; 2242 : 		}

  00039	c3		 ret	 0
$LN4@Inside:

; 2239 : 			return (false);	// don't ask

  0003a	32 c0		 xor	 al, al

; 2242 : 		}

  0003c	c3		 ret	 0
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Trim$ = 64
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT

; 2222 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN103:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b da	 mov	 rbx, rdx

; 2223 : 		if (max_size() < _Newsize)

  00009	48 83 fa fe	 cmp	 rdx, -2
  0000d	77 66		 ja	 SHORT $LN101@Grow

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  0000f	48 39 51 18	 cmp	 QWORD PTR [rcx+24], rdx
  00013	73 15		 jae	 SHORT $LN3@Grow

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00015	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00019	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  0001e	48 85 db	 test	 rbx, rbx
  00021	0f 95 c0	 setne	 al

; 2233 : 		}

  00024	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
$LN3@Grow:

; 2227 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  0002a	45 84 c0	 test	 r8b, r8b
  0002d	74 24		 je	 SHORT $LN5@Grow
  0002f	48 83 fb 10	 cmp	 rbx, 16
  00033	73 1e		 jae	 SHORT $LN5@Grow

; 2228 : 			_Tidy(true,	// copy and deallocate if trimming to small string

  00035	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00039	b2 01		 mov	 dl, 1
  0003b	49 3b d8	 cmp	 rbx, r8
  0003e	4c 0f 42 c3	 cmovb	 r8, rbx
  00042	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00047	48 85 db	 test	 rbx, rbx
  0004a	0f 95 c0	 setne	 al

; 2233 : 		}

  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5b		 pop	 rbx
  00052	c3		 ret	 0
$LN5@Grow:

; 2229 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2230 : 		else if (_Newsize == 0)

  00053	48 85 db	 test	 rbx, rbx
  00056	75 14		 jne	 SHORT $LN100@Grow

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00058	48 89 59 10	 mov	 QWORD PTR [rcx+16], rbx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005c	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00061	72 03		 jb	 SHORT $LN91@Grow
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00063	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN91@Grow:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00066	c6 01 00	 mov	 BYTE PTR [rcx], 0
  00069	48 85 db	 test	 rbx, rbx
$LN100@Grow:
  0006c	0f 95 c0	 setne	 al
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2233 : 		}

  0006f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00073	5b		 pop	 rbx
  00074	c3		 ret	 0
$LN101@Grow:

; 2264 : 		_Xlength_error("string too long");

  00075	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0007c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00081	cc		 int	 3
$LN99@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00000	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00004	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00009	72 08		 jb	 SHORT $LN22@Eos
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0000b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0000e	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2218 : 		}

  00012	c3		 ret	 0
$LN22@Eos:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00013	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2218 : 		}

  00017	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT

; 2181 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN492:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	53		 push	 rbx
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	41 56		 push	 r14
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00018	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00021	4d 8b f0	 mov	 r14, r8
  00024	48 8b d9	 mov	 rbx, rcx

; 2182 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00027	48 8b fa	 mov	 rdi, rdx
  0002a	48 83 cf 0f	 or	 rdi, 15

; 2183 : 		if (max_size() < _Newres)

  0002e	48 83 ff fe	 cmp	 rdi, -2
  00032	76 05		 jbe	 SHORT $LN2@Copy

; 2184 : 			_Newres = _Newsize;	// undo roundup if too big

  00034	48 8b fa	 mov	 rdi, rdx

; 2185 : 		else if (this->_Myres() / 2 <= _Newres / 3)

  00037	eb 35		 jmp	 SHORT $LN108@Copy
$LN2@Copy:
  00039	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  0003d	49 8b c8	 mov	 rcx, r8
  00040	48 d1 e9	 shr	 rcx, 1
  00043	48 b8 ab aa aa
	aa aa aa aa aa	 mov	 rax, -6148914691236517205 ; aaaaaaaaaaaaaaabH
  0004d	48 f7 e7	 mul	 rdi
  00050	48 d1 ea	 shr	 rdx, 1
  00053	48 3b ca	 cmp	 rcx, rdx
  00056	76 16		 jbe	 SHORT $LN108@Copy

; 2186 : 			;
; 2187 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00058	48 c7 c7 fe ff
	ff ff		 mov	 rdi, -2
  0005f	48 8b c7	 mov	 rax, rdi
  00062	48 2b c1	 sub	 rax, rcx
  00065	4c 3b c0	 cmp	 r8, rax
  00068	77 04		 ja	 SHORT $LN108@Copy

; 2188 : 			_Newres = this->_Myres()

  0006a	49 8d 3c 08	 lea	 rdi, QWORD PTR [r8+rcx]
$LN108@Copy:

; 2189 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2190 : 		else
; 2191 : 			_Newres = max_size();	// settle for max_size()
; 2192 : 
; 2193 : 		_Elem *_Ptr;
; 2194 : 		_TRY_BEGIN
; 2195 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

  0006e	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 51   : 	if (_Count == 0)

  00072	48 85 c9	 test	 rcx, rcx
  00075	75 04		 jne	 SHORT $LN136@Copy

; 52   : 		return (_Ptr);

  00077	33 f6		 xor	 esi, esi
  00079	eb 4b		 jmp	 SHORT $LN135@Copy
$LN136@Copy:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)
; 56   : 		_Xbad_alloc();	// report no memory
; 57   : 	const size_t _User_size = _Count * _Sz;
; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  0007b	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  00082	72 2f		 jb	 SHORT $LN138@Copy

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00084	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00088	48 3b c1	 cmp	 rax, rcx
  0008b	77 05		 ja	 SHORT $LN140@Copy

; 67   : 			_Xbad_alloc();	// report no memory

  0008d	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN140@Copy:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00092	48 8b c8	 mov	 rcx, rax
  00095	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0009a	48 85 c0	 test	 rax, rax
  0009d	75 06		 jne	 SHORT $LN141@Copy
  0009f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a4	cc		 int	 3
$LN141@Copy:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  000a5	48 8d 70 27	 lea	 rsi, QWORD PTR [rax+39]
  000a9	48 83 e6 e0	 and	 rsi, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  000ad	48 89 46 f8	 mov	 QWORD PTR [rsi-8], rax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  000b1	eb 13		 jmp	 SHORT $LN135@Copy
$LN138@Copy:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  000b3	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000b8	48 8b f0	 mov	 rsi, rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  000bb	48 85 c0	 test	 rax, rax
  000be	75 06		 jne	 SHORT $LN135@Copy
  000c0	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c5	90		 npad	 1
$LN135@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
  000c6	eb 14		 jmp	 SHORT $LN18@Copy
$LN19@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
  000c8	48 8b 5c 24 60	 mov	 rbx, QWORD PTR this$[rsp]
  000cd	4c 8b 74 24 70	 mov	 r14, QWORD PTR _Oldlen$[rsp]
  000d2	48 8b 7c 24 68	 mov	 rdi, QWORD PTR _Newres$[rsp]
  000d7	48 8b 74 24 78	 mov	 rsi, QWORD PTR _Ptr$[rsp]
$LN18@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2206 : 		if (0 < _Oldlen)

  000dc	4d 85 f6	 test	 r14, r14
  000df	74 1f		 je	 SHORT $LN294@Copy

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e1	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000e6	72 05		 jb	 SHORT $LN286@Copy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000e8	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000eb	eb 03		 jmp	 SHORT $LN287@Copy
$LN286@Copy:
  000ed	48 8b d3	 mov	 rdx, rbx
$LN287@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000f0	4d 85 f6	 test	 r14, r14
  000f3	74 0b		 je	 SHORT $LN294@Copy
  000f5	4d 8b c6	 mov	 r8, r14
  000f8	48 8b ce	 mov	 rcx, rsi
  000fb	e8 00 00 00 00	 call	 memcpy
$LN294@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00100	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00104	48 83 f8 10	 cmp	 rax, 16
  00108	72 4b		 jb	 SHORT $LN376@Copy

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0010a	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0010d	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00110	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00116	72 38		 jb	 SHORT $LN371@Copy

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00118	f6 c1 1f	 test	 cl, 31
  0011b	74 06		 je	 SHORT $LN372@Copy
  0011d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00122	cc		 int	 3
$LN372@Copy:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00123	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00127	48 3b c1	 cmp	 rax, rcx
  0012a	72 06		 jb	 SHORT $LN373@Copy
  0012c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00131	cc		 int	 3
$LN373@Copy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00132	48 2b c8	 sub	 rcx, rax
  00135	48 83 f9 08	 cmp	 rcx, 8
  00139	73 06		 jae	 SHORT $LN374@Copy
  0013b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00140	cc		 int	 3
$LN374@Copy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00141	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00145	76 06		 jbe	 SHORT $LN375@Copy
  00147	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0014c	cc		 int	 3
$LN375@Copy:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0014d	48 8b c8	 mov	 rcx, rax
$LN371@Copy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00150	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN376@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00155	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0015d	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00165	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0016a	72 05		 jb	 SHORT $LN410@Copy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0016c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0016f	eb 03		 jmp	 SHORT $LN411@Copy
$LN410@Copy:
  00171	48 8b c3	 mov	 rax, rbx
$LN411@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00174	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00177	48 89 33	 mov	 QWORD PTR [rbx], rsi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2211 : 		this->_Myres() = _Newres;

  0017a	48 89 7b 18	 mov	 QWORD PTR [rbx+24], rdi

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0017e	4c 89 73 10	 mov	 QWORD PTR [rbx+16], r14

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00182	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00187	72 03		 jb	 SHORT $LN483@Copy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00189	48 8b de	 mov	 rbx, rsi
$LN483@Copy:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0018c	42 c6 04 33 00	 mov	 BYTE PTR [rbx+r14], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2213 : 		}

  00191	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00195	41 5e		 pop	 r14
  00197	5f		 pop	 rdi
  00198	5e		 pop	 rsi
  00199	5b		 pop	 rbx
  0019a	c3		 ret	 0
$LN490@Copy:
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2196 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2196 : 		_CATCH_ALL
; 2197 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2196 : 		_CATCH_ALL
; 2197 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2198 : 			_TRY_BEGIN
; 2199 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2196 : 		_CATCH_ALL
; 2197 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2198 : 			_TRY_BEGIN
; 2199 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2200 : 			_CATCH_ALL
; 2201 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2202 : 			_RERAISE;
; 2203 : 			_CATCH_END
; 2204 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 2196 : 		_CATCH_ALL
; 2197 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2198 : 			_TRY_BEGIN
; 2199 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2200 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00049	48 83 f8 10	 cmp	 rax, 16
  0004d	72 57		 jb	 SHORT $LN234@catch$0

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00052	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00055	48 83 f8 ff	 cmp	 rax, -1
  00059	76 06		 jbe	 SHORT $LN228@catch$0
  0005b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00060	cc		 int	 3
$LN228@catch$0:

; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}
; 88   : 
; 89   : 		// FUNCTION _Deallocate
; 90   : inline
; 91   : 	void _Deallocate(void * _Ptr, size_t _Count, size_t _Sz)
; 92   : 	{	// deallocate storage for _Count elements of size _Sz
; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);
; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00061	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00067	72 38		 jb	 SHORT $LN229@catch$0

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00069	f6 c1 1f	 test	 cl, 31
  0006c	74 06		 je	 SHORT $LN230@catch$0
  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN230@catch$0:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00074	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00078	48 3b c1	 cmp	 rax, rcx
  0007b	72 06		 jb	 SHORT $LN231@catch$0
  0007d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00082	cc		 int	 3
$LN231@catch$0:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00083	48 2b c8	 sub	 rcx, rax
  00086	48 83 f9 08	 cmp	 rcx, 8
  0008a	73 06		 jae	 SHORT $LN232@catch$0
  0008c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00091	cc		 int	 3
$LN232@catch$0:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00092	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00096	76 06		 jbe	 SHORT $LN233@catch$0
  00098	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0009d	cc		 int	 3
$LN233@catch$0:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0009e	48 8b c8	 mov	 rcx, rax
$LN229@catch$0:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000a1	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN234@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000a6	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ae	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b6	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000bb	72 03		 jb	 SHORT $LN269@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000bd	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN269@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000c0	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2196 : 		_CATCH_ALL
; 2197 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2198 : 			_TRY_BEGIN
; 2199 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2200 : 			_CATCH_ALL
; 2201 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2202 : 			_RERAISE;

  000c3	33 d2		 xor	 edx, edx
  000c5	33 c9		 xor	 ecx, ecx
  000c7	e8 00 00 00 00	 call	 _CxxThrowException
  000cc	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2196 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2197 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2198 : 			_TRY_BEGIN
; 2199 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2200 : 			_CATCH_ALL
; 2201 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2202 : 			_RERAISE;
; 2203 : 			_CATCH_END
; 2204 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 729  : 		}
; 730  : 
; 731  : 	const size_type& _Myres() const _NOEXCEPT
; 732  : 		{	// return const reference to _Myres
; 733  : 		return (_Get_data()._Myres);
; 734  : 		}
; 735  : 
; 736  : private:
; 737  : 	_Compressed_pair<_Alty, _String_val<_Val_types> > _Mypair;
; 738  : 	};
; 739  : 
; 740  : 		// TEMPLATE CLASS basic_string
; 741  : template<class _Elem,
; 742  : 	class _Traits,
; 743  : 	class _Alloc>
; 744  : 	class basic_string
; 745  : 		: public _String_alloc<_String_base_types<_Elem, _Alloc> >
; 746  : 	{	// null-terminated transparent array of elements
; 747  : public:
; 748  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Myt;
; 749  : 	typedef _String_alloc<_String_base_types<_Elem, _Alloc> > _Mybase;
; 750  : 	typedef _Traits traits_type;
; 751  : 	typedef _Alloc allocator_type;
; 752  : 
; 753  : 	typedef typename _Mybase::_Alty _Alty;
; 754  : 
; 755  : 	typedef typename _Mybase::value_type value_type;
; 756  : 	typedef typename _Mybase::size_type size_type;
; 757  : 	typedef typename _Mybase::difference_type difference_type;
; 758  : 	typedef typename _Mybase::pointer pointer;
; 759  : 	typedef typename _Mybase::const_pointer const_pointer;
; 760  : 	typedef typename _Mybase::reference reference;
; 761  : 	typedef typename _Mybase::const_reference const_reference;
; 762  : 
; 763  : 	typedef typename _Mybase::iterator iterator;
; 764  : 	typedef typename _Mybase::const_iterator const_iterator;
; 765  : 
; 766  : 	typedef _STD reverse_iterator<iterator> reverse_iterator;
; 767  : 	typedef _STD reverse_iterator<const_iterator> const_reverse_iterator;
; 768  : 
; 769  : 	basic_string(const _Myt& _Right)
; 770  : 
; 771  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())
; 772  : 
; 773  : 
; 774  : 		{	// construct by copying _Right
; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);
; 777  : 		}
; 778  : 
; 779  : 	basic_string(const _Myt& _Right, const _Alloc& _Al)
; 780  : 		: _Mybase(_Al)
; 781  : 		{	// construct by copying with allocator
; 782  : 		_Tidy();
; 783  : 		assign(_Right, 0, npos);
; 784  : 		}
; 785  : 
; 786  : 	basic_string() _NOEXCEPT_OP(is_nothrow_default_constructible<_Alloc>::value)
; 787  : 		: _Mybase()
; 788  : 		{	// construct empty string
; 789  : 		_Tidy();
; 790  : 		}
; 791  : 
; 792  : 	explicit basic_string(const _Alloc& _Al) _NOEXCEPT
; 793  : 		: _Mybase(_Al)
; 794  : 		{	// construct empty string with allocator
; 795  : 		_Tidy();
; 796  : 		}
; 797  : 
; 798  : 	basic_string(const _Myt& _Right, size_type _Roff,
; 799  : 		size_type _Count = npos)
; 800  : 		: _Mybase(_Right._Getal())
; 801  : 		{	// construct from _Right [_Roff, _Roff + _Count)
; 802  : 		_Tidy();
; 803  : 		assign(_Right, _Roff, _Count);
; 804  : 		}
; 805  : 
; 806  : 	basic_string(const _Myt& _Right, size_type _Roff, size_type _Count,
; 807  : 		const _Alloc& _Al)
; 808  : 		: _Mybase(_Al)
; 809  : 		{	// construct from _Right [_Roff, _Roff + _Count) with allocator
; 810  : 		_Tidy();
; 811  : 		assign(_Right, _Roff, _Count);
; 812  : 		}
; 813  : 
; 814  : 	basic_string(const _Elem *_Ptr, size_type _Count)
; 815  : 		: _Mybase()
; 816  : 		{	// construct from [_Ptr, _Ptr + _Count)
; 817  : 		_Tidy();
; 818  : 		assign(_Ptr, _Count);
; 819  : 		}
; 820  : 
; 821  : 	basic_string(const _Elem *_Ptr, size_type _Count, const _Alloc& _Al)
; 822  : 		: _Mybase(_Al)
; 823  : 		{	// construct from [_Ptr, _Ptr + _Count) with allocator
; 824  : 		_Tidy();
; 825  : 		assign(_Ptr, _Count);
; 826  : 		}
; 827  : 
; 828  : 	basic_string(const _Elem *_Ptr)
; 829  : 		: _Mybase()
; 830  : 		{	// construct from [_Ptr, <null>)
; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}
; 834  : 
; 835  : 	basic_string(const _Elem *_Ptr, const _Alloc& _Al)
; 836  : 		: _Mybase(_Al)
; 837  : 		{	// construct from [_Ptr, <null>) with allocator
; 838  : 		_Tidy();
; 839  : 		assign(_Ptr);
; 840  : 		}
; 841  : 
; 842  : 	basic_string(size_type _Count, _Elem _Ch)
; 843  : 		: _Mybase()
; 844  : 		{	// construct from _Count * _Ch
; 845  : 		_Tidy();
; 846  : 		assign(_Count, _Ch);
; 847  : 		}
; 848  : 
; 849  : 	basic_string(size_type _Count, _Elem _Ch, const _Alloc& _Al)
; 850  : 		: _Mybase(_Al)
; 851  : 		{	// construct from _Count * _Ch with allocator
; 852  : 		_Tidy();
; 853  : 		assign(_Count, _Ch);
; 854  : 		}
; 855  : 
; 856  : 	template<class _Iter,
; 857  : 		class = typename enable_if<_Is_iterator<_Iter>::value,
; 858  : 			void>::type>
; 859  : 		basic_string(_Iter _First, _Iter _Last, const _Alloc& _Al = _Alloc())
; 860  : 		: _Mybase(_Al)
; 861  : 		{	// construct from [_First, _Last) with optional allocator
; 862  : 		_DEBUG_RANGE(_First, _Last);
; 863  : 		_Tidy();
; 864  : 		_Construct(_Unchecked(_First), _Unchecked(_Last), _Iter_cat_t<_Iter>());
; 865  : 		}
; 866  : 
; 867  : 	template<class _Iter>
; 868  : 		void _Construct(_Iter _First,
; 869  : 			_Iter _Last, input_iterator_tag)
; 870  : 		{	// initialize from [_First, _Last), input iterators
; 871  : 		_TRY_BEGIN
; 872  : 		for (; _First != _Last; ++_First)
; 873  : 			append((size_type)1, (_Elem)*_First);
; 874  : 		_CATCH_ALL
; 875  : 		_Tidy(true);
; 876  : 		_RERAISE;
; 877  : 		_CATCH_END
; 878  : 		}
; 879  : 
; 880  : 	template<class _Iter>
; 881  : 		void _Construct(_Iter _First,
; 882  : 			_Iter _Last, forward_iterator_tag)
; 883  : 		{	// initialize from [_First, _Last), forward iterators
; 884  : 		size_type _Count = _STD distance(_First, _Last);
; 885  : 		reserve(_Count);
; 886  : 		_Construct(_First, _Last, input_iterator_tag());
; 887  : 		}
; 888  : 
; 889  : 	void _Construct(_Elem *_First,
; 890  : 		_Elem *_Last, random_access_iterator_tag)
; 891  : 		{	// initialize from [_First, _Last), pointers
; 892  : 		if (_First != _Last)
; 893  : 			assign(_First, _Last - _First);
; 894  : 		}
; 895  : 
; 896  : 	void _Construct(const _Elem *_First,
; 897  : 		const _Elem *_Last, random_access_iterator_tag)
; 898  : 		{	// initialize from [_First, _Last), const pointers
; 899  : 		if (_First != _Last)
; 900  : 			assign(_First, _Last - _First);
; 901  : 		}
; 902  : 
; 903  : 	basic_string(_Myt&& _Right) _NOEXCEPT
; 904  : 		: _Mybase(_STD move(_Right._Getal()))
; 905  : 		{	// construct by moving _Right
; 906  : 		_Tidy();
; 907  : 		_Assign_rv(_STD forward<_Myt>(_Right));
; 908  : 		}
; 909  : 
; 910  : 	basic_string(_Myt&& _Right, const _Alloc& _Al)
; 911  : 		: _Mybase(_Al)
; 912  : 		{	// construct by moving _Right, allocator
; 913  : 		if (this->_Getal() != _Right._Getal())
; 914  : 			assign(_Right.begin(), _Right.end());
; 915  : 		else
; 916  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 917  : 		}
; 918  : 
; 919  : 	_Myt& operator=(_Myt&& _Right)
; 920  : 		_NOEXCEPT_OP(_Alty::propagate_on_container_move_assignment::value
; 921  : 			|| _Alty::is_always_equal::value)
; 922  : 		{	// assign by moving _Right
; 923  : 		if (this != &_Right)
; 924  : 			{	// different, assign it
; 925  : 			_Tidy(true);
; 926  : 
; 927  : 			if (_Alty::propagate_on_container_move_assignment::value
; 928  : 				&& this->_Getal() != _Right._Getal())
; 929  : 				this->_Move_alloc(_Right._Getal());
; 930  : 
; 931  : 			if (this->_Getal() != _Right._Getal())
; 932  : 				assign(_Right.begin(), _Right.end());
; 933  : 			else
; 934  : 				_Assign_rv(_STD forward<_Myt>(_Right));
; 935  : 			}
; 936  : 		return (*this);
; 937  : 		}
; 938  : 
; 939  : 	_Myt& assign(_Myt&& _Right) _NOEXCEPT
; 940  : 		{	// assign by moving _Right
; 941  : 		if (this == &_Right)
; 942  : 			;
; 943  : 		else if (get_allocator() != _Right.get_allocator()
; 944  : 			&& this->_BUF_SIZE <= _Right._Myres())
; 945  : 			*this = _Right;
; 946  : 		else
; 947  : 			{	// not same, clear this and steal from _Right
; 948  : 			_Tidy(true);
; 949  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 950  : 			}
; 951  : 		return (*this);
; 952  : 		}
; 953  : 
; 954  : 	void _Assign_rv(_Myt&& _Right)
; 955  : 		{	// assign by moving _Right
; 956  : 		if (_Right._Myres() < this->_BUF_SIZE)
; 957  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,
; 958  : 				_Right._Mysize() + 1);
; 959  : 		else
; 960  : 			{	// copy pointer
; 961  : 			this->_Getal().construct(&this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 962  : 			_Right._Bx()._Ptr = pointer();
; 963  : 			}
; 964  : 		this->_Mysize() = _Right._Mysize();
; 965  : 		this->_Myres() = _Right._Myres();
; 966  : 		_Right._Tidy();
; 967  : 		}
; 968  : 
; 969  : 	basic_string(_XSTD initializer_list<_Elem> _Ilist,
; 970  : 		const _Alloc& _Al = allocator_type())
; 971  : 		: _Mybase(_Al)
; 972  : 		{	// construct from initializer_list
; 973  : 		_Tidy();
; 974  : 		assign(_Ilist.begin(), _Ilist.end());
; 975  : 		}
; 976  : 
; 977  : 	_Myt& operator=(_XSTD initializer_list<_Elem> _Ilist)
; 978  : 		{	// assign initializer_list
; 979  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 980  : 		}
; 981  : 
; 982  : 	_Myt& operator+=(_XSTD initializer_list<_Elem> _Ilist)
; 983  : 		{	// append initializer_list
; 984  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 985  : 		}
; 986  : 
; 987  : 	_Myt& assign(_XSTD initializer_list<_Elem> _Ilist)
; 988  : 		{	// assign initializer_list
; 989  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 990  : 		}
; 991  : 
; 992  : 	_Myt& append(_XSTD initializer_list<_Elem> _Ilist)
; 993  : 		{	// append initializer_list
; 994  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 995  : 		}
; 996  : 
; 997  : 	iterator insert(const_iterator _Where,
; 998  : 		_XSTD initializer_list<_Elem> _Ilist)
; 999  : 		{	// insert initializer_list
; 1000 : 		return (insert(_Where, _Ilist.begin(), _Ilist.end()));
; 1001 : 		}
; 1002 : 
; 1003 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1004 : 		_XSTD initializer_list<_Elem> _Ilist)
; 1005 : 		{	// replace with initializer_list
; 1006 : 		return (replace(_First, _Last, _Ilist.begin(), _Ilist.end()));
; 1007 : 		}
; 1008 : 
; 1009 : 	~basic_string() _NOEXCEPT
; 1010 : 		{	// destroy the string
; 1011 : 		_Tidy(true);
; 1012 : 		}
; 1013 : 
; 1014 : 	_PGLOBAL static const size_type npos;	// bad/missing length/position
; 1015 : 
; 1016 : 	_Myt& operator=(const _Myt& _Right)
; 1017 : 		{	// assign _Right
; 1018 : 		if (this != &_Right)
; 1019 : 			{	// different, assign it
; 1020 : 			if (this->_Getal() != _Right._Getal()
; 1021 : 				&& _Alty::propagate_on_container_copy_assignment::value)
; 1022 : 				{	// change allocator before copying
; 1023 : 				_Tidy(true);
; 1024 : 				this->_Copy_alloc(_Right._Getal());
; 1025 : 				}
; 1026 : 
; 1027 : 			assign(_Right);
; 1028 : 			}
; 1029 : 		return (*this);
; 1030 : 		}
; 1031 : 
; 1032 : 	_Myt& operator=(const _Elem *_Ptr)
; 1033 : 		{	// assign [_Ptr, <null>)
; 1034 : 		return (assign(_Ptr));
; 1035 : 		}
; 1036 : 
; 1037 : 	_Myt& operator=(_Elem _Ch)
; 1038 : 		{	// assign 1 * _Ch
; 1039 : 		return (assign(1, _Ch));
; 1040 : 		}
; 1041 : 
; 1042 : 	_Myt& operator+=(const _Myt& _Right)
; 1043 : 		{	// append _Right
; 1044 : 		return (append(_Right));
; 1045 : 		}
; 1046 : 
; 1047 : 	_Myt& operator+=(const _Elem *_Ptr)
; 1048 : 		{	// append [_Ptr, <null>)
; 1049 : 		return (append(_Ptr));
; 1050 : 		}
; 1051 : 
; 1052 : 	_Myt& operator+=(_Elem _Ch)
; 1053 : 		{	// append 1 * _Ch
; 1054 : 		return (append((size_type)1, _Ch));
; 1055 : 		}
; 1056 : 
; 1057 : 	_Myt& append(const _Myt& _Right)
; 1058 : 		{	// append _Right
; 1059 : 		return (append(_Right, 0, npos));
; 1060 : 		}
; 1061 : 
; 1062 : 	_Myt& append(const _Myt& _Right,
; 1063 : 		size_type _Roff, size_type _Count = npos)
; 1064 : 		{	// append _Right [_Roff, _Roff + _Count)
; 1065 : 		_Right._Check_offset(_Roff);
; 1066 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1067 : 		if (npos - this->_Mysize() <= _Count)
; 1068 : 			_Xlen();	// result too long
; 1069 : 
; 1070 : 		const size_type _Num = this->_Mysize() + _Count;
; 1071 : 		if (0 < _Count && _Grow(_Num))
; 1072 : 			{	// make room and append new stuff
; 1073 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),
; 1074 : 				_Right._Myptr() + _Roff, _Count);
; 1075 : 			_Eos(_Num);
; 1076 : 			}
; 1077 : 		return (*this);
; 1078 : 		}
; 1079 : 
; 1080 : 	_Myt& append(const _Elem *_Ptr, size_type _Count)
; 1081 : 		{	// append [_Ptr, _Ptr + _Count)
; 1082 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1083 : 		if (_Inside(_Ptr))
; 1084 : 			return (append(*this,
; 1085 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1086 : 		if (npos - this->_Mysize() <= _Count)
; 1087 : 			_Xlen();	// result too long
; 1088 : 
; 1089 : 		const size_type _Num = this->_Mysize() + _Count;
; 1090 : 		if (0 < _Count && _Grow(_Num))
; 1091 : 			{	// make room and append new stuff
; 1092 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);
; 1093 : 			_Eos(_Num);
; 1094 : 			}
; 1095 : 		return (*this);
; 1096 : 		}
; 1097 : 
; 1098 : 	_Myt& append(const _Elem *_Ptr)
; 1099 : 		{	// append [_Ptr, <null>)
; 1100 : 		_DEBUG_POINTER(_Ptr);
; 1101 : 		return (append(_Ptr, _Traits::length(_Ptr)));
; 1102 : 		}
; 1103 : 
; 1104 : 	_Myt& append(size_type _Count, _Elem _Ch)
; 1105 : 		{	// append _Count * _Ch
; 1106 : 		if (npos - this->_Mysize() <= _Count)
; 1107 : 			_Xlen();	// result too long
; 1108 : 
; 1109 : 		const size_type _Num = this->_Mysize() + _Count;
; 1110 : 		if (0 < _Count && _Grow(_Num))
; 1111 : 			{	// make room and append new stuff using assign
; 1112 : 			_Chassign(this->_Mysize(), _Count, _Ch);
; 1113 : 			_Eos(_Num);
; 1114 : 			}
; 1115 : 		return (*this);
; 1116 : 		}
; 1117 : 
; 1118 : 	template<class _Iter>
; 1119 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1120 : 			_Myt&>::type
; 1121 : 		append(_Iter _First, _Iter _Last)
; 1122 : 		{	// append [_First, _Last), input iterators
; 1123 : 		return (replace(end(), end(), _First, _Last));
; 1124 : 		}
; 1125 : 
; 1126 : 	_Myt& append(const_pointer _First, const_pointer _Last)
; 1127 : 		{	// append [_First, _Last), const pointers
; 1128 : 		return (replace(end(), end(), _First, _Last));
; 1129 : 		}
; 1130 : 
; 1131 : 	_Myt& append(const_iterator _First, const_iterator _Last)
; 1132 : 		{	// append [_First, _Last), const_iterators
; 1133 : 		return (replace(end(), end(), _First, _Last));
; 1134 : 		}
; 1135 : 
; 1136 : 	_Myt& assign(const _Myt& _Right)
; 1137 : 		{	// assign _Right
; 1138 : 		return (assign(_Right, 0, npos));
; 1139 : 		}
; 1140 : 
; 1141 : 	_Myt& assign(const _Myt& _Right,
; 1142 : 		size_type _Roff, size_type _Count = npos)
; 1143 : 		{	// assign _Right [_Roff, _Roff + _Count)
; 1144 : 		_Right._Check_offset(_Roff);
; 1145 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1146 : 
; 1147 : 		if (this == &_Right)
; 1148 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring
; 1149 : 		else if (_Grow(_Count))
; 1150 : 			{	// make room and assign new stuff
; 1151 : 			_Traits::copy(this->_Myptr(),
; 1152 : 				_Right._Myptr() + _Roff, _Count);
; 1153 : 			_Eos(_Count);
; 1154 : 			}
; 1155 : 		return (*this);
; 1156 : 		}
; 1157 : 
; 1158 : 	_Myt& assign(const _Elem *_Ptr, size_type _Count)
; 1159 : 		{	// assign [_Ptr, _Ptr + _Count)
; 1160 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1161 : 		if (_Inside(_Ptr))
; 1162 : 			return (assign(*this,
; 1163 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1164 : 
; 1165 : 		if (_Grow(_Count))
; 1166 : 			{	// make room and assign new stuff
; 1167 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);
; 1168 : 			_Eos(_Count);
; 1169 : 			}
; 1170 : 		return (*this);
; 1171 : 		}
; 1172 : 
; 1173 : 	_Myt& assign(const _Elem *_Ptr)
; 1174 : 		{	// assign [_Ptr, <null>)
; 1175 : 		_DEBUG_POINTER(_Ptr);
; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));
; 1177 : 		}
; 1178 : 
; 1179 : 	_Myt& assign(size_type _Count, _Elem _Ch)
; 1180 : 		{	// assign _Count * _Ch
; 1181 : 		if (_Count == npos)
; 1182 : 			_Xlen();	// result too long
; 1183 : 
; 1184 : 		if (_Grow(_Count))
; 1185 : 			{	// make room and assign new stuff
; 1186 : 			_Chassign(0, _Count, _Ch);
; 1187 : 			_Eos(_Count);
; 1188 : 			}
; 1189 : 		return (*this);
; 1190 : 		}
; 1191 : 
; 1192 : 	template<class _Iter>
; 1193 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1194 : 			_Myt&>::type
; 1195 : 		assign(_Iter _First, _Iter _Last)
; 1196 : 		{	// assign [_First, _Last), input iterators
; 1197 : 		return (replace(begin(), end(), _First, _Last));
; 1198 : 		}
; 1199 : 
; 1200 : 	_Myt& assign(const_pointer _First, const_pointer _Last)
; 1201 : 		{	// assign [_First, _Last), const pointers
; 1202 : 		return (replace(begin(), end(), _First, _Last));
; 1203 : 		}
; 1204 : 
; 1205 : 	_Myt& assign(const_iterator _First, const_iterator _Last)
; 1206 : 		{	// assign [_First, _Last), const_iterators
; 1207 : 		return (replace(begin(), end(), _First, _Last));
; 1208 : 		}
; 1209 : 
; 1210 : 	_Myt& insert(size_type _Off, const _Myt& _Right)
; 1211 : 		{	// insert _Right at _Off
; 1212 : 		return (insert(_Off, _Right, 0, npos));
; 1213 : 		}
; 1214 : 
; 1215 : 	_Myt& insert(size_type _Off,
; 1216 : 		const _Myt& _Right, size_type _Roff, size_type _Count = npos)
; 1217 : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off
; 1218 : 		_Check_offset(_Off);
; 1219 : 		_Right._Check_offset(_Roff);
; 1220 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1221 : 		if (npos - this->_Mysize() <= _Count)
; 1222 : 			_Xlen();	// result too long
; 1223 : 
; 1224 : 		const size_type _Num = this->_Mysize() + _Count;
; 1225 : 		if (0 < _Count && _Grow(_Num))
; 1226 : 			{	// make room and insert new stuff
; 1227 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1228 : 				this->_Myptr() + _Off,
; 1229 : 				this->_Mysize() - _Off);	// empty out hole
; 1230 : 			if (this == &_Right)
; 1231 : 				_Traits::move(this->_Myptr() + _Off,
; 1232 : 					this->_Myptr() + (_Off < _Roff ? _Roff + _Count : _Roff),
; 1233 : 						_Count);	// substring
; 1234 : 			else
; 1235 : 				_Traits::copy(this->_Myptr() + _Off,
; 1236 : 					_Right._Myptr() + _Roff, _Count);	// fill hole
; 1237 : 			_Eos(_Num);
; 1238 : 			}
; 1239 : 		return (*this);
; 1240 : 		}
; 1241 : 
; 1242 : 	_Myt& insert(size_type _Off,
; 1243 : 		const _Elem *_Ptr, size_type _Count)
; 1244 : 		{	// insert [_Ptr, _Ptr + _Count) at _Off
; 1245 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1246 : 		if (_Inside(_Ptr))
; 1247 : 			return (insert(_Off, *this,
; 1248 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1249 : 		_Check_offset(_Off);
; 1250 : 		if (npos - this->_Mysize() <= _Count)
; 1251 : 			_Xlen();	// result too long
; 1252 : 		const size_type _Num = this->_Mysize() + _Count;
; 1253 : 		if (0 < _Count && _Grow(_Num))
; 1254 : 			{	// make room and insert new stuff
; 1255 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1256 : 				this->_Myptr() + _Off,
; 1257 : 				this->_Mysize() - _Off);	// empty out hole
; 1258 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1259 : 			_Eos(_Num);
; 1260 : 			}
; 1261 : 		return (*this);
; 1262 : 		}
; 1263 : 
; 1264 : 	_Myt& insert(size_type _Off, const _Elem *_Ptr)
; 1265 : 		{	// insert [_Ptr, <null>) at _Off
; 1266 : 		_DEBUG_POINTER(_Ptr);
; 1267 : 		return (insert(_Off, _Ptr, _Traits::length(_Ptr)));
; 1268 : 		}
; 1269 : 
; 1270 : 	_Myt& insert(size_type _Off,
; 1271 : 		size_type _Count, _Elem _Ch)
; 1272 : 		{	// insert _Count * _Ch at _Off
; 1273 : 		_Check_offset(_Off);
; 1274 : 		if (npos - this->_Mysize() <= _Count)
; 1275 : 			_Xlen();	// result too long
; 1276 : 		const size_type _Num = this->_Mysize() + _Count;
; 1277 : 		if (0 < _Count && _Grow(_Num))
; 1278 : 			{	// make room and insert new stuff
; 1279 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1280 : 				this->_Myptr() + _Off,
; 1281 : 				this->_Mysize() - _Off);	// empty out hole
; 1282 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1283 : 			_Eos(_Num);
; 1284 : 			}
; 1285 : 		return (*this);
; 1286 : 		}
; 1287 : 
; 1288 : 	iterator insert(const_iterator _Where)
; 1289 : 		{	// insert <null> at _Where
; 1290 : 		return (insert(_Where, _Elem()));
; 1291 : 		}
; 1292 : 
; 1293 : 	iterator insert(const_iterator _Where, _Elem _Ch)
; 1294 : 		{	// insert _Ch at _Where
; 1295 : 		size_type _Off = _Where - begin();
; 1296 : 		insert(_Off, 1, _Ch);
; 1297 : 		return (begin() + _Off);
; 1298 : 		}
; 1299 : 
; 1300 : 	iterator insert(const_iterator _Where, size_type _Count, _Elem _Ch)
; 1301 : 		{	// insert _Count * _Elem at _Where
; 1302 : 		size_type _Off = _Where - begin();
; 1303 : 		insert(_Off, _Count, _Ch);
; 1304 : 		return (begin() + _Off);
; 1305 : 		}
; 1306 : 
; 1307 : 	template<class _Iter>
; 1308 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1309 : 			iterator>::type
; 1310 : 		insert(const_iterator _Where, _Iter _First, _Iter _Last)
; 1311 : 		{	// insert [_First, _Last) at _Where, input iterators
; 1312 : 		size_type _Off = _Where - begin();
; 1313 : 		replace(_Where, _Where, _First, _Last);
; 1314 : 		return (begin() + _Off);
; 1315 : 		}
; 1316 : 
; 1317 : 	iterator insert(const_iterator _Where,
; 1318 : 		const_pointer _First, const_pointer _Last)
; 1319 : 		{	// insert [_First, _Last) at _Where, const pointers
; 1320 : 		size_type _Off = _Where - begin();
; 1321 : 		replace(_Where, _Where, _First, _Last);
; 1322 : 		return (begin() + _Off);
; 1323 : 		}
; 1324 : 
; 1325 : 	iterator insert(const_iterator _Where,
; 1326 : 		const_iterator _First, const_iterator _Last)
; 1327 : 		{	// insert [_First, _Last) at _Where, const_iterators
; 1328 : 		size_type _Off = _Where - begin();
; 1329 : 		replace(_Where, _Where, _First, _Last);
; 1330 : 		return (begin() + _Off);
; 1331 : 		}
; 1332 : 
; 1333 : 	_Myt& erase(size_type _Off = 0)
; 1334 : 		{	// erase elements [_Off, ...)
; 1335 : 		_Check_offset(_Off);
; 1336 : 		_Eos(_Off);
; 1337 : 		return (*this);
; 1338 : 		}
; 1339 : 
; 1340 : 	_Myt& erase(size_type _Off, size_type _Count)
; 1341 : 		{	// erase elements [_Off, _Off + _Count)
; 1342 : 		_Check_offset(_Off);
; 1343 : 		if (this->_Mysize() - _Off <= _Count)
; 1344 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1345 : 		else if (0 < _Count)
; 1346 : 			{	// move elements down
; 1347 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1348 : 			size_type _Newsize = this->_Mysize() - _Count;
; 1349 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);
; 1350 : 			_Eos(_Newsize);
; 1351 : 			}
; 1352 : 		return (*this);
; 1353 : 		}
; 1354 : 
; 1355 : 	iterator erase(const_iterator _Where)
; 1356 : 		{	// erase element at _Where
; 1357 : 		size_type _Count = _Where - begin();
; 1358 : 		erase(_Count, 1);
; 1359 : 		return (begin() + _Count);
; 1360 : 		}
; 1361 : 
; 1362 : 	iterator erase(const_iterator _First, const_iterator _Last)
; 1363 : 		{	// erase substring [_First, _Last)
; 1364 : 		_DEBUG_RANGE(_First, _Last);
; 1365 : 		size_type _Count = _First - begin();
; 1366 : 		erase(_Count, _Last - _First);
; 1367 : 		return (begin() + _Count);
; 1368 : 		}
; 1369 : 
; 1370 : 	void clear() _NOEXCEPT
; 1371 : 		{	// erase all
; 1372 : 		_Eos(0);
; 1373 : 		}
; 1374 : 
; 1375 : 	_Myt& replace(size_type _Off, size_type _N0, const _Myt& _Right)
; 1376 : 		{	// replace [_Off, _Off + _N0) with _Right
; 1377 : 		return (replace(_Off, _N0, _Right, 0, npos));
; 1378 : 		}
; 1379 : 
; 1380 : 	_Myt& replace(size_type _Off,
; 1381 : 		size_type _N0, const _Myt& _Right, size_type _Roff,
; 1382 : 			size_type _Count = npos)
; 1383 : 		{	// replace [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 1384 : 		_Check_offset(_Off);
; 1385 : 		_Right._Check_offset(_Roff);
; 1386 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1387 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1388 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1389 : 			_Xlen();	// result too long
; 1390 : 
; 1391 : 		const size_type _Nm = this->_Mysize() - _N0 - _Off;	// length of kept tail
; 1392 : 		const size_type _Newsize = this->_Mysize() + _Count - _N0;
; 1393 : 		if (this->_Mysize() < _Newsize)
; 1394 : 			_Grow(_Newsize);
; 1395 : 
; 1396 : 		if (_Count == _N0)
; 1397 : 			{	// only one movement required, so _Traits::move handles any overlap
; 1398 : 			_Traits::move(this->_Myptr() + _Off,
; 1399 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1400 : 			}
; 1401 : 		else if (this != &_Right)
; 1402 : 			{	// no overlap, just move down and copy in new stuff
; 1403 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1404 : 				this->_Myptr() + _Off + _N0, _Nm);	// empty hole
; 1405 : 			_Traits::copy(this->_Myptr() + _Off,
; 1406 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1407 : 			}
; 1408 : 		else if (_Count < _N0)
; 1409 : 			{	// hole doesn't get larger, just copy in substring
; 1410 : 			_Traits::move(this->_Myptr() + _Off,
; 1411 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1412 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1413 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1414 : 			}
; 1415 : 		else if (_Roff <= _Off)
; 1416 : 			{	// hole gets larger, substring begins before hole
; 1417 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1418 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1419 : 			_Traits::move(this->_Myptr() + _Off,
; 1420 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1421 : 			}
; 1422 : 		else if (_Off + _N0 <= _Roff)
; 1423 : 			{	// hole gets larger, substring begins after hole
; 1424 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1425 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1426 : 			_Traits::move(this->_Myptr() + _Off,
; 1427 : 				this->_Myptr() + (_Roff + _Count - _N0),
; 1428 : 				_Count);	// fill hole
; 1429 : 			}
; 1430 : 		else
; 1431 : 			{	// hole gets larger, substring begins in hole
; 1432 : 			_Traits::move(this->_Myptr() + _Off,
; 1433 : 				this->_Myptr() + _Roff, _N0);	// fill old hole
; 1434 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1435 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1436 : 			_Traits::move(this->_Myptr() + _Off + _N0,
; 1437 : 				this->_Myptr() + _Roff + _Count,
; 1438 : 				_Count - _N0);	// fill rest of new hole
; 1439 : 			}
; 1440 : 
; 1441 : 		_Eos(_Newsize);
; 1442 : 		return (*this);
; 1443 : 		}
; 1444 : 
; 1445 : 	_Myt& replace(size_type _Off,
; 1446 : 		size_type _N0, const _Elem *_Ptr, size_type _Count)
; 1447 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 1448 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1449 : 		if (_Inside(_Ptr))
; 1450 : 			return (replace(_Off, _N0, *this,
; 1451 : 				_Ptr - this->_Myptr(),
; 1452 : 				_Count));	// substring, replace carefully
; 1453 : 		_Check_offset(_Off);
; 1454 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1455 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1456 : 			_Xlen();	// result too long
; 1457 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1458 : 
; 1459 : 		if (_Count < _N0)
; 1460 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1461 : 				this->_Myptr() + _Off + _N0,
; 1462 : 				_Nm);	// smaller hole, move tail up
; 1463 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1464 : 		if ((0 < _Count || 0 < _N0)
; 1465 : 			&& _Grow(_Num))
; 1466 : 			{	// make room and rearrange
; 1467 : 			if (_N0 < _Count)
; 1468 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1469 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1470 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1471 : 			_Eos(_Num);
; 1472 : 			}
; 1473 : 		return (*this);
; 1474 : 		}
; 1475 : 
; 1476 : 	_Myt& replace(size_type _Off, size_type _N0, const _Elem *_Ptr)
; 1477 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, <null>)
; 1478 : 		_DEBUG_POINTER(_Ptr);
; 1479 : 		return (replace(_Off, _N0, _Ptr, _Traits::length(_Ptr)));
; 1480 : 		}
; 1481 : 
; 1482 : 	_Myt& replace(size_type _Off,
; 1483 : 		size_type _N0, size_type _Count, _Elem _Ch)
; 1484 : 		{	// replace [_Off, _Off + _N0) with _Count * _Ch
; 1485 : 		_Check_offset(_Off);
; 1486 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1487 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1488 : 			_Xlen();	// result too long
; 1489 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1490 : 
; 1491 : 		if (_Count < _N0)
; 1492 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1493 : 				this->_Myptr() + _Off + _N0,
; 1494 : 				_Nm);	// smaller hole, move tail up
; 1495 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1496 : 		if ((0 < _Count || 0 < _N0)
; 1497 : 			&& _Grow(_Num))
; 1498 : 			{	// make room and rearrange
; 1499 : 			if (_N0 < _Count)
; 1500 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1501 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1502 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1503 : 			_Eos(_Num);
; 1504 : 			}
; 1505 : 		return (*this);
; 1506 : 		}
; 1507 : 
; 1508 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1509 : 		const _Myt& _Right)
; 1510 : 		{	// replace [_First, _Last) with _Right
; 1511 : 		return (replace(_First - begin(), _Last - _First, _Right));
; 1512 : 		}
; 1513 : 
; 1514 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1515 : 		const _Elem *_Ptr, size_type _Count)
; 1516 : 		{	// replace [_First, _Last) with [_Ptr, _Ptr + _Count)
; 1517 : 		return (replace(_First - begin(), _Last - _First, _Ptr, _Count));
; 1518 : 		}
; 1519 : 
; 1520 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1521 : 		const _Elem *_Ptr)
; 1522 : 		{	// replace [_First, _Last) with [_Ptr, <null>)
; 1523 : 		return (replace(_First - begin(), _Last - _First, _Ptr));
; 1524 : 		}
; 1525 : 
; 1526 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1527 : 		size_type _Count, _Elem _Ch)
; 1528 : 		{	// replace [_First, _Last) with _Count * _Ch
; 1529 : 		return (replace(_First - begin(), _Last - _First, _Count, _Ch));
; 1530 : 		}
; 1531 : 
; 1532 : 	template<class _Iter>
; 1533 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1534 : 			_Myt&>::type
; 1535 : 		replace(const_iterator _First, const_iterator _Last,
; 1536 : 			_Iter _First2, _Iter _Last2)
; 1537 : 		{	// replace [_First, _Last) with [_First2, _Last2), input iterators
; 1538 : 		_Myt _Right(_First2, _Last2);
; 1539 : 		replace(_First, _Last, _Right);
; 1540 : 		return (*this);
; 1541 : 		}
; 1542 : 
; 1543 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1544 : 		const_pointer _First2, const_pointer _Last2)
; 1545 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1546 : 		if (_First2 == _Last2)
; 1547 : 			erase(_First - begin(), _Last - _First);
; 1548 : 		else
; 1549 : 			replace(_First - begin(), _Last - _First,
; 1550 : 				&*_First2, _Last2 - _First2);
; 1551 : 		return (*this);
; 1552 : 		}
; 1553 : 
; 1554 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1555 : 		pointer _First2, pointer _Last2)
; 1556 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1557 : 		if (_First2 == _Last2)
; 1558 : 			erase(_First - begin(), _Last - _First);
; 1559 : 		else
; 1560 : 			replace(_First - begin(), _Last - _First,
; 1561 : 				&*_First2, _Last2 - _First2);
; 1562 : 		return (*this);
; 1563 : 		}
; 1564 : 
; 1565 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1566 : 		const_iterator _First2, const_iterator _Last2)
; 1567 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1568 : 		if (_First2 == _Last2)
; 1569 : 			erase(_First - begin(), _Last - _First);
; 1570 : 		else
; 1571 : 			replace(_First - begin(), _Last - _First,
; 1572 : 				&*_First2, _Last2 - _First2);
; 1573 : 		return (*this);
; 1574 : 		}
; 1575 : 
; 1576 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1577 : 		iterator _First2, iterator _Last2)
; 1578 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1579 : 		if (_First2 == _Last2)
; 1580 : 			erase(_First - begin(), _Last - _First);
; 1581 : 		else
; 1582 : 			replace(_First - begin(), _Last - _First,
; 1583 : 				&*_First2, _Last2 - _First2);
; 1584 : 		return (*this);
; 1585 : 		}
; 1586 : 
; 1587 : 	iterator begin() _NOEXCEPT
; 1588 : 		{	// return iterator for beginning of mutable sequence
; 1589 : 		return (iterator(this->_Myptr(), &this->_Get_data()));
; 1590 : 		}
; 1591 : 
; 1592 : 	const_iterator begin() const _NOEXCEPT
; 1593 : 		{	// return iterator for beginning of nonmutable sequence
; 1594 : 		return (const_iterator(this->_Myptr(), &this->_Get_data()));
; 1595 : 		}
; 1596 : 
; 1597 : 	iterator end() _NOEXCEPT
; 1598 : 		{	// return iterator for end of mutable sequence
; 1599 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1600 : 		}
; 1601 : 
; 1602 : 	const_iterator end() const _NOEXCEPT
; 1603 : 		{	// return iterator for end of nonmutable sequence
; 1604 : 		return (const_iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1605 : 		}
; 1606 : 
; 1607 : 	reverse_iterator rbegin() _NOEXCEPT
; 1608 : 		{	// return iterator for beginning of reversed mutable sequence
; 1609 : 		return (reverse_iterator(end()));
; 1610 : 		}
; 1611 : 
; 1612 : 	const_reverse_iterator rbegin() const _NOEXCEPT
; 1613 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1614 : 		return (const_reverse_iterator(end()));
; 1615 : 		}
; 1616 : 
; 1617 : 	reverse_iterator rend() _NOEXCEPT
; 1618 : 		{	// return iterator for end of reversed mutable sequence
; 1619 : 		return (reverse_iterator(begin()));
; 1620 : 		}
; 1621 : 
; 1622 : 	const_reverse_iterator rend() const _NOEXCEPT
; 1623 : 		{	// return iterator for end of reversed nonmutable sequence
; 1624 : 		return (const_reverse_iterator(begin()));
; 1625 : 		}
; 1626 : 
; 1627 : 	const_iterator cbegin() const _NOEXCEPT
; 1628 : 		{	// return iterator for beginning of nonmutable sequence
; 1629 : 		return (begin());
; 1630 : 		}
; 1631 : 
; 1632 : 	const_iterator cend() const _NOEXCEPT
; 1633 : 		{	// return iterator for end of nonmutable sequence
; 1634 : 		return (end());
; 1635 : 		}
; 1636 : 
; 1637 : 	const_reverse_iterator crbegin() const _NOEXCEPT
; 1638 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1639 : 		return (rbegin());
; 1640 : 		}
; 1641 : 
; 1642 : 	const_reverse_iterator crend() const _NOEXCEPT
; 1643 : 		{	// return iterator for end of reversed nonmutable sequence
; 1644 : 		return (rend());
; 1645 : 		}
; 1646 : 
; 1647 : 	void shrink_to_fit()
; 1648 : 		{	// reduce capacity
; 1649 : 		if ((size() | this->_ALLOC_MASK) < capacity())
; 1650 : 			{	// worth shrinking, do it
; 1651 : 			_Myt _Tmp(*this);
; 1652 : 			swap(_Tmp);
; 1653 : 			}
; 1654 : 		}
; 1655 : 
; 1656 : 	reference at(size_type _Off)
; 1657 : 		{	// subscript mutable sequence with checking
; 1658 : 		_Check_offset_exclusive(_Off);
; 1659 : 		return (this->_Myptr()[_Off]);
; 1660 : 		}
; 1661 : 
; 1662 : 	const_reference at(size_type _Off) const
; 1663 : 		{	// subscript nonmutable sequence with checking
; 1664 : 		_Check_offset_exclusive(_Off);
; 1665 : 		return (this->_Myptr()[_Off]);
; 1666 : 		}
; 1667 : 
; 1668 : 	reference operator[](size_type _Off)
; 1669 : 		{	// subscript mutable sequence
; 1670 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1671 : 		if (this->_Mysize() < _Off)	// sic
; 1672 : 			_DEBUG_ERROR("string subscript out of range");
; 1673 : 
; 1674 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1675 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1676 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1677 : 
; 1678 : 		return (this->_Myptr()[_Off]);
; 1679 : 		}
; 1680 : 
; 1681 : 	const_reference operator[](size_type _Off) const
; 1682 : 		{	// subscript nonmutable sequence
; 1683 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1684 : 		if (this->_Mysize() < _Off)	// sic
; 1685 : 			_DEBUG_ERROR("string subscript out of range");
; 1686 : 
; 1687 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1688 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1689 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1690 : 
; 1691 : 		return (this->_Myptr()[_Off]);
; 1692 : 		}
; 1693 : 
; 1694 : 	void push_back(_Elem _Ch)
; 1695 : 		{	// insert element at end
; 1696 : 		append(1, _Ch);
; 1697 : 		}
; 1698 : 
; 1699 : 	void pop_back()
; 1700 : 		{	// erase element at end
; 1701 : 		erase(this->_Mysize() - 1);	// throws if _Mysize() == 0
; 1702 : 		}
; 1703 : 
; 1704 : 	reference front()
; 1705 : 		{	// return first element of mutable sequence
; 1706 : 		return (*begin());
; 1707 : 		}
; 1708 : 
; 1709 : 	const_reference front() const
; 1710 : 		{	// return first element of nonmutable sequence
; 1711 : 		return (*begin());
; 1712 : 		}
; 1713 : 
; 1714 : 	reference back()
; 1715 : 		{	// return last element of mutable sequence
; 1716 : 		return (*(end() - 1));
; 1717 : 		}
; 1718 : 
; 1719 : 	const_reference back() const
; 1720 : 		{	// return last element of nonmutable sequence
; 1721 : 		return (*(end() - 1));
; 1722 : 		}
; 1723 : 
; 1724 : 	const _Elem *c_str() const _NOEXCEPT
; 1725 : 		{	// return pointer to null-terminated nonmutable array
; 1726 : 		return (this->_Myptr());
; 1727 : 		}
; 1728 : 
; 1729 : 	const _Elem *data() const _NOEXCEPT
; 1730 : 		{	// return pointer to nonmutable array
; 1731 : 		return (this->_Myptr());
; 1732 : 		}
; 1733 : 
; 1734 : 	_Elem *data() _NOEXCEPT
; 1735 : 		{	// return pointer to mutable array
; 1736 : 		return (this->_Myptr());
; 1737 : 		}
; 1738 : 
; 1739 : 	size_type length() const _NOEXCEPT
; 1740 : 		{	// return length of sequence
; 1741 : 		return (this->_Mysize());
; 1742 : 		}
; 1743 : 
; 1744 : 	size_type size() const _NOEXCEPT
; 1745 : 		{	// return length of sequence
; 1746 : 		return (this->_Mysize());
; 1747 : 		}
; 1748 : 
; 1749 : 	size_type max_size() const _NOEXCEPT
; 1750 : 		{	// return maximum possible length of sequence
; 1751 : 		const size_type _Num = this->_Getal().max_size();
; 1752 : 		return (_Num <= 1 ? 1 : _Num - 1);
; 1753 : 		}
; 1754 : 
; 1755 : 	void resize(size_type _Newsize)
; 1756 : 		{	// determine new length, padding with null elements as needed
; 1757 : 		resize(_Newsize, _Elem());
; 1758 : 		}
; 1759 : 
; 1760 : 	void resize(size_type _Newsize, _Elem _Ch)
; 1761 : 		{	// determine new length, padding with _Ch elements as needed
; 1762 : 		if (_Newsize <= this->_Mysize())
; 1763 : 			_Eos(_Newsize);
; 1764 : 		else
; 1765 : 			append(_Newsize - this->_Mysize(), _Ch);
; 1766 : 		}
; 1767 : 
; 1768 : 	size_type capacity() const _NOEXCEPT
; 1769 : 		{	// return current length of allocated storage
; 1770 : 		return (this->_Myres());
; 1771 : 		}
; 1772 : 
; 1773 : 	void reserve(size_type _Newcap = 0)
; 1774 : 		{	// determine new minimum length of allocated storage
; 1775 : 		if (this->_Mysize() <= _Newcap && this->_Myres() != _Newcap)
; 1776 : 			{	// change reservation
; 1777 : 			size_type _Size = this->_Mysize();
; 1778 : 			if (_Grow(_Newcap, true))
; 1779 : 				_Eos(_Size);
; 1780 : 			}
; 1781 : 		}
; 1782 : 
; 1783 : 	bool empty() const _NOEXCEPT
; 1784 : 		{	// test if sequence is empty
; 1785 : 		return (this->_Mysize() == 0);
; 1786 : 		}
; 1787 : 
; 1788 : 	_SCL_INSECURE_DEPRECATE_FN(basic_string::copy)
; 1789 : 	size_type copy(_Elem *_Ptr,
; 1790 : 		size_type _Count, size_type _Off = 0) const
; 1791 : 		{	// copy [_Off, _Off + _Count) to [_Ptr, _Ptr + _Count)
; 1792 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1793 : 		_Check_offset(_Off);
; 1794 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1795 : 		_Traits::copy(_Ptr, this->_Myptr() + _Off, _Count);
; 1796 : 		return (_Count);
; 1797 : 		}
; 1798 : 
; 1799 : 	size_type _Copy_s(_Elem *_Dest, size_type _Dest_size,
; 1800 : 		size_type _Count, size_type _Off = 0) const
; 1801 : 		{	// copy [_Off, _Off + _Count) to [_Dest, _Dest + _Count)
; 1802 : 		_DEBUG_POINTER_IF(_Count != 0, _Dest);
; 1803 : 		_Check_offset(_Off);
; 1804 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1805 : 		_Traits::_Copy_s(_Dest, _Dest_size, this->_Myptr() + _Off, _Count);
; 1806 : 		return (_Count);
; 1807 : 		}
; 1808 : 
; 1809 : 	void _Swap_bx(_Myt& _Right)
; 1810 : 		{	// exchange _Bx() with _Right._Bx()
; 1811 : 		if (this->_BUF_SIZE <= this->_Myres())
; 1812 : 			if (this->_BUF_SIZE <= _Right._Myres())
; 1813 : 				_Swap_adl(this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 1814 : 			else
; 1815 : 				{	// swap large with small
; 1816 : 				pointer _Ptr = this->_Bx()._Ptr;
; 1817 : 				this->_Getal().destroy(&this->_Bx()._Ptr);
; 1818 : 				_Traits::copy(this->_Bx()._Buf,
; 1819 : 					_Right._Bx()._Buf, _Right._Mysize() + 1);
; 1820 : 				this->_Getal().construct(&_Right._Bx()._Ptr, _Ptr);
; 1821 : 				}
; 1822 : 		else
; 1823 : 			if (_Right._Myres() < this->_BUF_SIZE)
; 1824 : 				_STD swap(this->_Bx()._Buf, _Right._Bx()._Buf);
; 1825 : 			else
; 1826 : 				{	// swap small with large
; 1827 : 				pointer _Ptr = _Right._Bx()._Ptr;
; 1828 : 				this->_Getal().destroy(&_Right._Bx()._Ptr);
; 1829 : 				_Traits::copy(_Right._Bx()._Buf,
; 1830 : 					this->_Bx()._Buf, this->_Mysize() + 1);
; 1831 : 				this->_Getal().construct(&this->_Bx()._Ptr, _Ptr);
; 1832 : 				}
; 1833 : 		}
; 1834 : 
; 1835 : 	void swap(_Myt& _Right)
; 1836 : 		_NOEXCEPT_OP(_Alty::propagate_on_container_swap::value
; 1837 : 			|| _Alty::is_always_equal::value)
; 1838 : 		{	// exchange contents with _Right
; 1839 : 		if (this == &_Right)
; 1840 : 			;	// same object, do nothing
; 1841 : 		else if (this->_Getal() == _Right._Getal())
; 1842 : 			{	// same allocator, swap control information
; 1843 : 			this->_Swap_all(_Right);
; 1844 : 			_Swap_bx(_Right);
; 1845 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1846 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1847 : 			}
; 1848 : 
; 1849 : 		else if (_Alty::propagate_on_container_swap::value)
; 1850 : 			{	// swap allocators and control information
; 1851 : 				// assumes pointer is bitwise copyable
; 1852 : 			this->_Swap_alloc(_Right);
; 1853 : 			_Swap_bx(_Right);
; 1854 : 			_STD swap(this->_Bx(), _Right._Bx());
; 1855 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1856 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1857 : 			}
; 1858 : 
; 1859 : 		else
; 1860 : 			{	// different allocator, do multiple assigns
; 1861 : 			_Myt _Tmp = *this;
; 1862 : 
; 1863 : 			*this = _Right;
; 1864 : 			_Right = _Tmp;
; 1865 : 			}
; 1866 : 		}
; 1867 : 
; 1868 : 	size_type find(const _Myt& _Right, size_type _Off = 0) const _NOEXCEPT
; 1869 : 		{	// look for _Right beginning at or after _Off
; 1870 : 		return (find(_Right._Myptr(), _Off, _Right.size()));
; 1871 : 		}
; 1872 : 
; 1873 : 	size_type find(const _Elem *_Ptr,
; 1874 : 		size_type _Off, size_type _Count) const
; 1875 : 		{	// look for [_Ptr, _Ptr + _Count) beginning at or after _Off
; 1876 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1877 : 		if (_Count == 0 && _Off <= this->_Mysize())
; 1878 : 			return (_Off);	// null string always matches (if inside string)
; 1879 : 
; 1880 : 		size_type _Nm;
; 1881 : 		if (_Off < this->_Mysize() && _Count <= (_Nm = this->_Mysize() - _Off))
; 1882 : 			{	// room for match, look for it
; 1883 : 			const _Elem *_Uptr, *_Vptr;
; 1884 : 			for (_Nm -= _Count - 1, _Vptr = this->_Myptr() + _Off;
; 1885 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1886 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)
; 1887 : 				if (_Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1888 : 					return (_Uptr - this->_Myptr());	// found a match
; 1889 : 			}
; 1890 : 
; 1891 : 		return (npos);	// no match
; 1892 : 		}
; 1893 : 
; 1894 : 	size_type find(const _Elem *_Ptr, size_type _Off = 0) const
; 1895 : 		{	// look for [_Ptr, <null>) beginning at or after _Off
; 1896 : 		_DEBUG_POINTER(_Ptr);
; 1897 : 		return (find(_Ptr, _Off, _Traits::length(_Ptr)));
; 1898 : 		}
; 1899 : 
; 1900 : 	size_type find(_Elem _Ch, size_type _Off = 0) const
; 1901 : 		{	// look for _Ch at or after _Off
; 1902 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1903 : 		}
; 1904 : 
; 1905 : 	size_type rfind(const _Myt& _Right, size_type _Off = npos) const _NOEXCEPT
; 1906 : 		{	// look for _Right beginning before _Off
; 1907 : 		return (rfind(_Right._Myptr(), _Off, _Right.size()));
; 1908 : 		}
; 1909 : 
; 1910 : 	size_type rfind(const _Elem *_Ptr,
; 1911 : 		size_type _Off, size_type _Count) const
; 1912 : 		{	// look for [_Ptr, _Ptr + _Count) beginning before _Off
; 1913 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1914 : 		if (_Count == 0)
; 1915 : 			return (_Off < this->_Mysize() ? _Off
; 1916 : 				: this->_Mysize());	// null always matches
; 1917 : 		if (_Count <= this->_Mysize())
; 1918 : 			{	// room for match, look for it
; 1919 : 			const _Elem *_Uptr = this->_Myptr() +
; 1920 : 				(_Off < this->_Mysize() - _Count ? _Off
; 1921 : 					: this->_Mysize() - _Count);
; 1922 : 			for (; ; --_Uptr)
; 1923 : 				if (_Traits::eq(*_Uptr, *_Ptr)
; 1924 : 					&& _Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1925 : 					return (_Uptr - this->_Myptr());	// found a match
; 1926 : 				else if (_Uptr == this->_Myptr())
; 1927 : 					break;	// at beginning, no more chance for match
; 1928 : 			}
; 1929 : 
; 1930 : 		return (npos);	// no match
; 1931 : 		}
; 1932 : 
; 1933 : 	size_type rfind(const _Elem *_Ptr, size_type _Off = npos) const
; 1934 : 		{	// look for [_Ptr, <null>) beginning before _Off
; 1935 : 		_DEBUG_POINTER(_Ptr);
; 1936 : 		return (rfind(_Ptr, _Off, _Traits::length(_Ptr)));
; 1937 : 		}
; 1938 : 
; 1939 : 	size_type rfind(_Elem _Ch, size_type _Off = npos) const
; 1940 : 		{	// look for _Ch before _Off
; 1941 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 1942 : 		}
; 1943 : 
; 1944 : 	size_type find_first_of(const _Myt& _Right,
; 1945 : 		size_type _Off = 0) const _NOEXCEPT
; 1946 : 		{	// look for one of _Right at or after _Off
; 1947 : 		return (find_first_of(_Right._Myptr(), _Off, _Right.size()));
; 1948 : 		}
; 1949 : 
; 1950 : 	size_type find_first_of(const _Elem *_Ptr,
; 1951 : 		size_type _Off, size_type _Count) const
; 1952 : 		{	// look for one of [_Ptr, _Ptr + _Count) at or after _Off
; 1953 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1954 : 		if (0 < _Count && _Off < this->_Mysize())
; 1955 : 			{	// room for match, look for it
; 1956 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 1957 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 1958 : 				_Uptr < _Vptr; ++_Uptr)
; 1959 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1960 : 					return (_Uptr - this->_Myptr());	// found a match
; 1961 : 			}
; 1962 : 
; 1963 : 		return (npos);	// no match
; 1964 : 		}
; 1965 : 
; 1966 : 	size_type find_first_of(const _Elem *_Ptr,
; 1967 : 		size_type _Off = 0) const
; 1968 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 1969 : 		_DEBUG_POINTER(_Ptr);
; 1970 : 		return (find_first_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 1971 : 		}
; 1972 : 
; 1973 : 	size_type find_first_of(_Elem _Ch,
; 1974 : 		size_type _Off = 0) const
; 1975 : 		{	// look for _Ch at or after _Off
; 1976 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1977 : 		}
; 1978 : 
; 1979 : 	size_type find_last_of(const _Myt& _Right,
; 1980 : 		size_type _Off = npos) const _NOEXCEPT
; 1981 : 		{	// look for one of _Right before _Off
; 1982 : 		return (find_last_of(_Right._Myptr(), _Off, _Right.size()));
; 1983 : 		}
; 1984 : 
; 1985 : 	size_type find_last_of(const _Elem *_Ptr,
; 1986 : 		size_type _Off, size_type _Count) const
; 1987 : 		{	// look for one of [_Ptr, _Ptr + _Count) before _Off
; 1988 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1989 : 		if (0 < _Count && 0 < this->_Mysize())
; 1990 : 			{	// worth searching, do it
; 1991 : 			const _Elem *_Uptr = this->_Myptr()
; 1992 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 1993 : 			for (; ; --_Uptr)
; 1994 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1995 : 					return (_Uptr - this->_Myptr());	// found a match
; 1996 : 				else if (_Uptr == this->_Myptr())
; 1997 : 					break;	// at beginning, no more chance for match
; 1998 : 			}
; 1999 : 
; 2000 : 		return (npos);	// no match
; 2001 : 		}
; 2002 : 
; 2003 : 	size_type find_last_of(const _Elem *_Ptr,
; 2004 : 		size_type _Off = npos) const
; 2005 : 		{	// look for one of [_Ptr, <null>) before _Off
; 2006 : 		_DEBUG_POINTER(_Ptr);
; 2007 : 		return (find_last_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2008 : 		}
; 2009 : 
; 2010 : 	size_type find_last_of(_Elem _Ch,
; 2011 : 		size_type _Off = npos) const
; 2012 : 		{	// look for _Ch before _Off
; 2013 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 2014 : 		}
; 2015 : 
; 2016 : 	size_type find_first_not_of(const _Myt& _Right,
; 2017 : 		size_type _Off = 0) const _NOEXCEPT
; 2018 : 		{	// look for none of _Right at or after _Off
; 2019 : 		return (find_first_not_of(_Right._Myptr(), _Off,
; 2020 : 			_Right.size()));
; 2021 : 		}
; 2022 : 
; 2023 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2024 : 		size_type _Off, size_type _Count) const
; 2025 : 		{	// look for none of [_Ptr, _Ptr + _Count) at or after _Off
; 2026 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2027 : 		if (_Off < this->_Mysize())
; 2028 : 			{	// room for match, look for it
; 2029 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 2030 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 2031 : 				_Uptr < _Vptr; ++_Uptr)
; 2032 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2033 : 					return (_Uptr - this->_Myptr());
; 2034 : 			}
; 2035 : 		return (npos);
; 2036 : 		}
; 2037 : 
; 2038 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2039 : 		size_type _Off = 0) const
; 2040 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 2041 : 		_DEBUG_POINTER(_Ptr);
; 2042 : 		return (find_first_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2043 : 		}
; 2044 : 
; 2045 : 	size_type find_first_not_of(_Elem _Ch,
; 2046 : 		size_type _Off = 0) const
; 2047 : 		{	// look for non _Ch at or after _Off
; 2048 : 		return (find_first_not_of((const _Elem *)&_Ch, _Off, 1));
; 2049 : 		}
; 2050 : 
; 2051 : 	size_type find_last_not_of(const _Myt& _Right,
; 2052 : 		size_type _Off = npos) const _NOEXCEPT
; 2053 : 		{	// look for none of _Right before _Off
; 2054 : 		return (find_last_not_of(_Right._Myptr(), _Off, _Right.size()));
; 2055 : 		}
; 2056 : 
; 2057 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2058 : 		size_type _Off, size_type _Count) const
; 2059 : 		{	// look for none of [_Ptr, _Ptr + _Count) before _Off
; 2060 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2061 : 		if (0 < this->_Mysize())
; 2062 : 			{	// worth searching, do it
; 2063 : 			const _Elem *_Uptr = this->_Myptr()
; 2064 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 2065 : 			for (; ; --_Uptr)
; 2066 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2067 : 					return (_Uptr - this->_Myptr());
; 2068 : 				else if (_Uptr == this->_Myptr())
; 2069 : 					break;
; 2070 : 			}
; 2071 : 		return (npos);
; 2072 : 		}
; 2073 : 
; 2074 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2075 : 		size_type _Off = npos) const
; 2076 : 		{	// look for none of [_Ptr, <null>) before _Off
; 2077 : 		_DEBUG_POINTER(_Ptr);
; 2078 : 		return (find_last_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2079 : 		}
; 2080 : 
; 2081 : 	size_type find_last_not_of(_Elem _Ch,
; 2082 : 		size_type _Off = npos) const
; 2083 : 		{	// look for non _Ch before _Off
; 2084 : 		return (find_last_not_of((const _Elem *)&_Ch, _Off, 1));
; 2085 : 		}
; 2086 : 
; 2087 : 	_Myt substr(size_type _Off = 0, size_type _Count = npos) const
; 2088 : 		{	// return [_Off, _Off + _Count) as new string
; 2089 : 		return (_Myt(*this, _Off, _Count, get_allocator()));
; 2090 : 		}
; 2091 : 
; 2092 : 	static int _Traits_compare(const _Elem * const _Left, const size_type _Left_size,
; 2093 : 		const _Elem * const _Right, const size_type _Right_size)
; 2094 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 2095 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;
; 2096 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);
; 2097 : 
; 2098 : 		if (_Ans != 0)
; 2099 : 			return (_Ans);
; 2100 : 
; 2101 : 		if (_Left_size < _Right_size)
; 2102 : 			return (-1);
; 2103 : 
; 2104 : 		if (_Left_size > _Right_size)
; 2105 : 			return (1);
; 2106 : 
; 2107 : 		return (0);
; 2108 : 		}
; 2109 : 
; 2110 : 	size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const
; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off
; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;
; 2113 : 		if (_Size <= _Max_effective_size)
; 2114 : 			return (_Size);
; 2115 : 		else
; 2116 : 			return (_Max_effective_size);
; 2117 : 		}
; 2118 : 
; 2119 : 	int compare(const _Myt& _Right) const _NOEXCEPT
; 2120 : 		{	// compare [0, _Mysize()) with _Right
; 2121 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2122 : 			_Right._Myptr(), _Right._Mysize()));
; 2123 : 		}
; 2124 : 
; 2125 : 	int compare(size_type _Off,
; 2126 : 		size_type _N0, const _Myt& _Right) const
; 2127 : 		{	// compare [_Off, _Off + _N0) with _Right
; 2128 : 		_Check_offset(_Off);
; 2129 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2130 : 			_Right._Myptr(), _Right._Mysize()));
; 2131 : 		}
; 2132 : 
; 2133 : 	int compare(size_type _Off,
; 2134 : 		size_type _N0, const _Myt& _Right,
; 2135 : 		size_type _Roff, size_type _Count = npos) const
; 2136 : 		{	// compare [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 2137 : 		_Check_offset(_Off);
; 2138 : 		_Right._Check_offset(_Roff);
; 2139 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2140 : 			_Right._Myptr() + _Roff, _Right._Clamp_suffix_size(_Roff, _Count)));
; 2141 : 		}
; 2142 : 
; 2143 : 	int compare(const _Elem *_Ptr) const
; 2144 : 		{	// compare [0, _Mysize()) with [_Ptr, <null>)
; 2145 : 		_DEBUG_POINTER(_Ptr);
; 2146 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2147 : 			_Ptr, _Traits::length(_Ptr)));
; 2148 : 		}
; 2149 : 
; 2150 : 	int compare(size_type _Off, size_type _N0, const _Elem *_Ptr) const
; 2151 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, <null>)
; 2152 : 		_DEBUG_POINTER(_Ptr);
; 2153 : 		_Check_offset(_Off);
; 2154 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2155 : 			_Ptr, _Traits::length(_Ptr)));
; 2156 : 		}
; 2157 : 
; 2158 : 	int compare(size_type _Off,
; 2159 : 		size_type _N0, const _Elem *_Ptr, size_type _Count) const
; 2160 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 2161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2162 : 		_Check_offset(_Off);
; 2163 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2164 : 			_Ptr, _Count));
; 2165 : 		}
; 2166 : 
; 2167 : 	allocator_type get_allocator() const _NOEXCEPT
; 2168 : 		{	// return allocator object for values
; 2169 : 		return (this->_Getal());
; 2170 : 		}
; 2171 : 
; 2172 : 	void _Chassign(size_type _Off, size_type _Count, _Elem _Ch)
; 2173 : 		{	// assign _Count copies of _Ch beginning at _Off
; 2174 : 		if (_Count == 1)
; 2175 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);
; 2176 : 		else
; 2177 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);
; 2178 : 		}
; 2179 : 
; 2180 : 	void _Copy(size_type _Newsize, size_type _Oldlen)
; 2181 : 		{	// copy _Oldlen elements to newly allocated buffer
; 2182 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;
; 2183 : 		if (max_size() < _Newres)
; 2184 : 			_Newres = _Newsize;	// undo roundup if too big
; 2185 : 		else if (this->_Myres() / 2 <= _Newres / 3)
; 2186 : 			;
; 2187 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)
; 2188 : 			_Newres = this->_Myres()
; 2189 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2190 : 		else
; 2191 : 			_Newres = max_size();	// settle for max_size()
; 2192 : 
; 2193 : 		_Elem *_Ptr;
; 2194 : 		_TRY_BEGIN
; 2195 : 			_Ptr = this->_Getal().allocate(_Newres + 1);
; 2196 : 		_CATCH_ALL
; 2197 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2198 : 			_TRY_BEGIN
; 2199 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2200 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00049	48 83 f8 10	 cmp	 rax, 16
  0004d	72 57		 jb	 SHORT $LN234@catch$0

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00052	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00055	48 83 f8 ff	 cmp	 rax, -1
  00059	76 06		 jbe	 SHORT $LN228@catch$0
  0005b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00060	cc		 int	 3
$LN228@catch$0:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00061	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00067	72 38		 jb	 SHORT $LN229@catch$0

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00069	f6 c1 1f	 test	 cl, 31
  0006c	74 06		 je	 SHORT $LN230@catch$0
  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN230@catch$0:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00074	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00078	48 3b c1	 cmp	 rax, rcx
  0007b	72 06		 jb	 SHORT $LN231@catch$0
  0007d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00082	cc		 int	 3
$LN231@catch$0:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00083	48 2b c8	 sub	 rcx, rax
  00086	48 83 f9 08	 cmp	 rcx, 8
  0008a	73 06		 jae	 SHORT $LN232@catch$0
  0008c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00091	cc		 int	 3
$LN232@catch$0:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00092	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00096	76 06		 jbe	 SHORT $LN233@catch$0
  00098	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0009d	cc		 int	 3
$LN233@catch$0:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0009e	48 8b c8	 mov	 rcx, rax
$LN229@catch$0:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000a1	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN234@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000a6	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ae	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b6	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000bb	72 03		 jb	 SHORT $LN269@catch$0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000bd	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN269@catch$0:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000c0	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2202 : 			_RERAISE;

  000c3	33 d2		 xor	 edx, edx
  000c5	33 c9		 xor	 ecx, ecx
  000c7	e8 00 00 00 00	 call	 _CxxThrowException
  000cc	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Count$ = 24
_Ch$ = 32
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT

; 2173 : 		{	// assign _Count copies of _Ch beginning at _Off

  00000	48 8b c2	 mov	 rax, rdx

; 2174 : 		if (_Count == 1)

  00003	49 83 f8 01	 cmp	 r8, 1
  00007	75 0f		 jne	 SHORT $LN2@Chassign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00009	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0000e	72 03		 jb	 SHORT $LN16@Chassign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00010	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN16@Chassign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00013	44 88 0c 11	 mov	 BYTE PTR [rcx+rdx], r9b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2178 : 		}

  00017	c3		 ret	 0
$LN2@Chassign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00018	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0001d	72 03		 jb	 SHORT $LN34@Chassign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0001f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN34@Chassign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  00022	41 0f be d1	 movsx	 edx, r9b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2177 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  00026	48 03 c8	 add	 rcx, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  00029	e9 00 00 00 00	 jmp	 memset
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT

; 2169 : 		return (this->_Getal());

  00000	48 8b c2	 mov	 rax, rdx

; 2170 : 		}

  00003	c3		 ret	 0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Size$ = 24
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b c2	 sub	 rax, rdx

; 2113 : 		if (_Size <= _Max_effective_size)

  00007	4c 3b c0	 cmp	 r8, rax
  0000a	49 0f 46 c0	 cmovbe	 rax, r8

; 2114 : 			return (_Size);
; 2115 : 		else
; 2116 : 			return (_Max_effective_size);
; 2117 : 		}

  0000e	c3		 ret	 0
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT

; 1784 : 		{	// test if sequence is empty

  00000	48 83 79 10 00	 cmp	 QWORD PTR [rcx+16], 0
  00005	0f 94 c0	 sete	 al

; 1785 : 		return (this->_Mysize() == 0);
; 1786 : 		}

  00008	c3		 ret	 0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
_Ch$ = 24
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 1762 : 		if (_Newsize <= this->_Mysize())

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 3b d0	 cmp	 rdx, rax
  00007	77 13		 ja	 SHORT $LN2@resize

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00009	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00012	72 03		 jb	 SHORT $LN36@resize
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN36@resize:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00017	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1766 : 		}

  0001b	c3		 ret	 0
$LN2@resize:

; 1763 : 			_Eos(_Newsize);
; 1764 : 		else
; 1765 : 			append(_Newsize - this->_Mysize(), _Ch);

  0001c	48 2b d0	 sub	 rdx, rax
  0001f	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 1762 : 		if (_Newsize <= this->_Mysize())

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 3b d0	 cmp	 rdx, rax
  00007	77 13		 ja	 SHORT $LN4@resize

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00009	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00012	72 03		 jb	 SHORT $LN38@resize
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN38@resize:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00017	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1758 : 		}

  0001b	c3		 ret	 0
$LN4@resize:

; 1765 : 			append(_Newsize - this->_Mysize(), _Ch);

  0001c	48 2b d0	 sub	 rdx, rax
  0001f	45 33 c0	 xor	 r8d, r8d
  00022	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 1751 : 		const size_type _Num = this->_Getal().max_size();
; 1752 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	48 c7 c0 fe ff
	ff ff		 mov	 rax, -2

; 1753 : 		}

  00007	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 1746 : 		return (this->_Mysize());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]

; 1747 : 		}

  00004	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN13@c_str

; 1726 : 		return (this->_Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1727 : 		}

  0000a	c3		 ret	 0
$LN13@c_str:

; 1726 : 		return (this->_Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 1727 : 		}

  0000e	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 07		 jb	 SHORT $LN13@operator
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1691 : 		return (this->_Myptr()[_Off]);

  0000a	48 03 c2	 add	 rax, rdx

; 1692 : 		}

  0000d	c3		 ret	 0
$LN13@operator:

; 1691 : 		return (this->_Myptr()[_Off]);

  0000e	48 8d 04 11	 lea	 rax, QWORD PTR [rcx+rdx]

; 1692 : 		}

  00012	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 07		 jb	 SHORT $LN13@operator
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1678 : 		return (this->_Myptr()[_Off]);

  0000a	48 03 c2	 add	 rax, rdx

; 1679 : 		}

  0000d	c3		 ret	 0
$LN13@operator:

; 1678 : 		return (this->_Myptr()[_Off]);

  0000e	48 8d 04 11	 lea	 rax, QWORD PTR [rcx+rdx]

; 1679 : 		}

  00012	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Count$ = 64
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1341 : 		{	// erase elements [_Off, _Off + _Count)

$LN120:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2269 : 		if (this->_Mysize() < _Off)

  0000a	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]

; 1341 : 		{	// erase elements [_Off, _Off + _Count)

  0000e	48 8b d9	 mov	 rbx, rcx

; 2269 : 		if (this->_Mysize() < _Off)

  00011	48 3b fa	 cmp	 rdi, rdx
  00014	0f 82 a1 00 00
	00		 jb	 $LN118@erase

; 1342 : 		_Check_offset(_Off);
; 1343 : 		if (this->_Mysize() - _Off <= _Count)

  0001a	48 8b c7	 mov	 rax, rdi
  0001d	48 2b c2	 sub	 rax, rdx
  00020	49 3b c0	 cmp	 rax, r8
  00023	77 32		 ja	 SHORT $LN2@erase

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00025	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00029	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0002e	72 15		 jb	 SHORT $LN52@erase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00030	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00033	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1352 : 		return (*this);

  00037	48 8b c1	 mov	 rax, rcx

; 1353 : 		}

  0003a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
$LN52@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00045	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00048	c6 04 13 00	 mov	 BYTE PTR [rbx+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1353 : 		}

  0004c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
$LN2@erase:

; 1344 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1345 : 		else if (0 < _Count)

  00057	4d 85 c0	 test	 r8, r8
  0005a	74 51		 je	 SHORT $LN115@erase

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005c	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00061	72 05		 jb	 SHORT $LN70@erase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00063	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00066	eb 03		 jmp	 SHORT $LN71@erase
$LN70@erase:
  00068	48 8b c3	 mov	 rax, rbx
$LN71@erase:

; 1346 : 			{	// move elements down
; 1347 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1348 : 			size_type _Newsize = this->_Mysize() - _Count;

  0006b	49 2b f8	 sub	 rdi, r8
  0006e	48 8d 0c 10	 lea	 rcx, QWORD PTR [rax+rdx]

; 1349 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  00072	48 8b c7	 mov	 rax, rdi
  00075	48 2b c2	 sub	 rax, rdx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  00078	74 0c		 je	 SHORT $LN87@erase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1349 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  0007a	4a 8d 14 01	 lea	 rdx, QWORD PTR [rcx+r8]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  0007e	4c 8b c0	 mov	 r8, rax
  00081	e8 00 00 00 00	 call	 memmove
$LN87@erase:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00086	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008a	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0008f	72 15		 jb	 SHORT $LN109@erase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00091	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00094	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1352 : 		return (*this);

  00098	48 8b c3	 mov	 rax, rbx

; 1353 : 		}

  0009b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
$LN109@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a6	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000a9	c6 04 3b 00	 mov	 BYTE PTR [rbx+rdi], 0
$LN115@erase:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1352 : 		return (*this);

  000ad	48 8b c3	 mov	 rax, rbx

; 1353 : 		}

  000b0	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000b5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b9	5f		 pop	 rdi
  000ba	c3		 ret	 0
$LN118@erase:

; 2281 : 		_Xout_of_range("invalid string position");

  000bb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  000c2	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  000c7	cc		 int	 3
$LN117@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1334 : 		{	// erase elements [_Off, ...)

$LN51:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2269 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 26		 jb	 SHORT $LN49@erase

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0000a	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000e	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00013	72 0f		 jb	 SHORT $LN40@erase
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00015	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00018	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1337 : 		return (*this);

  0001c	48 8b c1	 mov	 rax, rcx

; 1338 : 		}

  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
$LN40@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00024	48 8b c1	 mov	 rax, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00027	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1338 : 		}

  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	c3		 ret	 0
$LN49@erase:

; 2281 : 		_Xout_of_range("invalid string position");

  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00037	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0003c	cc		 int	 3
$LN48@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Count$ = 64
_Ch$ = 72
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT

; 1272 : 		{	// insert _Count * _Ch at _Off

$LN258:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00015	49 8b f0	 mov	 rsi, r8
  00018	45 0f b6 f1	 movzx	 r14d, r9b

; 2269 : 		if (this->_Mysize() < _Off)

  0001c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]

; 1272 : 		{	// insert _Count * _Ch at _Off

  00020	48 8b ea	 mov	 rbp, rdx
  00023	48 8b d9	 mov	 rbx, rcx

; 2269 : 		if (this->_Mysize() < _Off)

  00026	4c 3b c2	 cmp	 r8, rdx
  00029	0f 82 11 01 00
	00		 jb	 $LN254@insert

; 1273 : 		_Check_offset(_Off);
; 1274 : 		if (npos - this->_Mysize() <= _Count)

  0002f	49 8b c0	 mov	 rax, r8
  00032	48 f7 d0	 not	 rax
  00035	48 3b c6	 cmp	 rax, rsi
  00038	0f 86 0f 01 00
	00		 jbe	 $LN256@insert

; 1275 : 			_Xlen();	// result too long
; 1276 : 		const size_type _Num = this->_Mysize() + _Count;

  0003e	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00043	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1277 : 		if (0 < _Count && _Grow(_Num))

  00047	48 85 f6	 test	 rsi, rsi
  0004a	0f 84 d2 00 00
	00		 je	 $LN248@insert

; 2223 : 		if (max_size() < _Newsize)

  00050	48 83 ff fe	 cmp	 rdi, -2
  00054	0f 87 00 01 00
	00		 ja	 $LN257@insert

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  0005a	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0005e	73 20		 jae	 SHORT $LN43@insert

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00060	48 8b d7	 mov	 rdx, rdi
  00063	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  00068	48 85 ff	 test	 rdi, rdi

; 1277 : 		if (0 < _Count && _Grow(_Num))

  0006b	0f 84 b1 00 00
	00		 je	 $LN248@insert
$LN253@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00071	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00075	48 83 f8 10	 cmp	 rax, 16
  00079	72 28		 jb	 SHORT $LN158@insert
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0007b	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0007e	eb 26		 jmp	 SHORT $LN159@insert
$LN43@insert:

; 2230 : 		else if (_Newsize == 0)

  00080	48 85 ff	 test	 rdi, rdi
  00083	75 ec		 jne	 SHORT $LN253@insert

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00085	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00089	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0008e	72 0b		 jb	 SHORT $LN131@insert
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00090	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00093	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  00096	e9 87 00 00 00	 jmp	 $LN248@insert
$LN131@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009b	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0009e	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000a1	eb 7f		 jmp	 SHORT $LN248@insert
$LN158@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a3	48 8b cb	 mov	 rcx, rbx
$LN159@insert:
  000a6	48 83 f8 10	 cmp	 rax, 16
  000aa	72 05		 jb	 SHORT $LN173@insert
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000ac	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000af	eb 03		 jmp	 SHORT $LN174@insert
$LN173@insert:
  000b1	48 8b c3	 mov	 rax, rbx
$LN174@insert:

; 1279 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  000b4	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  000b8	4c 2b c5	 sub	 r8, rbp
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  000bb	74 10		 je	 SHORT $LN181@insert
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1279 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  000bd	48 8d 14 29	 lea	 rdx, QWORD PTR [rcx+rbp]
  000c1	48 8d 0c 28	 lea	 rcx, QWORD PTR [rax+rbp]
  000c5	48 03 ce	 add	 rcx, rsi
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  000c8	e8 00 00 00 00	 call	 memmove
$LN181@insert:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2174 : 		if (_Count == 1)

  000cd	48 83 fe 01	 cmp	 rsi, 1
  000d1	75 19		 jne	 SHORT $LN183@insert

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d3	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d8	72 09		 jb	 SHORT $LN196@insert
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000da	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000dd	44 88 34 28	 mov	 BYTE PTR [rax+rbp], r14b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2176 : 		else

  000e1	eb 28		 jmp	 SHORT $LN184@insert
$LN196@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e3	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000e6	44 88 34 2b	 mov	 BYTE PTR [rbx+rbp], r14b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2176 : 		else

  000ea	eb 1f		 jmp	 SHORT $LN184@insert
$LN183@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ec	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000f1	72 05		 jb	 SHORT $LN214@insert
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000f3	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000f6	eb 03		 jmp	 SHORT $LN215@insert
$LN214@insert:
  000f8	48 8b c3	 mov	 rax, rbx
$LN215@insert:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  000fb	41 0f be d6	 movsx	 edx, r14b
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2177 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  000ff	48 8d 0c 28	 lea	 rcx, QWORD PTR [rax+rbp]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  00103	4c 8b c6	 mov	 r8, rsi
  00106	e8 00 00 00 00	 call	 memset
$LN184@insert:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0010b	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0010f	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00114	72 05		 jb	 SHORT $LN242@insert
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00116	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00119	eb 03		 jmp	 SHORT $LN243@insert
$LN242@insert:
  0011b	48 8b c3	 mov	 rax, rbx
$LN243@insert:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0011e	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN248@insert:
  00122	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1285 : 		return (*this);

  00127	48 8b c3	 mov	 rax, rbx

; 1286 : 		}

  0012a	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0012f	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00134	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00139	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0013d	41 5e		 pop	 r14
  0013f	c3		 ret	 0
$LN254@insert:

; 2281 : 		_Xout_of_range("invalid string position");

  00140	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00147	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0014c	cc		 int	 3
$LN256@insert:

; 2264 : 		_Xlength_error("string too long");

  0014d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00154	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00159	cc		 int	 3
$LN257@insert:
  0015a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00161	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00166	cc		 int	 3
$LN251@insert:
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1180 : 		{	// assign _Count * _Ch

$LN180:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	41 0f b6 f0	 movzx	 esi, r8b
  00013	48 8b fa	 mov	 rdi, rdx
  00016	48 8b d9	 mov	 rbx, rcx

; 1181 : 		if (_Count == npos)

  00019	48 83 fa ff	 cmp	 rdx, -1
  0001d	0f 84 c3 00 00
	00		 je	 $LN177@assign

; 2223 : 		if (max_size() < _Newsize)

  00023	48 83 fa fe	 cmp	 rdx, -2
  00027	0f 87 c6 00 00
	00		 ja	 $LN179@assign

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  0002d	48 39 51 18	 cmp	 QWORD PTR [rcx+24], rdx
  00031	73 27		 jae	 SHORT $LN10@assign

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00033	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00037	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2231 : 			_Eos(0);	// new size is zero, just null terminate
; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  0003c	48 85 ff	 test	 rdi, rdi

; 1182 : 			_Xlen();	// result too long
; 1183 : 
; 1184 : 		if (_Grow(_Count))

  0003f	0f 84 8e 00 00
	00		 je	 $LN172@assign
$LN176@assign:

; 2174 : 		if (_Count == 1)

  00045	48 83 ff 01	 cmp	 rdi, 1
  00049	75 56		 jne	 SHORT $LN107@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004b	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00050	72 47		 jb	 SHORT $LN120@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00052	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00055	40 88 30	 mov	 BYTE PTR [rax], sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2176 : 		else

  00058	eb 62		 jmp	 SHORT $LN108@assign
$LN10@assign:

; 2230 : 		else if (_Newsize == 0)

  0005a	48 85 ff	 test	 rdi, rdi
  0005d	75 e6		 jne	 SHORT $LN176@assign

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0005f	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00063	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00068	72 19		 jb	 SHORT $LN98@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0006a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0006d	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1189 : 		return (*this);

  00070	48 8b c3	 mov	 rax, rbx

; 1190 : 		}

  00073	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00078	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0007d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00081	5f		 pop	 rdi
  00082	c3		 ret	 0
$LN98@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00083	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00086	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1190 : 		}

  00089	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008e	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00093	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
$LN120@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00099	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0009c	40 88 33	 mov	 BYTE PTR [rbx], sil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2176 : 		else

  0009f	eb 1b		 jmp	 SHORT $LN108@assign
$LN107@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a1	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000a6	72 05		 jb	 SHORT $LN138@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000a8	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ab	eb 03		 jmp	 SHORT $LN139@assign
$LN138@assign:
  000ad	48 8b cb	 mov	 rcx, rbx
$LN139@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  000b0	40 0f be d6	 movsx	 edx, sil
  000b4	4c 8b c7	 mov	 r8, rdi
  000b7	e8 00 00 00 00	 call	 memset
$LN108@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000bc	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c0	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000c5	72 05		 jb	 SHORT $LN166@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000c7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ca	eb 03		 jmp	 SHORT $LN167@assign
$LN166@assign:
  000cc	48 8b c3	 mov	 rax, rbx
$LN167@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000cf	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN172@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1190 : 		}

  000d3	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000d8	48 8b c3	 mov	 rax, rbx
  000db	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000e0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e4	5f		 pop	 rdi
  000e5	c3		 ret	 0
$LN177@assign:

; 2264 : 		_Xlength_error("string too long");

  000e6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000ed	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000f2	cc		 int	 3
$LN179@assign:
  000f3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000fa	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000ff	cc		 int	 3
$LN174@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  00000	80 3a 00	 cmp	 BYTE PTR [rdx], 0
  00003	75 08		 jne	 SHORT $LN5@assign
  00005	45 33 c0	 xor	 r8d, r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00008	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN5@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0000d	49 83 c8 ff	 or	 r8, -1
$LL7@assign:
  00011	49 ff c0	 inc	 r8
  00014	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00019	75 f6		 jne	 SHORT $LL7@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0001b	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1159 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN217:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00018	48 85 d2	 test	 rdx, rdx
  0001b	74 5a		 je	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00021	48 83 fa 10	 cmp	 rdx, 16
  00025	72 05		 jb	 SHORT $LN20@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00027	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002a	eb 03		 jmp	 SHORT $LN21@assign
$LN20@assign:
  0002c	48 8b c3	 mov	 rax, rbx
$LN21@assign:

; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002f	48 3b f0	 cmp	 rsi, rax
  00032	72 43		 jb	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00034	48 83 fa 10	 cmp	 rdx, 16
  00038	72 03		 jb	 SHORT $LN36@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN36@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003d	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  00041	48 3b ce	 cmp	 rcx, rsi
  00044	76 31		 jbe	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00046	48 83 fa 10	 cmp	 rdx, 16
  0004a	72 05		 jb	 SHORT $LN59@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0004c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	eb 03		 jmp	 SHORT $LN60@assign
$LN59@assign:
  00051	48 8b c3	 mov	 rax, rbx
$LN60@assign:

; 1160 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1161 : 		if (_Inside(_Ptr))
; 1162 : 			return (assign(*this,

  00054	48 2b f0	 sub	 rsi, rax
  00057	4c 8b cf	 mov	 r9, rdi
  0005a	4c 8b c6	 mov	 r8, rsi
  0005d	48 8b d3	 mov	 rdx, rbx
  00060	48 8b cb	 mov	 rcx, rbx

; 1171 : 		}

  00063	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00068	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5f		 pop	 rdi

; 1160 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1161 : 		if (_Inside(_Ptr))
; 1162 : 			return (assign(*this,

  00072	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@assign:

; 2223 : 		if (max_size() < _Newsize)

  00077	48 83 ff fe	 cmp	 rdi, -2
  0007b	0f 87 a2 00 00
	00		 ja	 $LN215@assign

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  00081	48 39 7b 18	 cmp	 QWORD PTR [rbx+24], rdi
  00085	73 20		 jae	 SHORT $LN66@assign

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00087	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0008b	48 8b d7	 mov	 rdx, rdi
  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2231 : 			_Eos(0);	// new size is zero, just null terminate
; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  00096	48 85 ff	 test	 rdi, rdi

; 1163 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1164 : 
; 1165 : 		if (_Grow(_Count))

  00099	74 75		 je	 SHORT $LN209@assign
$LN214@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009b	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000a0	72 44		 jb	 SHORT $LN173@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000a2	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a5	eb 42		 jmp	 SHORT $LN174@assign
$LN66@assign:

; 2230 : 		else if (_Newsize == 0)

  000a7	48 85 ff	 test	 rdi, rdi
  000aa	75 ef		 jne	 SHORT $LN214@assign

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ac	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b0	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000b5	72 19		 jb	 SHORT $LN154@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000b7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000ba	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1170 : 		return (*this);

  000bd	48 8b c3	 mov	 rax, rbx

; 1171 : 		}

  000c0	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c5	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000ca	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ce	5f		 pop	 rdi
  000cf	c3		 ret	 0
$LN154@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d0	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000d3	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1171 : 		}

  000d6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000db	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000e0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e4	5f		 pop	 rdi
  000e5	c3		 ret	 0
$LN173@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e6	48 8b cb	 mov	 rcx, rbx
$LN174@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000e9	48 85 ff	 test	 rdi, rdi
  000ec	74 0b		 je	 SHORT $LN181@assign
  000ee	4c 8b c7	 mov	 r8, rdi
  000f1	48 8b d6	 mov	 rdx, rsi
  000f4	e8 00 00 00 00	 call	 memcpy
$LN181@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000f9	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000fd	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00102	72 05		 jb	 SHORT $LN203@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00104	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00107	eb 03		 jmp	 SHORT $LN204@assign
$LN203@assign:
  00109	48 8b c3	 mov	 rax, rbx
$LN204@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0010c	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN209@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1171 : 		}

  00110	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00115	48 8b c3	 mov	 rax, rbx
  00118	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0011d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00121	5f		 pop	 rdi
  00122	c3		 ret	 0
$LN215@assign:

; 2264 : 		_Xlength_error("string too long");

  00123	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0012a	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012f	cc		 int	 3
$LN212@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1143 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN250:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	48 89 7c 24 18	 mov	 QWORD PTR [rsp+24], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2269 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1143 : 		{	// assign _Right [_Roff, _Roff + _Count)

  00019	49 8b f9	 mov	 rdi, r9
  0001c	4d 8b f0	 mov	 r14, r8
  0001f	48 8b f2	 mov	 rsi, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2269 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 d9 00 00
	00		 jb	 $LN246@assign

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 2113 : 		if (_Size <= _Max_effective_size)

  00031	4c 3b c8	 cmp	 r9, rax
  00034	48 0f 47 f8	 cmova	 rdi, rax

; 1144 : 		_Right._Check_offset(_Roff);
; 1145 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1146 : 
; 1147 : 		if (this == &_Right)

  00038	48 3b ca	 cmp	 rcx, rdx
  0003b	75 2f		 jne	 SHORT $LN2@assign

; 1148 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0003d	49 8d 04 38	 lea	 rax, QWORD PTR [r8+rdi]

; 2269 : 		if (this->_Mysize() < _Off)

  00041	48 39 41 10	 cmp	 QWORD PTR [rcx+16], rax
  00045	0f 82 c9 00 00
	00		 jb	 $LN248@assign

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0004b	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00054	72 03		 jb	 SHORT $LN75@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00056	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN75@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00059	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1148 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0005d	33 d2		 xor	 edx, edx
  0005f	48 8b cb	 mov	 rcx, rbx
  00062	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 1149 : 		else if (_Grow(_Count))

  00067	e9 82 00 00 00	 jmp	 $LN241@assign
$LN2@assign:

; 2223 : 		if (max_size() < _Newsize)

  0006c	48 83 ff fe	 cmp	 rdi, -2
  00070	0f 87 ab 00 00
	00		 ja	 $LN249@assign

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  00076	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0007a	73 27		 jae	 SHORT $LN84@assign

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0007c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00080	48 8b d7	 mov	 rdx, rdi
  00083	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  00088	48 85 ff	 test	 rdi, rdi

; 1149 : 		else if (_Grow(_Count))

  0008b	74 61		 je	 SHORT $LN241@assign
$LN245@assign:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0008d	48 83 7e 18 10	 cmp	 QWORD PTR [rsi+24], 16
  00092	72 03		 jb	 SHORT $LN190@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00094	48 8b 36	 mov	 rsi, QWORD PTR [rsi]
$LN190@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00097	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0009c	72 25		 jb	 SHORT $LN205@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0009e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a1	eb 23		 jmp	 SHORT $LN206@assign
$LN84@assign:

; 2230 : 		else if (_Newsize == 0)

  000a3	48 85 ff	 test	 rdi, rdi
  000a6	75 e5		 jne	 SHORT $LN245@assign

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000a8	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ac	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  000b1	72 08		 jb	 SHORT $LN172@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000b3	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000b6	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000b9	eb 33		 jmp	 SHORT $LN241@assign
$LN172@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000bb	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000be	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000c1	eb 2b		 jmp	 SHORT $LN241@assign
$LN205@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c3	48 8b cb	 mov	 rcx, rbx
$LN206@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000c6	48 85 ff	 test	 rdi, rdi
  000c9	74 0c		 je	 SHORT $LN213@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1151 : 			_Traits::copy(this->_Myptr(),

  000cb	4a 8d 14 36	 lea	 rdx, QWORD PTR [rsi+r14]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000cf	4c 8b c7	 mov	 r8, rdi
  000d2	e8 00 00 00 00	 call	 memcpy
$LN213@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d7	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000db	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000e0	72 05		 jb	 SHORT $LN235@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000e2	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e5	eb 03		 jmp	 SHORT $LN236@assign
$LN235@assign:
  000e7	48 8b c3	 mov	 rax, rbx
$LN236@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000ea	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN241@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1156 : 		}

  000ee	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000f3	48 8b c3	 mov	 rax, rbx
  000f6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000fb	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  00100	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00104	41 5e		 pop	 r14
  00106	c3		 ret	 0
$LN246@assign:

; 2281 : 		_Xout_of_range("invalid string position");

  00107	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0010e	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00113	cc		 int	 3
$LN248@assign:
  00114	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0011b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00120	cc		 int	 3
$LN249@assign:

; 2264 : 		_Xlength_error("string too long");

  00121	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00128	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012d	cc		 int	 3
$LN243@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1138 : 		return (assign(_Right, 0, npos));

  00000	49 83 c9 ff	 or	 r9, -1
  00004	45 33 c0	 xor	 r8d, r8d
  00007	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1105 : 		{	// append _Count * _Ch

$LN208:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	41 0f b6 e8	 movzx	 ebp, r8b
  00013	48 8b f2	 mov	 rsi, rdx

; 1106 : 		if (npos - this->_Mysize() <= _Count)

  00016	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0001a	48 8b d9	 mov	 rbx, rcx
  0001d	49 8b c0	 mov	 rax, r8
  00020	48 f7 d0	 not	 rax
  00023	48 3b c2	 cmp	 rax, rdx
  00026	0f 86 bf 00 00
	00		 jbe	 $LN205@append

; 1107 : 			_Xlen();	// result too long
; 1108 : 
; 1109 : 		const size_type _Num = this->_Mysize() + _Count;

  0002c	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00031	49 8d 3c 10	 lea	 rdi, QWORD PTR [r8+rdx]

; 1110 : 		if (0 < _Count && _Grow(_Num))

  00035	48 85 d2	 test	 rdx, rdx
  00038	0f 84 95 00 00
	00		 je	 $LN199@append

; 2223 : 		if (max_size() < _Newsize)

  0003e	48 83 ff fe	 cmp	 rdi, -2
  00042	0f 87 b0 00 00
	00		 ja	 $LN207@append

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  00048	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0004c	73 27		 jae	 SHORT $LN28@append

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0004e	48 8b d7	 mov	 rdx, rdi
  00051	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  00056	48 85 ff	 test	 rdi, rdi

; 1110 : 		if (0 < _Count && _Grow(_Num))

  00059	74 78		 je	 SHORT $LN199@append
$LN204@append:

; 1111 : 			{	// make room and append new stuff using assign
; 1112 : 			_Chassign(this->_Mysize(), _Count, _Ch);

  0005b	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]

; 2174 : 		if (_Count == 1)

  0005f	48 83 fe 01	 cmp	 rsi, 1
  00063	75 39		 jne	 SHORT $LN134@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00065	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0006a	72 29		 jb	 SHORT $LN147@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0006c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0006f	40 88 2c 08	 mov	 BYTE PTR [rax+rcx], bpl
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2176 : 		else

  00073	eb 47		 jmp	 SHORT $LN135@append
$LN28@append:

; 2230 : 		else if (_Newsize == 0)

  00075	48 85 ff	 test	 rdi, rdi
  00078	75 e1		 jne	 SHORT $LN204@append

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0007a	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0007e	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00083	72 08		 jb	 SHORT $LN116@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00085	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00088	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  0008b	eb 46		 jmp	 SHORT $LN199@append
$LN116@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008d	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00090	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  00093	eb 3e		 jmp	 SHORT $LN199@append
$LN147@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00095	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00098	40 88 2c 0b	 mov	 BYTE PTR [rbx+rcx], bpl
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2176 : 		else

  0009c	eb 1e		 jmp	 SHORT $LN135@append
$LN134@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009e	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000a3	72 05		 jb	 SHORT $LN165@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000a5	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a8	eb 03		 jmp	 SHORT $LN166@append
$LN165@append:
  000aa	48 8b c3	 mov	 rax, rbx
$LN166@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  000ad	40 0f be d5	 movsx	 edx, bpl
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2177 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  000b1	48 03 c8	 add	 rcx, rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  000b4	4c 8b c6	 mov	 r8, rsi
  000b7	e8 00 00 00 00	 call	 memset
$LN135@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000bc	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c0	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000c5	72 05		 jb	 SHORT $LN193@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000c7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ca	eb 03		 jmp	 SHORT $LN194@append
$LN193@append:
  000cc	48 8b c3	 mov	 rax, rbx
$LN194@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000cf	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN199@append:
  000d3	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1115 : 		return (*this);

  000d8	48 8b c3	 mov	 rax, rbx

; 1116 : 		}

  000db	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000e0	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000e5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e9	5e		 pop	 rsi
  000ea	c3		 ret	 0
$LN205@append:

; 2264 : 		_Xlength_error("string too long");

  000eb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000f2	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000f7	cc		 int	 3
$LN207@append:
  000f8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000ff	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00104	cc		 int	 3
$LN202@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  00000	80 3a 00	 cmp	 BYTE PTR [rdx], 0
  00003	75 08		 jne	 SHORT $LN5@append
  00005	45 33 c0	 xor	 r8d, r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1101 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00008	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN5@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0000d	49 83 c8 ff	 or	 r8, -1
$LL7@append:
  00011	49 ff c0	 inc	 r8
  00014	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00019	75 f6		 jne	 SHORT $LL7@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1101 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  0001b	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1081 : 		{	// append [_Ptr, _Ptr + _Count)

$LN249:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f0	 mov	 rsi, r8
  00012	48 8b ea	 mov	 rbp, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00018	48 85 d2	 test	 rdx, rdx
  0001b	74 5a		 je	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	4c 8b 49 18	 mov	 r9, QWORD PTR [rcx+24]
  00021	49 83 f9 10	 cmp	 r9, 16
  00025	72 05		 jb	 SHORT $LN21@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00027	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002a	eb 03		 jmp	 SHORT $LN22@append
$LN21@append:
  0002c	48 8b c3	 mov	 rax, rbx
$LN22@append:

; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002f	48 3b e8	 cmp	 rbp, rax
  00032	72 43		 jb	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00034	49 83 f9 10	 cmp	 r9, 16
  00038	72 03		 jb	 SHORT $LN37@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN37@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2238 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003d	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  00041	48 3b cd	 cmp	 rcx, rbp
  00044	76 31		 jbe	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00046	49 83 f9 10	 cmp	 r9, 16
  0004a	72 05		 jb	 SHORT $LN60@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0004c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	eb 03		 jmp	 SHORT $LN61@append
$LN60@append:
  00051	48 8b c3	 mov	 rax, rbx
$LN61@append:

; 1082 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1083 : 		if (_Inside(_Ptr))
; 1084 : 			return (append(*this,

  00054	48 2b e8	 sub	 rbp, rax
  00057	4c 8b ce	 mov	 r9, rsi
  0005a	4c 8b c5	 mov	 r8, rbp
  0005d	48 8b d3	 mov	 rdx, rbx
  00060	48 8b cb	 mov	 rcx, rbx

; 1096 : 		}

  00063	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00068	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5e		 pop	 rsi

; 1082 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1083 : 		if (_Inside(_Ptr))
; 1084 : 			return (append(*this,

  00072	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@append:

; 1085 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1086 : 		if (npos - this->_Mysize() <= _Count)

  00077	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0007b	49 8b c0	 mov	 rax, r8
  0007e	48 f7 d0	 not	 rax
  00081	48 3b c6	 cmp	 rax, rsi
  00084	0f 86 a0 00 00
	00		 jbe	 $LN246@append

; 1087 : 			_Xlen();	// result too long
; 1088 : 
; 1089 : 		const size_type _Num = this->_Mysize() + _Count;

  0008a	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  0008f	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1090 : 		if (0 < _Count && _Grow(_Num))

  00093	48 85 f6	 test	 rsi, rsi
  00096	74 7a		 je	 SHORT $LN239@append

; 2223 : 		if (max_size() < _Newsize)

  00098	48 83 ff fe	 cmp	 rdi, -2
  0009c	0f 87 95 00 00
	00		 ja	 $LN248@append

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  000a2	48 39 7b 18	 cmp	 QWORD PTR [rbx+24], rdi
  000a6	73 1c		 jae	 SHORT $LN88@append

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  000a8	48 8b d7	 mov	 rdx, rdi
  000ab	48 8b cb	 mov	 rcx, rbx
  000ae	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000b3	48 85 ff	 test	 rdi, rdi

; 1090 : 		if (0 < _Count && _Grow(_Num))

  000b6	74 5a		 je	 SHORT $LN239@append
$LN245@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b8	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000bd	72 25		 jb	 SHORT $LN194@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000bf	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c2	eb 23		 jmp	 SHORT $LN195@append
$LN88@append:

; 2230 : 		else if (_Newsize == 0)

  000c4	48 85 ff	 test	 rdi, rdi
  000c7	75 ef		 jne	 SHORT $LN245@append

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000c9	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000cd	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d2	72 08		 jb	 SHORT $LN176@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000d4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000d7	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000da	eb 36		 jmp	 SHORT $LN239@append
$LN176@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000dc	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000df	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000e2	eb 2e		 jmp	 SHORT $LN239@append
$LN194@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e4	48 8b cb	 mov	 rcx, rbx
$LN195@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000e7	48 85 f6	 test	 rsi, rsi
  000ea	74 0f		 je	 SHORT $LN211@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1092 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

  000ec	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000f0	4c 8b c6	 mov	 r8, rsi
  000f3	48 8b d5	 mov	 rdx, rbp
  000f6	e8 00 00 00 00	 call	 memcpy
$LN211@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000fb	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ff	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00104	72 05		 jb	 SHORT $LN233@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00106	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00109	eb 03		 jmp	 SHORT $LN234@append
$LN233@append:
  0010b	48 8b c3	 mov	 rax, rbx
$LN234@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0010e	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN239@append:
  00112	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1095 : 		return (*this);

  00117	48 8b c3	 mov	 rax, rbx

; 1096 : 		}

  0011a	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0011f	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00124	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00128	5e		 pop	 rsi
  00129	c3		 ret	 0
$LN246@append:

; 2264 : 		_Xlength_error("string too long");

  0012a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00131	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00136	cc		 int	 3
$LN248@append:
  00137	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0013e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00143	cc		 int	 3
$LN243@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1064 : 		{	// append _Right [_Roff, _Roff + _Count)

$LN232:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2269 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1064 : 		{	// append _Right [_Roff, _Roff + _Count)

  00019	49 8b f1	 mov	 rsi, r9
  0001c	49 8b e8	 mov	 rbp, r8
  0001f	4c 8b f2	 mov	 r14, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2269 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 cf 00 00
	00		 jb	 $LN228@append

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 1065 : 		_Right._Check_offset(_Roff);
; 1066 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1067 : 		if (npos - this->_Mysize() <= _Count)

  00031	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]

; 2113 : 		if (_Size <= _Max_effective_size)

  00035	4c 3b c8	 cmp	 r9, rax
  00038	48 0f 47 f0	 cmova	 rsi, rax

; 1065 : 		_Right._Check_offset(_Roff);
; 1066 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1067 : 		if (npos - this->_Mysize() <= _Count)

  0003c	49 8b c0	 mov	 rax, r8
  0003f	48 f7 d0	 not	 rax
  00042	48 3b c6	 cmp	 rax, rsi
  00045	0f 86 bf 00 00
	00		 jbe	 $LN230@append

; 1068 : 			_Xlen();	// result too long
; 1069 : 
; 1070 : 		const size_type _Num = this->_Mysize() + _Count;

  0004b	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00050	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1071 : 		if (0 < _Count && _Grow(_Num))

  00054	48 85 f6	 test	 rsi, rsi
  00057	0f 84 82 00 00
	00		 je	 $LN222@append

; 2223 : 		if (max_size() < _Newsize)

  0005d	48 83 ff fe	 cmp	 rdi, -2
  00061	0f 87 b0 00 00
	00		 ja	 $LN231@append

; 2224 : 			_Xlen();	// result too long
; 2225 : 		if (this->_Myres() < _Newsize)

  00067	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0006b	73 23		 jae	 SHORT $LN56@append

; 2226 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0006d	48 8b d7	 mov	 rdx, rdi
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  00075	48 85 ff	 test	 rdi, rdi

; 1071 : 		if (0 < _Count && _Grow(_Num))

  00078	74 65		 je	 SHORT $LN222@append
$LN227@append:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0007a	49 83 7e 18 10	 cmp	 QWORD PTR [r14+24], 16
  0007f	72 03		 jb	 SHORT $LN162@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00081	4d 8b 36	 mov	 r14, QWORD PTR [r14]
$LN162@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00084	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00089	72 25		 jb	 SHORT $LN177@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0008b	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008e	eb 23		 jmp	 SHORT $LN178@append
$LN56@append:

; 2230 : 		else if (_Newsize == 0)

  00090	48 85 ff	 test	 rdi, rdi
  00093	75 e5		 jne	 SHORT $LN227@append

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00095	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00099	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0009e	72 08		 jb	 SHORT $LN144@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000a0	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000a3	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000a6	eb 37		 jmp	 SHORT $LN222@append
$LN144@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a8	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000ab	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2232 : 		return (0 < _Newsize);	// return true only if more work to do

  000ae	eb 2f		 jmp	 SHORT $LN222@append
$LN177@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b0	48 8b cb	 mov	 rcx, rbx
$LN178@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000b3	48 85 f6	 test	 rsi, rsi
  000b6	74 10		 je	 SHORT $LN194@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1073 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

  000b8	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  000bc	49 8d 14 2e	 lea	 rdx, QWORD PTR [r14+rbp]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000c0	4c 8b c6	 mov	 r8, rsi
  000c3	e8 00 00 00 00	 call	 memcpy
$LN194@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000c8	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000cc	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d1	72 05		 jb	 SHORT $LN216@append
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  000d3	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d6	eb 03		 jmp	 SHORT $LN217@append
$LN216@append:
  000d8	48 8b c3	 mov	 rax, rbx
$LN217@append:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000db	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN222@append:
  000df	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1077 : 		return (*this);

  000e4	48 8b c3	 mov	 rax, rbx

; 1078 : 		}

  000e7	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000ec	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000f1	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000f6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000fa	41 5e		 pop	 r14
  000fc	c3		 ret	 0
$LN228@append:

; 2281 : 		_Xout_of_range("invalid string position");

  000fd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00104	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00109	cc		 int	 3
$LN230@append:

; 2264 : 		_Xlength_error("string too long");

  0010a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00111	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00116	cc		 int	 3
$LN231@append:
  00117	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0011e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00123	cc		 int	 3
$LN225@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1059 : 		return (append(_Right, 0, npos));

  00000	49 83 c9 ff	 or	 r9, -1
  00004	45 33 c0	 xor	 r8d, r8d
  00007	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 1017 : 		{	// assign _Right

$LN160:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1018 : 		if (this != &_Right)

  00009	48 3b ca	 cmp	 rcx, rdx
  0000c	74 0c		 je	 SHORT $LN158@operator

; 1138 : 		return (assign(_Right, 0, npos));

  0000e	49 83 c9 ff	 or	 r9, -1
  00012	45 33 c0	 xor	 r8d, r8d
  00015	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN158@operator:

; 1019 : 			{	// different, assign it
; 1020 : 			if (this->_Getal() != _Right._Getal()
; 1021 : 				&& _Alty::propagate_on_container_copy_assignment::value)
; 1022 : 				{	// change allocator before copying
; 1023 : 				_Tidy(true);
; 1024 : 				this->_Copy_alloc(_Right._Getal());
; 1025 : 				}
; 1026 : 
; 1027 : 			assign(_Right);
; 1028 : 			}
; 1029 : 		return (*this);

  0001a	48 8b c3	 mov	 rax, rbx

; 1030 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 1010 : 		{	// destroy the string

$LN133:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]

; 1010 : 		{	// destroy the string

  0000a	48 8b d9	 mov	 rbx, rcx

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	48 83 f8 10	 cmp	 rax, 16
  00011	72 33		 jb	 SHORT $LN84@basic_stri
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00013	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00016	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00019	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001f	72 20		 jb	 SHORT $LN79@basic_stri

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00021	f6 c1 1f	 test	 cl, 31
  00024	75 43		 jne	 SHORT $LN128@basic_stri

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00026	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0002a	48 3b c1	 cmp	 rax, rcx
  0002d	73 40		 jae	 SHORT $LN130@basic_stri

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002f	48 2b c8	 sub	 rcx, rax
  00032	48 83 f9 08	 cmp	 rcx, 8
  00036	72 3d		 jb	 SHORT $LN131@basic_stri

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00038	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003c	77 3d		 ja	 SHORT $LN132@basic_stri

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003e	48 8b c8	 mov	 rcx, rax
$LN79@basic_stri:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN84@basic_stri:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00046	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0004e	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00056	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0005b	72 03		 jb	 SHORT $LN118@basic_stri
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  0005d	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN118@basic_stri:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00060	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1012 : 		}

  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5b		 pop	 rbx
  00068	c3		 ret	 0
$LN128@basic_stri:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00069	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006e	cc		 int	 3
$LN130@basic_stri:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0006f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00074	cc		 int	 3
$LN131@basic_stri:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00075	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007a	cc		 int	 3
$LN132@basic_stri:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0007b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00080	cc		 int	 3
$LN127@basic_stri:
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT

; 955  : 		{	// assign by moving _Right

$LN258:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 956  : 		if (_Right._Myres() < this->_BUF_SIZE)

  0000a	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
  0000f	48 8b da	 mov	 rbx, rdx
  00012	48 8b f9	 mov	 rdi, rcx
  00015	73 11		 jae	 SHORT $LN2@Assign_rv

; 957  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  00017	4c 8b 42 10	 mov	 r8, QWORD PTR [rdx+16]
  0001b	49 83 c0 01	 add	 r8, 1
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  0001f	74 19		 je	 SHORT $LN3@Assign_rv
  00021	e8 00 00 00 00	 call	 memmove
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 959  : 		else

  00026	eb 12		 jmp	 SHORT $LN3@Assign_rv
$LN2@Assign_rv:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 85 ff	 test	 rdi, rdi
  0002b	74 06		 je	 SHORT $LN81@Assign_rv
  0002d	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00030	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN81@Assign_rv:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 962  : 			_Right._Bx()._Ptr = pointer();

  00033	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN3@Assign_rv:

; 963  : 			}
; 964  : 		this->_Mysize() = _Right._Mysize();

  0003a	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  0003e	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 965  : 		this->_Myres() = _Right._Myres();

  00042	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00046	48 89 47 18	 mov	 QWORD PTR [rdi+24], rax

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0004a	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00052	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005a	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0005f	72 11		 jb	 SHORT $LN248@Assign_rv
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00061	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00064	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 967  : 		}

  00067	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
$LN248@Assign_rv:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00072	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 967  : 		}

  00075	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 940  : 		{	// assign by moving _Right

$LN328:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	48 8b fa	 mov	 rdi, rdx
  00017	48 8b d9	 mov	 rbx, rcx

; 941  : 		if (this == &_Right)

  0001a	48 3b ca	 cmp	 rcx, rdx
  0001d	0f 84 84 00 00
	00		 je	 $LN5@assign

; 2249 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00023	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00027	48 83 f8 10	 cmp	 rax, 16
  0002b	72 4c		 jb	 SHORT $LN282@assign

; 2250 : 			{	// copy any leftovers to small buffer and deallocate
; 2251 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2252 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2253 : 			if (0 < _Newsize)
; 2254 : 				_Traits::copy(this->_Bx()._Buf,
; 2255 : 					_STD addressof(*_Ptr), _Newsize);
; 2256 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0002d	48 ff c0	 inc	 rax
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00030	48 8b 09	 mov	 rcx, QWORD PTR [rcx]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00033	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00039	72 38		 jb	 SHORT $LN277@assign

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0003b	f6 c1 1f	 test	 cl, 31
  0003e	74 06		 je	 SHORT $LN278@assign
  00040	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00045	90		 npad	 1
$LN278@assign:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00046	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0004a	48 3b c1	 cmp	 rax, rcx
  0004d	72 06		 jb	 SHORT $LN279@assign
  0004f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00054	90		 npad	 1
$LN279@assign:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00055	48 2b c8	 sub	 rcx, rax
  00058	48 83 f9 08	 cmp	 rcx, 8
  0005c	73 06		 jae	 SHORT $LN280@assign
  0005e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00063	90		 npad	 1
$LN280@assign:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00064	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00068	76 06		 jbe	 SHORT $LN281@assign
  0006a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006f	90		 npad	 1
$LN281@assign:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00070	48 8b c8	 mov	 rcx, rax
$LN277@assign:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00073	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  00078	90		 npad	 1
$LN282@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00079	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00081	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00089	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0008e	72 05		 jb	 SHORT $LN316@assign
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstddef

; 723  : 	return (__builtin_addressof(_Val));

  00090	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00093	eb 03		 jmp	 SHORT $LN317@assign
$LN316@assign:
  00095	48 8b c3	 mov	 rax, rbx
$LN317@assign:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00098	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 949  : 			_Assign_rv(_STD forward<_Myt>(_Right));

  0009b	48 8b d7	 mov	 rdx, rdi
  0009e	48 8b cb	 mov	 rcx, rbx
  000a1	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
  000a6	90		 npad	 1
$LN5@assign:

; 950  : 			}
; 951  : 		return (*this);

  000a7	48 8b c3	 mov	 rax, rbx

; 952  : 		}

  000aa	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000af	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b3	5f		 pop	 rdi
  000b4	c3		 ret	 0
$LN327@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 905  : 		{	// construct by moving _Right

$LN152:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00006	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 905  : 		{	// construct by moving _Right

  0000e	48 8b d9	 mov	 rbx, rcx

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00011	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00019	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 907  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  0001c	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv

; 908  : 		}

  00021	48 8b c3	 mov	 rax, rbx
  00024	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 844  : 		{	// construct from _Count * _Ch

$LN134:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00006	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 844  : 		{	// construct from _Count * _Ch

  0000e	48 8b d9	 mov	 rbx, rcx

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00011	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00019	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 846  : 		assign(_Count, _Ch);

  0001c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 847  : 		}

  00021	48 8b c3	 mov	 rax, rbx
  00024	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 830  : 		{	// construct from [_Ptr, <null>)

$LN141:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	45 33 c0	 xor	 r8d, r8d

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00009	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00011	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 830  : 		{	// construct from [_Ptr, <null>)

  00015	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00018	44 88 01	 mov	 BYTE PTR [rcx], r8b

; 523  : 		return (*_First == 0 ? 0

  0001b	44 38 02	 cmp	 BYTE PTR [rdx], r8b
  0001e	74 0e		 je	 SHORT $LN138@basic_stri
  00020	49 83 c8 ff	 or	 r8, -1
$LL139@basic_stri:
  00024	49 ff c0	 inc	 r8
  00027	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  0002c	75 f6		 jne	 SHORT $LL139@basic_stri
$LN138@basic_stri:
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 1176 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0002e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}

  00033	48 8b c3	 mov	 rax, rbx
  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5b		 pop	 rbx
  0003b	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00000	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 790  : 		}

  00008	48 8b c1	 mov	 rax, rcx

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0000b	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00013	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 790  : 		}

  00016	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 774  : 		{	// construct by copying _Right

$LN153:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2258 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00006	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  0000e	49 83 c9 ff	 or	 r9, -1

; 2217 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00012	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  0001a	45 33 c0	 xor	 r8d, r8d
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0001d	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring

; 774  : 		{	// construct by copying _Right

  00020	48 8b d9	 mov	 rbx, rcx

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  00023	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 777  : 		}

  00028	48 8b c3	 mov	 rax, rbx
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5b		 pop	 rbx
  00030	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 320  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 321  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 315  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 316  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 300  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 301  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 295  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 296  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT

; 728  : 		return (_Get_data()._Myres);

  00000	48 8d 41 18	 lea	 rax, QWORD PTR [rcx+24]

; 729  : 		}

  00004	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 723  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 724  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 718  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 719  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT

; 708  : 		return (_Get_data()._Bx);

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		}

  00003	c3		 ret	 0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 701  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 702  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 696  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 697  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 691  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 692  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 686  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 687  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z
_TEXT	SEGMENT
this$ = 8
_Al$ = 16
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Copy_alloc, COMDAT

; 585  : 		_Pocca(_Getal(), _Al);
; 586  : 		}

  00000	c2 00 00	 ret	 0
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Copy_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 573  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 566  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 567  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 566  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 567  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 561  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 562  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 561  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 562  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 487  : 		{	// initialize values
; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 490  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT

; 906  : 		return (_Mytraits::max_size(*this));

  00000	48 83 c8 ff	 or	 rax, -1

; 907  : 		}

  00004	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT

; 884  : 		{	// deallocate object at _Ptr, ignore size

$LN21:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00004	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0000b	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0000d	f6 c2 1f	 test	 dl, 31
  00010	75 27		 jne	 SHORT $LN16@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00012	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00016	48 3b c2	 cmp	 rax, rdx
  00019	73 24		 jae	 SHORT $LN18@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0001b	48 2b d0	 sub	 rdx, rax
  0001e	48 83 fa 08	 cmp	 rdx, 8
  00022	72 21		 jb	 SHORT $LN19@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00024	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  00028	77 21		 ja	 SHORT $LN20@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0002a	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0002d	48 8b ca	 mov	 rcx, rdx

; 885  : 		_Mybase::deallocate(_Ptr, _Count);
; 886  : 		}

  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00034	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00039	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0003e	cc		 int	 3
$LN18@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN19@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN20@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT

; 873  : 		{	// allocate array of _Count elements

$LN21:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN6@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN5@allocate:

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN6@allocate:

; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00010	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00017	72 27		 jb	 SHORT $LN8@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00019	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  0001d	48 3b ca	 cmp	 rcx, rdx
  00020	76 2d		 jbe	 SHORT $LN17@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00022	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00027	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0002a	48 85 c0	 test	 rax, rax
  0002d	74 26		 je	 SHORT $LN19@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0002f	48 83 c0 27	 add	 rax, 39			; 00000027H
  00033	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00037	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  0003b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003f	c3		 ret	 0
$LN8@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00040	48 8b ca	 mov	 rcx, rdx
  00043	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00048	48 85 c0	 test	 rax, rax
  0004b	75 be		 jne	 SHORT $LN5@allocate
  0004d	eb 0c		 jmp	 SHORT $LN20@allocate
$LN17@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0004f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00054	cc		 int	 3
$LN19@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN20@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0005b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00060	cc		 int	 3
$LN16@allocate:
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 845  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 835  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
__formal$ = 24
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 811  : 		return (_Mytraits::select_on_container_copy_construction(*this));

  00000	48 8b c2	 mov	 rax, rdx

; 812  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$ = 16
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 773  : 		return (_Al);

  00000	48 8b c1	 mov	 rax, rcx

; 774  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
_Al$ = 8
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 767  : 		return (_Al.max_size());

  00000	48 83 c8 ff	 or	 rax, -1

; 768  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@D@std@@QEBA_KXZ PROC		; std::allocator<char>::max_size, COMDAT

; 649  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 83 c8 ff	 or	 rax, -1

; 650  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator@D@std@@QEBA_KXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 624  : 		{	// allocate array of _Count elements

$LN18:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN3@allocate:

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN4@allocate:

; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00010	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00017	72 27		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00019	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  0001d	48 3b ca	 cmp	 rcx, rdx
  00020	76 2d		 jbe	 SHORT $LN14@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00022	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00027	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0002a	48 85 c0	 test	 rax, rax
  0002d	74 26		 je	 SHORT $LN16@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0002f	48 83 c0 27	 add	 rax, 39			; 00000027H
  00033	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00037	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0003b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003f	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00040	48 8b ca	 mov	 rcx, rdx
  00043	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00048	48 85 c0	 test	 rax, rax
  0004b	75 be		 jne	 SHORT $LN3@allocate
  0004d	eb 0c		 jmp	 SHORT $LN17@allocate
$LN14@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0004f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00054	cc		 int	 3
$LN16@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00055	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005a	cc		 int	 3
$LN17@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0005b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00060	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 619  : 		{	// deallocate object at _Ptr

$LN18:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00004	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0000b	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0000d	f6 c2 1f	 test	 dl, 31
  00010	75 27		 jne	 SHORT $LN13@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00012	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00016	48 3b c2	 cmp	 rax, rdx
  00019	73 24		 jae	 SHORT $LN15@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0001b	48 2b d0	 sub	 rdx, rax
  0001e	48 83 fa 08	 cmp	 rdx, 8
  00022	72 21		 jb	 SHORT $LN16@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00024	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  00028	77 21		 ja	 SHORT $LN17@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0002a	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0002d	48 8b ca	 mov	 rcx, rdx

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 621  : 		}

  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00034	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00039	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0003e	cc		 int	 3
$LN15@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN16@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN17@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@D@std@@QEAA@AEBV01@@Z PROC		; std::allocator<char>::allocator<char>, COMDAT

; 604  : 		{	// construct by copying (do nothing)
; 605  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 600  : 		{	// construct default allocator (do nothing)
; 601  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xatomic0.h
;	COMDAT ?_Init_atomic_counter@std@@YAXAEAKK@Z
_TEXT	SEGMENT
_Counter$ = 8
_Value$ = 16
?_Init_atomic_counter@std@@YAXAEAKK@Z PROC		; std::_Init_atomic_counter, COMDAT

; 63   : 	_Counter = _Value;

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 64   : 	}

  00002	c3		 ret	 0
?_Init_atomic_counter@std@@YAXAEAKK@Z ENDP		; std::_Init_atomic_counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Count$ = 56
_Sz$ = 64
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b ca	 mov	 r9, rdx

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00007	48 83 c8 ff	 or	 rax, -1
  0000b	33 d2		 xor	 edx, edx
  0000d	49 f7 f0	 div	 r8
  00010	4c 3b c8	 cmp	 r9, rax
  00013	77 36		 ja	 SHORT $LN10@Deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00015	4d 0f af c8	 imul	 r9, r8

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00019	49 81 f9 00 10
	00 00		 cmp	 r9, 4096		; 00001000H
  00020	72 20		 jb	 SHORT $LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00022	f6 c1 1f	 test	 cl, 31
  00025	75 2a		 jne	 SHORT $LN12@Deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00027	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0002b	48 3b c1	 cmp	 rax, rcx
  0002e	73 27		 jae	 SHORT $LN13@Deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00030	48 2b c8	 sub	 rcx, rax
  00033	48 83 f9 08	 cmp	 rcx, 8
  00037	72 24		 jb	 SHORT $LN14@Deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00039	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003d	77 24		 ja	 SHORT $LN15@Deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003f	48 8b c8	 mov	 rcx, rax
$LN3@Deallocate:

; 133  : 	}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN10@Deallocate:

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN12@Deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN13@Deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN14@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN15@Deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN9@Deallocate:
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Count$ = 48
_Sz$ = 56
_Try_aligned_allocation$ = 64
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b ca	 mov	 r9, rdx

; 49   : 	void *_Ptr = 0;
; 50   : 
; 51   : 	if (_Count == 0)

  00007	48 85 c9	 test	 rcx, rcx
  0000a	75 07		 jne	 SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

  0000c	33 c0		 xor	 eax, eax
$LN8@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}

  0000e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00012	c3		 ret	 0
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00013	33 d2		 xor	 edx, edx
  00015	48 83 c8 ff	 or	 rax, -1
  00019	49 f7 f1	 div	 r9
  0001c	48 3b c1	 cmp	 rax, rcx
  0001f	72 48		 jb	 SHORT $LN11@Allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  00021	49 0f af c9	 imul	 rcx, r9

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00025	45 84 c0	 test	 r8b, r8b
  00028	74 33		 je	 SHORT $LN4@Allocate
  0002a	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  00031	72 2a		 jb	 SHORT $LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00033	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00037	48 3b c1	 cmp	 rax, rcx
  0003a	76 33		 jbe	 SHORT $LN13@Allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00044	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00047	48 85 c0	 test	 rax, rax
  0004a	74 29		 je	 SHORT $LN14@Allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0004c	48 83 c0 27	 add	 rax, 39			; 00000027H
  00050	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00054	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}

  00058	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005c	c3		 ret	 0
$LN4@Allocate:

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else
; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  0005d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00062	48 85 c0	 test	 rax, rax
  00065	75 a7		 jne	 SHORT $LN8@Allocate
  00067	eb 12		 jmp	 SHORT $LN15@Allocate
$LN11@Allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00069	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006e	cc		 int	 3
$LN13@Allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0006f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00074	cc		 int	 3
$LN14@Allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00075	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007a	cc		 int	 3
$LN15@Allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0007b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00080	cc		 int	 3
$LN10@Allocate:
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 606  : 		return (EOF);

  00000	83 c8 ff	 or	 eax, -1

; 607  : 		}

  00003	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 594  : 		{	// test for metacharacter equality

  00000	8b 02		 mov	 eax, DWORD PTR [rdx]
  00002	39 01		 cmp	 DWORD PTR [rcx], eax
  00004	0f 94 c0	 sete	 al

; 595  : 		return (_Left == _Right);
; 596  : 		}

  00007	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z PROC	; std::char_traits<char>::to_int_type, COMDAT

; 589  : 		return ((unsigned char)_Ch);

  00000	0f b6 01	 movzx	 eax, BYTE PTR [rcx]

; 590  : 		}

  00003	c3		 ret	 0
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z ENDP	; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 565  : 		_Left = _Right;

  00000	0f b6 02	 movzx	 eax, BYTE PTR [rdx]
  00003	88 01		 mov	 BYTE PTR [rcx], al

; 566  : 		}

  00005	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z PROC	; std::char_traits<char>::assign, COMDAT

; 559  : 		{	// assign _Count * _Ch to [_First, ...)

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b c2	 mov	 rax, rdx
  00009	48 8b d9	 mov	 rbx, rcx

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  0000c	41 0f be d0	 movsx	 edx, r8b
  00010	4c 8b c0	 mov	 r8, rax
  00013	e8 00 00 00 00	 call	 memset
  00018	48 8b c3	 mov	 rax, rbx

; 561  : 		}

  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5b		 pop	 rbx
  00020	c3		 ret	 0
?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z ENDP	; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::move, COMDAT

; 553  : 		return (_Count == 0 ? _First1

  00000	4d 85 c0	 test	 r8, r8
  00003	75 04		 jne	 SHORT $LN3@move
  00005	48 8b c1	 mov	 rax, rcx

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

  00008	c3		 ret	 0
$LN3@move:

; 553  : 		return (_Count == 0 ? _First1

  00009	e9 00 00 00 00	 jmp	 memmove
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 530  : 		return (_Count == 0 ? _First1

  00009	4d 85 c0	 test	 r8, r8
  0000c	74 05		 je	 SHORT $LN5@copy
  0000e	e8 00 00 00 00	 call	 memcpy
$LN5@copy:
  00013	48 8b c3	 mov	 rax, rbx

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SA_KPEBD@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$char_traits@D@std@@SA_KPEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 523  : 		return (*_First == 0 ? 0

  00000	80 39 00	 cmp	 BYTE PTR [rcx], 0
  00003	75 03		 jne	 SHORT $LN3@length
  00005	33 c0		 xor	 eax, eax

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00007	c3		 ret	 0
$LN3@length:

; 523  : 		return (*_First == 0 ? 0

  00008	48 83 c8 ff	 or	 rax, -1
  0000c	0f 1f 40 00	 npad	 4
$LL5@length:
  00010	48 ff c0	 inc	 rax
  00013	80 3c 01 00	 cmp	 BYTE PTR [rcx+rax], 0
  00017	75 f7		 jne	 SHORT $LL5@length

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00019	c3		 ret	 0
?length@?$char_traits@D@std@@SA_KPEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 88   :         (void)_Size;
; 89   :         return _Where;

  00000	48 8b c2	 mov	 rax, rdx

; 90   :     }

  00003	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN8:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN6@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN6@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 90   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx
  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy

; 68   :     }

  0002c	48 8b c3	 mov	 rax, rbx
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5b		 pop	 rbx
  00034	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Message$ = 16
__formal$ = 24
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 60   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	33 c0		 xor	 eax, eax
  0000c	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 61   :         _Data._What = _Message;
; 62   :     }

  00010	48 8b c1	 mov	 rax, rcx
  00013	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  00017	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 32
this$ = 64
_Message$ = 72
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 53   :     {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 54   :         __std_exception_data _InitData = { _Message, true };

  00009	c6 44 24 28 01	 mov	 BYTE PTR _InitData$[rsp+8], 1
  0000e	48 8b c2	 mov	 rax, rdx
  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0001c	48 89 44 24 20	 mov	 QWORD PTR _InitData$[rsp], rax
  00021	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  00024	33 c9		 xor	 ecx, ecx
  00026	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00029	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  0002d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$[rsp]
  00032	e8 00 00 00 00	 call	 __std_exception_copy

; 56   :     }

  00037	48 8b c3	 mov	 rax, rbx
  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5b		 pop	 rbx
  0003f	c3		 ret	 0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Buffer$ = 96
_BufferCount$ = 104
_Format$ = 112
sprintf_s PROC						; COMDAT

; 1834 :     {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  0000a	53		 push	 rbx
  0000b	55		 push	 rbp
  0000c	56		 push	 rsi
  0000d	57		 push	 rdi
  0000e	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00012	49 8b f0	 mov	 rsi, r8

; 1835 :         int _Result;
; 1836 :         va_list _ArgList;
; 1837 :         __crt_va_start(_ArgList, _Format);

  00015	48 8d 6c 24 78	 lea	 rbp, QWORD PTR _Format$[rsp+8]
  0001a	48 8b da	 mov	 rbx, rdx
  0001d	48 8b f9	 mov	 rdi, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

  00020	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00025	48 89 6c 24 28	 mov	 QWORD PTR [rsp+40], rbp
  0002a	4c 8b ce	 mov	 r9, rsi
  0002d	4c 8b c3	 mov	 r8, rbx
  00030	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00039	48 8b d7	 mov	 rdx, rdi
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	e8 00 00 00 00	 call	 __stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;

  00044	83 c9 ff	 or	 ecx, -1
  00047	85 c0		 test	 eax, eax
  00049	0f 48 c1	 cmovs	 eax, ecx

; 1838 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1839 :         __crt_va_end(_ArgList);
; 1840 :         return _Result;
; 1841 :     }

  0004c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00050	5f		 pop	 rdi
  00051	5e		 pop	 rsi
  00052	5d		 pop	 rbp
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vsprintf_s_l PROC					; COMDAT

; 1493 : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	49 8b d9	 mov	 rbx, r9
  00017	49 8b f8	 mov	 rdi, r8
  0001a	48 8b f2	 mov	 rsi, rdx
  0001d	48 8b e9	 mov	 rbp, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

  00020	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00025	4c 8b 54 24 60	 mov	 r10, QWORD PTR _ArgList$[rsp]
  0002a	4c 8b cf	 mov	 r9, rdi
  0002d	4c 89 54 24 28	 mov	 QWORD PTR [rsp+40], r10
  00032	4c 8b c6	 mov	 r8, rsi
  00035	48 8b d5	 mov	 rdx, rbp
  00038	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  0003d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00040	e8 00 00 00 00	 call	 __stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;
; 1499 : }

  00045	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0004a	83 c9 ff	 or	 ecx, -1
  0004d	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00052	85 c0		 test	 eax, eax
  00054	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00059	0f 48 c1	 cmovs	 eax, ecx
  0005c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\visualcpptools.14.0.24104-pre\lib\native\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c2 00 00	 ret	 0
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 81   :     static unsigned __int64 _OptionsStorage;
; 82   :     return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 83   : }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
;	COMDAT frexpl
_TEXT	SEGMENT
_X$ = 8
_Y$ = 16
frexpl	PROC						; COMDAT

; 863  :     return frexp((double)_X, _Y);

  00000	e9 00 00 00 00	 jmp	 frexp
frexpl	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
;	COMDAT fabsl
_TEXT	SEGMENT
_X$ = 8
fabsl	PROC						; COMDAT

; 842  :     return fabs((double)_X);

  00000	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff

; 843  : }

  00007	c3		 ret	 0
fabsl	ENDP
_TEXT	ENDS
END
