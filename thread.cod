; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??3@YAXPEAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SA_KPEBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAEADAEBD@Z	; std::char_traits<char>::assign
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHAEBD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z	; std::_Iterator_base0::_Adopt
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
PUBLIC	??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
PUBLIC	??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
PUBLIC	?count@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEBAHXZ ; std::chrono::duration<int,std::ratio<3600,1> >::count
PUBLIC	?zero@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<int,std::ratio<3600,1> >::zero
PUBLIC	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QEAA@AEBV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QEBA_KXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
PUBLIC	?iostream_category@std@@YAAEBVerror_category@1@XZ ; std::iostream_category
PUBLIC	??0error_category@std@@QEAA@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UEAA@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QEBA_NAEBV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UEAAPEAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
PUBLIC	?value@error_code@std@@QEBAHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
PUBLIC	?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QEBAHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8std@@YA_NAEBVerror_condition@0@0@Z		; std::operator==
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	??1_System_error@std@@UEAA@XZ			; std::_System_error::~_System_error
PUBLIC	??0_System_error@std@@QEAA@AEBV01@@Z		; std::_System_error::_System_error
PUBLIC	??_G_System_error@std@@UEAAPEAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QEAA@Verror_code@1@PEBD@Z	; std::system_error::system_error
PUBLIC	??1system_error@std@@UEAA@XZ			; std::system_error::~system_error
PUBLIC	??0system_error@std@@QEAA@AEBV01@@Z		; std::system_error::system_error
PUBLIC	??_Gsystem_error@std@@UEAAPEAXI@Z		; std::system_error::`scalar deleting destructor'
PUBLIC	??0_Generic_error_category@std@@QEAA@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UEBAPEBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UEAA@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UEAAPEAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QEAA@XZ	; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UEBAPEBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UEAA@XZ	; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UEAAPEAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
PUBLIC	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UEAA@XZ		; std::ios_base::failure::~failure
PUBLIC	??0failure@ios_base@std@@QEAA@AEBV012@@Z	; std::ios_base::failure::failure
PUBLIC	??_Gfailure@ios_base@std@@UEAAPEAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	?clear@ios_base@std@@QEAAXH_N@Z			; std::ios_base::clear
PUBLIC	?rdstate@ios_base@std@@QEBAHXZ			; std::ios_base::rdstate
PUBLIC	?good@ios_base@std@@QEBA_NXZ			; std::ios_base::good
PUBLIC	?flags@ios_base@std@@QEBAHXZ			; std::ios_base::flags
PUBLIC	?width@ios_base@std@@QEBA_JXZ			; std::ios_base::width
PUBLIC	?width@ios_base@std@@QEAA_J_J@Z			; std::ios_base::width
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	?_Thrd_startX@std@@YAHPEAU_Thrd_imp_t@@P6AIPEAX@Z1@Z ; std::_Thrd_startX
PUBLIC	?_Mtx_initX@std@@YAHPEAPEAU_Mtx_internal_imp_t@@H@Z ; std::_Mtx_initX
PUBLIC	?_Mtx_lockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z	; std::_Mtx_lockX
PUBLIC	?_Mtx_unlockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z ; std::_Mtx_unlockX
PUBLIC	?_Cnd_initX@std@@YAHPEAPEAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_initX
PUBLIC	?_Cnd_waitX@std@@YAHPEAU_Cnd_internal_imp_t@@PEAU_Mtx_internal_imp_t@@@Z ; std::_Cnd_waitX
PUBLIC	?_Cnd_signalX@std@@YAHPEAU_Cnd_internal_imp_t@@@Z ; std::_Cnd_signalX
PUBLIC	??0_Auto_cnd@std@@QEAA@PEAU_Cnd_internal_imp_t@@@Z ; std::_Auto_cnd::_Auto_cnd
PUBLIC	??1_Auto_cnd@std@@QEAA@XZ			; std::_Auto_cnd::~_Auto_cnd
PUBLIC	?_Release@_Auto_cnd@std@@QEAAXXZ		; std::_Auto_cnd::_Release
PUBLIC	??0_Auto_mtx@std@@QEAA@PEAU_Mtx_internal_imp_t@@@Z ; std::_Auto_mtx::_Auto_mtx
PUBLIC	??1_Auto_mtx@std@@QEAA@XZ			; std::_Auto_mtx::~_Auto_mtx
PUBLIC	?_Release@_Auto_mtx@std@@QEAAXXZ		; std::_Auto_mtx::_Release
PUBLIC	??0_Pad@std@@QEAA@XZ				; std::_Pad::_Pad
PUBLIC	??1_Pad@std@@QEAA@XZ				; std::_Pad::~_Pad
PUBLIC	?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z	; std::_Pad::_Launch
PUBLIC	?_Release@_Pad@std@@QEAAXXZ			; std::_Pad::_Release
PUBLIC	?_Call_func@_Pad@std@@CAIPEAX@Z			; std::_Pad::_Call_func
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	??0thread@std@@QEAA@$$QEAV01@@Z			; std::thread::thread
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QEAAXXZ			; std::thread::join
PUBLIC	?get_id@thread@std@@QEBA?AVid@12@XZ		; std::thread::get_id
PUBLIC	??_Gthread@std@@QEAAPEAXI@Z			; std::thread::`scalar deleting destructor'
PUBLIC	?get_id@this_thread@std@@YA?AVid@thread@2@XZ	; std::this_thread::get_id
PUBLIC	?sleep_until@this_thread@std@@YAXPEBUxtime@@@Z	; std::this_thread::sleep_until
PUBLIC	??0id@thread@std@@AEAA@I@Z			; std::thread::id::id
PUBLIC	??8std@@YA_NVid@thread@0@0@Z			; std::operator==
PUBLIC	main
PUBLIC	??0?$allocator@Vthread@std@@@std@@QEAA@XZ	; std::allocator<std::thread>::allocator<std::thread>
PUBLIC	?deallocate@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate
PUBLIC	?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::allocator<std::thread>::allocate
PUBLIC	?max_size@?$allocator@Vthread@std@@@std@@QEBA_KXZ ; std::allocator<std::thread>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ; std::allocator_traits<std::allocator<std::thread> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<std::thread> >::_Wrap_alloc<std::allocator<std::thread> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_second
PUBLIC	??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
PUBLIC	??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
PUBLIC	?reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::reserve
PUBLIC	?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::capacity
PUBLIC	?_Unused_capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Unused_capacity
PUBLIC	?begin@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::begin
PUBLIC	?end@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::end
PUBLIC	?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
PUBLIC	?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::max_size
PUBLIC	?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
PUBLIC	?_Grow_to@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBA_K_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Reallocate
PUBLIC	?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Reserve
PUBLIC	?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
PUBLIC	?_Xlen@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
PUBLIC	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?0HX@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEAA@AEBH@Z ; std::chrono::duration<int,std::ratio<3600,1> >::duration<int,std::ratio<3600,1> ><int,void>
PUBLIC	??$sleep_for@HU?$ratio@$0OBA@$00@std@@@this_thread@std@@YAXAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@1@@Z ; std::this_thread::sleep_for<int,std::ratio<3600,1> >
PUBLIC	??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEBVthread@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Compat
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEAVthread@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator++
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1><>
PUBLIC	??$_Umove@PEAVthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAPEAVthread@1@PEAV21@00@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove<std::thread * __ptr64>
PUBLIC	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@@std@@YAXPEAVthread@0@0AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::thread> > >
PUBLIC	??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
PUBLIC	??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
PUBLIC	??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
PUBLIC	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
PUBLIC	??$_To_xtime@HU?$ratio@$0OBA@$00@std@@@std@@YA?AUxtime@@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@0@@Z ; std::_To_xtime<int,std::ratio<3600,1> >
PUBLIC	??$forward@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z ; std::forward<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$_Uninitialized_move@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::thread * __ptr64,std::thread * __ptr64,std::_Wrap_alloc<std::allocator<std::thread> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<char>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * __ptr64 & __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z ; std::addressof<std::thread>
PUBLIC	??$destroy@Vthread@std@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::destroy<std::thread>
PUBLIC	??$?NHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z ; std::chrono::operator<=<int,std::ratio<3600,1>,int,std::ratio<3600,1> >
PUBLIC	??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@HU?$ratio@$0OBA@$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,int,std::ratio<3600,1> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000> >
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
PUBLIC	??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
PUBLIC	??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$_Unchecked@PEAVthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unchecked<std::thread * __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::thread * __ptr64,std::thread * __ptr64,std::_Wrap_alloc<std::allocator<std::thread> > >
PUBLIC	??$_Rechecked@PEAVthread@std@@PEAV12@@std@@YAAEAPEAVthread@0@AEAPEAV10@PEAV10@@Z ; std::_Rechecked<std::thread * __ptr64,std::thread * __ptr64>
PUBLIC	??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ; std::allocator<char>::destroy<char * __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$_Addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::thread>
PUBLIC	??$destroy@Vthread@std@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@@Z ; std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
PUBLIC	?zero@?$duration_values@H@chrono@std@@SAHXZ	; std::chrono::duration_values<int>::zero
PUBLIC	??$?MHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z ; std::chrono::operator<<int,std::ratio<3600,1>,int,std::ratio<3600,1> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >
PUBLIC	??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$_Ptr_move_cat@Vthread@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVthread@0@0@Z ; std::_Ptr_move_cat<std::thread,std::thread>
PUBLIC	??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >
PUBLIC	??$destroy@Vthread@std@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@@Z ; std::allocator<std::thread>::destroy<std::thread>
PUBLIC	??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::thread::thread<<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,void>
PUBLIC	??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::move<std::thread & __ptr64>
PUBLIC	??$construct@Vthread@std@@V12@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,std::thread>
PUBLIC	??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??R?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ; std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >::operator()
PUBLIC	?get_deleter@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::get_deleter
PUBLIC	?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Myptr
PUBLIC	?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Myptr
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_second
PUBLIC	??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
PUBLIC	??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
PUBLIC	??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
PUBLIC	??D?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::release
PUBLIC	??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
PUBLIC	??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
PUBLIC	??$construct@Vthread@std@@V12@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV31@@Z ; std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>
PUBLIC	??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V$0A@@?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> ><<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,0>
PUBLIC	??$forward@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YA$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@AEAV10@@Z ; std::forward<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
PUBLIC	?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@UEAAXXZ ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Go
PUBLIC	?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Run
PUBLIC	??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::~_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
PUBLIC	??$?0V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > ><std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
PUBLIC	??$construct@Vthread@std@@V12@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z ; std::allocator<std::thread>::construct<std::thread,std::thread>
PUBLIC	??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > ><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64>
PUBLIC	??$_Execute@$0A@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@U?$integer_sequence@_K$0A@@1@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Execute<0>
PUBLIC	??$forward@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@0@AEAU10@@Z ; std::forward<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
PUBLIC	??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@Z ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > ><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Tuple_val@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::_Tuple_val<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >::_Tuple_val<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> ><<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$?0AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>
PUBLIC	??$get@$0A@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YAAEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@@Z ; std::get<0,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$move@AEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z ; std::move<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> & __ptr64>
PUBLIC	??$_Call@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::_Invoker_functor::_Call<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$invoke@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@std@@YAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::invoke<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
PUBLIC	??$?0U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1><std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>
PUBLIC	??$forward@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@AEAPEAV10@@Z ; std::forward<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVruntime_error@std@@@824
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@824
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	_TI5?AVfailure@ios_base@std@@
PUBLIC	_CTA5?AVfailure@ios_base@std@@
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVfailure@ios_base@std@@@840
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVsystem_error@std@@@840
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AV_System_error@std@@@840
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ ; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@	; `string'
PUBLIC	??_7_Pad@std@@6B@				; std::_Pad::`vftable'
PUBLIC	??_C@_09CFCFMFND@creating?6?$AA@		; `string'
PUBLIC	??_C@_08NAMJFED@joining?6?$AA@			; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
PUBLIC	?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
PUBLIC	??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`vftable'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Pad@std@@6B@				; std::_Pad::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Pad@std@@@8				; std::_Pad `RTTI Type Descriptor'
PUBLIC	??_R3_Pad@std@@8				; std::_Pad::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Pad@std@@8				; std::_Pad::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Pad@std@@8			; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > > `RTTI Type Descriptor'
PUBLIC	??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	atexit:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	__std_terminate:PROC
EXTRN	_invalid_parameter_noinfo_noreturn:PROC
EXTRN	memmove:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	terminate:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	_Thrd_start:PROC
EXTRN	_Xtime_get_ticks:PROC
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_Eerror_category@std@@UEAAPEAXI@Z:PROC	; std::error_category::`vector deleting destructor'
EXTRN	??_E_System_error@std@@UEAAPEAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UEAAPEAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPEBDH@Z:PROC		; std::_Syserror_map
EXTRN	??_E_Generic_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_Efailure@ios_base@std@@UEAAPEAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	_Thrd_join:PROC
EXTRN	_Thrd_sleep:PROC
EXTRN	_Thrd_id:PROC
EXTRN	_Mtx_init:PROC
EXTRN	_Mtx_destroy:PROC
EXTRN	_Mtx_lock:PROC
EXTRN	_Mtx_unlock:PROC
EXTRN	_Cnd_init:PROC
EXTRN	_Cnd_destroy:PROC
EXTRN	_Cnd_wait:PROC
EXTRN	_Cnd_signal:PROC
EXTRN	_Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_C_error@std@@YAXH@Z:PROC		; std::_Throw_C_error
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memcpy:PROC
EXTRN	_Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cout
EXTRN	__security_cookie:QWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A
_BSS	SEGMENT
?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A DB 010H DUP (?) ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
_BSS	ENDS
;	COMDAT ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+53
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+66
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+28
	DD	imagerel $unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN16
	DD	imagerel $LN16+129
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN16
	DD	imagerel $LN16+105
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD imagerel $LN8
	DD	imagerel $LN8+26
	DD	imagerel $unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD imagerel $LN19
	DD	imagerel $LN19+93
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN19
	DD	imagerel $LN19+109
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD imagerel $LN22
	DD	imagerel $LN22+93
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN143
	DD	imagerel $LN143+49
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD imagerel $LN131
	DD	imagerel $LN131+60
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN142
	DD	imagerel $LN142+42
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD imagerel $LN248
	DD	imagerel $LN248+128
	DD	imagerel $unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN118
	DD	imagerel $LN118+74
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244+76
	DD	imagerel $LN244+254
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244+254
	DD	imagerel $LN244+280
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244+280
	DD	imagerel $LN244+293
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267+139
	DD	imagerel $LN267+299
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267+299
	DD	imagerel $LN267+312
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267+312
	DD	imagerel $LN267+325
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN265
	DD	imagerel $LN265+302
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN233
	DD	imagerel $LN233+304
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN54
	DD	imagerel $LN54+61
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN129
	DD	imagerel $LN129+203
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel $LN468
	DD	imagerel $LN468+276
	DD	imagerel $unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+51
	DD	imagerel $unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+15
	DD	imagerel $LN105+54
	DD	imagerel $chain$0$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+54
	DD	imagerel $LN105+100
	DD	imagerel $chain$2$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+100
	DD	imagerel $LN105+139
	DD	imagerel $chain$4$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+139
	DD	imagerel $LN105+152
	DD	imagerel $chain$5$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD imagerel $LN116
	DD	imagerel $LN116+27
	DD	imagerel $unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD imagerel $LN116+27
	DD	imagerel $LN116+71
	DD	imagerel $chain$0$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD imagerel $LN116+71
	DD	imagerel $LN116+123
	DD	imagerel $chain$1$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD imagerel $LN19
	DD	imagerel $LN19+28
	DD	imagerel $unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN28
	DD	imagerel $LN28+84
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+63
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+66
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+40
	DD	imagerel $unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD imagerel $LN24
	DD	imagerel $LN24+63
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gerror_category@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_Gerror_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN12
	DD	imagerel $LN12+39
	DD	imagerel $unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel $LN403
	DD	imagerel $LN403+277
	DD	imagerel $unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN290
	DD	imagerel $LN290+250
	DD	imagerel $unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+80
	DD	imagerel $unwind$??0_System_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_System_error@std@@UEAAPEAXI@Z DD imagerel $LN14
	DD	imagerel $LN14+66
	DD	imagerel $unwind$??_G_System_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel $LN251
	DD	imagerel $LN251+200
	DD	imagerel $unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@AEBV01@@Z DD imagerel $LN12
	DD	imagerel $LN12+90
	DD	imagerel $unwind$??0system_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gsystem_error@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gsystem_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN135
	DD	imagerel $LN135+86
	DD	imagerel $unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+43
	DD	imagerel $unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN137
	DD	imagerel $LN137+77
	DD	imagerel $unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+43
	DD	imagerel $unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD imagerel $LN24
	DD	imagerel $LN24+123
	DD	imagerel $unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+50
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD imagerel $LN15
	DD	imagerel $LN15+90
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel $LN1122
	DD	imagerel $LN1122+781
	DD	imagerel $unwind$?clear@ios_base@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_C_return@std@@YAHH@Z DD imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?_Check_C_return@std@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Thrd_startX@std@@YAHPEAU_Thrd_imp_t@@P6AIPEAX@Z1@Z DD imagerel $LN8
	DD	imagerel $LN8+41
	DD	imagerel $unwind$?_Thrd_startX@std@@YAHPEAU_Thrd_imp_t@@P6AIPEAX@Z1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mtx_initX@std@@YAHPEAPEAU_Mtx_internal_imp_t@@H@Z DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?_Mtx_initX@std@@YAHPEAPEAU_Mtx_internal_imp_t@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mtx_lockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?_Mtx_lockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mtx_unlockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?_Mtx_unlockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Cnd_initX@std@@YAHPEAPEAU_Cnd_internal_imp_t@@@Z DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?_Cnd_initX@std@@YAHPEAPEAU_Cnd_internal_imp_t@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Cnd_waitX@std@@YAHPEAU_Cnd_internal_imp_t@@PEAU_Mtx_internal_imp_t@@@Z DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?_Cnd_waitX@std@@YAHPEAU_Cnd_internal_imp_t@@PEAU_Mtx_internal_imp_t@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Cnd_signalX@std@@YAHPEAU_Cnd_internal_imp_t@@@Z DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?_Cnd_signalX@std@@YAHPEAU_Cnd_internal_imp_t@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Pad@std@@QEAA@XZ DD imagerel $LN36
	DD	imagerel $LN36+141
	DD	imagerel $unwind$??0_Pad@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Pad@std@@QEAA@XZ DD imagerel $LN22
	DD	imagerel $LN22+86
	DD	imagerel $unwind$??1_Pad@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z DD imagerel $LN19
	DD	imagerel $LN19+100
	DD	imagerel $unwind$?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Pad@std@@QEAAXXZ DD imagerel $LN19
	DD	imagerel $LN19+84
	DD	imagerel $unwind$?_Release@_Pad@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Call_func@_Pad@std@@CAIPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+21
	DD	imagerel $unwind$?_Call_func@_Pad@std@@CAIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+21
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?join@thread@std@@QEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+109
	DD	imagerel $unwind$?join@thread@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gthread@std@@QEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+45
	DD	imagerel $unwind$??_Gthread@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD imagerel $LN6
	DD	imagerel $LN6+25
	DD	imagerel $unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN575
	DD	imagerel $LN575+633
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$75 DD imagerel main$dtor$75
	DD	imagerel main$dtor$75+34
	DD	imagerel $unwind$main$dtor$75
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@2@_K@Z DD imagerel $LN19
	DD	imagerel $LN19+106
	DD	imagerel $unwind$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z DD imagerel $LN19
	DD	imagerel $LN19+122
	DD	imagerel $unwind$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z DD imagerel $LN22
	DD	imagerel $LN22+106
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD imagerel $LN144
	DD	imagerel $LN144+94
	DD	imagerel $unwind$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN50
	DD	imagerel $LN50+62
	DD	imagerel $unwind$?reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXPEAVthread@2@0@Z DD imagerel $LN50
	DD	imagerel $LN50+42
	DD	imagerel $unwind$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXPEAVthread@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN220
	DD	imagerel $LN220+183
	DD	imagerel $unwind$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA DD imagerel ?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA+40
	DD	imagerel $unwind$?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN136
	DD	imagerel $LN136+129
	DD	imagerel $unwind$?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXXZ DD imagerel $LN141
	DD	imagerel $LN141+94
	DD	imagerel $unwind$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+96
	DD	imagerel $unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA+27
	DD	imagerel $unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel $LN61
	DD	imagerel $LN61+174
	DD	imagerel $unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN1289
	DD	imagerel $LN1289+588
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ DD imagerel ??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ
	DD	imagerel ??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ+127
	DD	imagerel $unwind$??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sleep_for@HU?$ratio@$0OBA@$00@std@@@this_thread@std@@YAXAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@1@@Z DD imagerel $LN147
	DD	imagerel $LN147+158
	DD	imagerel $unwind$??$sleep_for@HU?$ratio@$0OBA@$00@std@@@this_thread@std@@YAXAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel $LN126
	DD	imagerel $LN126+122
	DD	imagerel $unwind$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD imagerel ?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	imagerel ?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Umove@PEAVthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAPEAVthread@1@PEAV21@00@Z DD imagerel $LN24
	DD	imagerel $LN24+41
	DD	imagerel $unwind$??$_Umove@PEAVthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAPEAVthread@1@PEAV21@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@@std@@YAXPEAVthread@0@0AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z DD imagerel $LN41
	DD	imagerel $LN41+42
	DD	imagerel $unwind$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@@std@@YAXPEAVthread@0@0AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN10
	DD	imagerel $LN10+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+49
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN26
	DD	imagerel $LN26+123
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+70
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_xtime@HU?$ratio@$0OBA@$00@std@@@std@@YA?AUxtime@@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@0@@Z DD imagerel $LN144
	DD	imagerel $LN144+130
	DD	imagerel $unwind$??$_To_xtime@HU?$ratio@$0OBA@$00@std@@@std@@YA?AUxtime@@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel $LN60
	DD	imagerel $LN60+85
	DD	imagerel $unwind$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD imagerel ?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+20
	DD	imagerel $unwind$??$_Uninitialized_move@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@Vthread@std@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@@Z DD imagerel $LN25
	DD	imagerel $LN25+21
	DD	imagerel $unwind$??$destroy@Vthread@std@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel $LN55
	DD	imagerel $LN55+85
	DD	imagerel $unwind$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD imagerel ?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+20
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@Vthread@std@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@@Z DD imagerel $LN22
	DD	imagerel $LN22+21
	DD	imagerel $unwind$??$destroy@Vthread@std@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel $LN50
	DD	imagerel $LN50+85
	DD	imagerel $unwind$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD imagerel ?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel $LN71
	DD	imagerel $LN71+76
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+65
	DD	imagerel $unwind$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@Vthread@std@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@@Z DD imagerel $LN19
	DD	imagerel $LN19+21
	DD	imagerel $unwind$??$destroy@Vthread@std@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel $LN39
	DD	imagerel $LN39+70
	DD	imagerel $unwind$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel $LN30
	DD	imagerel $LN30+44
	DD	imagerel $unwind$??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z DD imagerel $LN165
	DD	imagerel $LN165+347
	DD	imagerel $unwind$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z DD imagerel $LN126
	DD	imagerel $LN126+144
	DD	imagerel $unwind$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ DD imagerel $LN56
	DD	imagerel $LN56+111
	DD	imagerel $unwind$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@1@@Z DD imagerel $LN52
	DD	imagerel $LN52+59
	DD	imagerel $unwind$??$?0V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Execute@$0A@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@U?$integer_sequence@_K$0A@@1@@Z DD imagerel $LN20
	DD	imagerel $LN20+14
	DD	imagerel $unwind$??$_Execute@$0A@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@U?$integer_sequence@_K$0A@@1@@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8 DD imagerel ??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8 ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Pad@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8 DD 00H ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1'
	DB	'e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@'
	DB	'V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@s'
	DB	'td@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@ DD 01H ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@@8
	DD	imagerel ??_R3?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@8
	DD	imagerel ??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Pad@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Pad@std@@8 DD imagerel ??_R0?AV_Pad@std@@@8 ; std::_Pad::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Pad@std@@8
rdata$r	SEGMENT
??_R2_Pad@std@@8 DD imagerel ??_R1A@?0A@EA@_Pad@std@@8	; std::_Pad::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Pad@std@@8
rdata$r	SEGMENT
??_R3_Pad@std@@8 DD 00H					; std::_Pad::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Pad@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Pad@std@@@8
data$r	SEGMENT
??_R0?AV_Pad@std@@@8 DQ FLAT:??_7type_info@@6B@		; std::_Pad `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Pad@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Pad@std@@6B@
rdata$r	SEGMENT
??_R4_Pad@std@@6B@ DD 01H				; std::_Pad::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Pad@std@@@8
	DD	imagerel ??_R3_Pad@std@@8
	DD	imagerel ??_R4_Pad@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD imagerel ??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@system_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 01H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	imagerel ??_R3failure@ios_base@std@@8
	DD	imagerel ??_R4failure@ios_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD imagerel ??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 01H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Iostream_error_category@std@@@8
	DD	imagerel ??_R3_Iostream_error_category@std@@8
	DD	imagerel ??_R4_Iostream_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD imagerel ??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 01H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Generic_error_category@std@@@8
	DD	imagerel ??_R3_Generic_error_category@std@@8
	DD	imagerel ??_R4_Generic_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD imagerel ??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD imagerel ??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 01H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	imagerel ??_R3system_error@std@@8
	DD	imagerel ??_R4system_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD imagerel ??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD imagerel ??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 01H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	imagerel ??_R3_System_error@std@@8
	DD	imagerel ??_R4_System_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD imagerel ??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD imagerel ??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 01H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVerror_category@std@@@8
	DD	imagerel ??_R3error_category@std@@8
	DD	imagerel ??_R4error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@
CONST	SEGMENT
??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@ DQ FLAT:??_R4?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@ ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::`vftable'
	DQ	FLAT:?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08NAMJFED@joining?6?$AA@
CONST	SEGMENT
??_C@_08NAMJFED@joining?6?$AA@ DB 'joining', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CFCFMFND@creating?6?$AA@
CONST	SEGMENT
??_C@_09CFCFMFND@creating?6?$AA@ DB 'creating', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7_Pad@std@@6B@
CONST	SEGMENT
??_7_Pad@std@@6B@ DQ FLAT:??_R4_Pad@std@@6B@		; std::_Pad::`vftable'
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ DB 'ios_base::failbit se'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AV_System_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AV_System_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0_System_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVsystem_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVsystem_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0system_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVfailure@ios_base@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVfailure@ios_base@std@@@840 DD 00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0failure@ios_base@std@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
data$r	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfailure@ios_base@std@@', 00H
data$r	ENDS
;	COMDAT _CTA5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_CTA5?AVfailure@ios_base@std@@ DD 05H
	DD	imagerel _CT??_R0?AVfailure@ios_base@std@@@840
	DD	imagerel _CT??_R0?AVsystem_error@std@@@840
	DD	imagerel _CT??_R0?AV_System_error@std@@@840
	DD	imagerel _CT??_R0?AVruntime_error@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT _TI5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_TI5?AVfailure@ios_base@std@@ DD 00H
	DD	imagerel ??1failure@ios_base@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA5?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DQ FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DQ	FLAT:??_Efailure@ios_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DQ FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DQ	FLAT:??_E_Iostream_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Iostream_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DQ FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DQ	FLAT:??_E_Generic_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Generic_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DQ FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DQ	FLAT:??_Esystem_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DQ FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DQ	FLAT:??_E_System_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DQ FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DQ	FLAT:??_Eerror_category@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@824 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@824 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Execute@$0A@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@U?$integer_sequence@_K$0A@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ DD imagerel ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ+43
	DD	00H
	DD	imagerel ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ+100
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$10@?0???1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z DD imagerel ?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z DD imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z+76
	DD	00H
	DD	imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z+117
	DD	01H
	DD	imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z+139
	DD	0ffffffffH
	DD	imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z+166
	DD	02H
	DD	imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z+257
	DD	0ffffffffH
	DD	imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z+278
	DD	03H
	DD	imagerel ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z+329
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$4@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$5@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$33@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z
	DD	00H
	DD	00H
	DD	08H
	DD	imagerel $ip2state$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z DD 061811H
	DD	0116418H
	DD	0103414H
	DD	07004d208H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel ??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	0ffffffffH
	DD	imagerel ??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+29
	DD	00H
	DD	imagerel ??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+41
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 020f11H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@Vthread@std@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+23
	DD	00H
	DD	imagerel ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+68
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+27
	DD	00H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+46
	DD	01H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+58
	DD	00H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@Vthread@std@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+27
	DD	00H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+46
	DD	01H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+58
	DD	00H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$3@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@Vthread@std@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+27
	DD	00H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+46
	DD	01H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+58
	DD	00H
	DD	imagerel ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$4@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_xtime@HU?$ratio@$0OBA@$00@std@@@std@@YA?AUxtime@@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+64
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+57
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+109
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@@std@@YAXPEAVthread@0@0AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Umove@PEAVthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAPEAVthread@1@PEAV21@00@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD imagerel ??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	0ffffffffH
	DD	imagerel ??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+57
	DD	00H
	DD	imagerel ??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+76
	DD	01H
	DD	imagerel ??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+88
	DD	00H
	DD	imagerel ??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z+109
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$22@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z DD 041111H
	DD	070045208H
	DD	030026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sleep_for@HU?$ratio@$0OBA@$00@std@@@this_thread@std@@YAXAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@1@@Z DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ DD 011319H
	DD	08204H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+127
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+180
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+194
	DD	02H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+467
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+521
	DD	06H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+539
	DD	07H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+564
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+63
	DD	03H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 02H
	DD	02H
	DD	05H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$312@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	06H
	DD	imagerel ?dtor$313@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	08H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0dH
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081e19H
	DD	012341eH
	DD	0f009920dH
	DD	0c005e007H
	DD	060027003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	0ffffffffH
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+51
	DD	00H
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+116
	DD	01H
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+136
	DD	02H
	DD	imagerel ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ+165
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 020f11H
	DD	030027206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ+18
	DD	00H
	DD	imagerel ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ+90
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	01H
	DD	imagerel $tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	04H
	DD	imagerel $ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD imagerel ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z+51
	DD	00H
	DD	imagerel ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z+76
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
	DD	05H
	DD	imagerel $ip2state$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z DD 062019H
	DD	0f3420H
	DD	0e00e7212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXPEAVthread@2@0@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$75 DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$main DD imagerel main
	DD	0ffffffffH
	DD	imagerel main+39
	DD	00H
	DD	imagerel main+230
	DD	01H
	DD	imagerel main+257
	DD	02H
	DD	imagerel main+269
	DD	01H
	DD	imagerel main+293
	DD	00H
	DD	imagerel main+482
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$main DD 0ffffffffH
	DD	imagerel main$dtor$0
	DD	00H
	DD	imagerel main$dtor$75
	DD	01H
	DD	imagerel main$dtor$77
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$main DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$main
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$main
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	071611H
	DD	0f009c20dH
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$main
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gthread@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?join@thread@std@@QEAAXXZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Call_func@_Pad@std@@CAIPEAX@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Pad@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Pad@std@@QEAA@XZ DD imagerel ??1_Pad@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Pad@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Pad@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Pad@std@@QEAA@XZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Pad@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Pad@std@@QEAA@XZ DD imagerel ??0_Pad@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0_Pad@std@@QEAA@XZ+67
	DD	00H
	DD	imagerel ??0_Pad@std@@QEAA@XZ+106
	DD	01H
	DD	imagerel ??0_Pad@std@@QEAA@XZ+127
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_Pad@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0_Pad@std@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0_Pad@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0_Pad@std@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0_Pad@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0_Pad@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Pad@std@@QEAA@XZ DD 041411H
	DD	0c3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0_Pad@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Cnd_signalX@std@@YAHPEAU_Cnd_internal_imp_t@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Cnd_waitX@std@@YAHPEAU_Cnd_internal_imp_t@@PEAU_Mtx_internal_imp_t@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Cnd_initX@std@@YAHPEAPEAU_Cnd_internal_imp_t@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mtx_unlockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mtx_lockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mtx_initX@std@@YAHPEAPEAU_Mtx_internal_imp_t@@H@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Thrd_startX@std@@YAHPEAU_Thrd_imp_t@@P6AIPEAX@Z1@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_C_return@std@@YAHH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel ?clear@ios_base@std@@QEAAXH_N@Z
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+139
	DD	00H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+320
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+436
	DD	01H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+617
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?clear@ios_base@std@@QEAAXH_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$153@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?clear@ios_base@std@@QEAAXH_N@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?clear@ios_base@std@@QEAAXH_N@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?clear@ios_base@std@@QEAAXH_N@Z
	DD	080H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@ios_base@std@@QEAAXH_N@Z DD 072d19H
	DD	0d681fH
	DD	01f341bH
	DD	01c010fH
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?clear@ios_base@std@@QEAAXH_N@Z
	DD	0caH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gsystem_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+104
	DD	00H
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+131
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 042319H
	DD	0133414H
	DD	07004d208H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_System_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 041c19H
	DD	015340dH
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	0ffffffffH
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+54
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+101
	DD	01H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+120
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+195
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 042019H
	DD	07004b208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gerror_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD 021H
	DD	imagerel $LN116
	DD	imagerel $LN116+27
	DD	imagerel $unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD 020521H
	DD	066405H
	DD	imagerel $LN116
	DD	imagerel $LN116+27
	DD	imagerel $unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 021H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020021H
	DD	067400H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020021H
	DD	067400H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020521H
	DD	067405H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+110
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+125
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+21
	DD	02H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+37
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+14
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	08H
	DD	imagerel $ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 052119H
	DD	0e0146218H
	DD	060117012H
	DD	03010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 020021H
	DD	067400H
	DD	imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 021H
	DD	imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 020521H
	DD	067405H
	DD	imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020021H
	DD	067400H
	DD	imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 021H
	DD	imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020521H
	DD	067405H
	DD	imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 020601H
	DD	030025206H
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@AEAPEAV10@@Z PROC ; std::forward<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@AEAPEAV10@@Z ENDP ; std::forward<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Val1$ = 24
<_Val2_0>$ = 32
??$?0U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1><std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>, COMDAT

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00000	49 8b 01	 mov	 rax, QWORD PTR [r9]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 289  : 		}

  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??$?0U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1><std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$invoke@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@std@@YAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$invoke@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@std@@YAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::invoke<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 1398 : 		return (_STD forward<_Callable>(_Obj)(

  00000	e9 00 00 00 00	 jmp	 ??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ ; <lambda_e77d7e1e559843f44c4e0b6d970cdb28>::operator()
??$invoke@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@std@@YAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::invoke<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$_Call@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Call@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::_Invoker_functor::_Call<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 1398 : 		return (_STD forward<_Callable>(_Obj)(

  00000	e9 00 00 00 00	 jmp	 ??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ ; <lambda_e77d7e1e559843f44c4e0b6d970cdb28>::operator()
??$_Call@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::_Invoker_functor::_Call<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z PROC ; std::move<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> & __ptr64>, COMDAT

; 1315 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1316 : 	}

  00003	c3		 ret	 0
??$move@AEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z ENDP ; std::move<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$get@$0A@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YAAEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 8
??$get@$0A@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YAAEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@@Z PROC ; std::get<0,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 889  : 	typedef typename tuple_element<_Index, tuple<_Types...> >::_Ttype
; 890  : 		_Ttype;
; 891  : 	return (((_Ttype&)_Tuple)._Myfirst._Val);

  00000	48 8b c1	 mov	 rax, rcx

; 892  : 	}

  00003	c3		 ret	 0
??$get@$0A@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YAAEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@0@@Z ENDP ; std::get<0,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
<_Val2_0>$ = 24
??$?0AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>, COMDAT

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 280  : 		}

  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??$?0AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Tuple_val@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
this$ = 8
_Arg$ = 16
??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Tuple_val@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::_Tuple_val<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >::_Tuple_val<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> ><<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 143  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Tuple_val@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::_Tuple_val<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >::_Tuple_val<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> ><<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 234  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Dt$ = 24
??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@Z PROC ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > ><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1243 : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@1@@Z ENDP ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > ><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@0@AEAU10@@Z PROC ; std::forward<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@@std@@YA$$QEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@0@AEAU10@@Z ENDP ; std::forward<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$_Execute@$0A@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@U?$integer_sequence@_K$0A@@1@@Z
_TEXT	SEGMENT
_Tup$ = 48
__formal$ = 56
??$_Execute@$0A@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@U?$integer_sequence@_K$0A@@1@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Execute<0>, COMDAT

; 239  : 		{	// invoke function object packed in tuple

$LN20:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits

; 1398 : 		return (_STD forward<_Callable>(_Obj)(

  00004	e8 00 00 00 00	 call	 ??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ ; <lambda_e77d7e1e559843f44c4e0b6d970cdb28>::operator()
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 241  : 		}

  00009	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000d	c3		 ret	 0
??$_Execute@$0A@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@U?$integer_sequence@_K$0A@@1@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Execute<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z PROC ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > ><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1249 : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??$?0PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ENDP ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > ><std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@Vthread@std@@V12@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@Vthread@std@@V12@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z PROC ; std::allocator<std::thread>::construct<std::thread,std::thread>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 10		 je	 SHORT $LN3@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 61   : 		: _Thr(_Other._Thr)

  00005	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]

; 62   : 		{	// move from _Other
; 63   : 		_Thr_set_null(_Other._Thr);

  00009	33 c0		 xor	 eax, eax
  0000b	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  0000e	49 89 00	 mov	 QWORD PTR [r8], rax
  00011	41 89 40 08	 mov	 DWORD PTR [r8+8], eax
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 638  : 		}

  00015	c3		 ret	 0
??$construct@Vthread@std@@V12@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z ENDP ; std::allocator<std::thread>::construct<std::thread,std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$?0V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Tgt$ = 56
??$?0V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@1@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > ><std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >, COMDAT

; 227  : 		{	// construct from target

$LN52:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx
  00010	e8 00 00 00 00	 call	 ??0_Pad@std@@QEAA@XZ	; std::_Pad::_Pad
  00015	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@
  0001c	48 89 07	 mov	 QWORD PTR [rdi], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1412 : 		return (this->_Myptr());

  0001f	48 8b 03	 mov	 rax, QWORD PTR [rbx]

; 1423 : 		this->_Myptr() = pointer();

  00022	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 228  : 		}

  00029	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  0002e	48 89 47 20	 mov	 QWORD PTR [rdi+32], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 228  : 		}

  00032	48 8b c7	 mov	 rax, rdi
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$?0V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@1@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > ><std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::~_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >, COMDAT
$LN56:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1412 : 		return (this->_Myptr());

  00017	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]

; 1396 : 		if (get() != pointer())

  0001b	48 85 c9	 test	 rcx, rcx
  0001e	74 0b		 je	 SHORT $LN32@LaunchPad

; 1195 : 		delete _Ptr;

  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0002a	90		 npad	 1
$LN32@LaunchPad:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 180  : 		{	// clean up handshake; non-virtual due to type-erasure

  0002b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Pad@std@@6B@
  00032	48 89 03	 mov	 QWORD PTR [rbx], rax

; 181  : 		_Auto_cnd _Cnd_cleaner(_Cond);

  00035	48 8b 7b 08	 mov	 rdi, QWORD PTR [rbx+8]

; 182  : 		_Auto_mtx _Mtx_cleaner(_Mtx);

  00039	48 8b 5b 10	 mov	 rbx, QWORD PTR [rbx+16]

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  0003d	48 8b cb	 mov	 rcx, rbx
  00040	e8 00 00 00 00	 call	 _Mtx_unlock
  00045	90		 npad	 1

; 34   : 	if (_Res != _Thrd_success)

  00046	85 c0		 test	 eax, eax
  00048	74 08		 je	 SHORT $LN54@LaunchPad

; 35   : 		_Throw_C_error(_Res);

  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
  00051	90		 npad	 1
$LN54@LaunchPad:

; 149  : 			_Mtx_destroy(_MyMtxp);

  00052	48 8b cb	 mov	 rcx, rbx
  00055	e8 00 00 00 00	 call	 _Mtx_destroy
  0005a	90		 npad	 1

; 125  : 			_Cnd_destroy(_MyCndp);

  0005b	48 8b cf	 mov	 rcx, rdi
  0005e	e8 00 00 00 00	 call	 _Cnd_destroy
  00063	90		 npad	 1
  00064	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00069	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::~_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$10@?0???1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::~_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$10
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$10@?0???1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::~_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$10@?0???1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::~_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$10
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$10@?0???1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::~_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
_Ln$ = 64
?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Run, COMDAT

; 244  : 		{	// construct local unique_ptr and call function object within

$LN126:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1412 : 		return (this->_Myptr());

  00017	48 8b 79 20	 mov	 rdi, QWORD PTR [rcx+32]

; 1423 : 		this->_Myptr() = pointer();

  0001b	48 c7 41 20 00
	00 00 00	 mov	 QWORD PTR [rcx+32], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  00023	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00027	e8 00 00 00 00	 call	 _Mtx_lock
  0002c	90		 npad	 1

; 34   : 	if (_Res != _Thrd_success)

  0002d	85 c0		 test	 eax, eax
  0002f	74 08		 je	 SHORT $LN54@Run

; 35   : 		_Throw_C_error(_Res);

  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
  00038	90		 npad	 1
$LN54@Run:

; 196  : 		_Started = true;

  00039	c6 43 18 01	 mov	 BYTE PTR [rbx+24], 1

; 111  : 	return (_Check_C_return(_Cnd_signal(_Cnd)));

  0003d	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00041	e8 00 00 00 00	 call	 _Cnd_signal
  00046	90		 npad	 1

; 34   : 	if (_Res != _Thrd_success)

  00047	85 c0		 test	 eax, eax
  00049	74 08		 je	 SHORT $LN59@Run

; 35   : 		_Throw_C_error(_Res);

  0004b	8b c8		 mov	 ecx, eax
  0004d	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
  00052	90		 npad	 1
$LN59@Run:

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  00053	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
  00057	e8 00 00 00 00	 call	 _Mtx_unlock
  0005c	90		 npad	 1

; 34   : 	if (_Res != _Thrd_success)

  0005d	85 c0		 test	 eax, eax
  0005f	74 08		 je	 SHORT $LN64@Run

; 35   : 		_Throw_C_error(_Res);

  00061	8b c8		 mov	 ecx, eax
  00063	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
  00068	90		 npad	 1
$LN64@Run:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits

; 1398 : 		return (_STD forward<_Callable>(_Obj)(

  00069	48 8b cf	 mov	 rcx, rdi
  0006c	e8 00 00 00 00	 call	 ??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ ; <lambda_e77d7e1e559843f44c4e0b6d970cdb28>::operator()
  00071	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  00072	48 85 ff	 test	 rdi, rdi
  00075	74 0e		 je	 SHORT $LN124@Run

; 1195 : 		delete _Ptr;

  00077	ba 01 00 00 00	 mov	 edx, 1
  0007c	48 8b cf	 mov	 rcx, rdi
  0007f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00084	90		 npad	 1
$LN124@Run:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 250  : 		}

  00085	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0008a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008e	5f		 pop	 rdi
  0008f	c3		 ret	 0
?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Run
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@UEAAXXZ PROC ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Go, COMDAT

; 232  : 		_Run(this);

  00000	e9 00 00 00 00	 jmp	 ?_Run@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@CAXPEAV12@@Z ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Run
?_Go@?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@UEAAXXZ ENDP ; std::_LaunchPad<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >::_Go
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YA$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YA$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@AEAV10@@Z PROC ; std::forward<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YA$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@AEAV10@@Z ENDP ; std::forward<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple
;	COMDAT ??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V$0A@@?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
this$ = 8
_This_arg$ = 16
??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V$0A@@?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> ><<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,0>, COMDAT

; 476  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$V$0A@@?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> ><<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@Vthread@std@@V12@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV31@@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@Vthread@std@@V12@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV31@@Z PROC ; std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 10		 je	 SHORT $LN8@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 61   : 		: _Thr(_Other._Thr)

  00005	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]

; 62   : 		{	// move from _Other
; 63   : 		_Thr_set_null(_Other._Thr);

  00009	33 c0		 xor	 eax, eax
  0000b	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  0000e	49 89 00	 mov	 QWORD PTR [r8], rax
  00011	41 89 40 08	 mov	 DWORD PTR [r8+8], eax
$LN8@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 756  : 		}

  00015	c3		 ret	 0
??$construct@Vthread@std@@V12@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z PROC ; std::forward<std::thread>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ENDP ; std::forward<std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z
_TEXT	SEGMENT
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z PROC ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >, COMDAT

; 258  : 	{	// launch a new thread

$LN165:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00008	48 c7 40 a8 fe
	ff ff ff	 mov	 QWORD PTR [rax-88], -2
  00010	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00014	48 89 70 10	 mov	 QWORD PTR [rax+16], rsi
  00018	48 8b da	 mov	 rbx, rdx
  0001b	48 8b f9	 mov	 rdi, rcx

; 168  : 		{	// initialize handshake

  0001e	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:??_7_Pad@std@@6B@
  00025	48 89 70 d0	 mov	 QWORD PTR [rax-48], rsi

; 90   : 	return (_Check_C_return(_Cnd_init(_Cnd)));

  00029	48 8d 48 d8	 lea	 rcx, QWORD PTR [rax-40]
  0002d	e8 00 00 00 00	 call	 _Cnd_init

; 34   : 	if (_Res != _Thrd_success)

  00032	85 c0		 test	 eax, eax
  00034	74 07		 je	 SHORT $LN18@Launch

; 35   : 		_Throw_C_error(_Res);

  00036	8b c8		 mov	 ecx, eax
  00038	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN18@Launch:

; 118  : 		: _Active(true), _MyCndp(_Cndp)

  0003d	c6 44 24 28 01	 mov	 BYTE PTR _Cnd_cleaner$1[rsp], 1
  00042	48 8b 44 24 50	 mov	 rax, QWORD PTR _Launcher$[rsp+8]
  00047	48 89 44 24 30	 mov	 QWORD PTR _Cnd_cleaner$1[rsp+8], rax

; 65   : 	return (_Check_C_return(_Mtx_init(_Mtx, _Type)));

  0004c	ba 01 00 00 00	 mov	 edx, 1
  00051	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Launcher$[rsp+16]
  00056	e8 00 00 00 00	 call	 _Mtx_init

; 34   : 	if (_Res != _Thrd_success)

  0005b	85 c0		 test	 eax, eax
  0005d	74 07		 je	 SHORT $LN25@Launch

; 35   : 		_Throw_C_error(_Res);

  0005f	8b c8		 mov	 ecx, eax
  00061	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN25@Launch:

; 142  : 		: _Active(true), _MyMtxp(_Mtxp)

  00066	c6 44 24 38 01	 mov	 BYTE PTR _Mtx_cleaner$2[rsp], 1
  0006b	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Launcher$[rsp+16]
  00070	48 89 4c 24 40	 mov	 QWORD PTR _Mtx_cleaner$2[rsp+8], rcx

; 173  : 		_Started = false;

  00075	c6 44 24 60 00	 mov	 BYTE PTR _Launcher$[rsp+24], 0

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  0007a	e8 00 00 00 00	 call	 _Mtx_lock

; 34   : 	if (_Res != _Thrd_success)

  0007f	85 c0		 test	 eax, eax
  00081	74 08		 je	 SHORT $LN32@Launch

; 35   : 		_Throw_C_error(_Res);

  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
  0008a	90		 npad	 1
$LN32@Launch:

; 227  : 		{	// construct from target

  0008b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@6B@
  00092	48 89 44 24 48	 mov	 QWORD PTR _Launcher$[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1412 : 		return (this->_Myptr());

  00097	48 8b 03	 mov	 rax, QWORD PTR [rbx]

; 1423 : 		this->_Myptr() = pointer();

  0009a	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  000a1	48 89 44 24 68	 mov	 QWORD PTR _Launcher$[rsp+32], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 49   : 	int _Res = _Thrd_start(_Thr, _Fp, _Arg);

  000a6	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Launcher$[rsp]
  000ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Call_func@_Pad@std@@CAIPEAX@Z ; std::_Pad::_Call_func
  000b2	48 8b cf	 mov	 rcx, rdi
  000b5	e8 00 00 00 00	 call	 _Thrd_start

; 50   : 	return (_Check_C_return(_Res != _Thrd_error ? _Res : _Thrd_nomem));

  000ba	b9 01 00 00 00	 mov	 ecx, 1
  000bf	83 f8 04	 cmp	 eax, 4
  000c2	0f 45 c8	 cmovne	 ecx, eax

; 34   : 	if (_Res != _Thrd_success)

  000c5	85 c9		 test	 ecx, ecx
  000c7	74 05		 je	 SHORT $LN160@Launch

; 35   : 		_Throw_C_error(_Res);

  000c9	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN160@Launch:

; 189  : 		while (!_Started)

  000ce	80 7c 24 60 00	 cmp	 BYTE PTR _Launcher$[rsp+24], 0
  000d3	75 2c		 jne	 SHORT $LN94@Launch
  000d5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL93@Launch:

; 95   : 	return (_Check_C_return(_Cnd_wait(_Cnd, _Mtx)));

  000e0	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Launcher$[rsp+16]
  000e5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Launcher$[rsp+8]
  000ea	e8 00 00 00 00	 call	 _Cnd_wait

; 34   : 	if (_Res != _Thrd_success)

  000ef	85 c0		 test	 eax, eax
  000f1	74 07		 je	 SHORT $LN104@Launch

; 35   : 		_Throw_C_error(_Res);

  000f3	8b c8		 mov	 ecx, eax
  000f5	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN104@Launch:

; 189  : 		while (!_Started)

  000fa	80 7c 24 60 00	 cmp	 BYTE PTR _Launcher$[rsp+24], 0
  000ff	74 df		 je	 SHORT $LL93@Launch
$LN94@Launch:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  00101	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Launcher$[rsp+32]
  00106	48 85 c9	 test	 rcx, rcx
  00109	74 0b		 je	 SHORT $LN138@Launch

; 1195 : 		delete _Ptr;

  0010b	ba 01 00 00 00	 mov	 edx, 1
  00110	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00115	90		 npad	 1
$LN138@Launch:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread

; 180  : 		{	// clean up handshake; non-virtual due to type-erasure

  00116	48 89 74 24 48	 mov	 QWORD PTR _Launcher$[rsp], rsi

; 118  : 		: _Active(true), _MyCndp(_Cndp)

  0011b	48 8b 7c 24 50	 mov	 rdi, QWORD PTR _Launcher$[rsp+8]

; 142  : 		: _Active(true), _MyMtxp(_Mtxp)

  00120	48 8b 5c 24 58	 mov	 rbx, QWORD PTR _Launcher$[rsp+16]

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  00125	48 8b cb	 mov	 rcx, rbx
  00128	e8 00 00 00 00	 call	 _Mtx_unlock

; 34   : 	if (_Res != _Thrd_success)

  0012d	85 c0		 test	 eax, eax
  0012f	74 07		 je	 SHORT $LN163@Launch

; 35   : 		_Throw_C_error(_Res);

  00131	8b c8		 mov	 ecx, eax
  00133	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN163@Launch:

; 149  : 			_Mtx_destroy(_MyMtxp);

  00138	48 8b cb	 mov	 rcx, rbx
  0013b	e8 00 00 00 00	 call	 _Mtx_destroy

; 125  : 			_Cnd_destroy(_MyCndp);

  00140	48 8b cf	 mov	 rcx, rdi
  00143	e8 00 00 00 00	 call	 _Cnd_destroy
  00148	90		 npad	 1

; 259  : 	_LaunchPad<_Target> _Launcher(_STD forward<_Target>(_Tg));
; 260  : 	_Launcher._Launch(_Thr);
; 261  : 	}

  00149	4c 8d 5c 24 70	 lea	 r11, QWORD PTR [rsp+112]
  0014e	49 8b 5b 10	 mov	 rbx, QWORD PTR [r11+16]
  00152	49 8b 73 18	 mov	 rsi, QWORD PTR [r11+24]
  00156	49 8b e3	 mov	 rsp, r11
  00159	5f		 pop	 rdi
  0015a	c3		 ret	 0
??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ENDP ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$4@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$4
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Cnd_cleaner$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Auto_cnd@std@@QEAA@XZ ; std::_Auto_cnd::~_Auto_cnd
?dtor$4@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$4
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$5@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$5
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Mtx_cleaner$2[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1_Auto_mtx@std@@QEAA@XZ ; std::_Auto_mtx::~_Auto_mtx
?dtor$5@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$5
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$0@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$0
  00018	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR _Launcher$[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
?dtor$0@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$0
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$33@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$33
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$33@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$33
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$4@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$4
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Cnd_cleaner$1[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Auto_cnd@std@@QEAA@XZ ; std::_Auto_cnd::~_Auto_cnd
?dtor$4@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$5@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$5
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Mtx_cleaner$2[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1_Auto_mtx@std@@QEAA@XZ ; std::_Auto_mtx::~_Auto_mtx
?dtor$5@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$0@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$0
  00018	48 8d 8a 48 00
	00 00		 lea	 rcx, QWORD PTR _Launcher$[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@QEAA@XZ
?dtor$0@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Cnd_cleaner$1 = 40
_Mtx_cleaner$2 = 56
_Launcher$ = 72
_Thr$ = 128
_Tg$ = 136
?dtor$33@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA PROC ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$33
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$33@?0???$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z@4HA ENDP ; `std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >'::`1'::dtor$33
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?release@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ PROC ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::release, COMDAT

; 1412 : 		return (this->_Myptr());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1422 : 		pointer _Ans = get();
; 1423 : 		this->_Myptr() = pointer();

  00003	48 c7 01 00 00
	00 00		 mov	 QWORD PTR [rcx], 0

; 1424 : 		return (_Ans);
; 1425 : 		}

  0000a	c3		 ret	 0
?release@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?get@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ PROC ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::get, COMDAT

; 1412 : 		return (this->_Myptr());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1413 : 		}

  00003	c3		 ret	 0
?get@?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@XZ PROC ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::operator*, COMDAT

; 1402 : 		return (*get());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1403 : 		}

  00003	c3		 ret	 0
??D?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >, COMDAT

; 1396 : 		if (get() != pointer())

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	74 0a		 je	 SHORT $LN29@unique_ptr

; 1195 : 		delete _Ptr;

  00008	ba 01 00 00 00	 mov	 edx, 1
  0000d	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN29@unique_ptr:

; 1397 : 			this->get_deleter()(get());
; 1398 : 		}

  00012	c3		 ret	 0
??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >, COMDAT

; 1412 : 		return (this->_Myptr());

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]

; 1423 : 		this->_Myptr() = pointer();

  00003	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1335 : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z PROC ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1314 : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ENDP ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_second, COMDAT

; 319  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 320  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_second, COMDAT

; 314  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 315  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_first, COMDAT

; 294  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 295  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@PEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >,std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > * __ptr64,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Myptr, COMDAT

; 1268 : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 1269 : 		}

  00003	c3		 ret	 0
?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEBAAEBQEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Myptr, COMDAT

; 1263 : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 1264 : 		}

  00003	c3		 ret	 0
?_Myptr@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?get_deleter@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ PROC ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::get_deleter, COMDAT

; 1253 : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 1254 : 		}

  00003	c3		 ret	 0
?get_deleter@?$_Unique_ptr_base@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@XZ ENDP ; std::_Unique_ptr_base<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::get_deleter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??R?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z PROC ; std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >::operator(), COMDAT

; 1192 : 		{	// delete a pointer

  00000	48 8b ca	 mov	 rcx, rdx

; 1193 : 		static_assert(0 < sizeof (_Ty),
; 1194 : 			"can't delete an incomplete type");
; 1195 : 		delete _Ptr;

  00003	ba 01 00 00 00	 mov	 edx, 1
  00008	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
??R?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@1@@Z ENDP ; std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > >::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
__$ReturnUdt$ = 64
<_Args_0>$ = 72
??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 1629 : 	{	// make a unique_ptr

$LN30:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1630 : 	return (unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...)));

  00011	b9 01 00 00 00	 mov	 ecx, 1
  00016	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0001b	48 89 44 24 40	 mov	 QWORD PTR $T2[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00020	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1630 : 	return (unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...)));

  00023	48 8b c3	 mov	 rax, rbx

; 1631 : 	}

  00026	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0002a	5b		 pop	 rbx
  0002b	c3		 ret	 0
??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@Vthread@std@@V12@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@Vthread@std@@V12@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,std::thread>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 10		 je	 SHORT $LN13@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 61   : 		: _Thr(_Other._Thr)

  00005	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]

; 62   : 		{	// move from _Other
; 63   : 		_Thr_set_null(_Other._Thr);

  00009	33 c0		 xor	 eax, eax
  0000b	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  0000e	49 89 00	 mov	 QWORD PTR [r8], rax
  00011	41 89 40 08	 mov	 DWORD PTR [r8+8], eax
$LN13@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 895  : 		}

  00015	c3		 ret	 0
??$construct@Vthread@std@@V12@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z PROC ; std::move<std::thread & __ptr64>, COMDAT

; 1315 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1316 : 	}

  00003	c3		 ret	 0
??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ENDP ; std::move<std::thread & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
this$ = 64
_Fx$ = 72
??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::thread::thread<<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,void>, COMDAT

; 47   : 		{	// construct with _Fx(_Ax...)

$LN39:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 48   : 		_Launch(&_Thr,

  00012	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T2[rsp]
  00017	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
  0001c	90		 npad	 1
  0001d	48 8b d0	 mov	 rdx, rax
  00020	48 8b cb	 mov	 rcx, rbx
  00023	e8 00 00 00 00	 call	 ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
  00028	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  00029	48 8b 4c 24 40	 mov	 rcx, QWORD PTR $T2[rsp]
  0002e	48 85 c9	 test	 rcx, rcx
  00031	74 0a		 je	 SHORT $LN38@thread

; 1195 : 		delete _Ptr;

  00033	ba 01 00 00 00	 mov	 edx, 1
  00038	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN38@thread:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 51   : 		}

  0003d	48 8b c3	 mov	 rax, rbx
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5b		 pop	 rbx
  00045	c3		 ret	 0
??$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::thread::thread<<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$ = 64
_Fx$ = 72
?dtor$0@?0???$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::thread::thread<<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,void>'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$0@?0???$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::thread::thread<<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$ = 64
_Fx$ = 72
?dtor$0@?0???$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::thread::thread<<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,void>'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$0@?0???$?0V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::thread::thread<<lambda_e77d7e1e559843f44c4e0b6d970cdb28>,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@Vthread@std@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@Vthread@std@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@@Z PROC ; std::allocator<std::thread>::destroy<std::thread>, COMDAT

; 643  : 		{	// destroy object at _Ptr

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00004	83 7a 08 00	 cmp	 DWORD PTR [rdx+8], 0

; 56   : 		if (joinable())

  00008	75 05		 jne	 SHORT $LN17@destroy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 645  : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN17@destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 57   : 			_XSTD terminate();

  0000f	e8 00 00 00 00	 call	 terminate
  00014	cc		 int	 3
$LN16@destroy:
??$destroy@Vthread@std@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@@Z ENDP ; std::allocator<std::thread>::destroy<std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Next$ = 64
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
__formal$ = 96
??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >, COMDAT

; 317  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

$LN71:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00009	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 318  : 	_FwdIt _Next = _Dest;

  00012	4c 89 44 24 40	 mov	 QWORD PTR _Next$[rsp], r8

; 321  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00017	48 3b ca	 cmp	 rcx, rdx
  0001a	74 28		 je	 SHORT $LN3@Uninitiali
  0001c	33 c0		 xor	 eax, eax
  0001e	66 90		 npad	 2
$LL4@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00020	4d 85 c0	 test	 r8, r8
  00023	74 0d		 je	 SHORT $LN2@Uninitiali
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 61   : 		: _Thr(_Other._Thr)

  00025	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  00028	41 0f 11 00	 movups	 XMMWORD PTR [r8], xmm0

; 62   : 		{	// move from _Other
; 63   : 		_Thr_set_null(_Other._Thr);

  0002c	48 89 01	 mov	 QWORD PTR [rcx], rax
  0002f	89 41 08	 mov	 DWORD PTR [rcx+8], eax
$LN2@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 321  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00032	49 83 c0 10	 add	 r8, 16
  00036	4c 89 44 24 50	 mov	 QWORD PTR _Dest$[rsp], r8
  0003b	48 83 c1 10	 add	 rcx, 16
  0003f	48 3b ca	 cmp	 rcx, rdx
  00042	75 dc		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 322  : 		_Al.construct(_Dest, _STD move(*_First));
; 323  : 	_CATCH_ALL
; 324  : 	for (; _Next != _Dest; ++_Next)
; 325  : 		_Al.destroy(_Next);
; 326  : 	_RERAISE;
; 327  : 	_CATCH_END
; 328  : 
; 329  : 	return (_Dest);

  00044	49 8b c0	 mov	 rax, r8

; 330  : 	}

  00047	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004b	c3		 ret	 0
$LN70@Uninitiali:
??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Next$ = 64
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
__formal$ = 96
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >'::`1'::catch$0

; 322  : 		_Al.construct(_Dest, _STD move(*_First));
; 323  : 	_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z$0:

; 322  : 		_Al.construct(_Dest, _STD move(*_First));
; 323  : 	_CATCH_ALL
; 324  : 	for (; _Next != _Dest; ++_Next)

  0000d	48 8b 45 40	 mov	 rax, QWORD PTR _Next$[rbp]
  00011	48 8b 4d 50	 mov	 rcx, QWORD PTR _Dest$[rbp]
  00015	48 3b c1	 cmp	 rax, rcx
  00018	74 1d		 je	 SHORT $LN6@catch$0
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL7@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00020	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0

; 56   : 		if (joinable())

  00024	75 0b		 jne	 SHORT $LN63@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 322  : 		_Al.construct(_Dest, _STD move(*_First));
; 323  : 	_CATCH_ALL
; 324  : 	for (; _Next != _Dest; ++_Next)

  00026	48 83 c0 10	 add	 rax, 16
  0002a	48 3b c1	 cmp	 rax, rcx
  0002d	75 f1		 jne	 SHORT $LL7@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 56   : 		if (joinable())

  0002f	eb 06		 jmp	 SHORT $LN6@catch$0
$LN63@catch$0:


  00031	e8 00 00 00 00	 call	 terminate
  00036	cc		 int	 3
$LN6@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 322  : 		_Al.construct(_Dest, _STD move(*_First));
; 323  : 	_CATCH_ALL
; 324  : 	for (; _Next != _Dest; ++_Next)
; 325  : 		_Al.destroy(_Next);
; 326  : 	_RERAISE;

  00037	33 d2		 xor	 edx, edx
  00039	33 c9		 xor	 ecx, ecx
  0003b	e8 00 00 00 00	 call	 _CxxThrowException
  00040	90		 npad	 1
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Next$ = 64
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
__formal$ = 96
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >'::`1'::catch$0

; 323  : 	_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z$0:

; 324  : 	for (; _Next != _Dest; ++_Next)

  0000d	48 8b 45 40	 mov	 rax, QWORD PTR _Next$[rbp]
  00011	48 8b 4d 50	 mov	 rcx, QWORD PTR _Dest$[rbp]
  00015	48 3b c1	 cmp	 rax, rcx
  00018	74 1d		 je	 SHORT $LN6@catch$0
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL7@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00020	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0

; 56   : 		if (joinable())

  00024	75 0b		 jne	 SHORT $LN63@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 324  : 	for (; _Next != _Dest; ++_Next)

  00026	48 83 c0 10	 add	 rax, 16
  0002a	48 3b c1	 cmp	 rax, rcx
  0002d	75 f1		 jne	 SHORT $LL7@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 56   : 		if (joinable())

  0002f	eb 06		 jmp	 SHORT $LN6@catch$0
$LN63@catch$0:

; 57   : 			_XSTD terminate();

  00031	e8 00 00 00 00	 call	 terminate
  00036	cc		 int	 3
$LN6@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 326  : 	_RERAISE;

  00037	33 d2		 xor	 edx, edx
  00039	33 c9		 xor	 ecx, ecx
  0003b	e8 00 00 00 00	 call	 _CxxThrowException
  00040	90		 npad	 1
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@Vthread@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVthread@0@0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
??$_Ptr_move_cat@Vthread@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVthread@0@0@Z PROC ; std::_Ptr_move_cat<std::thread,std::thread>, COMDAT

; 726  : 	return {};

  00000	33 c0		 xor	 eax, eax

; 727  : 	}

  00002	c3		 ret	 0
??$_Ptr_move_cat@Vthread@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVthread@0@0@Z ENDP ; std::_Ptr_move_cat<std::thread,std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
$T3 = 88
??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 636  : 		{	// construct _Objty(_Types...) at _Ptr

$LN50:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	53		 push	 rbx
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 8b da	 mov	 rbx, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00016	48 89 54 24 28	 mov	 QWORD PTR $T2[rsp], rdx
  0001b	48 85 d2	 test	 rdx, rdx
  0001e	74 2f		 je	 SHORT $LN49@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 48   : 		_Launch(&_Thr,

  00020	49 8b d0	 mov	 rdx, r8
  00023	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T3[rsp]
  00028	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
  0002d	90		 npad	 1
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b cb	 mov	 rcx, rbx
  00034	e8 00 00 00 00	 call	 ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
  00039	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  0003a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR $T3[rsp]
  0003f	48 85 c9	 test	 rcx, rcx
  00042	74 0b		 je	 SHORT $LN49@construct

; 1195 : 		delete _Ptr;

  00044	ba 01 00 00 00	 mov	 edx, 1
  00049	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004e	90		 npad	 1
$LN49@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 638  : 		}

  0004f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
$T3 = 88
?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$0
$T1 = 32
$T2 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
$T3 = 88
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
  0001c	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
$T3 = 88
?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
$T3 = 88
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
  0001c	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator<std::thread>::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Dur$ = 16
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >, COMDAT

; 552  : 	typedef ratio_divide<_Period, typename _To::period> _CF;
; 553  : 
; 554  : 	typedef typename _To::rep _ToRep;
; 555  : 	typedef typename common_type<_ToRep, _Rep, intmax_t>::type _CR;
; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00000	48 69 02 00 ca
	9a 3b		 imul	 rax, QWORD PTR [rdx], 1000000000 ; 3b9aca00H
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	48 8b c1	 mov	 rax, rcx

; 557  : 			? static_cast<_To>(static_cast<_ToRep>(_Dur.count()))
; 558  : 		: _CF::num != 1 && _CF::den == 1
; 559  : 			? static_cast<_To>(static_cast<_ToRep>(
; 560  : 				static_cast<_CR>(
; 561  : 					_Dur.count()) * static_cast<_CR>(_CF::num)))
; 562  : 		: _CF::num == 1 && _CF::den != 1
; 563  : 			? static_cast<_To>(static_cast<_ToRep>(
; 564  : 				static_cast<_CR>(_Dur.count())
; 565  : 					/ static_cast<_CR>(_CF::den)))
; 566  : 		: static_cast<_To>(static_cast<_ToRep>(
; 567  : 			static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)
; 568  : 				/ static_cast<_CR>(_CF::den))));
; 569  : 	}

  0000d	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Dur$ = 16
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000> >, COMDAT

; 552  : 	typedef ratio_divide<_Period, typename _To::period> _CF;
; 553  : 
; 554  : 	typedef typename _To::rep _ToRep;
; 555  : 	typedef typename common_type<_ToRep, _Rep, intmax_t>::type _CR;
; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00000	48 6b 02 64	 imul	 rax, QWORD PTR [rdx], 100 ; 00000064H
  00004	48 89 01	 mov	 QWORD PTR [rcx], rax
  00007	48 8b c1	 mov	 rax, rcx

; 557  : 			? static_cast<_To>(static_cast<_ToRep>(_Dur.count()))
; 558  : 		: _CF::num != 1 && _CF::den == 1
; 559  : 			? static_cast<_To>(static_cast<_ToRep>(
; 560  : 				static_cast<_CR>(
; 561  : 					_Dur.count()) * static_cast<_CR>(_CF::num)))
; 562  : 		: _CF::num == 1 && _CF::den != 1
; 563  : 			? static_cast<_To>(static_cast<_ToRep>(
; 564  : 				static_cast<_CR>(_Dur.count())
; 565  : 					/ static_cast<_CR>(_CF::den)))
; 566  : 		: static_cast<_To>(static_cast<_ToRep>(
; 567  : 			static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)
; 568  : 				/ static_cast<_CR>(_CF::den))));
; 569  : 	}

  0000a	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?MHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?MHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z PROC ; std::chrono::operator<<int,std::ratio<3600,1>,int,std::ratio<3600,1> >, COMDAT

; 506  : 	typedef typename common_type<
; 507  : 		duration<_Rep1, _Period1>,
; 508  : 		duration<_Rep2, _Period2> >::type _CT;
; 509  : 	return (_CT(_Left).count() < _CT(_Right).count());

  00000	8b 12		 mov	 edx, DWORD PTR [rdx]
  00002	39 11		 cmp	 DWORD PTR [rcx], edx
  00004	0f 9c c0	 setl	 al

; 510  : 	}

  00007	c3		 ret	 0
??$?MHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z ENDP ; std::chrono::operator<<int,std::ratio<3600,1>,int,std::ratio<3600,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?zero@?$duration_values@H@chrono@std@@SAHXZ
_TEXT	SEGMENT
?zero@?$duration_values@H@chrono@std@@SAHXZ PROC	; std::chrono::duration_values<int>::zero, COMDAT

; 40   : 		return (_Rep(0));

  00000	33 c0		 xor	 eax, eax

; 41   : 		}

  00002	c3		 ret	 0
?zero@?$duration_values@H@chrono@std@@SAHXZ ENDP	; std::chrono::duration_values<int>::zero
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@Vthread@std@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@Vthread@std@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@@Z PROC ; std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>, COMDAT

; 761  : 		{	// destroy object at _Ptr

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00004	83 7a 08 00	 cmp	 DWORD PTR [rdx+8], 0

; 56   : 		if (joinable())

  00008	75 05		 jne	 SHORT $LN20@destroy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 763  : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN20@destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 57   : 			_XSTD terminate();

  0000f	e8 00 00 00 00	 call	 terminate
  00014	cc		 int	 3
$LN19@destroy:
??$destroy@Vthread@std@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@@Z ENDP ; std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Val$ = 8
__formal$ = 16
??$_Addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<std::thread>, COMDAT

; 708  : 	return (reinterpret_cast<_Ty *>(

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		&const_cast<char&>(
; 710  : 		reinterpret_cast<const volatile char&>(_Val))));
; 711  : 	}

  00003	c3		 ret	 0
??$_Addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN3@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN3@construct:

; 638  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z PROC	; std::allocator<char>::destroy<char * __ptr64>, COMDAT

; 644  : 		_Ptr->~_Uty();
; 645  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ENDP	; std::allocator<char>::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PEAVthread@std@@PEAV12@@std@@YAAEAPEAVthread@0@AEAPEAV10@PEAV10@@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEAVthread@std@@PEAV12@@std@@YAAEAPEAVthread@0@AEAPEAV10@PEAV10@@Z PROC ; std::_Rechecked<std::thread * __ptr64,std::thread * __ptr64>, COMDAT

; 466  : 	_Dest = _Src;

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 467  : 	return (_Dest);

  00003	48 8b c1	 mov	 rax, rcx

; 468  : 	}

  00006	c3		 ret	 0
??$_Rechecked@PEAVthread@std@@PEAV12@@std@@YAAEAPEAVthread@0@AEAPEAV10@PEAV10@@Z ENDP ; std::_Rechecked<std::thread * __ptr64,std::thread * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move_al_unchecked@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::thread * __ptr64,std::thread * __ptr64,std::_Wrap_alloc<std::allocator<std::thread> > >, COMDAT

; 345  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 726  : 	return {};

  00004	33 c0		 xor	 eax, eax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  00006	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  0000a	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >

; 347  : 		_Ptr_move_cat(_First, _Dest)));
; 348  : 	}

  0000f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00013	c3		 ret	 0
??$_Uninitialized_move_al_unchecked@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::thread * __ptr64,std::thread * __ptr64,std::_Wrap_alloc<std::allocator<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PEAVthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAVthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z PROC ; std::_Unchecked<std::thread * __ptr64>, COMDAT

; 439  : 	return (_Src);

  00000	48 8b c1	 mov	 rax, rcx

; 440  : 	}

  00003	c3		 ret	 0
??$_Unchecked@PEAVthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ENDP ; std::_Unchecked<std::thread * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
$T1 = 32
_Al$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 754  : 		{	// construct _Objty(_Types...) at _Ptr

$LN55:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	53		 push	 rbx
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 8b da	 mov	 rbx, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00016	48 89 54 24 58	 mov	 QWORD PTR $T3[rsp], rdx
  0001b	48 85 d2	 test	 rdx, rdx
  0001e	74 2f		 je	 SHORT $LN54@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 48   : 		_Launch(&_Thr,

  00020	49 8b d0	 mov	 rdx, r8
  00023	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T2[rsp]
  00028	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
  0002d	90		 npad	 1
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b cb	 mov	 rcx, rbx
  00034	e8 00 00 00 00	 call	 ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
  00039	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T2[rsp]
  0003f	48 85 c9	 test	 rcx, rcx
  00042	74 0b		 je	 SHORT $LN54@construct

; 1195 : 		delete _Ptr;

  00044	ba 01 00 00 00	 mov	 edx, 1
  00049	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004e	90		 npad	 1
$LN54@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 756  : 		}

  0004f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Al$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 58	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$1
$T1 = 32
_Al$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$3@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$3
  0001c	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$3@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Al$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 58	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Al$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$3@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$3
  0001c	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$3@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@PEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
this$ = 8
_Dur$ = 16
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>, COMDAT

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00000	48 69 02 00 ca
	9a 3b		 imul	 rax, QWORD PTR [rdx], 1000000000 ; 3b9aca00H

; 129  : 			: _MyRep(chrono::duration_cast<_Myt>(_Dur).count())

  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 131  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>, COMDAT

; 116  : 			: _MyRep(static_cast<_Rep>(_Val))

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 118  : 		}

  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Dur$ = 16
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000> >, COMDAT

; 552  : 	typedef ratio_divide<_Period, typename _To::period> _CF;
; 553  : 
; 554  : 	typedef typename _To::rep _ToRep;
; 555  : 	typedef typename common_type<_ToRep, _Rep, intmax_t>::type _CR;
; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00000	48 b8 b3 94 d6
	26 e8 0b 2e 11	 mov	 rax, 1237940039285380275 ; 112e0be826d694b3H
  0000a	48 f7 2a	 imul	 QWORD PTR [rdx]
  0000d	48 c1 fa 1a	 sar	 rdx, 26
  00011	48 8b c2	 mov	 rax, rdx
  00014	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00018	48 03 d0	 add	 rdx, rax
  0001b	48 8b c1	 mov	 rax, rcx
  0001e	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 557  : 			? static_cast<_To>(static_cast<_ToRep>(_Dur.count()))
; 558  : 		: _CF::num != 1 && _CF::den == 1
; 559  : 			? static_cast<_To>(static_cast<_ToRep>(
; 560  : 				static_cast<_CR>(
; 561  : 					_Dur.count()) * static_cast<_CR>(_CF::num)))
; 562  : 		: _CF::num == 1 && _CF::den != 1
; 563  : 			? static_cast<_To>(static_cast<_ToRep>(
; 564  : 				static_cast<_CR>(_Dur.count())
; 565  : 					/ static_cast<_CR>(_CF::den)))
; 566  : 		: static_cast<_To>(static_cast<_ToRep>(
; 567  : 			static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)
; 568  : 				/ static_cast<_CR>(_CF::den))));
; 569  : 	}

  00021	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@HU?$ratio@$0OBA@$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Dur$ = 16
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@HU?$ratio@$0OBA@$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,int,std::ratio<3600,1> >, COMDAT

; 552  : 	typedef ratio_divide<_Period, typename _To::period> _CF;
; 553  : 
; 554  : 	typedef typename _To::rep _ToRep;
; 555  : 	typedef typename common_type<_ToRep, _Rep, intmax_t>::type _CR;
; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00000	48 63 02	 movsxd	 rax, DWORD PTR [rdx]
  00003	48 ba 00 a0 b8
	30 46 03 00 00	 mov	 rdx, 3600000000000	; 0000034630b8a000H
  0000d	48 0f af c2	 imul	 rax, rdx
  00011	48 89 01	 mov	 QWORD PTR [rcx], rax
  00014	48 8b c1	 mov	 rax, rcx

; 557  : 			? static_cast<_To>(static_cast<_ToRep>(_Dur.count()))
; 558  : 		: _CF::num != 1 && _CF::den == 1
; 559  : 			? static_cast<_To>(static_cast<_ToRep>(
; 560  : 				static_cast<_CR>(
; 561  : 					_Dur.count()) * static_cast<_CR>(_CF::num)))
; 562  : 		: _CF::num == 1 && _CF::den != 1
; 563  : 			? static_cast<_To>(static_cast<_ToRep>(
; 564  : 				static_cast<_CR>(_Dur.count())
; 565  : 					/ static_cast<_CR>(_CF::den)))
; 566  : 		: static_cast<_To>(static_cast<_ToRep>(
; 567  : 			static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)
; 568  : 				/ static_cast<_CR>(_CF::den))));
; 569  : 	}

  00017	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@HU?$ratio@$0OBA@$00@3@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,int,std::ratio<3600,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 8
_Dur$ = 16
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>, COMDAT

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00000	48 6b 02 64	 imul	 rax, QWORD PTR [rdx], 100 ; 00000064H

; 129  : 			: _MyRep(chrono::duration_cast<_Myt>(_Dur).count())

  00004	48 89 01	 mov	 QWORD PTR [rcx], rax

; 131  : 		}

  00007	48 8b c1	 mov	 rax, rcx
  0000a	c3		 ret	 0
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?NHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?NHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z PROC ; std::chrono::operator<=<int,std::ratio<3600,1>,int,std::ratio<3600,1> >, COMDAT

; 509  : 	return (_CT(_Left).count() < _CT(_Right).count());

  00000	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00002	39 0a		 cmp	 DWORD PTR [rdx], ecx

; 520  : 	return (!(_Right < _Left));

  00004	0f 9d c0	 setge	 al

; 521  : 	}

  00007	c3		 ret	 0
??$?NHU?$ratio@$0OBA@$00@std@@HU01@@chrono@std@@YA_NAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@01@0@Z ENDP ; std::chrono::operator<=<int,std::ratio<3600,1>,int,std::ratio<3600,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@Vthread@std@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@Vthread@std@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::thread> >::destroy<std::thread>, COMDAT

; 900  : 		{	// destroy object at _Ptr

$LN25:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00004	83 7a 08 00	 cmp	 DWORD PTR [rdx+8], 0

; 56   : 		if (joinable())

  00008	75 05		 jne	 SHORT $LN23@destroy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 902  : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN23@destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 57   : 			_XSTD terminate();

  0000f	e8 00 00 00 00	 call	 terminate
  00014	cc		 int	 3
$LN22@destroy:
??$destroy@Vthread@std@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::thread> >::destroy<std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z PROC ; std::addressof<std::thread>, COMDAT

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00000	48 8b c1	 mov	 rax, rcx

; 717  : 	}

  00003	c3		 ret	 0
??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z ENDP ; std::addressof<std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN8@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN8@construct:

; 755  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 756  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * __ptr64 & __ptr64>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Val$ = 8
__formal$ = 16
??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<char>, COMDAT

; 708  : 	return (reinterpret_cast<_Ty *>(

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		&const_cast<char&>(
; 710  : 		reinterpret_cast<const volatile char&>(_Val))));
; 711  : 	}

  00003	c3		 ret	 0
??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 762  : 		_Al.destroy(_Ptr);
; 763  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::thread * __ptr64,std::thread * __ptr64,std::_Wrap_alloc<std::allocator<std::thread> > >, COMDAT

; 355  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN16:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 726  : 	return {};

  00004	33 c0		 xor	 eax, eax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  00006	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  0000a	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >

; 356  : 		// note: only called internally from elsewhere in the STL, debug checks
; 357  : 		// and deprecation warnings omitted
; 358  : 	return (_Rechecked(_Dest,
; 359  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 360  : 			_Unchecked(_Dest), _Al)));
; 361  : 	}

  0000f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00013	c3		 ret	 0
??$_Uninitialized_move@PEAVthread@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::thread * __ptr64,std::thread * __ptr64,std::_Wrap_alloc<std::allocator<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Val1$ = 24
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 289  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 892  : 		{	// construct _Ty(_Types...) at _Ptr

$LN60:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	53		 push	 rbx
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 8b da	 mov	 rbx, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00016	48 89 54 24 58	 mov	 QWORD PTR $T3[rsp], rdx
  0001b	48 85 d2	 test	 rdx, rdx
  0001e	74 2f		 je	 SHORT $LN59@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 48   : 		_Launch(&_Thr,

  00020	49 8b d0	 mov	 rdx, r8
  00023	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T2[rsp]
  00028	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
  0002d	90		 npad	 1
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b cb	 mov	 rcx, rbx
  00034	e8 00 00 00 00	 call	 ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
  00039	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T2[rsp]
  0003f	48 85 c9	 test	 rcx, rcx
  00042	74 0b		 je	 SHORT $LN59@construct

; 1195 : 		delete _Ptr;

  00044	ba 01 00 00 00	 mov	 edx, 1
  00049	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004e	90		 npad	 1
$LN59@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 895  : 		}

  0004f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
??$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 58	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
$T1 = 32
this$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$4@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$4
  0001c	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$4@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 58	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
$T2 = 80
<_Args_0>$ = 80
$T3 = 88
?dtor$4@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$4
  0001c	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$4@?0???$construct@Vthread@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@1@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::thread> >::construct<std::thread,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z PROC ; std::forward<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@AEAV1@@Z ENDP ; std::forward<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$_To_xtime@HU?$ratio@$0OBA@$00@std@@@std@@YA?AUxtime@@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@0@@Z
_TEXT	SEGMENT
$T1 = 48
_Rel_time$ = 56
??$_To_xtime@HU?$ratio@$0OBA@$00@std@@@std@@YA?AUxtime@@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@0@@Z PROC ; std::_To_xtime<int,std::ratio<3600,1> >, COMDAT

; 1016 : 	{	// convert duration to xtime

$LN144:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 509  : 	return (_CT(_Left).count() < _CT(_Right).count());

  0000a	83 3a 00	 cmp	 DWORD PTR [rdx], 0

; 1016 : 	{	// convert duration to xtime

  0000d	48 8b fa	 mov	 rdi, rdx
  00010	48 8b d9	 mov	 rbx, rcx

; 1017 : 	xtime _Xt;
; 1018 : 	if (_Rel_time <= chrono::duration<_Rep, _Period>::zero())

  00013	7f 16		 jg	 SHORT $LN2@To_xtime

; 1019 : 		{	// negative or zero relative time, return zero
; 1020 : 		_Xt.sec = 0;

  00015	33 c0		 xor	 eax, eax
  00017	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1021 : 		_Xt.nsec = 0;

  0001a	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 1029 : 		_T0 -= chrono::seconds(_Xt.sec);
; 1030 : 		_Xt.nsec = (long)_T0.count();
; 1031 : 		}
; 1032 : 	return (_Xt);

  0001d	48 8b c1	 mov	 rax, rcx

; 1033 : 	}

  00020	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5f		 pop	 rdi
  0002a	c3		 ret	 0
$LN2@To_xtime:

; 974  : 		return (time_point(duration(_Xtime_get_ticks())));

  0002b	e8 00 00 00 00	 call	 _Xtime_get_ticks

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00030	4c 63 07	 movsxd	 r8, DWORD PTR [rdi]
  00033	48 ba 00 a0 b8
	30 46 03 00 00	 mov	 rdx, 3600000000000	; 0000034630b8a000H
  0003d	48 6b c8 64	 imul	 rcx, rax, 100		; 00000064H
  00041	4c 0f af c2	 imul	 r8, rdx
  00045	48 b8 b3 94 d6
	26 e8 0b 2e 11	 mov	 rax, 1237940039285380275 ; 112e0be826d694b3H

; 172  : 		_MyRep += _Right._MyRep;

  0004f	4c 03 c1	 add	 r8, rcx

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00052	49 f7 e8	 imul	 r8
  00055	48 c1 fa 1a	 sar	 rdx, 26
  00059	48 8b c2	 mov	 rax, rdx
  0005c	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00060	48 03 d0	 add	 rdx, rax
  00063	48 69 c2 00 ca
	9a 3b		 imul	 rax, rdx, 1000000000	; 3b9aca00H

; 1022 : 		}
; 1023 : 	else
; 1024 : 		{	// positive relative time, convert
; 1025 : 		chrono::nanoseconds _T0 =
; 1026 : 			chrono::system_clock::now().time_since_epoch();
; 1027 : 		_T0 += chrono::duration_cast<chrono::nanoseconds>(_Rel_time);
; 1028 : 		_Xt.sec = chrono::duration_cast<chrono::seconds>(_T0).count();

  0006a	48 89 13	 mov	 QWORD PTR [rbx], rdx

; 178  : 		_MyRep -= _Right._MyRep;

  0006d	44 2b c0	 sub	 r8d, eax

; 1029 : 		_T0 -= chrono::seconds(_Xt.sec);
; 1030 : 		_Xt.nsec = (long)_T0.count();
; 1031 : 		}
; 1032 : 	return (_Xt);

  00070	48 8b c3	 mov	 rax, rbx
  00073	44 89 43 08	 mov	 DWORD PTR [rbx+8], r8d

; 1033 : 	}

  00077	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
??$_To_xtime@HU?$ratio@$0OBA@$00@std@@@std@@YA?AUxtime@@AEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@0@@Z ENDP ; std::_To_xtime<int,std::ratio<3600,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00000	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  00004	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00008	74 08		 je	 SHORT $LN3@Pnavail
  0000a	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  0000e	48 63 00	 movsxd	 rax, DWORD PTR [rax]

; 315  : 		}

  00011	c3		 ret	 0
$LN3@Pnavail:

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00012	33 c0		 xor	 eax, eax
  00014	48 98		 cdqe

; 315  : 		}

  00016	c3		 ret	 0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT

; 308  : 		--*_IPcount;

  00000	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00004	ff 08		 dec	 DWORD PTR [rax]

; 309  : 		return ((*_IPnext)++);

  00006	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8d 48 01	 lea	 rcx, QWORD PTR [rax+1]
  00011	48 89 0a	 mov	 QWORD PTR [rdx], rcx

; 310  : 		}

  00014	c3		 ret	 0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputn, COMDAT

; 208  : 		return (xsputn(_Ptr, _Count));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 48	 rex_jmp QWORD PTR [rax+72]
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputn
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputc, COMDAT

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00000	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]

; 199  : 		{	// put a character

  00004	44 0f b6 c2	 movzx	 r8d, dl

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00008	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0000c	74 24		 je	 SHORT $LN3@sputc
  0000e	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00012	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00014	85 c0		 test	 eax, eax
  00016	7e 1a		 jle	 SHORT $LN3@sputc

; 308  : 		--*_IPcount;

  00018	ff c8		 dec	 eax
  0001a	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0001c	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00020	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00023	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  00027	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0002a	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  0002d	41 0f b6 c0	 movzx	 eax, r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 203  : 		}

  00031	c3		 ret	 0
$LN3@sputc:

; 200  : 		return (0 < _Pnavail()

  00032	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00035	41 0f b6 d0	 movzx	 edx, r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00039	48 ff 60 18	 rex_jmp QWORD PTR [rax+24]
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT

; 145  : 		return (sync());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 68	 rex_jmp QWORD PTR [rax+104]
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 142  : 			return (_Ok);

  00000	0f b6 41 08	 movzx	 eax, BYTE PTR [rcx+8]

; 143  : 			}

  00004	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 130  : 			{	// destroy the object

$LN13:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 131  :  #if _HAS_EXCEPTIONS
; 132  : 			if (!_XSTD uncaught_exception())

  00012	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00017	90		 npad	 1
  00018	84 c0		 test	 al, al
  0001a	75 09		 jne	 SHORT $LN2@sentry

; 133  : 				this->_Myostr._Osfx();

  0001c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0001f	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  00024	90		 npad	 1
$LN2@sentry:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00025	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00028	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0002b	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0002f	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00034	48 85 c9	 test	 rcx, rcx
  00037	74 07		 je	 SHORT $LN12@sentry

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00039	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
  0003f	90		 npad	 1
$LN12@sentry:

; 134  : 
; 135  :  #else /* _HAS_EXCEPTIONS */
; 136  : 			this->_Myostr._Osfx();
; 137  :  #endif /* _HAS_EXCEPTIONS */
; 138  : 			}

  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5b		 pop	 rbx
  00045	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 123  : 			{	// construct locking and testing stream

$LN26:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	48 8b da	 mov	 rbx, rdx
  0001b	48 8b f9	 mov	 rdi, rcx

; 99   : 			: _Myostr(_Ostr)

  0001e	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 101  : 			if (_Myostr.rdbuf() != 0)

  00021	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00024	4c 63 40 04	 movsxd	 r8, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00028	49 8b 4c 10 48	 mov	 rcx, QWORD PTR [r8+rdx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0002d	48 85 c9	 test	 rcx, rcx
  00030	74 07		 je	 SHORT $LN6@sentry

; 102  : 				_Myostr.rdbuf()->_Lock();

  00032	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00035	ff 50 08	 call	 QWORD PTR [rax+8]
  00038	90		 npad	 1
$LN6@sentry:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00039	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00040	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00045	75 14		 jne	 SHORT $LN2@sentry
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  00047	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0004c	48 85 c9	 test	 rcx, rcx
  0004f	74 0a		 je	 SHORT $LN2@sentry
  00051	48 3b cb	 cmp	 rcx, rbx
  00054	74 05		 je	 SHORT $LN2@sentry

; 125  : 				_Ostr.tie()->flush();

  00056	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN2@sentry:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0005b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0005e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00062	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
  00067	0f 94 c0	 sete	 al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0006a	88 47 08	 mov	 BYTE PTR [rdi+8], al

; 127  : 			}

  0006d	48 8b c7	 mov	 rax, rdi
  00070	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00075	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00079	5f		 pop	 rdi
  0007a	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 106  : 			{	// destroy after unlocking

$LN8:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 107  : 			if (_Myostr.rdbuf() != 0)

  0000d	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00010	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00013	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00017	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
  0001c	48 85 c9	 test	 rcx, rcx
  0001f	74 0b		 je	 SHORT $LN2@Sentry_bas

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00021	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 109  : 			}

  00024	48 83 c4 38	 add	 rsp, 56			; 00000038H

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00028	48 ff 60 10	 rex_jmp QWORD PTR [rax+16]
$LN2@Sentry_bas:

; 109  : 			}

  0002c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00030	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 100  : 			{	// lock the stream buffer, if there

$LN10:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 99   : 			: _Myostr(_Ostr)

  00006	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 100  : 			{	// lock the stream buffer, if there

  00009	48 8b d9	 mov	 rbx, rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  0000c	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000f	4c 63 40 04	 movsxd	 r8, DWORD PTR [rax+4]
  00013	49 8b 4c 10 48	 mov	 rcx, QWORD PTR [r8+rdx+72]
  00018	48 85 c9	 test	 rcx, rcx
  0001b	74 06		 je	 SHORT $LN8@Sentry_bas

; 102  : 				_Myostr.rdbuf()->_Lock();

  0001d	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00020	ff 50 08	 call	 QWORD PTR [rax+8]
$LN8@Sentry_bas:

; 103  : 			}

  00023	48 8b c3	 mov	 rax, rbx
  00026	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002a	5b		 pop	 rbx
  0002b	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ
text$yd	SEGMENT
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ PROC ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static'', COMDAT
  00000	c2 00 00	 ret	 0
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ENDP ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>, COMDAT

; 687  : 		}

  00000	c2 00 00	 ret	 0
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>, COMDAT

; 681  : 		{	// construct _Ty inside _Storage
; 682  : 		::new (static_cast<void *>(&_Storage)) _Ty();

  00000	48 85 c9	 test	 rcx, rcx
  00003	74 12		 je	 SHORT $LN16@Immortaliz

; 616  : 		{	// default constructor

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  0000c	48 c7 41 08 05
	00 00 00	 mov	 QWORD PTR [rcx+8], 5
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN16@Immortaliz:

; 683  : 		}

  00017	48 8b c1	 mov	 rax, rcx
  0001a	c3		 ret	 0
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@@std@@YAXPEAVthread@0@0AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@@std@@YAXPEAVthread@0@0AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::thread> > >, COMDAT

; 163  : 	{	// destroy [_First, _Last)

$LN41:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 164  : 	for (; _First != _Last; ++_First)

  00004	48 3b ca	 cmp	 rcx, rdx
  00007	74 16		 je	 SHORT $LN3@Destroy_ra
  00009	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00010	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0

; 56   : 		if (joinable())

  00014	75 0e		 jne	 SHORT $LN40@Destroy_ra
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00016	48 83 c1 10	 add	 rcx, 16
  0001a	48 3b ca	 cmp	 rcx, rdx
  0001d	75 f1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:

; 166  : 	}

  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
$LN40@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 57   : 			_XSTD terminate();

  00024	e8 00 00 00 00	 call	 terminate
  00029	cc		 int	 3
$LN39@Destroy_ra:
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@@std@@YAXPEAVthread@0@0AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN13@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN13@construct:

; 893  : 		_Mytraits::construct(*this, _Ptr,
; 894  : 			_STD forward<_Types>(_Args)...);
; 895  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00000	48 8b c1	 mov	 rax, rcx

; 717  : 	}

  00003	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 901  : 		_Mytraits::destroy(*this, _Ptr);
; 902  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 280  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >, COMDAT

; 851  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PEAVthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAPEAVthread@1@PEAV21@00@Z
_TEXT	SEGMENT
this$ = 64
_First$ = 72
_Last$ = 80
_Ptr$ = 88
??$_Umove@PEAVthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAPEAVthread@1@PEAV21@00@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Umove<std::thread * __ptr64>, COMDAT

; 1681 : 		{	// move initializing [_First, _Last), using allocator

$LN24:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	4c 8b da	 mov	 r11, rdx
  00007	49 8b c1	 mov	 rax, r9
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 726  : 	return {};

  0000a	33 d2		 xor	 edx, edx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1681 : 		{	// move initializing [_First, _Last), using allocator

  0000c	4d 8b d0	 mov	 r10, r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  0000f	88 54 24 20	 mov	 BYTE PTR [rsp+32], dl
  00013	4c 8b c9	 mov	 r9, rcx
  00016	49 8b d2	 mov	 rdx, r10
  00019	4c 8b c0	 mov	 r8, rax
  0001c	49 8b cb	 mov	 rcx, r11
  0001f	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1684 : 		}

  00024	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00028	c3		 ret	 0
??$_Umove@PEAVthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAPEAVthread@1@PEAV21@00@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Umove<std::thread * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 280  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$ = 16
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 581  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>, COMDAT

; 1315 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1316 : 	}

  00003	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator++, COMDAT

; 112  : 		++_Ptr;

  00000	48 83 01 10	 add	 QWORD PTR [rcx], 16

; 335  : 		++*(_Mybase *)this;
; 336  : 		return (*this);

  00004	48 8b c1	 mov	 rax, rcx

; 337  : 		}

  00007	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEAVthread@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEAVthread@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator*, COMDAT

; 325  : 		return ((reference)**(_Mybase *)this);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 326  : 		}

  00003	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEAVthread@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$ = 24
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 308  : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Compat, COMDAT

; 256  : 		}

  00000	c2 00 00	 ret	 0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator!=, COMDAT

; 208  : 		return (_Ptr == _Right._Ptr);

  00000	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00003	48 39 11	 cmp	 QWORD PTR [rcx], rdx

; 213  : 		return (!(*this == _Right));

  00006	0f 95 c0	 setne	 al

; 214  : 		}

  00009	c3		 ret	 0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator==, COMDAT

; 207  : 		_Compat(_Right);
; 208  : 		return (_Ptr == _Right._Ptr);

  00000	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00003	48 39 11	 cmp	 QWORD PTR [rcx], rdx
  00006	0f 94 c0	 sete	 al

; 209  : 		}

  00009	c3		 ret	 0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator++, COMDAT

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		if (this->_Getcont() == 0
; 98   : 			|| _Ptr == 0
; 99   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= _Ptr)
; 100  : 			{	// report error
; 101  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 102  : 			_SCL_SECURE_OUT_OF_RANGE;
; 103  : 			}
; 104  : 
; 105  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 106  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 107  : 		_SCL_SECURE_VALIDATE_RANGE(
; 108  : 			_Ptr != _Tptr()
; 109  : 			&& _Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 110  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 111  : 
; 112  : 		++_Ptr;

  00000	48 83 01 10	 add	 QWORD PTR [rcx], 16

; 113  : 		return (*this);

  00004	48 8b c1	 mov	 rax, rcx

; 114  : 		}

  00007	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEBVthread@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEBVthread@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator*, COMDAT

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| _Ptr == 0
; 69   : 			|| _Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= _Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= _Ptr
; 81   : 			&& _Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 87   : 		}

  00003	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEBAAEBVthread@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$ = 24
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 48   : 		this->_Adopt(_Pvector);
; 49   : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@std@@QEAA@PEAVthread@1@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
this$ = 80
_Ptr$ = 88
<_Val_0>$ = 88
$T3 = 96
??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >, COMDAT

; 928  : 		{	// insert by moving into element at end

$LN126:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00008	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00011	48 8b f2	 mov	 rsi, rdx
  00014	48 8b d9	 mov	 rbx, rcx

; 929  : 		if (this->_Mylast() == this->_Myend())

  00017	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  0001b	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  0001f	75 0a		 jne	 SHORT $LN2@emplace_ba

; 930  : 			_Reserve(1);

  00021	ba 01 00 00 00	 mov	 edx, 1
  00026	e8 00 00 00 00	 call	 ?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Reserve
$LN2@emplace_ba:

; 931  : 		_Orphan_range(this->_Mylast(), this->_Mylast());
; 932  : 		this->_Getal().construct(this->_Mylast(),

  0002b	48 8b 7b 08	 mov	 rdi, QWORD PTR [rbx+8]
  0002f	48 89 7c 24 58	 mov	 QWORD PTR _Ptr$[rsp], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00034	48 89 7c 24 60	 mov	 QWORD PTR $T3[rsp], rdi
  00039	48 85 ff	 test	 rdi, rdi
  0003c	74 2f		 je	 SHORT $LN115@emplace_ba
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 48   : 		_Launch(&_Thr,

  0003e	48 8b d6	 mov	 rdx, rsi
  00041	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T2[rsp]
  00046	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
  0004b	90		 npad	 1
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8b cf	 mov	 rcx, rdi
  00052	e8 00 00 00 00	 call	 ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
  00057	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  00058	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T2[rsp]
  0005d	48 85 c9	 test	 rcx, rcx
  00060	74 0b		 je	 SHORT $LN115@emplace_ba

; 1195 : 		delete _Ptr;

  00062	ba 01 00 00 00	 mov	 edx, 1
  00067	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0006c	90		 npad	 1
$LN115@emplace_ba:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 934  : 		++this->_Mylast();

  0006d	48 83 43 08 10	 add	 QWORD PTR [rbx+8], 16

; 935  : 		}

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	5e		 pop	 rsi
  00078	5b		 pop	 rbx
  00079	c3		 ret	 0
??$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
this$ = 80
_Ptr$ = 88
<_Val_0>$ = 88
$T3 = 96
?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$20
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 60	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$20
$T1 = 32
$T2 = 80
this$ = 80
_Ptr$ = 88
<_Val_0>$ = 88
$T3 = 96
?dtor$22@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$22
  0001c	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$22@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
this$ = 80
_Ptr$ = 88
<_Val_0>$ = 88
$T3 = 96
?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$20
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 60	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$20@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
this$ = 80
_Ptr$ = 88
<_Val_0>$ = 88
$T3 = 96
?dtor$22@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$22
  0001c	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00023	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
?dtor$22@?0???$emplace_back@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::emplace_back<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??$sleep_for@HU?$ratio@$0OBA@$00@std@@@this_thread@std@@YAXAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@1@@Z
_TEXT	SEGMENT
$T1 = 32
_Tgt$ = 32
__$ArrayPad$ = 48
_Rel_time$ = 80
??$sleep_for@HU?$ratio@$0OBA@$00@std@@@this_thread@std@@YAXAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@1@@Z PROC ; std::this_thread::sleep_for<int,std::ratio<3600,1> >, COMDAT

; 136  : 	{	// sleep for duration

$LN147:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000d	48 33 c4	 xor	 rax, rsp
  00010	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono

; 509  : 	return (_CT(_Left).count() < _CT(_Right).count());

  00015	83 39 00	 cmp	 DWORD PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 136  : 	{	// sleep for duration

  00018	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono

; 1018 : 	if (_Rel_time <= chrono::duration<_Rep, _Period>::zero())

  0001b	7f 0d		 jg	 SHORT $LN4@sleep_for

; 1019 : 		{	// negative or zero relative time, return zero
; 1020 : 		_Xt.sec = 0;

  0001d	33 c0		 xor	 eax, eax
  0001f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax

; 1021 : 		_Xt.nsec = 0;

  00024	89 44 24 28	 mov	 DWORD PTR $T1[rsp+8], eax

; 1022 : 		}
; 1023 : 	else

  00028	eb 4c		 jmp	 SHORT $LN5@sleep_for
$LN4@sleep_for:

; 974  : 		return (time_point(duration(_Xtime_get_ticks())));

  0002a	e8 00 00 00 00	 call	 _Xtime_get_ticks

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  0002f	4c 63 03	 movsxd	 r8, DWORD PTR [rbx]
  00032	48 ba 00 a0 b8
	30 46 03 00 00	 mov	 rdx, 3600000000000	; 0000034630b8a000H
  0003c	48 6b c8 64	 imul	 rcx, rax, 100		; 00000064H
  00040	4c 0f af c2	 imul	 r8, rdx
  00044	48 b8 b3 94 d6
	26 e8 0b 2e 11	 mov	 rax, 1237940039285380275 ; 112e0be826d694b3H

; 172  : 		_MyRep += _Right._MyRep;

  0004e	4c 03 c1	 add	 r8, rcx

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00051	49 f7 e8	 imul	 r8
  00054	48 c1 fa 1a	 sar	 rdx, 26
  00058	48 8b c2	 mov	 rax, rdx
  0005b	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  0005f	48 03 d0	 add	 rdx, rax
  00062	48 69 c2 00 ca
	9a 3b		 imul	 rax, rdx, 1000000000	; 3b9aca00H

; 1028 : 		_Xt.sec = chrono::duration_cast<chrono::seconds>(_T0).count();

  00069	48 89 54 24 20	 mov	 QWORD PTR $T1[rsp], rdx

; 178  : 		_MyRep -= _Right._MyRep;

  0006e	44 2b c0	 sub	 r8d, eax

; 1030 : 		_Xt.nsec = (long)_T0.count();

  00071	44 89 44 24 28	 mov	 DWORD PTR $T1[rsp+8], r8d
$LN5@sleep_for:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 137  : 	stdext::threads::xtime _Tgt = _To_xtime(_Rel_time);

  00076	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T1[rsp]

; 130  : 	_Thrd_sleep(_Abs_time);

  0007b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Tgt$[rsp]

; 137  : 	stdext::threads::xtime _Tgt = _To_xtime(_Rel_time);

  00080	66 0f 7f 44 24
	20		 movdqa	 XMMWORD PTR _Tgt$[rsp], xmm0

; 130  : 	_Thrd_sleep(_Abs_time);

  00086	e8 00 00 00 00	 call	 _Thrd_sleep

; 138  : 	this_thread::sleep_until(&_Tgt);
; 139  : 	}

  0008b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00090	48 33 cc	 xor	 rcx, rsp
  00093	e8 00 00 00 00	 call	 __security_check_cookie
  00098	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0009c	5b		 pop	 rbx
  0009d	c3		 ret	 0
??$sleep_for@HU?$ratio@$0OBA@$00@std@@@this_thread@std@@YAXAEBV?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@1@@Z ENDP ; std::this_thread::sleep_for<int,std::ratio<3600,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?0HX@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEAA@AEBH@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??$?0HX@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEAA@AEBH@Z PROC ; std::chrono::duration<int,std::ratio<3600,1> >::duration<int,std::ratio<3600,1> ><int,void>, COMDAT

; 116  : 			: _MyRep(static_cast<_Rep>(_Val))

  00000	8b 02		 mov	 eax, DWORD PTR [rdx]
  00002	89 01		 mov	 DWORD PTR [rcx], eax

; 118  : 		}

  00004	48 8b c1	 mov	 rax, rcx
  00007	c3		 ret	 0
??$?0HX@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEAA@AEBH@Z ENDP ; std::chrono::duration<int,std::ratio<3600,1> >::duration<int,std::ratio<3600,1> ><int,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\thread.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\users\alist_000\cppmisc\thread.cc
;	COMDAT ??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ
_TEXT	SEGMENT
$T1 = 32
_Tgt$2 = 32
__$ArrayPad$ = 48
this$ = 80
??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ PROC ; <lambda_e77d7e1e559843f44c4e0b6d970cdb28>::operator(), COMDAT

; 17   :         []() { std::this_thread::sleep_for(std::chrono::hours(1)); });

  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000b	48 33 c4	 xor	 rax, rsp
  0000e	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono

; 974  : 		return (time_point(duration(_Xtime_get_ticks())));

  00013	e8 00 00 00 00	 call	 _Xtime_get_ticks

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  00018	4c 6b c0 64	 imul	 r8, rax, 100		; 00000064H

; 172  : 		_MyRep += _Right._MyRep;

  0001c	48 b8 00 a0 b8
	30 46 03 00 00	 mov	 rax, 3600000000000	; 0000034630b8a000H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 130  : 	_Thrd_sleep(_Abs_time);

  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _Tgt$2[rsp]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono

; 172  : 		_MyRep += _Right._MyRep;

  0002b	4c 03 c0	 add	 r8, rax

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  0002e	48 b8 b3 94 d6
	26 e8 0b 2e 11	 mov	 rax, 1237940039285380275 ; 112e0be826d694b3H
  00038	49 f7 e8	 imul	 r8
  0003b	48 c1 fa 1a	 sar	 rdx, 26
  0003f	48 8b c2	 mov	 rax, rdx
  00042	48 c1 e8 3f	 shr	 rax, 63			; 0000003fH
  00046	48 03 d0	 add	 rdx, rax

; 1028 : 		_Xt.sec = chrono::duration_cast<chrono::seconds>(_T0).count();

  00049	48 89 54 24 20	 mov	 QWORD PTR $T1[rsp], rdx

; 556  : 	return (_CF::num == 1 && _CF::den == 1

  0004e	48 69 c2 00 ca
	9a 3b		 imul	 rax, rdx, 1000000000	; 3b9aca00H

; 178  : 		_MyRep -= _Right._MyRep;

  00055	44 2b c0	 sub	 r8d, eax

; 1030 : 		_Xt.nsec = (long)_T0.count();

  00058	44 89 44 24 28	 mov	 DWORD PTR $T1[rsp+8], r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 137  : 	stdext::threads::xtime _Tgt = _To_xtime(_Rel_time);

  0005d	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T1[rsp]
  00062	66 0f 7f 44 24
	20		 movdqa	 XMMWORD PTR _Tgt$2[rsp], xmm0

; 130  : 	_Thrd_sleep(_Abs_time);

  00068	e8 00 00 00 00	 call	 _Thrd_sleep
; File c:\users\alist_000\cppmisc\thread.cc

; 17   :         []() { std::this_thread::sleep_for(std::chrono::hours(1)); });

  0006d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00072	48 33 cc	 xor	 rcx, rsp
  00075	e8 00 00 00 00	 call	 __security_check_cookie
  0007a	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0007e	c3		 ret	 0
??R<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@QEBAXXZ ENDP ; <lambda_e77d7e1e559843f44c4e0b6d970cdb28>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 780  : 	{	// insert NTBS into char stream

$LN1289:
  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	41 54		 push	 r12
  00005	41 56		 push	 r14
  00007	41 57		 push	 r15
  00009	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000d	48 c7 44 24 40
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00016	48 89 9c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rbx
  0001e	4c 8b fa	 mov	 r15, rdx
  00021	48 8b f1	 mov	 rsi, rcx
  00024	48 89 4c 24 28	 mov	 QWORD PTR _Ostr$GSCopy$[rsp], rcx

; 781  : 	typedef char _Elem;
; 782  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 783  : 	ios_base::iostate _State = ios_base::goodbit;

  00029	33 db		 xor	 ebx, ebx
  0002b	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0002f	38 1a		 cmp	 BYTE PTR [rdx], bl
  00031	75 05		 jne	 SHORT $LN26@operator
  00033	45 33 f6	 xor	 r14d, r14d
  00036	eb 11		 jmp	 SHORT $LN27@operator
$LN26@operator:
  00038	49 83 ce ff	 or	 r14, -1
  0003c	0f 1f 40 00	 npad	 4
$LL1283@operator:
  00040	49 ff c6	 inc	 r14
  00043	42 38 1c 32	 cmp	 BYTE PTR [rdx+r14], bl
  00047	75 f7		 jne	 SHORT $LL1283@operator
$LN27@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  00049	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0004c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 423  : 		return (_Wide);

  00050	48 8b 7c 31 28	 mov	 rdi, QWORD PTR [rcx+rsi+40]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 785  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  00055	48 85 ff	 test	 rdi, rdi
  00058	7e 0a		 jle	 SHORT $LN17@operator
  0005a	49 3b fe	 cmp	 rdi, r14
  0005d	7e 05		 jle	 SHORT $LN17@operator
  0005f	49 2b fe	 sub	 rdi, r14
  00062	eb 02		 jmp	 SHORT $LN18@operator
$LN17@operator:
  00064	33 ff		 xor	 edi, edi
$LN18@operator:

; 99   : 			: _Myostr(_Ostr)

  00066	4c 8b e6	 mov	 r12, rsi
  00069	48 89 74 24 30	 mov	 QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0006e	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  00073	48 85 c9	 test	 rcx, rcx
  00076	74 07		 je	 SHORT $LN39@operator

; 102  : 				_Myostr.rdbuf()->_Lock();

  00078	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0007b	ff 50 08	 call	 QWORD PTR [rax+8]
  0007e	90		 npad	 1
$LN39@operator:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0007f	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00082	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00086	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0008b	75 14		 jne	 SHORT $LN35@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  0008d	48 8b 4c 31 50	 mov	 rcx, QWORD PTR [rcx+rsi+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00092	48 85 c9	 test	 rcx, rcx
  00095	74 0a		 je	 SHORT $LN35@operator
  00097	48 3b ce	 cmp	 rcx, rsi
  0009a	74 05		 je	 SHORT $LN35@operator

; 125  : 				_Ostr.tie()->flush();

  0009c	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
$LN35@operator:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  000a1	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000a4	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  000a8	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
  000ad	0f 94 c0	 sete	 al
  000b0	88 44 24 38	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 789  : 	if (!_Ok)

  000b4	84 c0		 test	 al, al
  000b6	75 0a		 jne	 SHORT $LN8@operator

; 790  : 		_State |= ios_base::badbit;

  000b8	bb 04 00 00 00	 mov	 ebx, 4

; 791  : 	else

  000bd	e9 21 01 00 00	 jmp	 $LN22@operator
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  000c2	8b 44 31 18	 mov	 eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 794  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  000c6	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  000cb	83 f8 40	 cmp	 eax, 64			; 00000040H
  000ce	74 6b		 je	 SHORT $LN1280@operator
$LL4@operator:

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  000d0	48 85 ff	 test	 rdi, rdi
  000d3	7e 5e		 jle	 SHORT $LN3@operator

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

  000d5	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000d8	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  000dc	44 0f b6 44 31
	58		 movzx	 r8d, BYTE PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  000e2	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  000e7	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  000eb	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000ef	74 25		 je	 SHORT $LN69@operator
  000f1	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  000f5	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  000f7	85 c0		 test	 eax, eax
  000f9	7e 1b		 jle	 SHORT $LN69@operator

; 308  : 		--*_IPcount;

  000fb	ff c8		 dec	 eax
  000fd	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  000ff	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00103	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00106	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0010a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0010d	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00110	41 0f b6 c0	 movzx	 eax, r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00114	eb 0a		 jmp	 SHORT $LN70@operator
$LN69@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  00116	41 0f b6 d0	 movzx	 edx, r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0011a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0011d	ff 50 18	 call	 QWORD PTR [rax+24]
$LN70@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 595  : 		return (_Left == _Right);

  00120	83 f8 ff	 cmp	 eax, -1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 796  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00123	75 09		 jne	 SHORT $LN2@operator

; 797  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 798  : 					{	// insertion failed, quit
; 799  : 					_State |= ios_base::badbit;

  00125	83 cb 04	 or	 ebx, 4
  00128	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx

; 800  : 					break;

  0012c	eb 05		 jmp	 SHORT $LN3@operator
$LN2@operator:

; 795  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  0012e	48 ff cf	 dec	 rdi
  00131	eb 9d		 jmp	 SHORT $LL4@operator
$LN3@operator:

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  00133	85 db		 test	 ebx, ebx
  00135	0f 85 88 00 00
	00		 jne	 $LN6@operator
$LN1280@operator:
  0013b	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  0013e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00142	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 208  : 		return (xsputn(_Ptr, _Count));

  00147	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0014a	4d 8b c6	 mov	 r8, r14
  0014d	49 8b d7	 mov	 rdx, r15
  00150	ff 50 48	 call	 QWORD PTR [rax+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 804  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  00153	49 3b c6	 cmp	 rax, r14
  00156	74 08		 je	 SHORT $LL1284@operator

; 805  : 			_State |= ios_base::badbit;

  00158	bb 04 00 00 00	 mov	 ebx, 4

; 806  : 
; 807  : 		if (_State == ios_base::goodbit)

  0015d	eb 60		 jmp	 SHORT $LN1287@operator
  0015f	90		 npad	 1
$LL1284@operator:

; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00160	48 85 ff	 test	 rdi, rdi
  00163	7e 5e		 jle	 SHORT $LN6@operator

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00165	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00168	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  0016c	44 0f b6 44 31
	58		 movzx	 r8d, BYTE PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  00172	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00177	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  0017b	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0017f	74 25		 je	 SHORT $LN99@operator
  00181	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00185	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00187	85 c0		 test	 eax, eax
  00189	7e 1b		 jle	 SHORT $LN99@operator

; 308  : 		--*_IPcount;

  0018b	ff c8		 dec	 eax
  0018d	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0018f	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00193	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00196	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0019a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0019d	44 88 02	 mov	 BYTE PTR [rdx], r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  001a0	41 0f b6 c0	 movzx	 eax, r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  001a4	eb 0a		 jmp	 SHORT $LN100@operator
$LN99@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 589  : 		return ((unsigned char)_Ch);

  001a6	41 0f b6 d0	 movzx	 edx, r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  001aa	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  001ad	ff 50 18	 call	 QWORD PTR [rax+24]
$LN100@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 595  : 		return (_Left == _Right);

  001b0	83 f8 ff	 cmp	 eax, -1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 809  : 				if (_Traits::eq_int_type(_Traits::eof(),

  001b3	75 05		 jne	 SHORT $LN5@operator

; 810  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 811  : 					{	// insertion failed, quit
; 812  : 					_State |= ios_base::badbit;

  001b5	83 cb 04	 or	 ebx, 4

; 813  : 					break;

  001b8	eb 05		 jmp	 SHORT $LN1287@operator
$LN5@operator:

; 808  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  001ba	48 ff cf	 dec	 rdi
  001bd	eb a1		 jmp	 SHORT $LL1284@operator
$LN1287@operator:

; 805  : 			_State |= ios_base::badbit;

  001bf	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
$LN6@operator:

; 814  : 					}
; 815  : 		_Ostr.width(0);

  001c3	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001c6	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  001ca	48 c7 44 31 28
	00 00 00 00	 mov	 QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
  001d3	eb 0e		 jmp	 SHORT $LN22@operator
$LN23@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
  001d5	8b 5c 24 20	 mov	 ebx, DWORD PTR _State$[rsp]
  001d9	4c 8b 64 24 30	 mov	 r12, QWORD PTR _Ok$[rsp]
  001de	48 8b 74 24 28	 mov	 rsi, QWORD PTR _Ostr$GSCopy$[rsp]
$LN22@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 819  : 	_Ostr.setstate(_State);

  001e3	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001e6	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  001ea	48 03 ce	 add	 rcx, rsi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 59   : 		if (_State != goodbit)

  001ed	85 db		 test	 ebx, ebx
  001ef	74 18		 je	 SHORT $LN1254@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  001f1	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  001f4	0b d3		 or	 edx, ebx

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  001f6	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  001fb	75 03		 jne	 SHORT $LN1260@operator
  001fd	83 ca 04	 or	 edx, 4
$LN1260@operator:
  00200	45 33 c0	 xor	 r8d, r8d
  00203	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00208	90		 npad	 1
$LN1254@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  00209	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  0020e	84 c0		 test	 al, al
  00210	75 09		 jne	 SHORT $LN1263@operator

; 133  : 				this->_Myostr._Osfx();

  00212	49 8b cc	 mov	 rcx, r12
  00215	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  0021a	90		 npad	 1
$LN1263@operator:

; 107  : 			if (_Myostr.rdbuf() != 0)

  0021b	49 8b 0c 24	 mov	 rcx, QWORD PTR [r12]
  0021f	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00223	4a 8b 4c 22 48	 mov	 rcx, QWORD PTR [rdx+r12+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00228	48 85 c9	 test	 rcx, rcx
  0022b	74 07		 je	 SHORT $LN1267@operator

; 108  : 				_Myostr.rdbuf()->_Unlock();

  0022d	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00230	ff 52 10	 call	 QWORD PTR [rdx+16]
  00233	90		 npad	 1
$LN1267@operator:

; 820  : 	return (_Ostr);

  00234	48 8b c6	 mov	 rax, rsi

; 821  : 	}

  00237	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR [rsp+144]
  0023f	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00243	41 5f		 pop	 r15
  00245	41 5e		 pop	 r14
  00247	41 5c		 pop	 r12
  00249	5f		 pop	 rdi
  0024a	5e		 pop	 rsi
  0024b	c3		 ret	 0
$LN1286@operator:
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0

; 816  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN128@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN128@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN131@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 816  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1288@catch$0
$LN131@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1288@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$312@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$312
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$312@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$312
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$313@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$313
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$313@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$313
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 816  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN128@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN128@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN131@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 816  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1288@catch$0
$LN131@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1288@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$312@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$312
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$312@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$312
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
$T1 = 64
_Ostr$ = 128
_Val$ = 136
?dtor$313@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$313
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$313@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$313
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
_TEXT	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT

; 574  : 		{	// flush output stream

$LN61:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 575  : 		if (_Myios::rdbuf() != 0)

  00012	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00015	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00019	48 83 7c 0a 48
	00		 cmp	 QWORD PTR [rdx+rcx+72], 0
  0001f	0f 84 80 00 00
	00		 je	 $LN60@flush

; 576  : 			{	// buffer exists, flush it
; 577  : 			const sentry _Ok(*this);

  00025	48 8b d1	 mov	 rdx, rcx
  00028	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ok$2[rsp]
  0002d	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00032	90		 npad	 1

; 579  : 			if (_Ok && _Myios::rdbuf()->pubsync() == -1)

  00033	80 7c 24 30 00	 cmp	 BYTE PTR _Ok$2[rsp+8], 0
  00038	74 3a		 je	 SHORT $LN40@flush
  0003a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003d	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00041	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 145  : 		return (sync());

  00046	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00049	ff 50 68	 call	 QWORD PTR [rax+104]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 579  : 			if (_Ok && _Myios::rdbuf()->pubsync() == -1)

  0004c	83 f8 ff	 cmp	 eax, -1
  0004f	75 23		 jne	 SHORT $LN40@flush

; 580  : 				_Myios::setstate(ios_base::badbit);	// sync failed

  00051	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00054	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00058	48 03 cb	 add	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  0005b	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  0005e	83 ca 04	 or	 edx, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00061	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00066	75 03		 jne	 SHORT $LN46@flush
  00068	83 ca 04	 or	 edx, 4
$LN46@flush:
  0006b	45 33 c0	 xor	 r8d, r8d
  0006e	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00073	90		 npad	 1
$LN40@flush:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  00074	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00079	84 c0		 test	 al, al
  0007b	75 0b		 jne	 SHORT $LN49@flush

; 133  : 				this->_Myostr._Osfx();

  0007d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Ok$2[rsp]
  00082	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
  00087	90		 npad	 1
$LN49@flush:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00088	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Ok$2[rsp]
  0008d	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00090	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00094	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00099	48 85 c9	 test	 rcx, rcx
  0009c	74 07		 je	 SHORT $LN53@flush

; 108  : 				_Myostr.rdbuf()->_Unlock();

  0009e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000a1	ff 50 10	 call	 QWORD PTR [rax+16]
  000a4	90		 npad	 1
$LN53@flush:
$LN60@flush:

; 581  : 			}
; 582  : 		return (*this);

  000a5	48 8b c3	 mov	 rax, rbx

; 583  : 		}

  000a8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ac	5b		 pop	 rbx
  000ad	c3		 ret	 0
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Ok$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
  00011	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Ok$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$2@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
  00011	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Osfx, COMDAT

; 165  : 		{	// perform any wrapup

$LN30:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 167  : 		if (this->good() && this->flags() & ios_base::unitbuf)

  00012	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00015	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00019	83 7c 0a 10 00	 cmp	 DWORD PTR [rdx+rcx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 167  : 		if (this->good() && this->flags() & ios_base::unitbuf)

  0001e	75 3a		 jne	 SHORT $LN21@Osfx
  00020	f6 44 0a 18 02	 test	 BYTE PTR [rdx+rcx+24], 2
  00025	74 33		 je	 SHORT $LN21@Osfx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00027	48 8b 4c 0a 48	 mov	 rcx, QWORD PTR [rdx+rcx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 145  : 		return (sync());

  0002c	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002f	ff 50 68	 call	 QWORD PTR [rax+104]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 168  : 			if (_Myios::rdbuf()->pubsync() == -1)	// flush stream as needed

  00032	83 f8 ff	 cmp	 eax, -1
  00035	75 23		 jne	 SHORT $LN21@Osfx

; 169  : 				_Myios::setstate(ios_base::badbit);

  00037	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003a	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  0003e	48 03 cb	 add	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00041	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00044	83 ca 04	 or	 edx, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00047	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  0004c	75 03		 jne	 SHORT $LN27@Osfx
  0004e	83 ca 04	 or	 edx, 4
$LN27@Osfx:
  00051	45 33 c0	 xor	 r8d, r8d
  00054	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00059	90		 npad	 1
$LN21@Osfx:
$LN9@Osfx:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 172  : 		}

  0005a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005e	5b		 pop	 rbx
  0005f	c3		 ret	 0
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:

; 170  : 		_CATCH_ALL
; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:

; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ PROC ; std::basic_ios<char,std::char_traits<char> >::fill, COMDAT

; 113  : 		return (_Fillch);

  00000	0f b6 41 58	 movzx	 eax, BYTE PTR [rcx+88]

; 114  : 		}

  00004	c3		 ret	 0
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ENDP ; std::basic_ios<char,std::char_traits<char> >::fill
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT

; 92   : 		return (_Mystrbuf);

  00000	48 8b 41 48	 mov	 rax, QWORD PTR [rcx+72]

; 93   : 		}

  00004	c3		 ret	 0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT

; 80   : 		return (_Tiestr);

  00000	48 8b 41 50	 mov	 rax, QWORD PTR [rcx+80]

; 81   : 		}

  00004	c3		 ret	 0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT

; 58   : 		{	// merge _State into state, possibly reraise exception

  00000	8b c2		 mov	 eax, edx

; 59   : 		if (_State != goodbit)

  00002	85 d2		 test	 edx, edx
  00004	74 14		 je	 SHORT $LN2@setstate

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00006	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
  00009	0b d0		 or	 edx, eax

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0000b	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00010	75 03		 jne	 SHORT $LN8@setstate
  00012	83 ca 04	 or	 edx, 4
$LN8@setstate:
  00015	e9 00 00 00 00	 jmp	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
$LN2@setstate:

; 61   : 		}

  0001a	c3		 ret	 0
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00000	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00005	75 03		 jne	 SHORT $LN3@clear
  00007	83 ca 04	 or	 edx, 4
$LN3@clear:
  0000a	e9 00 00 00 00	 jmp	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXPEAVthread@2@0@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXPEAVthread@2@0@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range, COMDAT

; 1817 : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXPEAVthread@2@0@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Xlen, COMDAT

; 1787 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1788 : 		_Xlength_error("vector<T> too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBAXXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy, COMDAT

; 1659 : 		{	// free all storage

$LN141:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1660 : 		if (this->_Myfirst() != pointer())

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 41		 je	 SHORT $LN2@Tidy

; 1661 : 			{	// something to free, destroy and deallocate it
; 1662 : 			this->_Orphan_all();
; 1663 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00011	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  00015	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00018	48 3b ca	 cmp	 rcx, rdx
  0001b	74 12		 je	 SHORT $LN41@Tidy
  0001d	0f 1f 00	 npad	 3
$LL42@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00020	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0

; 56   : 		if (joinable())

  00024	75 32		 jne	 SHORT $LN140@Tidy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00026	48 83 c0 10	 add	 rax, 16
  0002a	48 3b c2	 cmp	 rax, rdx
  0002d	75 f1		 jne	 SHORT $LL42@Tidy
$LN41@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  0002f	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00033	48 8b d1	 mov	 rdx, rcx
  00036	4c 2b c1	 sub	 r8, rcx
  00039	48 8b cb	 mov	 rcx, rbx
  0003c	49 c1 f8 04	 sar	 r8, 4
  00040	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate

; 1665 : 				this->_Myend() - this->_Myfirst());
; 1666 : 			this->_Myfirst() = pointer();

  00045	33 c0		 xor	 eax, eax
  00047	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1667 : 			this->_Mylast() = pointer();

  0004a	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1668 : 			this->_Myend() = pointer();

  0004e	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1670 : 		}

  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5b		 pop	 rbx
  00057	c3		 ret	 0
$LN140@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 57   : 			_XSTD terminate();

  00058	e8 00 00 00 00	 call	 terminate
  0005d	cc		 int	 3
$LN139@Tidy:
?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Reserve, COMDAT

; 1649 : 		{	// ensure room for _Count new elements, grow exponentially

$LN136:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1051 : 		return (this->_Myend() - this->_Mylast());

  00004	4c 8b 51 10	 mov	 r10, QWORD PTR [rcx+16]

; 1649 : 		{	// ensure room for _Count new elements, grow exponentially

  00008	4c 8b c9	 mov	 r9, rcx

; 1051 : 		return (this->_Myend() - this->_Mylast());

  0000b	4c 8b 41 08	 mov	 r8, QWORD PTR [rcx+8]
  0000f	49 8b c2	 mov	 rax, r10
  00012	49 2b c0	 sub	 rax, r8
  00015	48 c1 f8 04	 sar	 rax, 4

; 1650 : 		if (_Unused_capacity() < _Count)

  00019	48 3b c2	 cmp	 rax, rdx
  0001c	73 51		 jae	 SHORT $LN2@Reserve

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  0001e	4c 2b 01	 sub	 r8, QWORD PTR [rcx]

; 1651 : 			{	// need more room, try to get it
; 1652 : 			if (max_size() - size() < _Count)

  00021	49 bb ff ff ff
	ff ff ff ff 0f	 mov	 r11, 1152921504606846975 ; 0fffffffffffffffH

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  0002b	49 c1 f8 04	 sar	 r8, 4

; 1651 : 			{	// need more room, try to get it
; 1652 : 			if (max_size() - size() < _Count)

  0002f	49 8b c3	 mov	 rax, r11
  00032	49 2b c0	 sub	 rax, r8
  00035	48 3b c2	 cmp	 rax, rdx
  00038	72 3a		 jb	 SHORT $LN134@Reserve

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  0003a	4d 2b 11	 sub	 r10, QWORD PTR [r9]

; 1653 : 				_Xlen();
; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  0003d	49 8d 0c 10	 lea	 rcx, QWORD PTR [r8+rdx]

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00041	49 c1 fa 04	 sar	 r10, 4

; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00045	45 33 c0	 xor	 r8d, r8d
  00048	49 8b c2	 mov	 rax, r10
  0004b	48 d1 e8	 shr	 rax, 1
  0004e	4c 2b d8	 sub	 r11, rax
  00051	4d 3b da	 cmp	 r11, r10
  00054	4a 8d 14 10	 lea	 rdx, QWORD PTR [rax+r10]
  00058	49 0f 42 d0	 cmovb	 rdx, r8

; 1612 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1613 : 		if (_Capacity < _Count)

  0005c	48 3b d1	 cmp	 rdx, rcx
  0005f	48 0f 42 d1	 cmovb	 rdx, rcx

; 1653 : 				_Xlen();
; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  00063	49 8b c9	 mov	 rcx, r9

; 1655 : 			}
; 1656 : 		}

  00066	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 1653 : 				_Xlen();
; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  0006a	e9 00 00 00 00	 jmp	 ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Reallocate
$LN2@Reserve:

; 1655 : 			}
; 1656 : 		}

  0006f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00073	c3		 ret	 0
$LN134@Reserve:

; 1788 : 		_Xlength_error("vector<T> too long");

  00074	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0007b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00080	cc		 int	 3
$LN133@Reserve:
?_Reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 96
_Count$ = 104
_Ptr$ = 112
?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Reallocate, COMDAT

; 1624 : 		{	// move to array of exactly _Count elements

$LN220:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 56		 push	 r14
  0000e	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00012	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0001b	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00020	48 8b f2	 mov	 rsi, rdx
  00023	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 874  : 		return (_Mybase::allocate(_Count));

  00026	e8 00 00 00 00	 call	 ?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::allocator<std::thread>::allocate
  0002b	4c 8b f0	 mov	 r14, rax
  0002e	48 89 44 24 70	 mov	 QWORD PTR _Ptr$[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 726  : 	return {};

  00033	33 c0		 xor	 eax, eax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  00035	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00039	4c 8b cb	 mov	 r9, rbx
  0003c	4d 8b c6	 mov	 r8, r14
  0003f	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]
  00043	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00046	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAVthread@std@@PEAV12@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::thread * __ptr64,std::thread * __ptr64,std::allocator<std::thread> >
  0004b	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  0004c	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00050	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00053	48 8b f9	 mov	 rdi, rcx
  00056	48 2b fa	 sub	 rdi, rdx

; 1625 : 		pointer _Ptr = this->_Getal().allocate(_Count);
; 1626 : 
; 1627 : 		_TRY_BEGIN
; 1628 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);
; 1629 : 		_CATCH_ALL
; 1630 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1631 : 		_RERAISE;
; 1632 : 		_CATCH_END
; 1633 : 
; 1634 : 		size_type _Size = size();
; 1635 : 		if (this->_Myfirst() != pointer())

  00059	48 85 d2	 test	 rdx, rdx
  0005c	74 32		 je	 SHORT $LN3@Reallocate

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  0005e	48 8b c2	 mov	 rax, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00061	48 3b d1	 cmp	 rdx, rcx
  00064	74 17		 je	 SHORT $LN121@Reallocate
$LL122@Reallocate:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00066	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0

; 56   : 		if (joinable())

  0006a	75 0b		 jne	 SHORT $LN215@Reallocate
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  0006c	48 83 c0 10	 add	 rax, 16
  00070	48 3b c1	 cmp	 rax, rcx
  00073	75 f1		 jne	 SHORT $LL122@Reallocate
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 56   : 		if (joinable())

  00075	eb 06		 jmp	 SHORT $LN121@Reallocate
$LN215@Reallocate:

; 57   : 			_XSTD terminate();

  00077	e8 00 00 00 00	 call	 terminate
  0007c	cc		 int	 3
$LN121@Reallocate:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1638 : 			this->_Getal().deallocate(this->_Myfirst(),

  0007d	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00081	4c 2b c2	 sub	 r8, rdx
  00084	49 c1 f8 04	 sar	 r8, 4
  00088	48 8b cb	 mov	 rcx, rbx
  0008b	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate
$LN3@Reallocate:

; 1639 : 				this->_Myend() - this->_Myfirst());
; 1640 : 			}
; 1641 : 
; 1642 : 		this->_Orphan_all();
; 1643 : 		this->_Myend() = _Ptr + _Count;

  00090	48 c1 e6 04	 shl	 rsi, 4
  00094	49 03 f6	 add	 rsi, r14
  00097	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 1644 : 		this->_Mylast() = _Ptr + _Size;

  0009b	48 83 e7 f0	 and	 rdi, -16
  0009f	49 03 fe	 add	 rdi, r14
  000a2	48 89 7b 08	 mov	 QWORD PTR [rbx+8], rdi

; 1645 : 		this->_Myfirst() = _Ptr;

  000a6	4c 89 33	 mov	 QWORD PTR [rbx], r14

; 1646 : 		}

  000a9	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  000ae	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b2	41 5e		 pop	 r14
  000b4	5f		 pop	 rdi
  000b5	5e		 pop	 rsi
  000b6	c3		 ret	 0
$LN219@Reallocate:
?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Reallocate
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 96
_Count$ = 104
_Ptr$ = 112
?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Reallocate'::`1'::catch$0

; 1625 : 		pointer _Ptr = this->_Getal().allocate(_Count);
; 1626 : 
; 1627 : 		_TRY_BEGIN
; 1628 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);
; 1629 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z$0:

; 1625 : 		pointer _Ptr = this->_Getal().allocate(_Count);
; 1626 : 
; 1627 : 		_TRY_BEGIN
; 1628 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);
; 1629 : 		_CATCH_ALL
; 1630 : 		this->_Getal().deallocate(_Ptr, _Count);

  0000d	4c 8b 45 68	 mov	 r8, QWORD PTR _Count$[rbp]
  00011	48 8b 55 70	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00015	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate

; 1625 : 		pointer _Ptr = this->_Getal().allocate(_Count);
; 1626 : 
; 1627 : 		_TRY_BEGIN
; 1628 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);
; 1629 : 		_CATCH_ALL
; 1630 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1631 : 		_RERAISE;

  0001e	33 d2		 xor	 edx, edx
  00020	33 c9		 xor	 ecx, ecx
  00022	e8 00 00 00 00	 call	 _CxxThrowException
  00027	90		 npad	 1
?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 96
_Count$ = 104
_Ptr$ = 112
?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Reallocate'::`1'::catch$0

; 1629 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z$0:

; 1630 : 		this->_Getal().deallocate(_Ptr, _Count);

  0000d	4c 8b 45 68	 mov	 r8, QWORD PTR _Count$[rbp]
  00011	48 8b 55 70	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00015	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate

; 1631 : 		_RERAISE;

  0001e	33 d2		 xor	 edx, edx
  00020	33 c9		 xor	 ecx, ecx
  00022	e8 00 00 00 00	 call	 _CxxThrowException
  00027	90		 npad	 1
?catch$0@?0??_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBA_K_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Grow_to, COMDAT

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00000	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]

; 1609 : 		size_type _Capacity = capacity();
; 1610 : 
; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00004	45 33 d2	 xor	 r10d, r10d

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00007	4c 2b 09	 sub	 r9, QWORD PTR [rcx]

; 1609 : 		size_type _Capacity = capacity();
; 1610 : 
; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  0000a	48 b9 ff ff ff
	ff ff ff ff 0f	 mov	 rcx, 1152921504606846975 ; 0fffffffffffffffH

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00014	49 c1 f9 04	 sar	 r9, 4

; 1609 : 		size_type _Capacity = capacity();
; 1610 : 
; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00018	4d 8b c1	 mov	 r8, r9
  0001b	49 d1 e8	 shr	 r8, 1
  0001e	49 2b c8	 sub	 rcx, r8
  00021	49 3b c9	 cmp	 rcx, r9
  00024	4b 8d 04 08	 lea	 rax, QWORD PTR [r8+r9]
  00028	49 0f 42 c2	 cmovb	 rax, r10

; 1612 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1613 : 		if (_Capacity < _Count)

  0002c	48 3b c2	 cmp	 rax, rdx
  0002f	48 0f 42 c2	 cmovb	 rax, rdx

; 1614 : 			_Capacity = _Count;
; 1615 : 		return (_Capacity);
; 1616 : 		}

  00033	c3		 ret	 0
?_Grow_to@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEBA_K_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXPEAVthread@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXPEAVthread@2@0@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy, COMDAT

; 1603 : 		{	// destroy [_First, _Last) using allocator

$LN50:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00004	49 3b d0	 cmp	 rdx, r8
  00007	74 16		 je	 SHORT $LN11@Destroy
  00009	0f 1f 80 00 00
	00 00		 npad	 7
$LL12@Destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00010	83 7a 08 00	 cmp	 DWORD PTR [rdx+8], 0

; 56   : 		if (joinable())

  00014	75 0e		 jne	 SHORT $LN49@Destroy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00016	48 83 c2 10	 add	 rdx, 16
  0001a	49 3b d0	 cmp	 rdx, r8
  0001d	75 f1		 jne	 SHORT $LL12@Destroy
$LN11@Destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1605 : 		}

  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
$LN49@Destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 57   : 			_XSTD terminate();

  00024	e8 00 00 00 00	 call	 terminate
  00029	cc		 int	 3
$LN48@Destroy:
?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAXPEAVthread@2@0@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::max_size, COMDAT

; 1188 : 		return (this->_Getal().max_size());

  00000	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 1189 : 		}

  0000a	c3		 ret	 0
?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::size, COMDAT

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  00007	48 c1 f8 04	 sar	 rax, 4

; 1184 : 		}

  0000b	c3		 ret	 0
?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::end, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1071 : 		return (iterator(this->_Mylast(), &this->_Get_data()));

  00007	48 8b c2	 mov	 rax, rdx

; 1072 : 		}

  0000a	c3		 ret	 0
?end@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::begin, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1061 : 		return (iterator(this->_Myfirst(), &this->_Get_data()));

  00006	48 8b c2	 mov	 rax, rdx

; 1062 : 		}

  00009	c3		 ret	 0
?begin@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Unused_capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Unused_capacity, COMDAT

; 1051 : 		return (this->_Myend() - this->_Mylast());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 41 08	 sub	 rax, QWORD PTR [rcx+8]
  00008	48 c1 f8 04	 sar	 rax, 4

; 1052 : 		}

  0000c	c3		 ret	 0
?_Unused_capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::capacity, COMDAT

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  00007	48 c1 f8 04	 sar	 rax, 4

; 1047 : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::reserve, COMDAT

; 1035 : 		{	// determine new minimum length of allocated storage

$LN50:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00004	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00008	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  0000b	48 c1 f8 04	 sar	 rax, 4

; 1036 : 		if (capacity() < _Count)

  0000f	48 3b c2	 cmp	 rax, rdx
  00012	73 18		 jae	 SHORT $LN2@reserve

; 1037 : 			{	// something to do, check and reallocate
; 1038 : 			if (max_size() < _Count)

  00014	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0001e	48 3b d0	 cmp	 rdx, rax
  00021	77 0e		 ja	 SHORT $LN48@reserve

; 1041 : 			}
; 1042 : 		}

  00023	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 1039 : 				_Xlen();
; 1040 : 			_Reallocate(_Count);

  00027	e9 00 00 00 00	 jmp	 ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Reallocate
$LN2@reserve:

; 1041 : 			}
; 1042 : 		}

  0002c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00030	c3		 ret	 0
$LN48@reserve:

; 1788 : 		_Xlength_error("vector<T> too long");

  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00038	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0003d	cc		 int	 3
$LN47@reserve:
?reserve@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >, COMDAT

; 978  : 		{	// destroy the object

$LN144:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1660 : 		if (this->_Myfirst() != pointer())

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 41		 je	 SHORT $LN4@vector

; 1661 : 			{	// something to free, destroy and deallocate it
; 1662 : 			this->_Orphan_all();
; 1663 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00011	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  00015	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00018	48 3b ca	 cmp	 rcx, rdx
  0001b	74 12		 je	 SHORT $LN43@vector
  0001d	0f 1f 00	 npad	 3
$LL44@vector:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00020	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0

; 56   : 		if (joinable())

  00024	75 32		 jne	 SHORT $LN143@vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00026	48 83 c0 10	 add	 rax, 16
  0002a	48 3b c2	 cmp	 rax, rdx
  0002d	75 f1		 jne	 SHORT $LL44@vector
$LN43@vector:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  0002f	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00033	48 8b d1	 mov	 rdx, rcx
  00036	4c 2b c1	 sub	 r8, rcx
  00039	48 8b cb	 mov	 rcx, rbx
  0003c	49 c1 f8 04	 sar	 r8, 4
  00040	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate

; 1665 : 				this->_Myend() - this->_Myfirst());
; 1666 : 			this->_Myfirst() = pointer();

  00045	33 c0		 xor	 eax, eax
  00047	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1667 : 			this->_Mylast() = pointer();

  0004a	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1668 : 			this->_Myend() = pointer();

  0004e	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 980  : 		}

  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5b		 pop	 rbx
  00057	c3		 ret	 0
$LN143@vector:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 57   : 			_XSTD terminate();

  00058	e8 00 00 00 00	 call	 terminate
  0005d	cc		 int	 3
$LN142@vector:
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >, COMDAT

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 711  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_second, COMDAT

; 319  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 320  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_second, COMDAT

; 314  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 315  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first, COMDAT

; 299  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 300  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first, COMDAT

; 294  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 295  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::thread> >,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >, COMDAT

; 479  : 		{	// initialize values
; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 483  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myend, COMDAT

; 671  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 672  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myend, COMDAT

; 666  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 667  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Mylast, COMDAT

; 661  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 662  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Mylast, COMDAT

; 656  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 657  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myfirst, COMDAT

; 651  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 652  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBQEAVthread@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myfirst, COMDAT

; 646  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 647  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAPEAVthread@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Get_data, COMDAT

; 641  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 642  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Get_data, COMDAT

; 636  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 637  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Getal, COMDAT

; 631  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 632  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Getal, COMDAT

; 626  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 627  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Orphan_all, COMDAT

; 616  : 		_Get_data()._Orphan_all();
; 617  : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >, COMDAT

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 515  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_alloc@U?$_Vec_base_types@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >::_Vector_alloc<std::_Vec_base_types<std::thread,std::allocator<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::thread> >::max_size, COMDAT

; 906  : 		return (_Mytraits::max_size(*this));

  00000	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 907  : 		}

  0000a	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::thread> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate, COMDAT

; 884  : 		{	// deallocate object at _Ptr, ignore size

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 39		 ja	 SHORT $LN16@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	49 c1 e0 04	 shl	 r8, 4

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0001e	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00020	f6 c2 1f	 test	 dl, 31
  00023	75 2d		 jne	 SHORT $LN18@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00025	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00029	48 3b c2	 cmp	 rax, rdx
  0002c	73 2a		 jae	 SHORT $LN19@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002e	48 2b d0	 sub	 rdx, rax
  00031	48 83 fa 08	 cmp	 rdx, 8
  00035	72 27		 jb	 SHORT $LN20@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00037	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003b	77 27		 ja	 SHORT $LN21@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003d	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00040	48 8b ca	 mov	 rcx, rdx

; 885  : 		_Mybase::deallocate(_Ptr, _Count);
; 886  : 		}

  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00047	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00051	cc		 int	 3
$LN18@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00052	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00057	cc		 int	 3
$LN19@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00058	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005d	cc		 int	 3
$LN20@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00063	cc		 int	 3
$LN21@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00064	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00069	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAXPEAVthread@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::thread> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?allocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::thread> >::allocate, COMDAT

; 874  : 		return (_Mybase::allocate(_Count));

  00000	e9 00 00 00 00	 jmp	 ?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::allocator<std::thread>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::thread> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<std::thread> >::_Wrap_alloc<std::allocator<std::thread> >, COMDAT

; 835  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::thread> >::_Wrap_alloc<std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z
_TEXT	SEGMENT
_Al$ = 8
?max_size@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::thread> >::max_size, COMDAT

; 767  : 		return (_Al.max_size());

  00000	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 768  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::thread> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@Vthread@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@Vthread@std@@@std@@QEBA_KXZ PROC	; std::allocator<std::thread>::max_size, COMDAT

; 649  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 650  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator@Vthread@std@@@std@@QEBA_KXZ ENDP	; std::allocator<std::thread>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z PROC ; std::allocator<std::thread>::allocate, COMDAT

; 624  : 		{	// allocate array of _Count elements

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN3@allocate:

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN4@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0001a	48 3b d0	 cmp	 rdx, rax
  0001d	77 43		 ja	 SHORT $LN14@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  0001f	48 c1 e2 04	 shl	 rdx, 4

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00023	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0002a	72 27		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002c	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  00030	48 3b ca	 cmp	 rcx, rdx
  00033	76 33		 jbe	 SHORT $LN16@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003a	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0003d	48 85 c0	 test	 rax, rax
  00040	74 2c		 je	 SHORT $LN17@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00042	48 83 c0 27	 add	 rax, 39			; 00000027H
  00046	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0004a	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00053	48 8b ca	 mov	 rcx, rdx
  00056	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0005b	48 85 c0	 test	 rax, rax
  0005e	75 ab		 jne	 SHORT $LN3@allocate
  00060	eb 12		 jmp	 SHORT $LN18@allocate
$LN14@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00062	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00067	cc		 int	 3
$LN16@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00068	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006d	cc		 int	 3
$LN17@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN18@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00074	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00079	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ENDP ; std::allocator<std::thread>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@2@_K@Z PROC ; std::allocator<std::thread>::deallocate, COMDAT

; 619  : 		{	// deallocate object at _Ptr

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 39		 ja	 SHORT $LN13@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	49 c1 e0 04	 shl	 r8, 4

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0001e	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00020	f6 c2 1f	 test	 dl, 31
  00023	75 2d		 jne	 SHORT $LN15@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00025	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00029	48 3b c2	 cmp	 rax, rdx
  0002c	73 2a		 jae	 SHORT $LN16@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002e	48 2b d0	 sub	 rdx, rax
  00031	48 83 fa 08	 cmp	 rdx, 8
  00035	72 27		 jb	 SHORT $LN17@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00037	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003b	77 27		 ja	 SHORT $LN18@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003d	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00040	48 8b ca	 mov	 rcx, rdx

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 621  : 		}

  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00047	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00051	cc		 int	 3
$LN15@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00052	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00057	cc		 int	 3
$LN16@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00058	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005d	cc		 int	 3
$LN17@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00063	cc		 int	 3
$LN18@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00064	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00069	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@Vthread@std@@@std@@QEAAXPEAVthread@2@_K@Z ENDP ; std::allocator<std::thread>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@Vthread@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@Vthread@std@@@std@@QEAA@XZ PROC		; std::allocator<std::thread>::allocator<std::thread>, COMDAT

; 600  : 		{	// construct default allocator (do nothing)
; 601  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@Vthread@std@@@std@@QEAA@XZ ENDP		; std::allocator<std::thread>::allocator<std::thread>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\thread.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\thread.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\thread.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\thread.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\thread.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\users\alist_000\cppmisc\thread.cc
;	COMDAT main
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
threads$ = 64
$T3 = 160
$T4 = 168
_Ptr$ = 176
$T5 = 184
main	PROC						; COMDAT

; 9    : int main() {

$LN575:
  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	41 57		 push	 r15
  00009	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000d	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00016	0f 57 c0	 xorps	 xmm0, xmm0
  00019	f3 0f 7f 44 24
	40		 movdqu	 XMMWORD PTR threads$[rsp], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 482  : 		_Myend = pointer();

  0001f	45 33 f6	 xor	 r14d, r14d
  00022	4c 89 74 24 50	 mov	 QWORD PTR threads$[rsp+16], r14

; 1040 : 			_Reallocate(_Count);

  00027	ba e8 03 00 00	 mov	 edx, 1000		; 000003e8H
  0002c	48 8d 4c 24 40	 lea	 rcx, QWORD PTR threads$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Reallocate
; File c:\users\alist_000\cppmisc\thread.cc

; 14   :   std::cout << "creating\n";

  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09CFCFMFND@creating?6?$AA@
  0003d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00044	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 15   :   for (int i = 0; i < 100; ++i) {

  00049	41 8b fe	 mov	 edi, r14d
  0004c	49 bf ff ff ff
	ff ff ff ff 0f	 mov	 r15, 1152921504606846975 ; 0fffffffffffffffH
  00056	48 8b 74 24 50	 mov	 rsi, QWORD PTR threads$[rsp+16]
  0005b	48 8b 5c 24 48	 mov	 rbx, QWORD PTR threads$[rsp+8]
$LL4@main:

; 16   :     threads.emplace_back(

  00060	33 c0		 xor	 eax, eax
  00062	88 84 24 a0 00
	00 00		 mov	 BYTE PTR $T3[rsp], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 929  : 		if (this->_Mylast() == this->_Myend())

  00069	48 3b de	 cmp	 rbx, rsi
  0006c	75 68		 jne	 SHORT $LN88@main

; 1051 : 		return (this->_Myend() - this->_Mylast());

  0006e	48 8b c6	 mov	 rax, rsi
  00071	48 2b c3	 sub	 rax, rbx
  00074	48 c1 f8 04	 sar	 rax, 4

; 1650 : 		if (_Unused_capacity() < _Count)

  00078	48 83 f8 01	 cmp	 rax, 1
  0007c	73 58		 jae	 SHORT $LN88@main

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  0007e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR threads$[rsp]
  00083	48 2b d9	 sub	 rbx, rcx
  00086	48 c1 fb 04	 sar	 rbx, 4

; 1652 : 			if (max_size() - size() < _Count)

  0008a	49 8b c7	 mov	 rax, r15
  0008d	48 2b c3	 sub	 rax, rbx
  00090	48 83 f8 01	 cmp	 rax, 1
  00094	0f 82 a0 00 00
	00		 jb	 $LN562@main

; 1653 : 				_Xlen();
; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  0009a	48 ff c3	 inc	 rbx

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  0009d	48 2b f1	 sub	 rsi, rcx
  000a0	48 c1 fe 04	 sar	 rsi, 4

; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  000a4	48 8b ce	 mov	 rcx, rsi
  000a7	48 d1 e9	 shr	 rcx, 1
  000aa	49 8b c7	 mov	 rax, r15
  000ad	48 2b c1	 sub	 rax, rcx
  000b0	48 8d 14 31	 lea	 rdx, QWORD PTR [rcx+rsi]
  000b4	48 3b c6	 cmp	 rax, rsi
  000b7	49 0f 42 d6	 cmovb	 rdx, r14

; 1612 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1613 : 		if (_Capacity < _Count)

  000bb	48 3b d3	 cmp	 rdx, rbx
  000be	48 0f 42 d3	 cmovb	 rdx, rbx

; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  000c2	48 8d 4c 24 40	 lea	 rcx, QWORD PTR threads$[rsp]
  000c7	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Reallocate
  000cc	48 8b 74 24 50	 mov	 rsi, QWORD PTR threads$[rsp+16]
  000d1	48 8b 5c 24 48	 mov	 rbx, QWORD PTR threads$[rsp+8]
$LN88@main:

; 932  : 		this->_Getal().construct(this->_Mylast(),

  000d6	48 89 9c 24 b0
	00 00 00	 mov	 QWORD PTR _Ptr$[rsp], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  000de	48 89 9c 24 b8
	00 00 00	 mov	 QWORD PTR $T5[rsp], rbx
  000e6	48 85 db	 test	 rbx, rbx
  000e9	74 3a		 je	 SHORT $LN313@main
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 48   : 		_Launch(&_Thr,

  000eb	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR $T3[rsp]
  000f3	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  000fb	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@$$QEAV<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@Z ; std::make_unique<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >
  00100	90		 npad	 1
  00101	48 8b d0	 mov	 rdx, rax
  00104	48 8b cb	 mov	 rcx, rbx
  00107	e8 00 00 00 00	 call	 ??$_Launch@V?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@@std@@YAXPEAU_Thrd_imp_t@@$$QEAV?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@0@@Z ; std::_Launch<std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > > >
  0010c	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1396 : 		if (get() != pointer())

  0010d	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR $T4[rsp]
  00115	48 85 c9	 test	 rcx, rcx
  00118	74 0b		 je	 SHORT $LN313@main

; 1195 : 		delete _Ptr;

  0011a	ba 01 00 00 00	 mov	 edx, 1
  0011f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00124	90		 npad	 1
$LN313@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 934  : 		++this->_Mylast();

  00125	48 83 c3 10	 add	 rbx, 16
  00129	48 89 5c 24 48	 mov	 QWORD PTR threads$[rsp+8], rbx
; File c:\users\alist_000\cppmisc\thread.cc

; 15   :   for (int i = 0; i < 100; ++i) {

  0012e	ff c7		 inc	 edi
  00130	83 ff 64	 cmp	 edi, 100		; 00000064H
  00133	7d 12		 jge	 SHORT $LN573@main
  00135	e9 26 ff ff ff	 jmp	 $LL4@main
$LN562@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1788 : 		_Xlength_error("vector<T> too long");

  0013a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00141	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00146	cc		 int	 3
$LN573@main:
; File c:\users\alist_000\cppmisc\thread.cc

; 20   :   std::cout << "joining\n";

  00147	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08NAMJFED@joining?6?$AA@
  0014e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
  00155	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 21   :   for (auto &t : threads)

  0015a	48 8b 6c 24 40	 mov	 rbp, QWORD PTR threads$[rsp]
  0015f	48 3b eb	 cmp	 rbp, rbx
  00162	74 7e		 je	 SHORT $LN6@main

; 20   :   std::cout << "joining\n";

  00164	48 8d 7d 08	 lea	 rdi, QWORD PTR [rbp+8]
  00168	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL7@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  00170	83 3f 00	 cmp	 DWORD PTR [rdi], 0
  00173	0f 95 c0	 setne	 al

; 188  : 	if (!joinable())

  00176	84 c0		 test	 al, al
  00178	75 0a		 jne	 SHORT $LN387@main

; 189  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

  0017a	b9 01 00 00 00	 mov	 ecx, 1
  0017f	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN387@main:

; 190  : 	if (_Thr_is_null(_Thr))

  00184	83 3f 00	 cmp	 DWORD PTR [rdi], 0
  00187	75 0a		 jne	 SHORT $LN388@main

; 191  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

  00189	b9 01 00 00 00	 mov	 ecx, 1
  0018e	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN388@main:

; 206  : 	return (_Thrd_id());

  00193	e8 00 00 00 00	 call	 _Thrd_id

; 216  : 	return (_Left._Id == _Right._Id);

  00198	39 07		 cmp	 DWORD PTR [rdi], eax
  0019a	0f 94 c0	 sete	 al

; 192  : 	if (get_id() == _STD this_thread::get_id())

  0019d	84 c0		 test	 al, al
  0019f	74 0a		 je	 SHORT $LN389@main

; 193  : 		_Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  001a1	b9 05 00 00 00	 mov	 ecx, 5
  001a6	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN389@main:

; 194  : 	if (_Thrd_join(_Thr, 0) != _Thrd_success)

  001ab	0f 10 47 f8	 movups	 xmm0, XMMWORD PTR [rdi-8]
  001af	0f 29 44 24 30	 movaps	 XMMWORD PTR $T2[rsp], xmm0
  001b4	33 d2		 xor	 edx, edx
  001b6	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  001bb	e8 00 00 00 00	 call	 _Thrd_join
  001c0	85 c0		 test	 eax, eax
  001c2	74 0a		 je	 SHORT $LN390@main

; 195  : 		_Throw_Cpp_error(_NO_SUCH_PROCESS);

  001c4	b9 02 00 00 00	 mov	 ecx, 2
  001c9	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN390@main:

; 196  : 	_Thr_set_null(_Thr);

  001ce	4c 89 77 f8	 mov	 QWORD PTR [rdi-8], r14
  001d2	44 89 37	 mov	 DWORD PTR [rdi], r14d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 112  : 		++_Ptr;

  001d5	48 83 c7 10	 add	 rdi, 16
; File c:\users\alist_000\cppmisc\thread.cc

; 21   :   for (auto &t : threads)

  001d9	48 8d 47 f8	 lea	 rax, QWORD PTR [rdi-8]
  001dd	48 3b c3	 cmp	 rax, rbx
  001e0	75 8e		 jne	 SHORT $LL7@main
$LN6@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1660 : 		if (this->_Myfirst() != pointer())

  001e2	48 85 ed	 test	 rbp, rbp
  001e5	0f 84 7f 00 00
	00		 je	 $LN412@main

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  001eb	48 8b c5	 mov	 rax, rbp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  001ee	48 3b eb	 cmp	 rbp, rbx
  001f1	74 17		 je	 SHORT $LN451@main
$LL452@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 81   : 		return (!_Thr_is_null(_Thr));

  001f3	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0

; 56   : 		if (joinable())

  001f7	75 0b		 jne	 SHORT $LN563@main
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  001f9	48 83 c0 10	 add	 rax, 16
  001fd	48 3b c3	 cmp	 rax, rbx
  00200	75 f1		 jne	 SHORT $LL452@main
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread

; 56   : 		if (joinable())

  00202	eb 06		 jmp	 SHORT $LN451@main
$LN563@main:

; 57   : 			_XSTD terminate();

  00204	e8 00 00 00 00	 call	 terminate
  00209	cc		 int	 3
$LN451@main:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  0020a	48 2b f5	 sub	 rsi, rbp
  0020d	48 c1 fe 04	 sar	 rsi, 4
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00211	49 3b f7	 cmp	 rsi, r15
  00214	76 06		 jbe	 SHORT $LN522@main
  00216	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0021b	cc		 int	 3
$LN522@main:

; 95   : 	const size_t _User_size = _Count * _Sz;

  0021c	48 c1 e6 04	 shl	 rsi, 4

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00220	48 81 fe 00 10
	00 00		 cmp	 rsi, 4096		; 00001000H
  00227	72 39		 jb	 SHORT $LN523@main

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00229	40 f6 c5 1f	 test	 bpl, 31
  0022d	74 06		 je	 SHORT $LN524@main
  0022f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00234	cc		 int	 3
$LN524@main:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00235	48 8b 45 f8	 mov	 rax, QWORD PTR [rbp-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00239	48 3b c5	 cmp	 rax, rbp
  0023c	72 06		 jb	 SHORT $LN525@main
  0023e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00243	cc		 int	 3
$LN525@main:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00244	48 2b e8	 sub	 rbp, rax
  00247	48 83 fd 08	 cmp	 rbp, 8
  0024b	73 06		 jae	 SHORT $LN526@main
  0024d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00252	cc		 int	 3
$LN526@main:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00253	48 83 fd 27	 cmp	 rbp, 39			; 00000027H
  00257	76 06		 jbe	 SHORT $LN527@main
  00259	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0025e	cc		 int	 3
$LN527@main:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0025f	48 8b e8	 mov	 rbp, rax
$LN523@main:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00262	48 8b cd	 mov	 rcx, rbp
  00265	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN412@main:
; File c:\users\alist_000\cppmisc\thread.cc

; 24   :   return 0;

  0026a	33 c0		 xor	 eax, eax

; 25   : }

  0026c	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00270	41 5f		 pop	 r15
  00272	41 5e		 pop	 r14
  00274	5f		 pop	 rdi
  00275	5e		 pop	 rsi
  00276	5d		 pop	 rbp
  00277	5b		 pop	 rbx
  00278	c3		 ret	 0
$LN574@main:
main	ENDP
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
threads$ = 64
$T3 = 160
$T4 = 168
_Ptr$ = 176
$T5 = 184
main$dtor$0 PROC
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR threads$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
main$dtor$0 ENDP
$T1 = 32
$T2 = 48
threads$ = 64
$T3 = 160
$T4 = 168
_Ptr$ = 176
$T5 = 184
main$dtor$75 PROC
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0001c	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00023	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
main$dtor$75 ENDP
$T1 = 32
$T2 = 48
threads$ = 64
$T3 = 160
$T4 = 168
_Ptr$ = 176
$T5 = 184
main$dtor$77 PROC
  0002e	48 8d 8a a8 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
main$dtor$77 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
threads$ = 64
$T3 = 160
$T4 = 168
_Ptr$ = 176
$T5 = 184
main$dtor$0 PROC
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR threads$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
main$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
threads$ = 64
$T3 = 160
$T4 = 168
_Ptr$ = 176
$T5 = 184
main$dtor$75 PROC
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0001c	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00023	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
main$dtor$75 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
threads$ = 64
$T3 = 160
$T4 = 168
_Ptr$ = 176
$T5 = 184
main$dtor$77 PROC
  0002e	48 8d 8a a8 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@U?$default_delete@V?$tuple@V<lambda_e77d7e1e559843f44c4e0b6d970cdb28>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >::~unique_ptr<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> >,std::default_delete<std::tuple<<lambda_e77d7e1e559843f44c4e0b6d970cdb28> > > >
main$dtor$77 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??8std@@YA_NVid@thread@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??8std@@YA_NVid@thread@0@0@Z PROC			; std::operator==, COMDAT

; 216  : 	return (_Left._Id == _Right._Id);

  00000	3b ca		 cmp	 ecx, edx
  00002	0f 94 c0	 sete	 al

; 217  : 	}

  00005	c3		 ret	 0
??8std@@YA_NVid@thread@0@0@Z ENDP			; std::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??0id@thread@std@@AEAA@I@Z
_TEXT	SEGMENT
this$ = 8
_Other_id$ = 16
??0id@thread@std@@AEAA@I@Z PROC				; std::thread::id::id, COMDAT

; 168  : 		: _Id(_Other_id)

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 170  : 		}

  00002	48 8b c1	 mov	 rax, rcx
  00005	c3		 ret	 0
??0id@thread@std@@AEAA@I@Z ENDP				; std::thread::id::id
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?sleep_until@this_thread@std@@YAXPEBUxtime@@@Z
_TEXT	SEGMENT
_Abs_time$ = 8
?sleep_until@this_thread@std@@YAXPEBUxtime@@@Z PROC	; std::this_thread::sleep_until, COMDAT

; 130  : 	_Thrd_sleep(_Abs_time);

  00000	e9 00 00 00 00	 jmp	 _Thrd_sleep
?sleep_until@this_thread@std@@YAXPEBUxtime@@@Z ENDP	; std::this_thread::sleep_until
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?get_id@this_thread@std@@YA?AVid@thread@2@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 48
?get_id@this_thread@std@@YA?AVid@thread@2@XZ PROC	; std::this_thread::get_id, COMDAT

; 205  : 	{	// return id for current thread

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 206  : 	return (_Thrd_id());

  00009	e8 00 00 00 00	 call	 _Thrd_id

; 168  : 		: _Id(_Other_id)

  0000e	89 03		 mov	 DWORD PTR [rbx], eax

; 206  : 	return (_Thrd_id());

  00010	48 8b c3	 mov	 rax, rbx

; 207  : 	}

  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5b		 pop	 rbx
  00018	c3		 ret	 0
?get_id@this_thread@std@@YA?AVid@thread@2@XZ ENDP	; std::this_thread::get_id
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??_Gthread@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gthread@std@@QEAAPEAXI@Z PROC			; std::thread::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 81   : 		return (!_Thr_is_null(_Thr));

  00006	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0
  0000a	48 8b d9	 mov	 rbx, rcx

; 56   : 		if (joinable())

  0000d	75 18		 jne	 SHORT $LN13@scalar
  0000f	f6 c2 01	 test	 dl, 1
  00012	74 0a		 je	 SHORT $LN2@scalar
  00014	ba 10 00 00 00	 mov	 edx, 16
  00019	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  0001e	48 8b c3	 mov	 rax, rbx
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5b		 pop	 rbx
  00026	c3		 ret	 0
$LN13@scalar:

; 57   : 			_XSTD terminate();

  00027	e8 00 00 00 00	 call	 terminate
  0002c	cc		 int	 3
$LN12@scalar:
??_Gthread@std@@QEAAPEAXI@Z ENDP			; std::thread::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?get_id@thread@std@@QEBA?AVid@12@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?get_id@thread@std@@QEBA?AVid@12@XZ PROC		; std::thread::get_id, COMDAT

; 168  : 		: _Id(_Other_id)

  00000	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00003	89 02		 mov	 DWORD PTR [rdx], eax

; 201  : 	return (_Thr_val(_Thr));

  00005	48 8b c2	 mov	 rax, rdx

; 202  : 	}

  00008	c3		 ret	 0
?get_id@thread@std@@QEBA?AVid@12@XZ ENDP		; std::thread::get_id
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?join@thread@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?join@thread@std@@QEAAXXZ PROC				; std::thread::join, COMDAT

; 187  : 	{	// join thread

$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 81   : 		return (!_Thr_is_null(_Thr));

  00006	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0

; 187  : 	{	// join thread

  0000a	48 8b d9	 mov	 rbx, rcx

; 188  : 	if (!joinable())

  0000d	75 0a		 jne	 SHORT $LN2@join

; 189  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

  0000f	b9 01 00 00 00	 mov	 ecx, 1
  00014	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN2@join:

; 190  : 	if (_Thr_is_null(_Thr))

  00019	83 7b 08 00	 cmp	 DWORD PTR [rbx+8], 0
  0001d	75 0a		 jne	 SHORT $LN3@join

; 191  : 		_Throw_Cpp_error(_INVALID_ARGUMENT);

  0001f	b9 01 00 00 00	 mov	 ecx, 1
  00024	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN3@join:

; 206  : 	return (_Thrd_id());

  00029	e8 00 00 00 00	 call	 _Thrd_id

; 216  : 	return (_Left._Id == _Right._Id);

  0002e	39 43 08	 cmp	 DWORD PTR [rbx+8], eax

; 192  : 	if (get_id() == _STD this_thread::get_id())

  00031	75 0a		 jne	 SHORT $LN4@join

; 193  : 		_Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  00033	b9 05 00 00 00	 mov	 ecx, 5
  00038	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN4@join:

; 194  : 	if (_Thrd_join(_Thr, 0) != _Thrd_success)

  0003d	0f 10 03	 movups	 xmm0, XMMWORD PTR [rbx]
  00040	33 d2		 xor	 edx, edx
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00047	0f 29 44 24 20	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  0004c	e8 00 00 00 00	 call	 _Thrd_join
  00051	85 c0		 test	 eax, eax
  00053	74 0a		 je	 SHORT $LN23@join

; 195  : 		_Throw_Cpp_error(_NO_SUCH_PROCESS);

  00055	b9 02 00 00 00	 mov	 ecx, 2
  0005a	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN23@join:

; 196  : 	_Thr_set_null(_Thr);

  0005f	33 c0		 xor	 eax, eax
  00061	89 43 08	 mov	 DWORD PTR [rbx+8], eax
  00064	48 89 03	 mov	 QWORD PTR [rbx], rax

; 197  : 	}

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5b		 pop	 rbx
  0006c	c3		 ret	 0
?join@thread@std@@QEAAXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 81   : 		return (!_Thr_is_null(_Thr));

  00000	33 c0		 xor	 eax, eax
  00002	39 41 08	 cmp	 DWORD PTR [rcx+8], eax
  00005	0f 95 c0	 setne	 al

; 82   : 		}

  00008	c3		 ret	 0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??0thread@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Other$ = 16
??0thread@std@@QEAA@$$QEAV01@@Z PROC			; std::thread::thread, COMDAT

; 61   : 		: _Thr(_Other._Thr)

  00000	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]

; 63   : 		_Thr_set_null(_Other._Thr);

  00003	33 c0		 xor	 eax, eax
  00005	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
  0000b	89 42 08	 mov	 DWORD PTR [rdx+8], eax

; 64   : 		}

  0000e	48 8b c1	 mov	 rax, rcx
  00011	c3		 ret	 0
??0thread@std@@QEAA@$$QEAV01@@Z ENDP			; std::thread::thread
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 55   : 		{	// clean up

$LN10:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 81   : 		return (!_Thr_is_null(_Thr));

  00004	83 79 08 00	 cmp	 DWORD PTR [rcx+8], 0

; 56   : 		if (joinable())

  00008	75 05		 jne	 SHORT $LN8@thread

; 58   : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN8@thread:

; 57   : 			_XSTD terminate();

  0000f	e8 00 00 00 00	 call	 terminate
  00014	cc		 int	 3
$LN7@thread:
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Call_func@_Pad@std@@CAIPEAX@Z
_TEXT	SEGMENT
_Data$ = 48
?_Call_func@_Pad@std@@CAIPEAX@Z PROC			; std::_Pad::_Call_func, COMDAT

; 208  : 		{	// entry point for new thread

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 209  : 		static_cast<_Pad *>(_Data)->_Go();

  00004	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00007	ff 10		 call	 QWORD PTR [rax]

; 210  : 		_Cnd_do_broadcast_at_thread_exit();

  00009	e8 00 00 00 00	 call	 _Cnd_do_broadcast_at_thread_exit

; 211  : 		return (0);

  0000e	33 c0		 xor	 eax, eax

; 212  : 		}

  00010	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00014	c3		 ret	 0
?_Call_func@_Pad@std@@CAIPEAX@Z ENDP			; std::_Pad::_Call_func
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Pad@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Release@_Pad@std@@QEAAXXZ PROC			; std::_Pad::_Release, COMDAT

; 194  : 		{	// notify caller that it's okay to continue

$LN19:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  00009	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0000d	e8 00 00 00 00	 call	 _Mtx_lock

; 34   : 	if (_Res != _Thrd_success)

  00012	85 c0		 test	 eax, eax
  00014	74 07		 je	 SHORT $LN6@Release

; 35   : 		_Throw_C_error(_Res);

  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN6@Release:

; 111  : 	return (_Check_C_return(_Cnd_signal(_Cnd)));

  0001d	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]

; 195  : 		_Mtx_lockX(_Mtx);
; 196  : 		_Started = true;

  00021	c6 43 18 01	 mov	 BYTE PTR [rbx+24], 1

; 111  : 	return (_Check_C_return(_Cnd_signal(_Cnd)));

  00025	e8 00 00 00 00	 call	 _Cnd_signal

; 34   : 	if (_Res != _Thrd_success)

  0002a	85 c0		 test	 eax, eax
  0002c	74 07		 je	 SHORT $LN11@Release

; 35   : 		_Throw_C_error(_Res);

  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN11@Release:

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  00035	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
  00039	e8 00 00 00 00	 call	 _Mtx_unlock

; 34   : 	if (_Res != _Thrd_success)

  0003e	85 c0		 test	 eax, eax
  00040	74 0c		 je	 SHORT $LN16@Release

; 35   : 		_Throw_C_error(_Res);

  00042	8b c8		 mov	 ecx, eax

; 197  : 		_Cnd_signalX(_Cond);
; 198  : 		_Mtx_unlockX(_Mtx);
; 199  : 		}

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5b		 pop	 rbx

; 35   : 		_Throw_C_error(_Res);

  00049	e9 00 00 00 00	 jmp	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN16@Release:

; 197  : 		_Cnd_signalX(_Cond);
; 198  : 		_Mtx_unlockX(_Mtx);
; 199  : 		}

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5b		 pop	 rbx
  00053	c3		 ret	 0
?_Release@_Pad@std@@QEAAXXZ ENDP			; std::_Pad::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z
_TEXT	SEGMENT
this$ = 48
_Thr$ = 56
?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z PROC	; std::_Pad::_Launch, COMDAT

; 187  : 		{	// launch a thread

$LN19:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b c2	 mov	 rax, rdx
  00009	48 8b d9	 mov	 rbx, rcx

; 49   : 	int _Res = _Thrd_start(_Thr, _Fp, _Arg);

  0000c	4c 8b c1	 mov	 r8, rcx
  0000f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Call_func@_Pad@std@@CAIPEAX@Z ; std::_Pad::_Call_func
  00016	48 8b c8	 mov	 rcx, rax
  00019	e8 00 00 00 00	 call	 _Thrd_start

; 50   : 	return (_Check_C_return(_Res != _Thrd_error ? _Res : _Thrd_nomem));

  0001e	83 f8 04	 cmp	 eax, 4
  00021	b9 01 00 00 00	 mov	 ecx, 1
  00026	0f 45 c8	 cmovne	 ecx, eax

; 34   : 	if (_Res != _Thrd_success)

  00029	85 c9		 test	 ecx, ecx
  0002b	74 05		 je	 SHORT $LN15@Launch

; 35   : 		_Throw_C_error(_Res);

  0002d	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN15@Launch:

; 188  : 		_Thrd_startX(_Thr, _Call_func, this);
; 189  : 		while (!_Started)

  00032	80 7b 18 00	 cmp	 BYTE PTR [rbx+24], 0
  00036	75 26		 jne	 SHORT $LN3@Launch
  00038	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@Launch:

; 95   : 	return (_Check_C_return(_Cnd_wait(_Cnd, _Mtx)));

  00040	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00044	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00048	e8 00 00 00 00	 call	 _Cnd_wait

; 34   : 	if (_Res != _Thrd_success)

  0004d	85 c0		 test	 eax, eax
  0004f	74 07		 je	 SHORT $LN13@Launch

; 35   : 		_Throw_C_error(_Res);

  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN13@Launch:

; 188  : 		_Thrd_startX(_Thr, _Call_func, this);
; 189  : 		while (!_Started)

  00058	80 7b 18 00	 cmp	 BYTE PTR [rbx+24], 0
  0005c	74 e2		 je	 SHORT $LL2@Launch
$LN3@Launch:

; 190  : 			_Cnd_waitX(_Cond, _Mtx);
; 191  : 		}

  0005e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00062	5b		 pop	 rbx
  00063	c3		 ret	 0
?_Launch@_Pad@std@@QEAAXPEAU_Thrd_imp_t@@@Z ENDP	; std::_Pad::_Launch
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Pad@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Pad@std@@QEAA@XZ PROC				; std::_Pad::~_Pad, COMDAT

; 180  : 		{	// clean up handshake; non-virtual due to type-erasure

$LN22:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Pad@std@@6B@
  0001b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 118  : 		: _Active(true), _MyCndp(_Cndp)

  0001e	48 8b 79 08	 mov	 rdi, QWORD PTR [rcx+8]

; 142  : 		: _Active(true), _MyMtxp(_Mtxp)

  00022	48 8b 59 10	 mov	 rbx, QWORD PTR [rcx+16]

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  00026	48 8b cb	 mov	 rcx, rbx
  00029	e8 00 00 00 00	 call	 _Mtx_unlock
  0002e	90		 npad	 1

; 34   : 	if (_Res != _Thrd_success)

  0002f	85 c0		 test	 eax, eax
  00031	74 08		 je	 SHORT $LN20@Pad

; 35   : 		_Throw_C_error(_Res);

  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
  0003a	90		 npad	 1
$LN20@Pad:

; 149  : 			_Mtx_destroy(_MyMtxp);

  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	e8 00 00 00 00	 call	 _Mtx_destroy
  00043	90		 npad	 1

; 125  : 			_Cnd_destroy(_MyCndp);

  00044	48 8b cf	 mov	 rcx, rdi

; 181  : 		_Auto_cnd _Cnd_cleaner(_Cond);
; 182  : 		_Auto_mtx _Mtx_cleaner(_Mtx);
; 183  : 		_Mtx_unlockX(_Mtx);
; 184  : 		}

  00047	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi

; 125  : 			_Cnd_destroy(_MyCndp);

  00051	e9 00 00 00 00	 jmp	 _Cnd_destroy
??1_Pad@std@@QEAA@XZ ENDP				; std::_Pad::~_Pad
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Pad@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
_Cnd_cleaner$ = 40
_Mtx_cleaner$ = 56
this$ = 96
??0_Pad@std@@QEAA@XZ PROC				; std::_Pad::_Pad, COMDAT

; 167  : 	_Pad()

$LN36:
  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 60	 mov	 QWORD PTR [rsp+96], rbx
  00014	48 8b d9	 mov	 rbx, rcx

; 168  : 		{	// initialize handshake

  00017	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Pad@std@@6B@
  0001e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 90   : 	return (_Check_C_return(_Cnd_init(_Cnd)));

  00021	48 83 c1 08	 add	 rcx, 8
  00025	e8 00 00 00 00	 call	 _Cnd_init

; 34   : 	if (_Res != _Thrd_success)

  0002a	85 c0		 test	 eax, eax
  0002c	74 07		 je	 SHORT $LN8@Pad

; 35   : 		_Throw_C_error(_Res);

  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN8@Pad:

; 169  : 		_Cnd_initX(&_Cond);
; 170  : 		_Auto_cnd _Cnd_cleaner(_Cond);

  00035	48 8b 43 08	 mov	 rax, QWORD PTR [rbx+8]

; 118  : 		: _Active(true), _MyCndp(_Cndp)

  00039	c6 44 24 28 01	 mov	 BYTE PTR _Cnd_cleaner$[rsp], 1
  0003e	48 89 44 24 30	 mov	 QWORD PTR _Cnd_cleaner$[rsp+8], rax

; 65   : 	return (_Check_C_return(_Mtx_init(_Mtx, _Type)));

  00043	ba 01 00 00 00	 mov	 edx, 1
  00048	48 8d 4b 10	 lea	 rcx, QWORD PTR [rbx+16]
  0004c	e8 00 00 00 00	 call	 _Mtx_init

; 34   : 	if (_Res != _Thrd_success)

  00051	85 c0		 test	 eax, eax
  00053	74 07		 je	 SHORT $LN15@Pad

; 35   : 		_Throw_C_error(_Res);

  00055	8b c8		 mov	 ecx, eax
  00057	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN15@Pad:

; 171  : 		_Mtx_initX(&_Mtx, _Mtx_plain);
; 172  : 		_Auto_mtx _Mtx_cleaner(_Mtx);

  0005c	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]

; 142  : 		: _Active(true), _MyMtxp(_Mtxp)

  00060	c6 44 24 38 01	 mov	 BYTE PTR _Mtx_cleaner$[rsp], 1
  00065	48 89 4c 24 40	 mov	 QWORD PTR _Mtx_cleaner$[rsp+8], rcx

; 173  : 		_Started = false;

  0006a	c6 43 18 00	 mov	 BYTE PTR [rbx+24], 0

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  0006e	e8 00 00 00 00	 call	 _Mtx_lock

; 34   : 	if (_Res != _Thrd_success)

  00073	85 c0		 test	 eax, eax
  00075	74 08		 je	 SHORT $LN22@Pad

; 35   : 		_Throw_C_error(_Res);

  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
  0007e	90		 npad	 1
$LN22@Pad:

; 174  : 		_Mtx_lockX(_Mtx);
; 175  : 		_Mtx_cleaner._Release();
; 176  : 		_Cnd_cleaner._Release();
; 177  : 		}

  0007f	48 8b c3	 mov	 rax, rbx
  00082	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  00087	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008b	5f		 pop	 rdi
  0008c	c3		 ret	 0
??0_Pad@std@@QEAA@XZ ENDP				; std::_Pad::_Pad
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Cnd_cleaner$ = 40
_Mtx_cleaner$ = 56
this$ = 96
?dtor$0@?0???0_Pad@std@@QEAA@XZ@4HA PROC		; `std::_Pad::_Pad'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Cnd_cleaner$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Auto_cnd@std@@QEAA@XZ ; std::_Auto_cnd::~_Auto_cnd
?dtor$0@?0???0_Pad@std@@QEAA@XZ@4HA ENDP		; `std::_Pad::_Pad'::`1'::dtor$0
$T1 = 32
_Cnd_cleaner$ = 40
_Mtx_cleaner$ = 56
this$ = 96
?dtor$1@?0???0_Pad@std@@QEAA@XZ@4HA PROC		; `std::_Pad::_Pad'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Mtx_cleaner$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1_Auto_mtx@std@@QEAA@XZ ; std::_Auto_mtx::~_Auto_mtx
?dtor$1@?0???0_Pad@std@@QEAA@XZ@4HA ENDP		; `std::_Pad::_Pad'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Cnd_cleaner$ = 40
_Mtx_cleaner$ = 56
this$ = 96
?dtor$0@?0???0_Pad@std@@QEAA@XZ@4HA PROC		; `std::_Pad::_Pad'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Cnd_cleaner$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Auto_cnd@std@@QEAA@XZ ; std::_Auto_cnd::~_Auto_cnd
?dtor$0@?0???0_Pad@std@@QEAA@XZ@4HA ENDP		; `std::_Pad::_Pad'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Cnd_cleaner$ = 40
_Mtx_cleaner$ = 56
this$ = 96
?dtor$1@?0???0_Pad@std@@QEAA@XZ@4HA PROC		; `std::_Pad::_Pad'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Mtx_cleaner$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1_Auto_mtx@std@@QEAA@XZ ; std::_Auto_mtx::~_Auto_mtx
?dtor$1@?0???0_Pad@std@@QEAA@XZ@4HA ENDP		; `std::_Pad::_Pad'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Auto_mtx@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Release@_Auto_mtx@std@@QEAAXXZ PROC			; std::_Auto_mtx::_Release, COMDAT

; 154  : 		_Active = false;

  00000	c6 01 00	 mov	 BYTE PTR [rcx], 0

; 155  : 		}

  00003	c3		 ret	 0
?_Release@_Auto_mtx@std@@QEAAXXZ ENDP			; std::_Auto_mtx::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Auto_mtx@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Auto_mtx@std@@QEAA@XZ PROC				; std::_Auto_mtx::~_Auto_mtx, COMDAT

; 148  : 		if (_Active)

  00000	80 39 00	 cmp	 BYTE PTR [rcx], 0
  00003	74 09		 je	 SHORT $LN2@Auto_mtx

; 149  : 			_Mtx_destroy(_MyMtxp);

  00005	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00009	e9 00 00 00 00	 jmp	 _Mtx_destroy
$LN2@Auto_mtx:

; 150  : 		}

  0000e	c3		 ret	 0
??1_Auto_mtx@std@@QEAA@XZ ENDP				; std::_Auto_mtx::~_Auto_mtx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Auto_mtx@std@@QEAA@PEAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
this$ = 8
_Mtxp$ = 16
??0_Auto_mtx@std@@QEAA@PEAU_Mtx_internal_imp_t@@@Z PROC	; std::_Auto_mtx::_Auto_mtx, COMDAT

; 142  : 		: _Active(true), _MyMtxp(_Mtxp)

  00000	c6 01 01	 mov	 BYTE PTR [rcx], 1

; 144  : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  0000a	c3		 ret	 0
??0_Auto_mtx@std@@QEAA@PEAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Auto_mtx::_Auto_mtx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Release@_Auto_cnd@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Release@_Auto_cnd@std@@QEAAXXZ PROC			; std::_Auto_cnd::_Release, COMDAT

; 130  : 		_Active = false;

  00000	c6 01 00	 mov	 BYTE PTR [rcx], 0

; 131  : 		}

  00003	c3		 ret	 0
?_Release@_Auto_cnd@std@@QEAAXXZ ENDP			; std::_Auto_cnd::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??1_Auto_cnd@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Auto_cnd@std@@QEAA@XZ PROC				; std::_Auto_cnd::~_Auto_cnd, COMDAT

; 124  : 		if (_Active)

  00000	80 39 00	 cmp	 BYTE PTR [rcx], 0
  00003	74 09		 je	 SHORT $LN2@Auto_cnd

; 125  : 			_Cnd_destroy(_MyCndp);

  00005	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00009	e9 00 00 00 00	 jmp	 _Cnd_destroy
$LN2@Auto_cnd:

; 126  : 			}

  0000e	c3		 ret	 0
??1_Auto_cnd@std@@QEAA@XZ ENDP				; std::_Auto_cnd::~_Auto_cnd
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ??0_Auto_cnd@std@@QEAA@PEAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
this$ = 8
_Cndp$ = 16
??0_Auto_cnd@std@@QEAA@PEAU_Cnd_internal_imp_t@@@Z PROC	; std::_Auto_cnd::_Auto_cnd, COMDAT

; 118  : 		: _Active(true), _MyCndp(_Cndp)

  00000	c6 01 01	 mov	 BYTE PTR [rcx], 1

; 120  : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  0000a	c3		 ret	 0
??0_Auto_cnd@std@@QEAA@PEAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Auto_cnd::_Auto_cnd
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_signalX@std@@YAHPEAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
_Cnd$ = 48
?_Cnd_signalX@std@@YAHPEAU_Cnd_internal_imp_t@@@Z PROC	; std::_Cnd_signalX, COMDAT

; 110  : 	{	// throw exception on failure

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 111  : 	return (_Check_C_return(_Cnd_signal(_Cnd)));

  00006	e8 00 00 00 00	 call	 _Cnd_signal
  0000b	8b d8		 mov	 ebx, eax

; 34   : 	if (_Res != _Thrd_success)

  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN4@Cnd_signal

; 35   : 		_Throw_C_error(_Res);

  00011	8b c8		 mov	 ecx, eax
  00013	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error

; 111  : 	return (_Check_C_return(_Cnd_signal(_Cnd)));

  00018	8b c3		 mov	 eax, ebx
$LN4@Cnd_signal:

; 112  : 	}

  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?_Cnd_signalX@std@@YAHPEAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Cnd_signalX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_waitX@std@@YAHPEAU_Cnd_internal_imp_t@@PEAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
_Cnd$ = 48
_Mtx$ = 56
?_Cnd_waitX@std@@YAHPEAU_Cnd_internal_imp_t@@PEAU_Mtx_internal_imp_t@@@Z PROC ; std::_Cnd_waitX, COMDAT

; 94   : 	{	// throw exception on failure

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 95   : 	return (_Check_C_return(_Cnd_wait(_Cnd, _Mtx)));

  00006	e8 00 00 00 00	 call	 _Cnd_wait
  0000b	8b d8		 mov	 ebx, eax

; 34   : 	if (_Res != _Thrd_success)

  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN4@Cnd_waitX

; 35   : 		_Throw_C_error(_Res);

  00011	8b c8		 mov	 ecx, eax
  00013	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error

; 95   : 	return (_Check_C_return(_Cnd_wait(_Cnd, _Mtx)));

  00018	8b c3		 mov	 eax, ebx
$LN4@Cnd_waitX:

; 96   : 	}

  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?_Cnd_waitX@std@@YAHPEAU_Cnd_internal_imp_t@@PEAU_Mtx_internal_imp_t@@@Z ENDP ; std::_Cnd_waitX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Cnd_initX@std@@YAHPEAPEAU_Cnd_internal_imp_t@@@Z
_TEXT	SEGMENT
_Cnd$ = 48
?_Cnd_initX@std@@YAHPEAPEAU_Cnd_internal_imp_t@@@Z PROC	; std::_Cnd_initX, COMDAT

; 89   : 	{	// throw exception on failure

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 90   : 	return (_Check_C_return(_Cnd_init(_Cnd)));

  00006	e8 00 00 00 00	 call	 _Cnd_init
  0000b	8b d8		 mov	 ebx, eax

; 34   : 	if (_Res != _Thrd_success)

  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN4@Cnd_initX

; 35   : 		_Throw_C_error(_Res);

  00011	8b c8		 mov	 ecx, eax
  00013	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error

; 90   : 	return (_Check_C_return(_Cnd_init(_Cnd)));

  00018	8b c3		 mov	 eax, ebx
$LN4@Cnd_initX:

; 91   : 	}

  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?_Cnd_initX@std@@YAHPEAPEAU_Cnd_internal_imp_t@@@Z ENDP	; std::_Cnd_initX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_unlockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
_Mtx$ = 48
?_Mtx_unlockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z PROC	; std::_Mtx_unlockX, COMDAT

; 84   : 	{	// throw exception on failure

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  00006	e8 00 00 00 00	 call	 _Mtx_unlock
  0000b	8b d8		 mov	 ebx, eax

; 34   : 	if (_Res != _Thrd_success)

  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN4@Mtx_unlock

; 35   : 		_Throw_C_error(_Res);

  00011	8b c8		 mov	 ecx, eax
  00013	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error

; 85   : 	return (_Check_C_return(_Mtx_unlock(_Mtx)));

  00018	8b c3		 mov	 eax, ebx
$LN4@Mtx_unlock:

; 86   : 	}

  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?_Mtx_unlockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Mtx_unlockX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_lockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z
_TEXT	SEGMENT
_Mtx$ = 48
?_Mtx_lockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z PROC	; std::_Mtx_lockX, COMDAT

; 69   : 	{	// throw exception on failure

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  00006	e8 00 00 00 00	 call	 _Mtx_lock
  0000b	8b d8		 mov	 ebx, eax

; 34   : 	if (_Res != _Thrd_success)

  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN4@Mtx_lockX

; 35   : 		_Throw_C_error(_Res);

  00011	8b c8		 mov	 ecx, eax
  00013	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error

; 70   : 	return (_Check_C_return(_Mtx_lock(_Mtx)));

  00018	8b c3		 mov	 eax, ebx
$LN4@Mtx_lockX:

; 71   : 	}

  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?_Mtx_lockX@std@@YAHPEAU_Mtx_internal_imp_t@@@Z ENDP	; std::_Mtx_lockX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Mtx_initX@std@@YAHPEAPEAU_Mtx_internal_imp_t@@H@Z
_TEXT	SEGMENT
_Mtx$ = 48
_Type$ = 56
?_Mtx_initX@std@@YAHPEAPEAU_Mtx_internal_imp_t@@H@Z PROC ; std::_Mtx_initX, COMDAT

; 64   : 	{	// throw exception on failure

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 65   : 	return (_Check_C_return(_Mtx_init(_Mtx, _Type)));

  00006	e8 00 00 00 00	 call	 _Mtx_init
  0000b	8b d8		 mov	 ebx, eax

; 34   : 	if (_Res != _Thrd_success)

  0000d	85 c0		 test	 eax, eax
  0000f	74 09		 je	 SHORT $LN4@Mtx_initX

; 35   : 		_Throw_C_error(_Res);

  00011	8b c8		 mov	 ecx, eax
  00013	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error

; 65   : 	return (_Check_C_return(_Mtx_init(_Mtx, _Type)));

  00018	8b c3		 mov	 eax, ebx
$LN4@Mtx_initX:

; 66   : 	}

  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?_Mtx_initX@std@@YAHPEAPEAU_Mtx_internal_imp_t@@H@Z ENDP ; std::_Mtx_initX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Thrd_startX@std@@YAHPEAU_Thrd_imp_t@@P6AIPEAX@Z1@Z
_TEXT	SEGMENT
_Thr$ = 48
_Fp$ = 56
_Arg$ = 64
?_Thrd_startX@std@@YAHPEAU_Thrd_imp_t@@P6AIPEAX@Z1@Z PROC ; std::_Thrd_startX, COMDAT

; 48   : 	{	// throw exception on failure

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 49   : 	int _Res = _Thrd_start(_Thr, _Fp, _Arg);

  00006	e8 00 00 00 00	 call	 _Thrd_start

; 50   : 	return (_Check_C_return(_Res != _Thrd_error ? _Res : _Thrd_nomem));

  0000b	83 f8 04	 cmp	 eax, 4
  0000e	bb 01 00 00 00	 mov	 ebx, 1
  00013	0f 45 d8	 cmovne	 ebx, eax

; 34   : 	if (_Res != _Thrd_success)

  00016	85 db		 test	 ebx, ebx
  00018	74 07		 je	 SHORT $LN6@Thrd_start

; 35   : 		_Throw_C_error(_Res);

  0001a	8b cb		 mov	 ecx, ebx
  0001c	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN6@Thrd_start:

; 50   : 	return (_Check_C_return(_Res != _Thrd_error ? _Res : _Thrd_nomem));

  00021	8b c3		 mov	 eax, ebx

; 51   : 	}

  00023	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00027	5b		 pop	 rbx
  00028	c3		 ret	 0
?_Thrd_startX@std@@YAHPEAU_Thrd_imp_t@@P6AIPEAX@Z1@Z ENDP ; std::_Thrd_startX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
_Res$ = 48
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 33   : 	{	// throw exception on failure

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	8b d9		 mov	 ebx, ecx

; 34   : 	if (_Res != _Thrd_success)

  00008	85 c9		 test	 ecx, ecx
  0000a	74 05		 je	 SHORT $LN4@Check_C_re

; 35   : 		_Throw_C_error(_Res);

  0000c	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN4@Check_C_re:

; 36   : 	return (_Res);

  00011	8b c3		 mov	 eax, ebx

; 37   : 	}

  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5b		 pop	 rbx
  00018	c3		 ret	 0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEAA_J_J@Z
_TEXT	SEGMENT
this$ = 8
_Newwidth$ = 16
?width@ios_base@std@@QEAA_J_J@Z PROC			; std::ios_base::width, COMDAT

; 428  : 		streamsize _Oldwidth = _Wide;

  00000	48 8b 41 28	 mov	 rax, QWORD PTR [rcx+40]

; 429  : 		_Wide = _Newwidth;

  00004	48 89 51 28	 mov	 QWORD PTR [rcx+40], rdx

; 430  : 		return (_Oldwidth);
; 431  : 		}

  00008	c3		 ret	 0
?width@ios_base@std@@QEAA_J_J@Z ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?width@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::width, COMDAT

; 423  : 		return (_Wide);

  00000	48 8b 41 28	 mov	 rax, QWORD PTR [rcx+40]

; 424  : 		}

  00004	c3		 ret	 0
?width@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?flags@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?flags@ios_base@std@@QEBAHXZ PROC			; std::ios_base::flags, COMDAT

; 378  : 		return (_Fmtfl);

  00000	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]

; 379  : 		}

  00003	c3		 ret	 0
?flags@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::flags
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?good@ios_base@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?good@ios_base@std@@QEBA_NXZ PROC			; std::ios_base::good, COMDAT

; 339  : 		return (rdstate() == goodbit);

  00000	33 c0		 xor	 eax, eax
  00002	39 41 10	 cmp	 DWORD PTR [rcx+16], eax
  00005	0f 94 c0	 sete	 al

; 340  : 		}

  00008	c3		 ret	 0
?good@ios_base@std@@QEBA_NXZ ENDP			; std::ios_base::good
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?rdstate@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?rdstate@ios_base@std@@QEBAHXZ PROC			; std::ios_base::rdstate, COMDAT

; 315  : 		return (_Mystate);

  00000	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]

; 316  : 		}

  00003	c3		 ret	 0
?rdstate@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::rdstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?clear@ios_base@std@@QEAAXH_N@Z
_TEXT	SEGMENT
_InitData$1 = 32
$T2 = 32
_InitData$3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 48
$T10 = 48
$T11 = 48
$T12 = 88
$T13 = 88
$T14 = 128
$T15 = 136
$T16 = 136
$T17 = 168
$T18 = 168
__$ArrayPad$ = 200
this$ = 240
_State$ = 248
_Reraise$ = 256
?clear@ios_base@std@@QEAAXH_N@Z PROC			; std::ios_base::clear, COMDAT

; 287  : 		{	// set state, possibly reraise exception

$LN1122:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	48 8d 68 a1	 lea	 rbp, QWORD PTR [rax-95]
  00008	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  0000f	48 c7 45 f7 fe
	ff ff ff	 mov	 QWORD PTR $T14[rbp-137], -2
  00017	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  0001b	0f 29 70 e8	 movaps	 XMMWORD PTR [rax-24], xmm6
  0001f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00026	48 33 c4	 xor	 rax, rsp
  00029	48 89 45 3f	 mov	 QWORD PTR __$ArrayPad$[rbp-137], rax

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  0002d	83 e2 17	 and	 edx, 23
  00030	89 51 10	 mov	 DWORD PTR [rcx+16], edx

; 289  : 		if ((_Mystate & _Except) == 0)

  00033	8b 41 14	 mov	 eax, DWORD PTR [rcx+20]
  00036	23 c2		 and	 eax, edx
  00038	0f 84 aa 02 00
	00		 je	 $LN9@clear

; 290  : 			;
; 291  : 		else if (_Reraise)

  0003e	45 84 c0	 test	 r8b, r8b
  00041	74 0a		 je	 SHORT $LN4@clear

; 292  : 			_RERAISE;

  00043	33 d2		 xor	 edx, edx
  00045	33 c9		 xor	 ecx, ecx
  00047	e8 00 00 00 00	 call	 _CxxThrowException
  0004c	cc		 int	 3
$LN4@clear:

; 293  : 		else if (_Mystate & _Except & badbit)

  0004d	a8 04		 test	 al, 4
  0004f	0f 84 21 01 00
	00		 je	 $LN6@clear
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  00055	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  0005a	c7 45 97 01 00
	00 00		 mov	 DWORD PTR $T8[rbp-137], 1
  00061	48 89 45 9f	 mov	 QWORD PTR $T8[rbp-129], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00065	48 c7 45 17 0f
	00 00 00	 mov	 QWORD PTR $T16[rbp-113], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0006d	33 db		 xor	 ebx, ebx
  0006f	48 89 5d 0f	 mov	 QWORD PTR $T16[rbp-121], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00073	88 5d ff	 mov	 BYTE PTR $T16[rbp-137], bl
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00076	44 8d 43 14	 lea	 r8d, QWORD PTR [rbx+20]
  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
  00081	48 8d 4d ff	 lea	 rcx, QWORD PTR $T16[rbp-137]
  00085	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0008a	90		 npad	 1

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0008b	48 c7 45 e7 0f
	00 00 00	 mov	 QWORD PTR $T13[rbp-113], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00093	48 89 5d df	 mov	 QWORD PTR $T13[rbp-121], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00097	88 5d cf	 mov	 BYTE PTR $T13[rbp-137], bl
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0009a	49 83 c9 ff	 or	 r9, -1
  0009e	45 33 c0	 xor	 r8d, r8d
  000a1	48 8d 55 ff	 lea	 rdx, QWORD PTR $T16[rbp-137]
  000a5	48 8d 4d cf	 lea	 rcx, QWORD PTR $T13[rbp-137]
  000a9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  000ae	0f 28 75 97	 movaps	 xmm6, XMMWORD PTR $T8[rbp-137]
  000b2	66 0f 7f 75 97	 movdqa	 XMMWORD PTR $T4[rbp-137], xmm6
  000b7	4c 8d 45 cf	 lea	 r8, QWORD PTR $T13[rbp-137]
  000bb	48 8d 55 97	 lea	 rdx, QWORD PTR $T4[rbp-137]
  000bf	48 8d 4d 1f	 lea	 rcx, QWORD PTR $T18[rbp-137]
  000c3	e8 00 00 00 00	 call	 ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  000c8	48 83 78 18 10	 cmp	 QWORD PTR [rax+24], 16
  000cd	72 03		 jb	 SHORT $LN317@clear
  000cf	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN317@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 53   :     {

  000d2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  000d9	48 89 4d a7	 mov	 QWORD PTR $T11[rbp-137], rcx

; 52   :         : _Data()

  000dd	33 c9		 xor	 ecx, ecx
  000df	48 89 4d af	 mov	 QWORD PTR $T11[rbp-129], rcx
  000e3	48 89 4d b7	 mov	 QWORD PTR $T11[rbp-121], rcx

; 54   :         __std_exception_data _InitData = { _Message, true };

  000e7	48 89 45 97	 mov	 QWORD PTR _InitData$3[rbp-137], rax
  000eb	c6 45 9f 01	 mov	 BYTE PTR _InitData$3[rbp-129], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

  000ef	48 8d 55 af	 lea	 rdx, QWORD PTR $T11[rbp-129]
  000f3	48 8d 4d 97	 lea	 rcx, QWORD PTR _InitData$3[rbp-137]
  000f7	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  000fc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00103	48 89 45 a7	 mov	 QWORD PTR $T11[rbp-137], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00107	4c 8b 45 37	 mov	 r8, QWORD PTR $T18[rbp-113]
  0010b	49 83 f8 10	 cmp	 r8, 16
  0010f	72 10		 jb	 SHORT $LN332@clear

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00111	49 ff c0	 inc	 r8
  00114	48 8b 55 1f	 mov	 rdx, QWORD PTR $T18[rbp-137]
  00118	48 8d 4d 1f	 lea	 rcx, QWORD PTR $T18[rbp-137]
  0011c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN332@clear:

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00121	48 c7 45 37 0f
	00 00 00	 mov	 QWORD PTR $T18[rbp-113], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00129	48 89 5d 2f	 mov	 QWORD PTR $T18[rbp-121], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0012d	c6 45 1f 00	 mov	 BYTE PTR $T18[rbp-137], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  00131	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00138	48 89 45 a7	 mov	 QWORD PTR $T11[rbp-137], rax

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  0013c	0f 11 75 bf	 movups	 XMMWORD PTR $T11[rbp-113], xmm6
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00140	4c 8b 45 17	 mov	 r8, QWORD PTR $T16[rbp-113]
  00144	49 83 f8 10	 cmp	 r8, 16
  00148	72 10		 jb	 SHORT $LN449@clear

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0014a	49 ff c0	 inc	 r8
  0014d	48 8b 55 ff	 mov	 rdx, QWORD PTR $T16[rbp-137]
  00151	48 8d 4d ff	 lea	 rcx, QWORD PTR $T16[rbp-137]
  00155	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN449@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 238  : 			{	// construct with message

  0015a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00161	48 89 45 a7	 mov	 QWORD PTR $T11[rbp-137], rax

; 294  : 			_THROW_NCEE(failure, "ios_base::badbit set");

  00165	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  0016c	48 8d 4d a7	 lea	 rcx, QWORD PTR $T11[rbp-137]
  00170	e8 00 00 00 00	 call	 _CxxThrowException
  00175	cc		 int	 3
$LN6@clear:

; 295  : 		else if (_Mystate & _Except & failbit)

  00176	a8 02		 test	 al, 2
  00178	0f 84 21 01 00
	00		 je	 $LN8@clear
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  0017e	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00183	c7 45 97 01 00
	00 00		 mov	 DWORD PTR $T7[rbp-137], 1
  0018a	48 89 45 9f	 mov	 QWORD PTR $T7[rbp-129], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0018e	48 c7 45 17 0f
	00 00 00	 mov	 QWORD PTR $T15[rbp-113], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00196	33 db		 xor	 ebx, ebx
  00198	48 89 5d 0f	 mov	 QWORD PTR $T15[rbp-121], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0019c	88 5d ff	 mov	 BYTE PTR $T15[rbp-137], bl
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0019f	44 8d 43 15	 lea	 r8d, QWORD PTR [rbx+21]
  001a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
  001aa	48 8d 4d ff	 lea	 rcx, QWORD PTR $T15[rbp-137]
  001ae	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  001b3	90		 npad	 1

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  001b4	48 c7 45 e7 0f
	00 00 00	 mov	 QWORD PTR $T12[rbp-113], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  001bc	48 89 5d df	 mov	 QWORD PTR $T12[rbp-121], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  001c0	88 5d cf	 mov	 BYTE PTR $T12[rbp-137], bl
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  001c3	49 83 c9 ff	 or	 r9, -1
  001c7	45 33 c0	 xor	 r8d, r8d
  001ca	48 8d 55 ff	 lea	 rdx, QWORD PTR $T15[rbp-137]
  001ce	48 8d 4d cf	 lea	 rcx, QWORD PTR $T12[rbp-137]
  001d2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  001d7	0f 28 75 97	 movaps	 xmm6, XMMWORD PTR $T7[rbp-137]
  001db	66 0f 7f 75 97	 movdqa	 XMMWORD PTR $T2[rbp-137], xmm6
  001e0	4c 8d 45 cf	 lea	 r8, QWORD PTR $T12[rbp-137]
  001e4	48 8d 55 97	 lea	 rdx, QWORD PTR $T2[rbp-137]
  001e8	48 8d 4d 1f	 lea	 rcx, QWORD PTR $T17[rbp-137]
  001ec	e8 00 00 00 00	 call	 ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  001f1	48 83 78 18 10	 cmp	 QWORD PTR [rax+24], 16
  001f6	72 03		 jb	 SHORT $LN866@clear
  001f8	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN866@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 53   :     {

  001fb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00202	48 89 4d a7	 mov	 QWORD PTR $T10[rbp-137], rcx

; 52   :         : _Data()

  00206	33 c9		 xor	 ecx, ecx
  00208	48 89 4d af	 mov	 QWORD PTR $T10[rbp-129], rcx
  0020c	48 89 4d b7	 mov	 QWORD PTR $T10[rbp-121], rcx

; 54   :         __std_exception_data _InitData = { _Message, true };

  00210	48 89 45 97	 mov	 QWORD PTR _InitData$1[rbp-137], rax
  00214	c6 45 9f 01	 mov	 BYTE PTR _InitData$1[rbp-129], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00218	48 8d 55 af	 lea	 rdx, QWORD PTR $T10[rbp-129]
  0021c	48 8d 4d 97	 lea	 rcx, QWORD PTR _InitData$1[rbp-137]
  00220	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  00225	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  0022c	48 89 45 a7	 mov	 QWORD PTR $T10[rbp-137], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00230	4c 8b 45 37	 mov	 r8, QWORD PTR $T17[rbp-113]
  00234	49 83 f8 10	 cmp	 r8, 16
  00238	72 10		 jb	 SHORT $LN881@clear

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0023a	49 ff c0	 inc	 r8
  0023d	48 8b 55 1f	 mov	 rdx, QWORD PTR $T17[rbp-137]
  00241	48 8d 4d 1f	 lea	 rcx, QWORD PTR $T17[rbp-137]
  00245	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN881@clear:

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0024a	48 c7 45 37 0f
	00 00 00	 mov	 QWORD PTR $T17[rbp-113], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00252	48 89 5d 2f	 mov	 QWORD PTR $T17[rbp-121], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00256	c6 45 1f 00	 mov	 BYTE PTR $T17[rbp-137], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  0025a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00261	48 89 45 a7	 mov	 QWORD PTR $T10[rbp-137], rax

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  00265	0f 11 75 bf	 movups	 XMMWORD PTR $T10[rbp-113], xmm6
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00269	4c 8b 45 17	 mov	 r8, QWORD PTR $T15[rbp-113]
  0026d	49 83 f8 10	 cmp	 r8, 16
  00271	72 10		 jb	 SHORT $LN998@clear

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00273	49 ff c0	 inc	 r8
  00276	48 8b 55 ff	 mov	 rdx, QWORD PTR $T15[rbp-137]
  0027a	48 8d 4d ff	 lea	 rcx, QWORD PTR $T15[rbp-137]
  0027e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN998@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 238  : 			{	// construct with message

  00283	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  0028a	48 89 45 a7	 mov	 QWORD PTR $T10[rbp-137], rax

; 296  : 			_THROW_NCEE(failure, "ios_base::failbit set");

  0028e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  00295	48 8d 4d a7	 lea	 rcx, QWORD PTR $T10[rbp-137]
  00299	e8 00 00 00 00	 call	 _CxxThrowException
  0029e	cc		 int	 3
$LN8@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  0029f	c7 45 97 01 00
	00 00		 mov	 DWORD PTR $T6[rbp-137], 1

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  002a6	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
  002ab	48 89 45 9f	 mov	 QWORD PTR $T6[rbp-129], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 237  : 			: system_error(_Errcode, _Message)

  002af	0f 28 45 97	 movaps	 xmm0, XMMWORD PTR $T6[rbp-137]
  002b3	66 0f 7f 45 97	 movdqa	 XMMWORD PTR $T5[rbp-137], xmm0
  002b8	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
  002bf	48 8d 55 97	 lea	 rdx, QWORD PTR $T5[rbp-137]
  002c3	48 8d 4d a7	 lea	 rcx, QWORD PTR $T9[rbp-137]
  002c7	e8 00 00 00 00	 call	 ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ; std::system_error::system_error

; 238  : 			{	// construct with message

  002cc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  002d3	48 89 45 a7	 mov	 QWORD PTR $T9[rbp-137], rax

; 297  : 		else
; 298  : 			_THROW_NCEE(failure, "ios_base::eofbit set");

  002d7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  002de	48 8d 4d a7	 lea	 rcx, QWORD PTR $T9[rbp-137]
  002e2	e8 00 00 00 00	 call	 _CxxThrowException
  002e7	cc		 int	 3
$LN9@clear:

; 299  : 		}

  002e8	48 8b 4d 3f	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-137]
  002ec	48 33 cc	 xor	 rcx, rsp
  002ef	e8 00 00 00 00	 call	 __security_check_cookie
  002f4	48 8b 9c 24 f8
	00 00 00	 mov	 rbx, QWORD PTR [rsp+248]
  002fc	0f 28 b4 24 d0
	00 00 00	 movaps	 xmm6, XMMWORD PTR [rsp+208]
  00304	48 81 c4 e0 00
	00 00		 add	 rsp, 224		; 000000e0H
  0030b	5d		 pop	 rbp
  0030c	c3		 ret	 0
$LN1121@clear:
?clear@ios_base@std@@QEAAXH_N@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_InitData$1 = 32
$T2 = 32
_InitData$3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 48
$T10 = 48
$T11 = 48
$T12 = 88
$T13 = 88
$T14 = 128
$T15 = 136
$T16 = 136
$T17 = 168
$T18 = 168
__$ArrayPad$ = 200
this$ = 240
_State$ = 248
_Reraise$ = 256
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$4
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR $T16[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$4
_InitData$1 = 32
$T2 = 32
_InitData$3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 48
$T10 = 48
$T11 = 48
$T12 = 88
$T13 = 88
$T14 = 128
$T15 = 136
$T16 = 136
$T17 = 168
$T18 = 168
__$ArrayPad$ = 200
this$ = 240
_State$ = 248
_Reraise$ = 256
?dtor$153@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$153
  0000c	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR $T15[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$153@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$153
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_InitData$1 = 32
$T2 = 32
_InitData$3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 48
$T10 = 48
$T11 = 48
$T12 = 88
$T13 = 88
$T14 = 128
$T15 = 136
$T16 = 136
$T17 = 168
$T18 = 168
__$ArrayPad$ = 200
this$ = 240
_State$ = 248
_Reraise$ = 256
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$4
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR $T16[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_InitData$1 = 32
$T2 = 32
_InitData$3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 48
$T10 = 48
$T11 = 48
$T12 = 88
$T13 = 88
$T14 = 128
$T15 = 136
$T16 = 136
$T17 = 168
$T18 = 168
__$ArrayPad$ = 200
this$ = 240
_State$ = 248
_Reraise$ = 256
?dtor$153@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$153
  0000c	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR $T15[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$153@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$153
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gfailure@ios_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfailure@ios_base@std@@UEAAPEAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
$LN20:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN18@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN18@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gfailure@ios_base@std@@UEAAPEAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0failure@ios_base@std@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0failure@ios_base@std@@QEAA@AEBV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
$LN15:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00041	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 89 07	 mov	 QWORD PTR [rdi], rax
  0004d	48 8b c7	 mov	 rax, rdi
  00050	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0failure@ios_base@std@@QEAA@AEBV012@@Z ENDP		; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1failure@ios_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1failure@ios_base@std@@UEAA@XZ PROC			; std::ios_base::failure::~failure, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1failure@ios_base@std@@UEAA@XZ ENDP			; std::ios_base::failure::~failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Message$ = 72
_Errcode$ = 80
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z PROC ; std::ios_base::failure::failure, COMDAT

; 238  : 			{	// construct with message

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 237  : 			: system_error(_Errcode, _Message)

  00006	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  0000a	4c 8b c2	 mov	 r8, rdx

; 238  : 			{	// construct with message

  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00015	0f 29 44 24 20	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  0001a	e8 00 00 00 00	 call	 ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ; std::system_error::system_error
  0001f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00026	48 89 03	 mov	 QWORD PTR [rbx], rax

; 239  : 			}

  00029	48 8b c3	 mov	 rax, rbx
  0002c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00030	5b		 pop	 rbx
  00031	c3		 ret	 0
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ENDP ; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
_TEXT	SEGMENT
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ PROC ; std::_Immortalize<std::_Iostream_error_category>, COMDAT

; 697  : 	{	// return a reference to an object that will live forever

$LN24:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 698  : 	static _Immortalizer<_Ty> _Static;

  00004	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  00013	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  00018	48 8b 0c c8	 mov	 rcx, QWORD PTR [rax+rcx*8]
  0001c	8b 04 0a	 mov	 eax, DWORD PTR [rdx+rcx]
  0001f	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, eax ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00025	7f 0c		 jg	 SHORT $LN22@Immortaliz
$LN20@Immortaliz:

; 699  : 	return (*reinterpret_cast<_Ty *>(&_Static._Storage));

  00027	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static

; 700  : 	}

  0002e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00032	c3		 ret	 0
$LN22@Immortaliz:

; 698  : 	static _Immortalizer<_Ty> _Static;

  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0003a	e8 00 00 00 00	 call	 _Init_thread_header
  0003f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, -1 ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00046	75 df		 jne	 SHORT $LN20@Immortaliz

; 616  : 		{	// default constructor

  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  0004f	48 c7 05 08 00
	00 00 05 00 00
	00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A+8, 5

; 698  : 	static _Immortalizer<_Ty> _Static;

  0005a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''

; 616  : 		{	// default constructor

  00061	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A, rax

; 698  : 	static _Immortalizer<_Ty> _Static;

  00068	e8 00 00 00 00	 call	 atexit
  0006d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00074	e8 00 00 00 00	 call	 _Init_thread_footer
  00079	eb ac		 jmp	 SHORT $LN20@Immortaliz
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ENDP ; std::_Immortalize<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??_G_Iostream_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Iostream_error_category@std@@UEAAPEAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN13@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Iostream_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1_Iostream_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Iostream_error_category@std@@UEAA@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	c3		 ret	 0
??1_Iostream_error_category@std@@UEAA@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT

; 626  : 		{	// convert to name of error

$LN137:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	33 c0		 xor	 eax, eax
  00008	48 8b da	 mov	 rbx, rdx
  0000b	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax

; 627  : 		if (_Errcode == (int)io_errc::stream)

  0000f	41 83 f8 01	 cmp	 r8d, 1
  00013	75 2a		 jne	 SHORT $LN2@message
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 42 18 0f
	00 00 00	 mov	 QWORD PTR [rdx+24], 15

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0001d	44 8d 40 15	 lea	 r8d, QWORD PTR [rax+21]

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00021	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00025	48 8b cb	 mov	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00028	88 02		 mov	 BYTE PTR [rdx], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0002a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
  00031	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 630  : 			return (_Generic_error_category::message(_Errcode));

  00036	48 8b c3	 mov	 rax, rbx

; 631  : 		}

  00039	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
$LN2@message:

; 630  : 			return (_Generic_error_category::message(_Errcode));

  0003f	e8 00 00 00 00	 call	 ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
  00044	48 8b c3	 mov	 rax, rbx

; 631  : 		}

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5b		 pop	 rbx
  0004c	c3		 ret	 0
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Iostream_error_category@std@@UEBAPEBDXZ PROC	; std::_Iostream_error_category::name, COMDAT

; 622  : 		return ("iostream");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08LLGCOLLL@iostream?$AA@

; 623  : 		}

  00007	c3		 ret	 0
?name@_Iostream_error_category@std@@UEBAPEBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Iostream_error_category@std@@QEAA@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT

; 616  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  00007	48 c7 41 08 05
	00 00 00	 mov	 QWORD PTR [rcx+8], 5
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 618  : 		}

  00012	48 8b c1	 mov	 rax, rcx
  00015	c3		 ret	 0
??0_Iostream_error_category@std@@QEAA@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??_G_Generic_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Generic_error_category@std@@UEAAPEAXI@Z PROC	; std::_Generic_error_category::`scalar deleting destructor', COMDAT
$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN10@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN10@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Generic_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1_Generic_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Generic_error_category@std@@UEAA@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	c3		 ret	 0
??1_Generic_error_category@std@@UEAA@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT

; 605  : 		{	// convert to name of error

$LN135:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	33 db		 xor	 ebx, ebx

; 606  : 		return (_Syserror_map(_Errcode));

  0000c	41 8b c8	 mov	 ecx, r8d
  0000f	89 5c 24 20	 mov	 DWORD PTR $T1[rsp], ebx
  00013	48 8b fa	 mov	 rdi, rdx
  00016	e8 00 00 00 00	 call	 ?_Syserror_map@std@@YAPEBDH@Z ; std::_Syserror_map
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001b	48 c7 47 18 0f
	00 00 00	 mov	 QWORD PTR [rdi+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00023	48 89 5f 10	 mov	 QWORD PTR [rdi+16], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00027	88 1f		 mov	 BYTE PTR [rdi], bl

; 523  : 		return (*_First == 0 ? 0

  00029	38 18		 cmp	 BYTE PTR [rax], bl
  0002b	74 0d		 je	 SHORT $LN132@message
  0002d	48 83 cb ff	 or	 rbx, -1
$LL133@message:
  00031	48 ff c3	 inc	 rbx
  00034	80 3c 18 00	 cmp	 BYTE PTR [rax+rbx], 0
  00038	75 f7		 jne	 SHORT $LL133@message
$LN132@message:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003a	4c 8b c3	 mov	 r8, rbx
  0003d	48 8b d0	 mov	 rdx, rax
  00040	48 8b cf	 mov	 rcx, rdi
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 607  : 		}

  00048	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0004d	48 8b c7	 mov	 rax, rdi
  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Generic_error_category@std@@UEBAPEBDXZ PROC	; std::_Generic_error_category::name, COMDAT

; 601  : 		return ("generic");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_07DCLBNMLN@generic?$AA@

; 602  : 		}

  00007	c3		 ret	 0
?name@_Generic_error_category@std@@UEBAPEBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Generic_error_category@std@@QEAA@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT

; 595  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Generic_error_category@std@@6B@

; 596  : 		_Addr = _Generic_addr;

  00007	48 c7 41 08 03
	00 00 00	 mov	 QWORD PTR [rcx+8], 3
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 597  : 		}

  00012	48 8b c1	 mov	 rax, rcx
  00015	c3		 ret	 0
??0_Generic_error_category@std@@QEAA@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gsystem_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gsystem_error@std@@UEAAPEAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
$LN17:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN15@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN15@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gsystem_error@std@@UEAAPEAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0system_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0system_error@std@@QEAA@AEBV01@@Z PROC		; std::system_error::system_error, COMDAT
$LN12:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7system_error@std@@6B@
  00041	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 89 07	 mov	 QWORD PTR [rdi], rax
  0004d	48 8b c7	 mov	 rax, rdi
  00050	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0system_error@std@@QEAA@AEBV01@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1system_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1system_error@std@@UEAA@XZ PROC			; std::system_error::~system_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1system_error@std@@UEAA@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z PROC	; std::system_error::system_error, COMDAT

; 548  : 		{	// construct from error code and message string

$LN251:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	57		 push	 rdi
  00004	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00008	49 c7 43 a8 fe
	ff ff ff	 mov	 QWORD PTR [r11-88], -2
  00010	49 89 5b 20	 mov	 QWORD PTR [r11+32], rbx
  00014	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001b	48 33 c4	 xor	 rax, rsp
  0001e	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00023	49 8b c0	 mov	 rax, r8
  00026	48 8b fa	 mov	 rdi, rdx
  00029	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0002c	49 c7 43 e0 0f
	00 00 00	 mov	 QWORD PTR [r11-32], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00034	45 33 c0	 xor	 r8d, r8d
  00037	4d 89 43 d8	 mov	 QWORD PTR [r11-40], r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0003b	45 88 43 c8	 mov	 BYTE PTR [r11-56], r8b

; 523  : 		return (*_First == 0 ? 0

  0003f	44 38 00	 cmp	 BYTE PTR [rax], r8b
  00042	74 16		 je	 SHORT $LN132@system_err
  00044	49 83 c8 ff	 or	 r8, -1
  00048	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL250@system_err:
  00050	49 ff c0	 inc	 r8
  00053	42 80 3c 00 00	 cmp	 BYTE PTR [rax+r8], 0
  00058	75 f6		 jne	 SHORT $LL250@system_err
$LN132@system_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0005a	48 8b d0	 mov	 rdx, rax
  0005d	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T2[rsp]
  00062	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00067	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  00068	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  0006b	0f 29 44 24 30	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00070	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T2[rsp]
  00075	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T1[rsp]
  0007a	48 8b cb	 mov	 rcx, rbx
  0007d	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  00082	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00083	4c 8b 44 24 58	 mov	 r8, QWORD PTR $T2[rsp+24]
  00088	49 83 f8 10	 cmp	 r8, 16
  0008c	72 12		 jb	 SHORT $LN139@system_err

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0008e	49 ff c0	 inc	 r8
  00091	48 8b 54 24 40	 mov	 rdx, QWORD PTR $T2[rsp]
  00096	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T2[rsp]
  0009b	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN139@system_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 548  : 		{	// construct from error code and message string

  000a0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7system_error@std@@6B@
  000a7	48 89 03	 mov	 QWORD PTR [rbx], rax

; 549  : 		}

  000aa	48 8b c3	 mov	 rax, rbx
  000ad	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000b2	48 33 cc	 xor	 rcx, rsp
  000b5	e8 00 00 00 00	 call	 __security_check_cookie
  000ba	48 8b 9c 24 98
	00 00 00	 mov	 rbx, QWORD PTR [rsp+152]
  000c2	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000c6	5f		 pop	 rdi
  000c7	c3		 ret	 0
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ENDP	; std::system_error::system_error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_G_System_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_System_error@std@@UEAAPEAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN12@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_G_System_error@std@@UEAAPEAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0_System_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0_System_error@std@@QEAA@AEBV01@@Z PROC		; std::_System_error::_System_error, COMDAT
$LN9:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8b c7	 mov	 rax, rdi
  0003d	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00041	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00046	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0_System_error@std@@QEAA@AEBV01@@Z ENDP		; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1_System_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_System_error@std@@UEAA@XZ PROC			; std::_System_error::~_System_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1_System_error@std@@UEAA@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
$T2 = 32
$T3 = 48
$T4 = 80
__$ArrayPad$ = 112
this$ = 144
_Errcode$ = 152
_Message$ = 160
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT

; 523  : 		{	// construct from error code and message string

$LN290:
  00000	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00014	48 33 c4	 xor	 rax, rsp
  00017	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0001c	49 8b c0	 mov	 rax, r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001f	48 c7 44 24 48
	0f 00 00 00	 mov	 QWORD PTR $T3[rsp+24], 15
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  00028	48 8b fa	 mov	 rdi, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002b	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR $T3[rsp+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  00034	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00037	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  00044	49 83 c9 ff	 or	 r9, -1
  00048	45 33 c0	 xor	 r8d, r8d
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  00050	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  00053	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T3[rsp]
  00058	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T2[rsp]
  0005d	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  00062	0f 29 44 24 20	 movaps	 XMMWORD PTR $T2[rsp], xmm0
  00067	e8 00 00 00 00	 call	 ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0006c	48 83 78 18 10	 cmp	 QWORD PTR [rax+24], 16
  00071	72 03		 jb	 SHORT $LN162@System_err
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN162@System_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 52   :         : _Data()

  00076	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 53   :     {
; 54   :         __std_exception_data _InitData = { _Message, true };

  0007a	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00086	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
  0008b	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0008e	33 c9		 xor	 ecx, ecx
  00090	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00093	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00097	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  0009c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000a1	4c 8b 44 24 68	 mov	 r8, QWORD PTR $T4[rsp+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  000a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  000ad	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000b0	49 83 f8 10	 cmp	 r8, 16
  000b4	72 12		 jb	 SHORT $LN178@System_err

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000b6	48 8b 54 24 50	 mov	 rdx, QWORD PTR $T4[rsp]
  000bb	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  000c0	49 ff c0	 inc	 r8
  000c3	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN178@System_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  000c8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  000cf	48 89 03	 mov	 QWORD PTR [rbx], rax

; 524  : 		}

  000d2	48 8b c3	 mov	 rax, rbx
  000d5	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  000d8	0f 11 43 18	 movups	 XMMWORD PTR [rbx+24], xmm0
  000dc	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e1	48 33 cc	 xor	 rcx, rsp
  000e4	e8 00 00 00 00	 call	 __security_check_cookie
  000e9	48 8b 9c 24 a8
	00 00 00	 mov	 rbx, QWORD PTR [rsp+168]
  000f1	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000f8	5f		 pop	 rdi
  000f9	c3		 ret	 0
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT

; 513  : 		{	// compose error message

$LN403:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00008	48 c7 44 24 28
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  00011	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00018	48 33 c4	 xor	 rax, rsp
  0001b	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00020	49 8b d8	 mov	 rbx, r8
  00023	48 8b f2	 mov	 rsi, rdx
  00026	48 8b f9	 mov	 rdi, rcx
  00029	48 89 5c 24 30	 mov	 QWORD PTR _Message$GSCopy$[rsp], rbx
  0002e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1781 : 		return (this->_Mysize() == 0);

  00036	49 83 78 10 00	 cmp	 QWORD PTR [r8+16], 0
  0003b	0f 94 c0	 sete	 al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 514  : 		if (!_Message.empty())

  0003e	84 c0		 test	 al, al
  00040	75 15		 jne	 SHORT $LN2@Makestr
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00042	41 b8 02 00 00
	00		 mov	 r8d, 2
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5?$AA@
  0004f	48 8b cb	 mov	 rcx, rbx
  00052	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@Makestr:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 516  : 		_Message.append(_Errcode.message());

  00057	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  0005c	48 8b ce	 mov	 rcx, rsi
  0005f	e8 00 00 00 00	 call	 ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
  00064	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1060 : 		return (append(_Right, 0, npos));

  00065	49 83 c9 ff	 or	 r9, -1
  00069	45 33 c0	 xor	 r8d, r8d
  0006c	48 8b d0	 mov	 rdx, rax
  0006f	48 8b cb	 mov	 rcx, rbx
  00072	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  00077	90		 npad	 1

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00078	4c 8b 44 24 50	 mov	 r8, QWORD PTR $T3[rsp+24]
  0007d	49 83 f8 10	 cmp	 r8, 16
  00081	72 12		 jb	 SHORT $LN34@Makestr

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00083	49 ff c0	 inc	 r8
  00086	48 8b 54 24 38	 mov	 rdx, QWORD PTR $T3[rsp]
  0008b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T3[rsp]
  00090	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN34@Makestr:

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00095	48 c7 47 18 0f
	00 00 00	 mov	 QWORD PTR [rdi+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0009d	48 c7 47 10 00
	00 00 00	 mov	 QWORD PTR [rdi+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a5	48 83 7f 18 10	 cmp	 QWORD PTR [rdi+24], 16
  000aa	72 05		 jb	 SHORT $LN272@Makestr
  000ac	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  000af	eb 03		 jmp	 SHORT $LN273@Makestr
$LN272@Makestr:
  000b1	48 8b c7	 mov	 rax, rdi
$LN273@Makestr:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000b4	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  000b7	48 8b d3	 mov	 rdx, rbx
  000ba	48 8b cf	 mov	 rcx, rdi
  000bd	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
  000c2	90		 npad	 1

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000c3	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  000c7	49 83 f8 10	 cmp	 r8, 16
  000cb	72 0e		 jb	 SHORT $LN292@Makestr

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000cd	49 ff c0	 inc	 r8
  000d0	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000d3	48 8b cb	 mov	 rcx, rbx
  000d6	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN292@Makestr:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000db	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000e3	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 517  : 		return (_Message);

  000eb	48 8b c7	 mov	 rax, rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ee	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000f3	72 08		 jb	 SHORT $LN392@Makestr
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000f5	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000f8	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000fb	eb 03		 jmp	 SHORT $LN393@Makestr
$LN392@Makestr:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000fd	c6 03 00	 mov	 BYTE PTR [rbx], 0
$LN393@Makestr:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 518  : 		}

  00100	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00105	48 33 cc	 xor	 rcx, rsp
  00108	e8 00 00 00 00	 call	 __security_check_cookie
  0010d	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00111	5f		 pop	 rdi
  00112	5e		 pop	 rsi
  00113	5b		 pop	 rbx
  00114	c3		 ret	 0
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _Message$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _Message$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??8std@@YA_NAEBVerror_condition@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??8std@@YA_NAEBVerror_condition@0@0@Z PROC		; std::operator==, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	4c 8b 49 08	 mov	 r9, QWORD PTR [rcx+8]
  00008	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0000c	4d 39 41 08	 cmp	 QWORD PTR [r9+8], r8

; 393  : 	return (_Left.category() == _Right.category()

  00010	75 09		 jne	 SHORT $LN3@operator
  00012	8b 02		 mov	 eax, DWORD PTR [rdx]
  00014	39 01		 cmp	 DWORD PTR [rcx], eax
  00016	75 03		 jne	 SHORT $LN3@operator
  00018	b0 01		 mov	 al, 1

; 394  : 		&& _Left.value() == _Right.value());
; 395  : 	}

  0001a	c3		 ret	 0
$LN3@operator:

; 393  : 	return (_Left.category() == _Right.category()

  0001b	32 c0		 xor	 al, al

; 394  : 		&& _Left.value() == _Right.value());
; 395  : 	}

  0001d	c3		 ret	 0
??8std@@YA_NAEBVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT

; 346  : 		return (*_Mycat);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 347  : 		}

  00004	c3		 ret	 0
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_condition@std@@QEBAHXZ PROC		; std::error_condition::value, COMDAT

; 341  : 		return (_Myval);

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 342  : 		}

  00002	c3		 ret	 0
?value@error_condition@std@@QEBAHXZ ENDP		; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 308  : 		}

  00002	48 8b c1	 mov	 rax, rcx
  00005	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  00009	c3		 ret	 0
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT

; 279  : 		{	// get name of error code

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 280  : 		return (category().message(value()));

  00006	44 8b 01	 mov	 r8d, DWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx

; 273  : 		return (*_Mycat);

  0000c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00010	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 280  : 		return (category().message(value()));

  00018	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0001b	ff 50 10	 call	 QWORD PTR [rax+16]
  0001e	48 8b c3	 mov	 rax, rbx

; 281  : 		}

  00021	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00025	5b		 pop	 rbx
  00026	c3		 ret	 0
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_code@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_code::category, COMDAT

; 273  : 		return (*_Mycat);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 274  : 		}

  00004	c3		 ret	 0
?category@error_code@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_code@std@@QEBAHXZ PROC			; std::error_code::value, COMDAT

; 268  : 		return (_Myval);

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 269  : 		}

  00002	c3		 ret	 0
?value@error_code@std@@QEBAHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 235  : 		}

  00002	48 8b c1	 mov	 rax, rcx
  00005	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  00009	c3		 ret	 0
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??_Gerror_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gerror_category@std@@UEAAPEAXI@Z PROC		; std::error_category::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN7@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN7@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_Gerror_category@std@@UEAAPEAXI@Z ENDP		; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8error_category@std@@QEBA_NAEBV01@@Z PROC		; std::error_category::operator==, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  00004	48 39 51 08	 cmp	 QWORD PTR [rcx+8], rdx
  00008	0f 94 c0	 sete	 al

; 193  : 		}

  0000b	c3		 ret	 0
??8error_category@std@@QEBA_NAEBV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
_TEXT	SEGMENT
this$ = 8
_Code$ = 16
_Errval$ = 24
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  00008	4c 39 49 08	 cmp	 QWORD PTR [rcx+8], r9

; 463  : 	return (*this == _Code.category() && _Code.value() == _Errval);

  0000c	75 08		 jne	 SHORT $LN3@equivalent
  0000e	44 39 02	 cmp	 DWORD PTR [rdx], r8d
  00011	75 03		 jne	 SHORT $LN3@equivalent
  00013	b0 01		 mov	 al, 1

; 464  : 	}

  00015	c3		 ret	 0
$LN3@equivalent:

; 463  : 	return (*this == _Code.category() && _Code.value() == _Errval);

  00016	32 c0		 xor	 al, al

; 464  : 	}

  00018	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Errval$ = 72
_Cond$ = 80
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT

; 455  : 	{	// test if error code same condition

$LN24:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	49 8b d8	 mov	 rbx, r8
  0000c	44 8b c2	 mov	 r8d, edx
  0000f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00014	ff 50 18	 call	 QWORD PTR [rax+24]

; 192  : 		return (_Addr == _Right._Addr);

  00017	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  0001b	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0001f	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00023	49 39 51 08	 cmp	 QWORD PTR [r9+8], rdx

; 393  : 	return (_Left.category() == _Right.category()

  00027	75 0e		 jne	 SHORT $LN5@equivalent
  00029	8b 0b		 mov	 ecx, DWORD PTR [rbx]
  0002b	39 08		 cmp	 DWORD PTR [rax], ecx
  0002d	75 08		 jne	 SHORT $LN5@equivalent

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  0002f	b0 01		 mov	 al, 1

; 457  : 	}

  00031	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00035	5b		 pop	 rbx
  00036	c3		 ret	 0
$LN5@equivalent:

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  00037	32 c0		 xor	 al, al

; 457  : 	}

  00039	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Errval$ = 24
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	44 89 02	 mov	 DWORD PTR [rdx], r8d

; 449  : 	return (error_condition(_Errval, *this));

  00003	48 8b c2	 mov	 rax, rdx

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00006	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 450  : 	}

  0000a	c3		 ret	 0
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1error_category@std@@UEAA@XZ PROC			; std::error_category::~error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 175  : 		}

  0000a	c3		 ret	 0
??1error_category@std@@UEAA@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0error_category@std@@QEAA@XZ PROC			; std::error_category::error_category, COMDAT

; 169  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@

; 170  : 		_Addr = reinterpret_cast<uintptr_t>(this);

  00007	48 89 49 08	 mov	 QWORD PTR [rcx+8], rcx
  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 171  : 		}

  0000e	48 8b c1	 mov	 rax, rcx
  00011	c3		 ret	 0
??0error_category@std@@QEAA@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?iostream_category@std@@YAAEBVerror_category@1@XZ
_TEXT	SEGMENT
?iostream_category@std@@YAAEBVerror_category@1@XZ PROC	; std::iostream_category, COMDAT

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  00000	e9 00 00 00 00	 jmp	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
?iostream_category@std@@YAAEBVerror_category@1@XZ ENDP	; std::iostream_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Errno$ = 56
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z PROC ; std::make_error_code, COMDAT

; 479  : 	{	// make an error_code

$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	8b da		 mov	 ebx, edx
  0000c	48 8b f9	 mov	 rdi, rcx

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  0000f	e8 00 00 00 00	 call	 ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00014	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 480  : 	return (error_code((int)_Errno, iostream_category()));

  00018	48 8b c7	 mov	 rax, rdi

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  0001b	89 1f		 mov	 DWORD PTR [rdi], ebx

; 481  : 	}

  0001d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00022	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00026	5f		 pop	 rdi
  00027	c3		 ret	 0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN9@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN9@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx

; 65   :         : _Data()

  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 66   :     {

  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00033	48 89 03	 mov	 QWORD PTR [rbx], rax
  00036	48 8b c3	 mov	 rax, rbx
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
this$ = 64
_Message$ = 72
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT

; 163  : 		{	// construct from message string

$LN28:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00006	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  0000b	48 8b c2	 mov	 rax, rdx
  0000e	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00011	72 03		 jb	 SHORT $LN17@runtime_er
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00013	48 8b 02	 mov	 rax, QWORD PTR [rdx]
$LN17@runtime_er:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 52   :         : _Data()

  00016	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 53   :     {
; 54   :         __std_exception_data _InitData = { _Message, true };

  0001a	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00026	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
  0002b	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0002e	33 c9		 xor	 ecx, ecx
  00030	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00033	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00037	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  0003c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00048	48 89 03	 mov	 QWORD PTR [rbx], rax

; 164  : 		}

  0004b	48 8b c3	 mov	 rax, rbx
  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5b		 pop	 rbx
  00053	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT

; 2277 : 		{	// report an out_of_range error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2278 : 		_Xout_of_range("invalid string position");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00010	cc		 int	 3
$LN3@Xran:
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT

; 2265 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 05		 jb	 SHORT $LN17@Check_offs

; 2267 : 			_Xran();
; 2268 : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN17@Check_offs:

; 2278 : 		_Xout_of_range("invalid string position");

  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0001b	cc		 int	 3
$LN16@Check_offs:
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 2260 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2261 : 		_Xlength_error("string too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Built$ = 56
_Newsize$ = 64
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 2243 : 		{	// initialize buffer, deallocating any storage

$LN116:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b f8	 mov	 rdi, r8
  0000d	48 8b d9	 mov	 rbx, rcx

; 2244 : 		if (!_Built)

  00010	84 d2		 test	 dl, dl
  00012	74 33		 je	 SHORT $LN4@Tidy

; 2245 : 			;
; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00014	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00019	72 2c		 jb	 SHORT $LN4@Tidy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;

  0001b	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  00020	48 8b 31	 mov	 rsi, QWORD PTR [rcx]

; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)

  00023	4d 85 c0	 test	 r8, r8
  00026	74 08		 je	 SHORT $LN58@Tidy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  00028	48 8b d6	 mov	 rdx, rsi
  0002b	e8 00 00 00 00	 call	 memcpy
$LN58@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00030	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00034	48 8b d6	 mov	 rdx, rsi
  00037	49 ff c0	 inc	 r8
  0003a	48 8b cb	 mov	 rcx, rbx
  0003d	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
  00042	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
$LN4@Tidy:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00047	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0004f	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00053	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00058	72 12		 jb	 SHORT $LN104@Tidy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0005a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0005d	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2257 : 		}

  00061	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
$LN104@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0006c	c6 04 3b 00	 mov	 BYTE PTR [rbx+rdi], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2257 : 		}

  00070	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00075	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00079	5f		 pop	 rdi
  0007a	c3		 ret	 0
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 35		 je	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00005	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00009	48 83 f8 10	 cmp	 rax, 16
  0000d	72 05		 jb	 SHORT $LN16@Inside
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000f	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00012	eb 03		 jmp	 SHORT $LN17@Inside
$LN16@Inside:
  00014	4c 8b c1	 mov	 r8, rcx
$LN17@Inside:

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00017	49 3b d0	 cmp	 rdx, r8
  0001a	72 1e		 jb	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001c	48 83 f8 10	 cmp	 rax, 16
  00020	72 05		 jb	 SHORT $LN34@Inside
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00022	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00025	eb 03		 jmp	 SHORT $LN35@Inside
$LN34@Inside:
  00027	4c 8b c1	 mov	 r8, rcx
$LN35@Inside:

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002a	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  0002e	49 8d 0c 00	 lea	 rcx, QWORD PTR [r8+rax]
  00032	48 3b ca	 cmp	 rcx, rdx
  00035	76 03		 jbe	 SHORT $LN4@Inside

; 2237 : 		else
; 2238 : 			return (true);

  00037	b0 01		 mov	 al, 1

; 2239 : 		}

  00039	c3		 ret	 0
$LN4@Inside:

; 2236 : 			return (false);	// don't ask

  0003a	32 c0		 xor	 al, al

; 2239 : 		}

  0003c	c3		 ret	 0
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Trim$ = 64
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT

; 2219 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN105:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b da	 mov	 rbx, rdx

; 2220 : 		if (max_size() < _Newsize)

  00009	48 83 fa fe	 cmp	 rdx, -2
  0000d	77 7c		 ja	 SHORT $LN103@Grow

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  0000f	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00014	33 ff		 xor	 edi, edi
  00016	48 39 51 18	 cmp	 QWORD PTR [rcx+24], rdx
  0001a	73 1a		 jae	 SHORT $LN3@Grow

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0001c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00025	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  0002a	48 85 db	 test	 rbx, rbx
  0002d	0f 95 c0	 setne	 al

; 2230 : 		}

  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5b		 pop	 rbx
  00035	c3		 ret	 0
$LN3@Grow:

; 2224 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00036	45 84 c0	 test	 r8b, r8b
  00039	74 29		 je	 SHORT $LN5@Grow
  0003b	48 83 fa 10	 cmp	 rdx, 16
  0003f	73 23		 jae	 SHORT $LN5@Grow

; 2225 : 			_Tidy(true,	// copy and deallocate if trimming to small string

  00041	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00045	49 3b d0	 cmp	 rdx, r8
  00048	4c 0f 42 c2	 cmovb	 r8, rdx
  0004c	b2 01		 mov	 dl, 1
  0004e	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00053	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00058	48 85 db	 test	 rbx, rbx
  0005b	0f 95 c0	 setne	 al

; 2230 : 		}

  0005e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00062	5b		 pop	 rbx
  00063	c3		 ret	 0
$LN5@Grow:

; 2226 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2227 : 		else if (_Newsize == 0)

  00064	48 85 d2	 test	 rdx, rdx
  00067	75 11		 jne	 SHORT $LN100@Grow

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00069	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006d	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00072	72 03		 jb	 SHORT $LN91@Grow
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN91@Grow:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00077	40 88 39	 mov	 BYTE PTR [rcx], dil
$LN100@Grow:
  0007a	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  0007f	48 85 db	 test	 rbx, rbx
  00082	0f 95 c0	 setne	 al

; 2230 : 		}

  00085	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00089	5b		 pop	 rbx
  0008a	c3		 ret	 0
$LN103@Grow:

; 2261 : 		_Xlength_error("string too long");

  0008b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00092	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00097	cc		 int	 3
$LN102@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00000	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00004	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00009	72 08		 jb	 SHORT $LN22@Eos
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0000e	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2215 : 		}

  00012	c3		 ret	 0
$LN22@Eos:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00013	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2215 : 		}

  00017	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT

; 2178 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN468:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	53		 push	 rbx
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	41 56		 push	 r14
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00018	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00021	49 8b f0	 mov	 rsi, r8
  00024	48 8b d9	 mov	 rbx, rcx

; 2179 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00027	48 8b fa	 mov	 rdi, rdx
  0002a	48 83 cf 0f	 or	 rdi, 15

; 2180 : 		if (max_size() < _Newres)

  0002e	48 83 ff fe	 cmp	 rdi, -2
  00032	76 05		 jbe	 SHORT $LN2@Copy

; 2181 : 			_Newres = _Newsize;	// undo roundup if too big

  00034	48 8b fa	 mov	 rdi, rdx

; 2182 : 		else if (this->_Myres() / 2 <= _Newres / 3)

  00037	eb 35		 jmp	 SHORT $LN108@Copy
$LN2@Copy:
  00039	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  0003d	49 8b c8	 mov	 rcx, r8
  00040	48 d1 e9	 shr	 rcx, 1
  00043	48 b8 ab aa aa
	aa aa aa aa aa	 mov	 rax, -6148914691236517205 ; aaaaaaaaaaaaaaabH
  0004d	48 f7 e7	 mul	 rdi
  00050	48 d1 ea	 shr	 rdx, 1
  00053	48 3b ca	 cmp	 rcx, rdx
  00056	76 16		 jbe	 SHORT $LN108@Copy

; 2183 : 			;
; 2184 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00058	48 c7 c7 fe ff
	ff ff		 mov	 rdi, -2
  0005f	48 8b c7	 mov	 rax, rdi
  00062	48 2b c1	 sub	 rax, rcx
  00065	4c 3b c0	 cmp	 r8, rax
  00068	77 04		 ja	 SHORT $LN108@Copy

; 2185 : 			_Newres = this->_Myres()

  0006a	4a 8d 3c 01	 lea	 rdi, QWORD PTR [rcx+r8]
$LN108@Copy:

; 2186 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2187 : 		else
; 2188 : 			_Newres = max_size();	// settle for max_size()
; 2189 : 
; 2190 : 		_Elem *_Ptr;
; 2191 : 		_TRY_BEGIN
; 2192 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

  0006e	48 8d 57 01	 lea	 rdx, QWORD PTR [rdi+1]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 874  : 		return (_Mybase::allocate(_Count));

  00072	48 8b cb	 mov	 rcx, rbx
  00075	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  0007a	4c 8b f0	 mov	 r14, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
  0007d	eb 14		 jmp	 SHORT $LN18@Copy
$LN19@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
  0007f	48 8b 5c 24 60	 mov	 rbx, QWORD PTR this$[rsp]
  00084	48 8b 74 24 70	 mov	 rsi, QWORD PTR _Oldlen$[rsp]
  00089	48 8b 7c 24 68	 mov	 rdi, QWORD PTR _Newres$[rsp]
  0008e	4c 8b 74 24 78	 mov	 r14, QWORD PTR _Ptr$[rsp]
$LN18@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2203 : 		if (0 < _Oldlen)

  00093	48 85 f6	 test	 rsi, rsi
  00096	74 1f		 je	 SHORT $LN276@Copy

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00098	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0009d	72 05		 jb	 SHORT $LN265@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0009f	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a2	eb 03		 jmp	 SHORT $LN266@Copy
$LN265@Copy:
  000a4	48 8b d3	 mov	 rdx, rbx
$LN266@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000a7	48 85 f6	 test	 rsi, rsi
  000aa	74 0b		 je	 SHORT $LN276@Copy
  000ac	4c 8b c6	 mov	 r8, rsi
  000af	49 8b ce	 mov	 rcx, r14
  000b2	e8 00 00 00 00	 call	 memcpy
$LN276@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000b7	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  000bb	49 83 f8 10	 cmp	 r8, 16
  000bf	72 0e		 jb	 SHORT $LN280@Copy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000c1	49 ff c0	 inc	 r8
  000c4	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000c7	48 8b cb	 mov	 rcx, rbx
  000ca	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN280@Copy:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000cf	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d7	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000df	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000e4	72 05		 jb	 SHORT $LN380@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000e6	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e9	eb 03		 jmp	 SHORT $LN381@Copy
$LN380@Copy:
  000eb	48 8b c3	 mov	 rax, rbx
$LN381@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ee	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  000f1	4c 89 33	 mov	 QWORD PTR [rbx], r14
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2208 : 		this->_Myres() = _Newres;

  000f4	48 89 7b 18	 mov	 QWORD PTR [rbx+24], rdi

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000f8	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000fc	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00101	72 03		 jb	 SHORT $LN456@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00103	49 8b de	 mov	 rbx, r14
$LN456@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00106	c6 04 33 00	 mov	 BYTE PTR [rbx+rsi], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2210 : 		}

  0010a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0010e	41 5e		 pop	 r14
  00110	5f		 pop	 rdi
  00111	5e		 pop	 rsi
  00112	5b		 pop	 rbx
  00113	c3		 ret	 0
$LN466@Copy:
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2193 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 874  : 		return (_Mybase::allocate(_Count));

  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;
; 2200 : 			_CATCH_END
; 2201 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00049	49 83 f8 10	 cmp	 r8, 16
  0004d	72 0e		 jb	 SHORT $LN144@catch$0

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	49 ff c0	 inc	 r8
  00052	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00055	48 8b cb	 mov	 rcx, rbx
  00058	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN144@catch$0:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0005d	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00065	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006d	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00072	72 03		 jb	 SHORT $LN245@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00074	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN245@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00077	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;

  0007a	33 d2		 xor	 edx, edx
  0007c	33 c9		 xor	 ecx, ecx
  0007e	e8 00 00 00 00	 call	 _CxxThrowException
  00083	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2193 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 874  : 		return (_Mybase::allocate(_Count));

  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;
; 2200 : 			_CATCH_END
; 2201 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 729  : 		}
; 730  : 
; 731  : 	const size_type& _Myres() const _NOEXCEPT
; 732  : 		{	// return const reference to _Myres
; 733  : 		return (_Get_data()._Myres);
; 734  : 		}
; 735  : 
; 736  : private:
; 737  : 	_Compressed_pair<_Alty, _String_val<_Val_types> > _Mypair;
; 738  : 	};
; 739  : 
; 740  : 		// TEMPLATE CLASS basic_string
; 741  : template<class _Elem,
; 742  : 	class _Traits,
; 743  : 	class _Alloc>
; 744  : 	class basic_string
; 745  : 		: public _String_alloc<_String_base_types<_Elem, _Alloc> >
; 746  : 	{	// null-terminated transparent array of elements
; 747  : public:
; 748  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Myt;
; 749  : 	typedef _String_alloc<_String_base_types<_Elem, _Alloc> > _Mybase;
; 750  : 	typedef _Traits traits_type;
; 751  : 	typedef _Alloc allocator_type;
; 752  : 
; 753  : 	typedef typename _Mybase::_Alty _Alty;
; 754  : 
; 755  : 	typedef typename _Mybase::value_type value_type;
; 756  : 	typedef typename _Mybase::size_type size_type;
; 757  : 	typedef typename _Mybase::difference_type difference_type;
; 758  : 	typedef typename _Mybase::pointer pointer;
; 759  : 	typedef typename _Mybase::const_pointer const_pointer;
; 760  : 	typedef typename _Mybase::reference reference;
; 761  : 	typedef typename _Mybase::const_reference const_reference;
; 762  : 
; 763  : 	typedef typename _Mybase::iterator iterator;
; 764  : 	typedef typename _Mybase::const_iterator const_iterator;
; 765  : 
; 766  : 	typedef _STD reverse_iterator<iterator> reverse_iterator;
; 767  : 	typedef _STD reverse_iterator<const_iterator> const_reverse_iterator;
; 768  : 
; 769  : 	basic_string(const _Myt& _Right)
; 770  : 
; 771  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())
; 772  : 
; 773  : 
; 774  : 		{	// construct by copying _Right
; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);
; 777  : 		}
; 778  : 
; 779  : 	basic_string(const _Myt& _Right, const _Alloc& _Al)
; 780  : 		: _Mybase(_Al)
; 781  : 		{	// construct by copying with allocator
; 782  : 		_Tidy();
; 783  : 		assign(_Right, 0, npos);
; 784  : 		}
; 785  : 
; 786  : 	basic_string() _NOEXCEPT_OP(is_nothrow_default_constructible<_Alloc>::value)
; 787  : 		: _Mybase()
; 788  : 		{	// construct empty string
; 789  : 		_Tidy();
; 790  : 		}
; 791  : 
; 792  : 	explicit basic_string(const _Alloc& _Al) _NOEXCEPT
; 793  : 		: _Mybase(_Al)
; 794  : 		{	// construct empty string with allocator
; 795  : 		_Tidy();
; 796  : 		}
; 797  : 
; 798  : 	basic_string(const _Myt& _Right, size_type _Roff,
; 799  : 		size_type _Count = npos)
; 800  : 		: _Mybase(_Right._Getal())
; 801  : 		{	// construct from _Right [_Roff, _Roff + _Count)
; 802  : 		_Tidy();
; 803  : 		assign(_Right, _Roff, _Count);
; 804  : 		}
; 805  : 
; 806  : 	basic_string(const _Myt& _Right, size_type _Roff, size_type _Count,
; 807  : 		const _Alloc& _Al)
; 808  : 		: _Mybase(_Al)
; 809  : 		{	// construct from _Right [_Roff, _Roff + _Count) with allocator
; 810  : 		_Tidy();
; 811  : 		assign(_Right, _Roff, _Count);
; 812  : 		}
; 813  : 
; 814  : 	basic_string(const _Elem *_Ptr, size_type _Count)
; 815  : 		: _Mybase()
; 816  : 		{	// construct from [_Ptr, _Ptr + _Count)
; 817  : 		_Tidy();
; 818  : 		assign(_Ptr, _Count);
; 819  : 		}
; 820  : 
; 821  : 	basic_string(const _Elem *_Ptr, size_type _Count, const _Alloc& _Al)
; 822  : 		: _Mybase(_Al)
; 823  : 		{	// construct from [_Ptr, _Ptr + _Count) with allocator
; 824  : 		_Tidy();
; 825  : 		assign(_Ptr, _Count);
; 826  : 		}
; 827  : 
; 828  : 	basic_string(const _Elem *_Ptr)
; 829  : 		: _Mybase()
; 830  : 		{	// construct from [_Ptr, <null>)
; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}
; 834  : 
; 835  : 	basic_string(const _Elem *_Ptr, const _Alloc& _Al)
; 836  : 		: _Mybase(_Al)
; 837  : 		{	// construct from [_Ptr, <null>) with allocator
; 838  : 		_Tidy();
; 839  : 		assign(_Ptr);
; 840  : 		}
; 841  : 
; 842  : 	basic_string(size_type _Count, _Elem _Ch)
; 843  : 		: _Mybase()
; 844  : 		{	// construct from _Count * _Ch
; 845  : 		_Tidy();
; 846  : 		assign(_Count, _Ch);
; 847  : 		}
; 848  : 
; 849  : 	basic_string(size_type _Count, _Elem _Ch, const _Alloc& _Al)
; 850  : 		: _Mybase(_Al)
; 851  : 		{	// construct from _Count * _Ch with allocator
; 852  : 		_Tidy();
; 853  : 		assign(_Count, _Ch);
; 854  : 		}
; 855  : 
; 856  : 	template<class _Iter,
; 857  : 		class = typename enable_if<_Is_iterator<_Iter>::value,
; 858  : 			void>::type>
; 859  : 		basic_string(_Iter _First, _Iter _Last, const _Alloc& _Al = _Alloc())
; 860  : 		: _Mybase(_Al)
; 861  : 		{	// construct from [_First, _Last) with optional allocator
; 862  : 		_DEBUG_RANGE(_First, _Last);
; 863  : 		_Tidy();
; 864  : 		_Construct(_Unchecked(_First), _Unchecked(_Last), _Iter_cat(_First));
; 865  : 		}
; 866  : 
; 867  : 	template<class _Iter>
; 868  : 		void _Construct(_Iter _First,
; 869  : 			_Iter _Last, input_iterator_tag)
; 870  : 		{	// initialize from [_First, _Last), input iterators
; 871  : 		_TRY_BEGIN
; 872  : 		for (; _First != _Last; ++_First)
; 873  : 			append((size_type)1, (_Elem)*_First);
; 874  : 		_CATCH_ALL
; 875  : 		_Tidy(true);
; 876  : 		_RERAISE;
; 877  : 		_CATCH_END
; 878  : 		}
; 879  : 
; 880  : 	template<class _Iter>
; 881  : 		void _Construct(_Iter _First,
; 882  : 			_Iter _Last, forward_iterator_tag)
; 883  : 		{	// initialize from [_First, _Last), forward iterators
; 884  : 		size_type _Count = 0;
; 885  : 		_Distance(_First, _Last, _Count);
; 886  : 		reserve(_Count);
; 887  : 		_Construct(_First, _Last, input_iterator_tag());
; 888  : 		}
; 889  : 
; 890  : 	void _Construct(_Elem *_First,
; 891  : 		_Elem *_Last, random_access_iterator_tag)
; 892  : 		{	// initialize from [_First, _Last), pointers
; 893  : 		if (_First != _Last)
; 894  : 			assign(_First, _Last - _First);
; 895  : 		}
; 896  : 
; 897  : 	void _Construct(const _Elem *_First,
; 898  : 		const _Elem *_Last, random_access_iterator_tag)
; 899  : 		{	// initialize from [_First, _Last), const pointers
; 900  : 		if (_First != _Last)
; 901  : 			assign(_First, _Last - _First);
; 902  : 		}
; 903  : 
; 904  : 	basic_string(_Myt&& _Right) _NOEXCEPT
; 905  : 		: _Mybase(_STD move(_Right._Getal()))
; 906  : 		{	// construct by moving _Right
; 907  : 		_Tidy();
; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));
; 909  : 		}
; 910  : 
; 911  : 	basic_string(_Myt&& _Right, const _Alloc& _Al)
; 912  : 		: _Mybase(_Al)
; 913  : 		{	// construct by moving _Right, allocator
; 914  : 		if (this->_Getal() != _Right._Getal())
; 915  : 			assign(_Right.begin(), _Right.end());
; 916  : 		else
; 917  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 918  : 		}
; 919  : 
; 920  : 	_Myt& operator=(_Myt&& _Right)
; 921  : 		_NOEXCEPT_OP(_Alty::propagate_on_container_move_assignment::value
; 922  : 			|| _Alty::is_always_equal::value)
; 923  : 		{	// assign by moving _Right
; 924  : 		if (this != &_Right)
; 925  : 			{	// different, assign it
; 926  : 			_Tidy(true);
; 927  : 
; 928  : 			if (_Alty::propagate_on_container_move_assignment::value
; 929  : 				&& this->_Getal() != _Right._Getal())
; 930  : 				this->_Move_alloc(_Right._Getal());
; 931  : 
; 932  : 			if (this->_Getal() != _Right._Getal())
; 933  : 				assign(_Right.begin(), _Right.end());
; 934  : 			else
; 935  : 				_Assign_rv(_STD forward<_Myt>(_Right));
; 936  : 			}
; 937  : 		return (*this);
; 938  : 		}
; 939  : 
; 940  : 	_Myt& assign(_Myt&& _Right) _NOEXCEPT
; 941  : 		{	// assign by moving _Right
; 942  : 		if (this == &_Right)
; 943  : 			;
; 944  : 		else if (get_allocator() != _Right.get_allocator()
; 945  : 			&& this->_BUF_SIZE <= _Right._Myres())
; 946  : 			*this = _Right;
; 947  : 		else
; 948  : 			{	// not same, clear this and steal from _Right
; 949  : 			_Tidy(true);
; 950  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 951  : 			}
; 952  : 		return (*this);
; 953  : 		}
; 954  : 
; 955  : 	void _Assign_rv(_Myt&& _Right)
; 956  : 		{	// assign by moving _Right
; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)
; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,
; 959  : 				_Right._Mysize() + 1);
; 960  : 		else
; 961  : 			{	// copy pointer
; 962  : 			this->_Getal().construct(&this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 963  : 			_Right._Bx()._Ptr = pointer();
; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();
; 966  : 		this->_Myres() = _Right._Myres();
; 967  : 		_Right._Tidy();
; 968  : 		}
; 969  : 
; 970  : 	basic_string(_XSTD initializer_list<_Elem> _Ilist,
; 971  : 		const _Alloc& _Al = allocator_type())
; 972  : 		: _Mybase(_Al)
; 973  : 		{	// construct from initializer_list
; 974  : 		_Tidy();
; 975  : 		assign(_Ilist.begin(), _Ilist.end());
; 976  : 		}
; 977  : 
; 978  : 	_Myt& operator=(_XSTD initializer_list<_Elem> _Ilist)
; 979  : 		{	// assign initializer_list
; 980  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 981  : 		}
; 982  : 
; 983  : 	_Myt& operator+=(_XSTD initializer_list<_Elem> _Ilist)
; 984  : 		{	// append initializer_list
; 985  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 986  : 		}
; 987  : 
; 988  : 	_Myt& assign(_XSTD initializer_list<_Elem> _Ilist)
; 989  : 		{	// assign initializer_list
; 990  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 991  : 		}
; 992  : 
; 993  : 	_Myt& append(_XSTD initializer_list<_Elem> _Ilist)
; 994  : 		{	// append initializer_list
; 995  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 996  : 		}
; 997  : 
; 998  : 	iterator insert(const_iterator _Where,
; 999  : 		_XSTD initializer_list<_Elem> _Ilist)
; 1000 : 		{	// insert initializer_list
; 1001 : 		return (insert(_Where, _Ilist.begin(), _Ilist.end()));
; 1002 : 		}
; 1003 : 
; 1004 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1005 : 		_XSTD initializer_list<_Elem> _Ilist)
; 1006 : 		{	// replace with initializer_list
; 1007 : 		return (replace(_First, _Last, _Ilist.begin(), _Ilist.end()));
; 1008 : 		}
; 1009 : 
; 1010 : 	~basic_string() _NOEXCEPT
; 1011 : 		{	// destroy the string
; 1012 : 		_Tidy(true);
; 1013 : 		}
; 1014 : 
; 1015 : 	_PGLOBAL static const size_type npos;	// bad/missing length/position
; 1016 : 
; 1017 : 	_Myt& operator=(const _Myt& _Right)
; 1018 : 		{	// assign _Right
; 1019 : 		if (this != &_Right)
; 1020 : 			{	// different, assign it
; 1021 : 			if (this->_Getal() != _Right._Getal()
; 1022 : 				&& _Alty::propagate_on_container_copy_assignment::value)
; 1023 : 				{	// change allocator before copying
; 1024 : 				_Tidy(true);
; 1025 : 				this->_Copy_alloc(_Right._Getal());
; 1026 : 				}
; 1027 : 
; 1028 : 			assign(_Right);
; 1029 : 			}
; 1030 : 		return (*this);
; 1031 : 		}
; 1032 : 
; 1033 : 	_Myt& operator=(const _Elem *_Ptr)
; 1034 : 		{	// assign [_Ptr, <null>)
; 1035 : 		return (assign(_Ptr));
; 1036 : 		}
; 1037 : 
; 1038 : 	_Myt& operator=(_Elem _Ch)
; 1039 : 		{	// assign 1 * _Ch
; 1040 : 		return (assign(1, _Ch));
; 1041 : 		}
; 1042 : 
; 1043 : 	_Myt& operator+=(const _Myt& _Right)
; 1044 : 		{	// append _Right
; 1045 : 		return (append(_Right));
; 1046 : 		}
; 1047 : 
; 1048 : 	_Myt& operator+=(const _Elem *_Ptr)
; 1049 : 		{	// append [_Ptr, <null>)
; 1050 : 		return (append(_Ptr));
; 1051 : 		}
; 1052 : 
; 1053 : 	_Myt& operator+=(_Elem _Ch)
; 1054 : 		{	// append 1 * _Ch
; 1055 : 		return (append((size_type)1, _Ch));
; 1056 : 		}
; 1057 : 
; 1058 : 	_Myt& append(const _Myt& _Right)
; 1059 : 		{	// append _Right
; 1060 : 		return (append(_Right, 0, npos));
; 1061 : 		}
; 1062 : 
; 1063 : 	_Myt& append(const _Myt& _Right,
; 1064 : 		size_type _Roff, size_type _Count = npos)
; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)
; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)
; 1069 : 			_Xlen();	// result too long
; 1070 : 
; 1071 : 		const size_type _Num = this->_Mysize() + _Count;
; 1072 : 		if (0 < _Count && _Grow(_Num))
; 1073 : 			{	// make room and append new stuff
; 1074 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),
; 1075 : 				_Right._Myptr() + _Roff, _Count);
; 1076 : 			_Eos(_Num);
; 1077 : 			}
; 1078 : 		return (*this);
; 1079 : 		}
; 1080 : 
; 1081 : 	_Myt& append(const _Elem *_Ptr, size_type _Count)
; 1082 : 		{	// append [_Ptr, _Ptr + _Count)
; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,
; 1086 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1087 : 		if (npos - this->_Mysize() <= _Count)
; 1088 : 			_Xlen();	// result too long
; 1089 : 
; 1090 : 		const size_type _Num = this->_Mysize() + _Count;
; 1091 : 		if (0 < _Count && _Grow(_Num))
; 1092 : 			{	// make room and append new stuff
; 1093 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);
; 1094 : 			_Eos(_Num);
; 1095 : 			}
; 1096 : 		return (*this);
; 1097 : 		}
; 1098 : 
; 1099 : 	_Myt& append(const _Elem *_Ptr)
; 1100 : 		{	// append [_Ptr, <null>)
; 1101 : 		_DEBUG_POINTER(_Ptr);
; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));
; 1103 : 		}
; 1104 : 
; 1105 : 	_Myt& append(size_type _Count, _Elem _Ch)
; 1106 : 		{	// append _Count * _Ch
; 1107 : 		if (npos - this->_Mysize() <= _Count)
; 1108 : 			_Xlen();	// result too long
; 1109 : 
; 1110 : 		const size_type _Num = this->_Mysize() + _Count;
; 1111 : 		if (0 < _Count && _Grow(_Num))
; 1112 : 			{	// make room and append new stuff using assign
; 1113 : 			_Chassign(this->_Mysize(), _Count, _Ch);
; 1114 : 			_Eos(_Num);
; 1115 : 			}
; 1116 : 		return (*this);
; 1117 : 		}
; 1118 : 
; 1119 : 	template<class _Iter>
; 1120 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1121 : 			_Myt&>::type
; 1122 : 		append(_Iter _First, _Iter _Last)
; 1123 : 		{	// append [_First, _Last), input iterators
; 1124 : 		return (replace(end(), end(), _First, _Last));
; 1125 : 		}
; 1126 : 
; 1127 : 	_Myt& append(const_pointer _First, const_pointer _Last)
; 1128 : 		{	// append [_First, _Last), const pointers
; 1129 : 		return (replace(end(), end(), _First, _Last));
; 1130 : 		}
; 1131 : 
; 1132 : 	_Myt& append(const_iterator _First, const_iterator _Last)
; 1133 : 		{	// append [_First, _Last), const_iterators
; 1134 : 		return (replace(end(), end(), _First, _Last));
; 1135 : 		}
; 1136 : 
; 1137 : 	_Myt& assign(const _Myt& _Right)
; 1138 : 		{	// assign _Right
; 1139 : 		return (assign(_Right, 0, npos));
; 1140 : 		}
; 1141 : 
; 1142 : 	_Myt& assign(const _Myt& _Right,
; 1143 : 		size_type _Roff, size_type _Count = npos)
; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)
; 1145 : 		_Right._Check_offset(_Roff);
; 1146 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1147 : 
; 1148 : 		if (this == &_Right)
; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring
; 1150 : 		else if (_Grow(_Count))
; 1151 : 			{	// make room and assign new stuff
; 1152 : 			_Traits::copy(this->_Myptr(),
; 1153 : 				_Right._Myptr() + _Roff, _Count);
; 1154 : 			_Eos(_Count);
; 1155 : 			}
; 1156 : 		return (*this);
; 1157 : 		}
; 1158 : 
; 1159 : 	_Myt& assign(const _Elem *_Ptr, size_type _Count)
; 1160 : 		{	// assign [_Ptr, _Ptr + _Count)
; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,
; 1164 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1165 : 
; 1166 : 		if (_Grow(_Count))
; 1167 : 			{	// make room and assign new stuff
; 1168 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);
; 1169 : 			_Eos(_Count);
; 1170 : 			}
; 1171 : 		return (*this);
; 1172 : 		}
; 1173 : 
; 1174 : 	_Myt& assign(const _Elem *_Ptr)
; 1175 : 		{	// assign [_Ptr, <null>)
; 1176 : 		_DEBUG_POINTER(_Ptr);
; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));
; 1178 : 		}
; 1179 : 
; 1180 : 	_Myt& assign(size_type _Count, _Elem _Ch)
; 1181 : 		{	// assign _Count * _Ch
; 1182 : 		if (_Count == npos)
; 1183 : 			_Xlen();	// result too long
; 1184 : 
; 1185 : 		if (_Grow(_Count))
; 1186 : 			{	// make room and assign new stuff
; 1187 : 			_Chassign(0, _Count, _Ch);
; 1188 : 			_Eos(_Count);
; 1189 : 			}
; 1190 : 		return (*this);
; 1191 : 		}
; 1192 : 
; 1193 : 	template<class _Iter>
; 1194 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1195 : 			_Myt&>::type
; 1196 : 		assign(_Iter _First, _Iter _Last)
; 1197 : 		{	// assign [_First, _Last), input iterators
; 1198 : 		return (replace(begin(), end(), _First, _Last));
; 1199 : 		}
; 1200 : 
; 1201 : 	_Myt& assign(const_pointer _First, const_pointer _Last)
; 1202 : 		{	// assign [_First, _Last), const pointers
; 1203 : 		return (replace(begin(), end(), _First, _Last));
; 1204 : 		}
; 1205 : 
; 1206 : 	_Myt& assign(const_iterator _First, const_iterator _Last)
; 1207 : 		{	// assign [_First, _Last), const_iterators
; 1208 : 		return (replace(begin(), end(), _First, _Last));
; 1209 : 		}
; 1210 : 
; 1211 : 	_Myt& insert(size_type _Off, const _Myt& _Right)
; 1212 : 		{	// insert _Right at _Off
; 1213 : 		return (insert(_Off, _Right, 0, npos));
; 1214 : 		}
; 1215 : 
; 1216 : 	_Myt& insert(size_type _Off,
; 1217 : 		const _Myt& _Right, size_type _Roff, size_type _Count = npos)
; 1218 : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off
; 1219 : 		_Check_offset(_Off);
; 1220 : 		_Right._Check_offset(_Roff);
; 1221 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1222 : 		if (npos - this->_Mysize() <= _Count)
; 1223 : 			_Xlen();	// result too long
; 1224 : 
; 1225 : 		const size_type _Num = this->_Mysize() + _Count;
; 1226 : 		if (0 < _Count && _Grow(_Num))
; 1227 : 			{	// make room and insert new stuff
; 1228 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1229 : 				this->_Myptr() + _Off,
; 1230 : 				this->_Mysize() - _Off);	// empty out hole
; 1231 : 			if (this == &_Right)
; 1232 : 				_Traits::move(this->_Myptr() + _Off,
; 1233 : 					this->_Myptr() + (_Off < _Roff ? _Roff + _Count : _Roff),
; 1234 : 						_Count);	// substring
; 1235 : 			else
; 1236 : 				_Traits::copy(this->_Myptr() + _Off,
; 1237 : 					_Right._Myptr() + _Roff, _Count);	// fill hole
; 1238 : 			_Eos(_Num);
; 1239 : 			}
; 1240 : 		return (*this);
; 1241 : 		}
; 1242 : 
; 1243 : 	_Myt& insert(size_type _Off,
; 1244 : 		const _Elem *_Ptr, size_type _Count)
; 1245 : 		{	// insert [_Ptr, _Ptr + _Count) at _Off
; 1246 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1247 : 		if (_Inside(_Ptr))
; 1248 : 			return (insert(_Off, *this,
; 1249 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1250 : 		_Check_offset(_Off);
; 1251 : 		if (npos - this->_Mysize() <= _Count)
; 1252 : 			_Xlen();	// result too long
; 1253 : 		const size_type _Num = this->_Mysize() + _Count;
; 1254 : 		if (0 < _Count && _Grow(_Num))
; 1255 : 			{	// make room and insert new stuff
; 1256 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1257 : 				this->_Myptr() + _Off,
; 1258 : 				this->_Mysize() - _Off);	// empty out hole
; 1259 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1260 : 			_Eos(_Num);
; 1261 : 			}
; 1262 : 		return (*this);
; 1263 : 		}
; 1264 : 
; 1265 : 	_Myt& insert(size_type _Off, const _Elem *_Ptr)
; 1266 : 		{	// insert [_Ptr, <null>) at _Off
; 1267 : 		_DEBUG_POINTER(_Ptr);
; 1268 : 		return (insert(_Off, _Ptr, _Traits::length(_Ptr)));
; 1269 : 		}
; 1270 : 
; 1271 : 	_Myt& insert(size_type _Off,
; 1272 : 		size_type _Count, _Elem _Ch)
; 1273 : 		{	// insert _Count * _Ch at _Off
; 1274 : 		_Check_offset(_Off);
; 1275 : 		if (npos - this->_Mysize() <= _Count)
; 1276 : 			_Xlen();	// result too long
; 1277 : 		const size_type _Num = this->_Mysize() + _Count;
; 1278 : 		if (0 < _Count && _Grow(_Num))
; 1279 : 			{	// make room and insert new stuff
; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1281 : 				this->_Myptr() + _Off,
; 1282 : 				this->_Mysize() - _Off);	// empty out hole
; 1283 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1284 : 			_Eos(_Num);
; 1285 : 			}
; 1286 : 		return (*this);
; 1287 : 		}
; 1288 : 
; 1289 : 	iterator insert(const_iterator _Where)
; 1290 : 		{	// insert <null> at _Where
; 1291 : 		return (insert(_Where, _Elem()));
; 1292 : 		}
; 1293 : 
; 1294 : 	iterator insert(const_iterator _Where, _Elem _Ch)
; 1295 : 		{	// insert _Ch at _Where
; 1296 : 		size_type _Off = _Where - begin();
; 1297 : 		insert(_Off, 1, _Ch);
; 1298 : 		return (begin() + _Off);
; 1299 : 		}
; 1300 : 
; 1301 : 	iterator insert(const_iterator _Where, size_type _Count, _Elem _Ch)
; 1302 : 		{	// insert _Count * _Elem at _Where
; 1303 : 		size_type _Off = _Where - begin();
; 1304 : 		insert(_Off, _Count, _Ch);
; 1305 : 		return (begin() + _Off);
; 1306 : 		}
; 1307 : 
; 1308 : 	template<class _Iter>
; 1309 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1310 : 			iterator>::type
; 1311 : 		insert(const_iterator _Where, _Iter _First, _Iter _Last)
; 1312 : 		{	// insert [_First, _Last) at _Where, input iterators
; 1313 : 		size_type _Off = _Where - begin();
; 1314 : 		replace(_Where, _Where, _First, _Last);
; 1315 : 		return (begin() + _Off);
; 1316 : 		}
; 1317 : 
; 1318 : 	iterator insert(const_iterator _Where,
; 1319 : 		const_pointer _First, const_pointer _Last)
; 1320 : 		{	// insert [_First, _Last) at _Where, const pointers
; 1321 : 		size_type _Off = _Where - begin();
; 1322 : 		replace(_Where, _Where, _First, _Last);
; 1323 : 		return (begin() + _Off);
; 1324 : 		}
; 1325 : 
; 1326 : 	iterator insert(const_iterator _Where,
; 1327 : 		const_iterator _First, const_iterator _Last)
; 1328 : 		{	// insert [_First, _Last) at _Where, const_iterators
; 1329 : 		size_type _Off = _Where - begin();
; 1330 : 		replace(_Where, _Where, _First, _Last);
; 1331 : 		return (begin() + _Off);
; 1332 : 		}
; 1333 : 
; 1334 : 	_Myt& erase(size_type _Off = 0)
; 1335 : 		{	// erase elements [_Off, ...)
; 1336 : 		_Check_offset(_Off);
; 1337 : 		_Eos(_Off);
; 1338 : 		return (*this);
; 1339 : 		}
; 1340 : 
; 1341 : 	_Myt& erase(size_type _Off, size_type _Count)
; 1342 : 		{	// erase elements [_Off, _Off + _Count)
; 1343 : 		_Check_offset(_Off);
; 1344 : 		if (this->_Mysize() - _Off <= _Count)
; 1345 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1346 : 		else if (0 < _Count)
; 1347 : 			{	// move elements down
; 1348 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1349 : 			size_type _Newsize = this->_Mysize() - _Count;
; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);
; 1351 : 			_Eos(_Newsize);
; 1352 : 			}
; 1353 : 		return (*this);
; 1354 : 		}
; 1355 : 
; 1356 : 	iterator erase(const_iterator _Where)
; 1357 : 		{	// erase element at _Where
; 1358 : 		size_type _Count = _Where - begin();
; 1359 : 		erase(_Count, 1);
; 1360 : 		return (begin() + _Count);
; 1361 : 		}
; 1362 : 
; 1363 : 	iterator erase(const_iterator _First, const_iterator _Last)
; 1364 : 		{	// erase substring [_First, _Last)
; 1365 : 		_DEBUG_RANGE(_First, _Last);
; 1366 : 		size_type _Count = _First - begin();
; 1367 : 		erase(_Count, _Last - _First);
; 1368 : 		return (begin() + _Count);
; 1369 : 		}
; 1370 : 
; 1371 : 	void clear() _NOEXCEPT
; 1372 : 		{	// erase all
; 1373 : 		_Eos(0);
; 1374 : 		}
; 1375 : 
; 1376 : 	_Myt& replace(size_type _Off, size_type _N0, const _Myt& _Right)
; 1377 : 		{	// replace [_Off, _Off + _N0) with _Right
; 1378 : 		return (replace(_Off, _N0, _Right, 0, npos));
; 1379 : 		}
; 1380 : 
; 1381 : 	_Myt& replace(size_type _Off,
; 1382 : 		size_type _N0, const _Myt& _Right, size_type _Roff,
; 1383 : 			size_type _Count = npos)
; 1384 : 		{	// replace [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 1385 : 		_Check_offset(_Off);
; 1386 : 		_Right._Check_offset(_Roff);
; 1387 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1388 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1389 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1390 : 			_Xlen();	// result too long
; 1391 : 
; 1392 : 		const size_type _Nm = this->_Mysize() - _N0 - _Off;	// length of kept tail
; 1393 : 		const size_type _Newsize = this->_Mysize() + _Count - _N0;
; 1394 : 		if (this->_Mysize() < _Newsize)
; 1395 : 			_Grow(_Newsize);
; 1396 : 
; 1397 : 		if (_Count == _N0)
; 1398 : 			{	// only one movement required, so _Traits::move handles any overlap
; 1399 : 			_Traits::move(this->_Myptr() + _Off,
; 1400 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1401 : 			}
; 1402 : 		else if (this != &_Right)
; 1403 : 			{	// no overlap, just move down and copy in new stuff
; 1404 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1405 : 				this->_Myptr() + _Off + _N0, _Nm);	// empty hole
; 1406 : 			_Traits::copy(this->_Myptr() + _Off,
; 1407 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1408 : 			}
; 1409 : 		else if (_Count < _N0)
; 1410 : 			{	// hole doesn't get larger, just copy in substring
; 1411 : 			_Traits::move(this->_Myptr() + _Off,
; 1412 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1413 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1414 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1415 : 			}
; 1416 : 		else if (_Roff <= _Off)
; 1417 : 			{	// hole gets larger, substring begins before hole
; 1418 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1419 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1420 : 			_Traits::move(this->_Myptr() + _Off,
; 1421 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1422 : 			}
; 1423 : 		else if (_Off + _N0 <= _Roff)
; 1424 : 			{	// hole gets larger, substring begins after hole
; 1425 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1426 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1427 : 			_Traits::move(this->_Myptr() + _Off,
; 1428 : 				this->_Myptr() + (_Roff + _Count - _N0),
; 1429 : 				_Count);	// fill hole
; 1430 : 			}
; 1431 : 		else
; 1432 : 			{	// hole gets larger, substring begins in hole
; 1433 : 			_Traits::move(this->_Myptr() + _Off,
; 1434 : 				this->_Myptr() + _Roff, _N0);	// fill old hole
; 1435 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1436 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1437 : 			_Traits::move(this->_Myptr() + _Off + _N0,
; 1438 : 				this->_Myptr() + _Roff + _Count,
; 1439 : 				_Count - _N0);	// fill rest of new hole
; 1440 : 			}
; 1441 : 
; 1442 : 		_Eos(_Newsize);
; 1443 : 		return (*this);
; 1444 : 		}
; 1445 : 
; 1446 : 	_Myt& replace(size_type _Off,
; 1447 : 		size_type _N0, const _Elem *_Ptr, size_type _Count)
; 1448 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 1449 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1450 : 		if (_Inside(_Ptr))
; 1451 : 			return (replace(_Off, _N0, *this,
; 1452 : 				_Ptr - this->_Myptr(),
; 1453 : 				_Count));	// substring, replace carefully
; 1454 : 		_Check_offset(_Off);
; 1455 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1456 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1457 : 			_Xlen();	// result too long
; 1458 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1459 : 
; 1460 : 		if (_Count < _N0)
; 1461 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1462 : 				this->_Myptr() + _Off + _N0,
; 1463 : 				_Nm);	// smaller hole, move tail up
; 1464 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1465 : 		if ((0 < _Count || 0 < _N0)
; 1466 : 			&& _Grow(_Num))
; 1467 : 			{	// make room and rearrange
; 1468 : 			if (_N0 < _Count)
; 1469 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1470 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1471 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1472 : 			_Eos(_Num);
; 1473 : 			}
; 1474 : 		return (*this);
; 1475 : 		}
; 1476 : 
; 1477 : 	_Myt& replace(size_type _Off, size_type _N0, const _Elem *_Ptr)
; 1478 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, <null>)
; 1479 : 		_DEBUG_POINTER(_Ptr);
; 1480 : 		return (replace(_Off, _N0, _Ptr, _Traits::length(_Ptr)));
; 1481 : 		}
; 1482 : 
; 1483 : 	_Myt& replace(size_type _Off,
; 1484 : 		size_type _N0, size_type _Count, _Elem _Ch)
; 1485 : 		{	// replace [_Off, _Off + _N0) with _Count * _Ch
; 1486 : 		_Check_offset(_Off);
; 1487 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1488 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1489 : 			_Xlen();	// result too long
; 1490 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1491 : 
; 1492 : 		if (_Count < _N0)
; 1493 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1494 : 				this->_Myptr() + _Off + _N0,
; 1495 : 				_Nm);	// smaller hole, move tail up
; 1496 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1497 : 		if ((0 < _Count || 0 < _N0)
; 1498 : 			&& _Grow(_Num))
; 1499 : 			{	// make room and rearrange
; 1500 : 			if (_N0 < _Count)
; 1501 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1502 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1503 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1504 : 			_Eos(_Num);
; 1505 : 			}
; 1506 : 		return (*this);
; 1507 : 		}
; 1508 : 
; 1509 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1510 : 		const _Myt& _Right)
; 1511 : 		{	// replace [_First, _Last) with _Right
; 1512 : 		return (replace(_First - begin(), _Last - _First, _Right));
; 1513 : 		}
; 1514 : 
; 1515 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1516 : 		const _Elem *_Ptr, size_type _Count)
; 1517 : 		{	// replace [_First, _Last) with [_Ptr, _Ptr + _Count)
; 1518 : 		return (replace(_First - begin(), _Last - _First, _Ptr, _Count));
; 1519 : 		}
; 1520 : 
; 1521 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1522 : 		const _Elem *_Ptr)
; 1523 : 		{	// replace [_First, _Last) with [_Ptr, <null>)
; 1524 : 		return (replace(_First - begin(), _Last - _First, _Ptr));
; 1525 : 		}
; 1526 : 
; 1527 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1528 : 		size_type _Count, _Elem _Ch)
; 1529 : 		{	// replace [_First, _Last) with _Count * _Ch
; 1530 : 		return (replace(_First - begin(), _Last - _First, _Count, _Ch));
; 1531 : 		}
; 1532 : 
; 1533 : 	template<class _Iter>
; 1534 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1535 : 			_Myt&>::type
; 1536 : 		replace(const_iterator _First, const_iterator _Last,
; 1537 : 			_Iter _First2, _Iter _Last2)
; 1538 : 		{	// replace [_First, _Last) with [_First2, _Last2), input iterators
; 1539 : 		_Myt _Right(_First2, _Last2);
; 1540 : 		replace(_First, _Last, _Right);
; 1541 : 		return (*this);
; 1542 : 		}
; 1543 : 
; 1544 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1545 : 		const_pointer _First2, const_pointer _Last2)
; 1546 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1547 : 		if (_First2 == _Last2)
; 1548 : 			erase(_First - begin(), _Last - _First);
; 1549 : 		else
; 1550 : 			replace(_First - begin(), _Last - _First,
; 1551 : 				&*_First2, _Last2 - _First2);
; 1552 : 		return (*this);
; 1553 : 		}
; 1554 : 
; 1555 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1556 : 		pointer _First2, pointer _Last2)
; 1557 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1558 : 		if (_First2 == _Last2)
; 1559 : 			erase(_First - begin(), _Last - _First);
; 1560 : 		else
; 1561 : 			replace(_First - begin(), _Last - _First,
; 1562 : 				&*_First2, _Last2 - _First2);
; 1563 : 		return (*this);
; 1564 : 		}
; 1565 : 
; 1566 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1567 : 		const_iterator _First2, const_iterator _Last2)
; 1568 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1569 : 		if (_First2 == _Last2)
; 1570 : 			erase(_First - begin(), _Last - _First);
; 1571 : 		else
; 1572 : 			replace(_First - begin(), _Last - _First,
; 1573 : 				&*_First2, _Last2 - _First2);
; 1574 : 		return (*this);
; 1575 : 		}
; 1576 : 
; 1577 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1578 : 		iterator _First2, iterator _Last2)
; 1579 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1580 : 		if (_First2 == _Last2)
; 1581 : 			erase(_First - begin(), _Last - _First);
; 1582 : 		else
; 1583 : 			replace(_First - begin(), _Last - _First,
; 1584 : 				&*_First2, _Last2 - _First2);
; 1585 : 		return (*this);
; 1586 : 		}
; 1587 : 
; 1588 : 	iterator begin() _NOEXCEPT
; 1589 : 		{	// return iterator for beginning of mutable sequence
; 1590 : 		return (iterator(this->_Myptr(), &this->_Get_data()));
; 1591 : 		}
; 1592 : 
; 1593 : 	const_iterator begin() const _NOEXCEPT
; 1594 : 		{	// return iterator for beginning of nonmutable sequence
; 1595 : 		return (const_iterator(this->_Myptr(), &this->_Get_data()));
; 1596 : 		}
; 1597 : 
; 1598 : 	iterator end() _NOEXCEPT
; 1599 : 		{	// return iterator for end of mutable sequence
; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1601 : 		}
; 1602 : 
; 1603 : 	const_iterator end() const _NOEXCEPT
; 1604 : 		{	// return iterator for end of nonmutable sequence
; 1605 : 		return (const_iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1606 : 		}
; 1607 : 
; 1608 : 	reverse_iterator rbegin() _NOEXCEPT
; 1609 : 		{	// return iterator for beginning of reversed mutable sequence
; 1610 : 		return (reverse_iterator(end()));
; 1611 : 		}
; 1612 : 
; 1613 : 	const_reverse_iterator rbegin() const _NOEXCEPT
; 1614 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1615 : 		return (const_reverse_iterator(end()));
; 1616 : 		}
; 1617 : 
; 1618 : 	reverse_iterator rend() _NOEXCEPT
; 1619 : 		{	// return iterator for end of reversed mutable sequence
; 1620 : 		return (reverse_iterator(begin()));
; 1621 : 		}
; 1622 : 
; 1623 : 	const_reverse_iterator rend() const _NOEXCEPT
; 1624 : 		{	// return iterator for end of reversed nonmutable sequence
; 1625 : 		return (const_reverse_iterator(begin()));
; 1626 : 		}
; 1627 : 
; 1628 : 	const_iterator cbegin() const _NOEXCEPT
; 1629 : 		{	// return iterator for beginning of nonmutable sequence
; 1630 : 		return (begin());
; 1631 : 		}
; 1632 : 
; 1633 : 	const_iterator cend() const _NOEXCEPT
; 1634 : 		{	// return iterator for end of nonmutable sequence
; 1635 : 		return (end());
; 1636 : 		}
; 1637 : 
; 1638 : 	const_reverse_iterator crbegin() const _NOEXCEPT
; 1639 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1640 : 		return (rbegin());
; 1641 : 		}
; 1642 : 
; 1643 : 	const_reverse_iterator crend() const _NOEXCEPT
; 1644 : 		{	// return iterator for end of reversed nonmutable sequence
; 1645 : 		return (rend());
; 1646 : 		}
; 1647 : 
; 1648 : 	void shrink_to_fit()
; 1649 : 		{	// reduce capacity
; 1650 : 		if ((size() | this->_ALLOC_MASK) < capacity())
; 1651 : 			{	// worth shrinking, do it
; 1652 : 			_Myt _Tmp(*this);
; 1653 : 			swap(_Tmp);
; 1654 : 			}
; 1655 : 		}
; 1656 : 
; 1657 : 	reference at(size_type _Off)
; 1658 : 		{	// subscript mutable sequence with checking
; 1659 : 		_Check_offset_exclusive(_Off);
; 1660 : 		return (this->_Myptr()[_Off]);
; 1661 : 		}
; 1662 : 
; 1663 : 	const_reference at(size_type _Off) const
; 1664 : 		{	// subscript nonmutable sequence with checking
; 1665 : 		_Check_offset_exclusive(_Off);
; 1666 : 		return (this->_Myptr()[_Off]);
; 1667 : 		}
; 1668 : 
; 1669 : 	reference operator[](size_type _Off)
; 1670 : 		{	// subscript mutable sequence
; 1671 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1672 : 		if (this->_Mysize() < _Off)	// sic
; 1673 : 			_DEBUG_ERROR("string subscript out of range");
; 1674 : 
; 1675 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1676 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1677 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1678 : 
; 1679 : 		return (this->_Myptr()[_Off]);
; 1680 : 		}
; 1681 : 
; 1682 : 	const_reference operator[](size_type _Off) const
; 1683 : 		{	// subscript nonmutable sequence
; 1684 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1685 : 		if (this->_Mysize() < _Off)	// sic
; 1686 : 			_DEBUG_ERROR("string subscript out of range");
; 1687 : 
; 1688 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1689 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1690 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1691 : 
; 1692 : 		return (this->_Myptr()[_Off]);
; 1693 : 		}
; 1694 : 
; 1695 : 	void push_back(_Elem _Ch)
; 1696 : 		{	// insert element at end
; 1697 : 		append(1, _Ch);
; 1698 : 		}
; 1699 : 
; 1700 : 	void pop_back()
; 1701 : 		{	// erase element at end
; 1702 : 		erase(this->_Mysize() - 1);	// throws if _Mysize() == 0
; 1703 : 		}
; 1704 : 
; 1705 : 	reference front()
; 1706 : 		{	// return first element of mutable sequence
; 1707 : 		return (*begin());
; 1708 : 		}
; 1709 : 
; 1710 : 	const_reference front() const
; 1711 : 		{	// return first element of nonmutable sequence
; 1712 : 		return (*begin());
; 1713 : 		}
; 1714 : 
; 1715 : 	reference back()
; 1716 : 		{	// return last element of mutable sequence
; 1717 : 		return (*(end() - 1));
; 1718 : 		}
; 1719 : 
; 1720 : 	const_reference back() const
; 1721 : 		{	// return last element of nonmutable sequence
; 1722 : 		return (*(end() - 1));
; 1723 : 		}
; 1724 : 
; 1725 : 	const _Elem *c_str() const _NOEXCEPT
; 1726 : 		{	// return pointer to null-terminated nonmutable array
; 1727 : 		return (this->_Myptr());
; 1728 : 		}
; 1729 : 
; 1730 : 	const _Elem *data() const _NOEXCEPT
; 1731 : 		{	// return pointer to nonmutable array
; 1732 : 		return (c_str());
; 1733 : 		}
; 1734 : 
; 1735 : 	size_type length() const _NOEXCEPT
; 1736 : 		{	// return length of sequence
; 1737 : 		return (this->_Mysize());
; 1738 : 		}
; 1739 : 
; 1740 : 	size_type size() const _NOEXCEPT
; 1741 : 		{	// return length of sequence
; 1742 : 		return (this->_Mysize());
; 1743 : 		}
; 1744 : 
; 1745 : 	size_type max_size() const _NOEXCEPT
; 1746 : 		{	// return maximum possible length of sequence
; 1747 : 		const size_type _Num = this->_Getal().max_size();
; 1748 : 		return (_Num <= 1 ? 1 : _Num - 1);
; 1749 : 		}
; 1750 : 
; 1751 : 	void resize(size_type _Newsize)
; 1752 : 		{	// determine new length, padding with null elements as needed
; 1753 : 		resize(_Newsize, _Elem());
; 1754 : 		}
; 1755 : 
; 1756 : 	void resize(size_type _Newsize, _Elem _Ch)
; 1757 : 		{	// determine new length, padding with _Ch elements as needed
; 1758 : 		if (_Newsize <= this->_Mysize())
; 1759 : 			_Eos(_Newsize);
; 1760 : 		else
; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);
; 1762 : 		}
; 1763 : 
; 1764 : 	size_type capacity() const _NOEXCEPT
; 1765 : 		{	// return current length of allocated storage
; 1766 : 		return (this->_Myres());
; 1767 : 		}
; 1768 : 
; 1769 : 	void reserve(size_type _Newcap = 0)
; 1770 : 		{	// determine new minimum length of allocated storage
; 1771 : 		if (this->_Mysize() <= _Newcap && this->_Myres() != _Newcap)
; 1772 : 			{	// change reservation
; 1773 : 			size_type _Size = this->_Mysize();
; 1774 : 			if (_Grow(_Newcap, true))
; 1775 : 				_Eos(_Size);
; 1776 : 			}
; 1777 : 		}
; 1778 : 
; 1779 : 	bool empty() const _NOEXCEPT
; 1780 : 		{	// test if sequence is empty
; 1781 : 		return (this->_Mysize() == 0);
; 1782 : 		}
; 1783 : 
; 1784 : 	_SCL_INSECURE_DEPRECATE
; 1785 : 
; 1786 : 	size_type copy(_Elem *_Ptr,
; 1787 : 		size_type _Count, size_type _Off = 0) const
; 1788 : 		{	// copy [_Off, _Off + _Count) to [_Ptr, _Ptr + _Count)
; 1789 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1790 : 		_Check_offset(_Off);
; 1791 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1792 : 		_Traits::copy(_Ptr, this->_Myptr() + _Off, _Count);
; 1793 : 		return (_Count);
; 1794 : 		}
; 1795 : 
; 1796 : 	size_type _Copy_s(_Elem *_Dest, size_type _Dest_size,
; 1797 : 		size_type _Count, size_type _Off = 0) const
; 1798 : 		{	// copy [_Off, _Off + _Count) to [_Dest, _Dest + _Count)
; 1799 : 		_DEBUG_POINTER_IF(_Count != 0, _Dest);
; 1800 : 		_Check_offset(_Off);
; 1801 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1802 : 		_Traits::_Copy_s(_Dest, _Dest_size, this->_Myptr() + _Off, _Count);
; 1803 : 		return (_Count);
; 1804 : 		}
; 1805 : 
; 1806 : 	void _Swap_bx(_Myt& _Right)
; 1807 : 		{	// exchange _Bx() with _Right._Bx()
; 1808 : 		if (this->_BUF_SIZE <= this->_Myres())
; 1809 : 			if (this->_BUF_SIZE <= _Right._Myres())
; 1810 : 				_Swap_adl(this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 1811 : 			else
; 1812 : 				{	// swap large with small
; 1813 : 				pointer _Ptr = this->_Bx()._Ptr;
; 1814 : 				this->_Getal().destroy(&this->_Bx()._Ptr);
; 1815 : 				_Traits::copy(this->_Bx()._Buf,
; 1816 : 					_Right._Bx()._Buf, _Right._Mysize() + 1);
; 1817 : 				this->_Getal().construct(&_Right._Bx()._Ptr, _Ptr);
; 1818 : 				}
; 1819 : 		else
; 1820 : 			if (_Right._Myres() < this->_BUF_SIZE)
; 1821 : 				_STD swap(this->_Bx()._Buf, _Right._Bx()._Buf);
; 1822 : 			else
; 1823 : 				{	// swap small with large
; 1824 : 				pointer _Ptr = _Right._Bx()._Ptr;
; 1825 : 				this->_Getal().destroy(&_Right._Bx()._Ptr);
; 1826 : 				_Traits::copy(_Right._Bx()._Buf,
; 1827 : 					this->_Bx()._Buf, this->_Mysize() + 1);
; 1828 : 				this->_Getal().construct(&this->_Bx()._Ptr, _Ptr);
; 1829 : 				}
; 1830 : 		}
; 1831 : 
; 1832 : 	void swap(_Myt& _Right)
; 1833 : 		_NOEXCEPT_OP(_Alty::propagate_on_container_swap::value
; 1834 : 			|| _Alty::is_always_equal::value)
; 1835 : 		{	// exchange contents with _Right
; 1836 : 		if (this == &_Right)
; 1837 : 			;	// same object, do nothing
; 1838 : 		else if (this->_Getal() == _Right._Getal())
; 1839 : 			{	// same allocator, swap control information
; 1840 : 			this->_Swap_all(_Right);
; 1841 : 			_Swap_bx(_Right);
; 1842 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1843 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1844 : 			}
; 1845 : 
; 1846 : 		else if (_Alty::propagate_on_container_swap::value)
; 1847 : 			{	// swap allocators and control information
; 1848 : 				// assumes pointer is bitwise copyable
; 1849 : 			this->_Swap_alloc(_Right);
; 1850 : 			_Swap_bx(_Right);
; 1851 : 			_STD swap(this->_Bx(), _Right._Bx());
; 1852 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1853 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1854 : 			}
; 1855 : 
; 1856 : 		else
; 1857 : 			{	// different allocator, do multiple assigns
; 1858 : 			_Myt _Tmp = *this;
; 1859 : 
; 1860 : 			*this = _Right;
; 1861 : 			_Right = _Tmp;
; 1862 : 			}
; 1863 : 		}
; 1864 : 
; 1865 : 	size_type find(const _Myt& _Right, size_type _Off = 0) const _NOEXCEPT
; 1866 : 		{	// look for _Right beginning at or after _Off
; 1867 : 		return (find(_Right._Myptr(), _Off, _Right.size()));
; 1868 : 		}
; 1869 : 
; 1870 : 	size_type find(const _Elem *_Ptr,
; 1871 : 		size_type _Off, size_type _Count) const
; 1872 : 		{	// look for [_Ptr, _Ptr + _Count) beginning at or after _Off
; 1873 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1874 : 		if (_Count == 0 && _Off <= this->_Mysize())
; 1875 : 			return (_Off);	// null string always matches (if inside string)
; 1876 : 
; 1877 : 		size_type _Nm;
; 1878 : 		if (_Off < this->_Mysize() && _Count <= (_Nm = this->_Mysize() - _Off))
; 1879 : 			{	// room for match, look for it
; 1880 : 			const _Elem *_Uptr, *_Vptr;
; 1881 : 			for (_Nm -= _Count - 1, _Vptr = this->_Myptr() + _Off;
; 1882 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1883 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)
; 1884 : 				if (_Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1885 : 					return (_Uptr - this->_Myptr());	// found a match
; 1886 : 			}
; 1887 : 
; 1888 : 		return (npos);	// no match
; 1889 : 		}
; 1890 : 
; 1891 : 	size_type find(const _Elem *_Ptr, size_type _Off = 0) const
; 1892 : 		{	// look for [_Ptr, <null>) beginning at or after _Off
; 1893 : 		_DEBUG_POINTER(_Ptr);
; 1894 : 		return (find(_Ptr, _Off, _Traits::length(_Ptr)));
; 1895 : 		}
; 1896 : 
; 1897 : 	size_type find(_Elem _Ch, size_type _Off = 0) const
; 1898 : 		{	// look for _Ch at or after _Off
; 1899 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1900 : 		}
; 1901 : 
; 1902 : 	size_type rfind(const _Myt& _Right, size_type _Off = npos) const _NOEXCEPT
; 1903 : 		{	// look for _Right beginning before _Off
; 1904 : 		return (rfind(_Right._Myptr(), _Off, _Right.size()));
; 1905 : 		}
; 1906 : 
; 1907 : 	size_type rfind(const _Elem *_Ptr,
; 1908 : 		size_type _Off, size_type _Count) const
; 1909 : 		{	// look for [_Ptr, _Ptr + _Count) beginning before _Off
; 1910 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1911 : 		if (_Count == 0)
; 1912 : 			return (_Off < this->_Mysize() ? _Off
; 1913 : 				: this->_Mysize());	// null always matches
; 1914 : 		if (_Count <= this->_Mysize())
; 1915 : 			{	// room for match, look for it
; 1916 : 			const _Elem *_Uptr = this->_Myptr() +
; 1917 : 				(_Off < this->_Mysize() - _Count ? _Off
; 1918 : 					: this->_Mysize() - _Count);
; 1919 : 			for (; ; --_Uptr)
; 1920 : 				if (_Traits::eq(*_Uptr, *_Ptr)
; 1921 : 					&& _Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1922 : 					return (_Uptr - this->_Myptr());	// found a match
; 1923 : 				else if (_Uptr == this->_Myptr())
; 1924 : 					break;	// at beginning, no more chance for match
; 1925 : 			}
; 1926 : 
; 1927 : 		return (npos);	// no match
; 1928 : 		}
; 1929 : 
; 1930 : 	size_type rfind(const _Elem *_Ptr, size_type _Off = npos) const
; 1931 : 		{	// look for [_Ptr, <null>) beginning before _Off
; 1932 : 		_DEBUG_POINTER(_Ptr);
; 1933 : 		return (rfind(_Ptr, _Off, _Traits::length(_Ptr)));
; 1934 : 		}
; 1935 : 
; 1936 : 	size_type rfind(_Elem _Ch, size_type _Off = npos) const
; 1937 : 		{	// look for _Ch before _Off
; 1938 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 1939 : 		}
; 1940 : 
; 1941 : 	size_type find_first_of(const _Myt& _Right,
; 1942 : 		size_type _Off = 0) const _NOEXCEPT
; 1943 : 		{	// look for one of _Right at or after _Off
; 1944 : 		return (find_first_of(_Right._Myptr(), _Off, _Right.size()));
; 1945 : 		}
; 1946 : 
; 1947 : 	size_type find_first_of(const _Elem *_Ptr,
; 1948 : 		size_type _Off, size_type _Count) const
; 1949 : 		{	// look for one of [_Ptr, _Ptr + _Count) at or after _Off
; 1950 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1951 : 		if (0 < _Count && _Off < this->_Mysize())
; 1952 : 			{	// room for match, look for it
; 1953 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 1954 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 1955 : 				_Uptr < _Vptr; ++_Uptr)
; 1956 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1957 : 					return (_Uptr - this->_Myptr());	// found a match
; 1958 : 			}
; 1959 : 
; 1960 : 		return (npos);	// no match
; 1961 : 		}
; 1962 : 
; 1963 : 	size_type find_first_of(const _Elem *_Ptr,
; 1964 : 		size_type _Off = 0) const
; 1965 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 1966 : 		_DEBUG_POINTER(_Ptr);
; 1967 : 		return (find_first_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 1968 : 		}
; 1969 : 
; 1970 : 	size_type find_first_of(_Elem _Ch,
; 1971 : 		size_type _Off = 0) const
; 1972 : 		{	// look for _Ch at or after _Off
; 1973 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1974 : 		}
; 1975 : 
; 1976 : 	size_type find_last_of(const _Myt& _Right,
; 1977 : 		size_type _Off = npos) const _NOEXCEPT
; 1978 : 		{	// look for one of _Right before _Off
; 1979 : 		return (find_last_of(_Right._Myptr(), _Off, _Right.size()));
; 1980 : 		}
; 1981 : 
; 1982 : 	size_type find_last_of(const _Elem *_Ptr,
; 1983 : 		size_type _Off, size_type _Count) const
; 1984 : 		{	// look for one of [_Ptr, _Ptr + _Count) before _Off
; 1985 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1986 : 		if (0 < _Count && 0 < this->_Mysize())
; 1987 : 			{	// worth searching, do it
; 1988 : 			const _Elem *_Uptr = this->_Myptr()
; 1989 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 1990 : 			for (; ; --_Uptr)
; 1991 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1992 : 					return (_Uptr - this->_Myptr());	// found a match
; 1993 : 				else if (_Uptr == this->_Myptr())
; 1994 : 					break;	// at beginning, no more chance for match
; 1995 : 			}
; 1996 : 
; 1997 : 		return (npos);	// no match
; 1998 : 		}
; 1999 : 
; 2000 : 	size_type find_last_of(const _Elem *_Ptr,
; 2001 : 		size_type _Off = npos) const
; 2002 : 		{	// look for one of [_Ptr, <null>) before _Off
; 2003 : 		_DEBUG_POINTER(_Ptr);
; 2004 : 		return (find_last_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2005 : 		}
; 2006 : 
; 2007 : 	size_type find_last_of(_Elem _Ch,
; 2008 : 		size_type _Off = npos) const
; 2009 : 		{	// look for _Ch before _Off
; 2010 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 2011 : 		}
; 2012 : 
; 2013 : 	size_type find_first_not_of(const _Myt& _Right,
; 2014 : 		size_type _Off = 0) const _NOEXCEPT
; 2015 : 		{	// look for none of _Right at or after _Off
; 2016 : 		return (find_first_not_of(_Right._Myptr(), _Off,
; 2017 : 			_Right.size()));
; 2018 : 		}
; 2019 : 
; 2020 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2021 : 		size_type _Off, size_type _Count) const
; 2022 : 		{	// look for none of [_Ptr, _Ptr + _Count) at or after _Off
; 2023 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2024 : 		if (_Off < this->_Mysize())
; 2025 : 			{	// room for match, look for it
; 2026 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 2027 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 2028 : 				_Uptr < _Vptr; ++_Uptr)
; 2029 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2030 : 					return (_Uptr - this->_Myptr());
; 2031 : 			}
; 2032 : 		return (npos);
; 2033 : 		}
; 2034 : 
; 2035 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2036 : 		size_type _Off = 0) const
; 2037 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 2038 : 		_DEBUG_POINTER(_Ptr);
; 2039 : 		return (find_first_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2040 : 		}
; 2041 : 
; 2042 : 	size_type find_first_not_of(_Elem _Ch,
; 2043 : 		size_type _Off = 0) const
; 2044 : 		{	// look for non _Ch at or after _Off
; 2045 : 		return (find_first_not_of((const _Elem *)&_Ch, _Off, 1));
; 2046 : 		}
; 2047 : 
; 2048 : 	size_type find_last_not_of(const _Myt& _Right,
; 2049 : 		size_type _Off = npos) const _NOEXCEPT
; 2050 : 		{	// look for none of _Right before _Off
; 2051 : 		return (find_last_not_of(_Right._Myptr(), _Off, _Right.size()));
; 2052 : 		}
; 2053 : 
; 2054 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2055 : 		size_type _Off, size_type _Count) const
; 2056 : 		{	// look for none of [_Ptr, _Ptr + _Count) before _Off
; 2057 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2058 : 		if (0 < this->_Mysize())
; 2059 : 			{	// worth searching, do it
; 2060 : 			const _Elem *_Uptr = this->_Myptr()
; 2061 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 2062 : 			for (; ; --_Uptr)
; 2063 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2064 : 					return (_Uptr - this->_Myptr());
; 2065 : 				else if (_Uptr == this->_Myptr())
; 2066 : 					break;
; 2067 : 			}
; 2068 : 		return (npos);
; 2069 : 		}
; 2070 : 
; 2071 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2072 : 		size_type _Off = npos) const
; 2073 : 		{	// look for none of [_Ptr, <null>) before _Off
; 2074 : 		_DEBUG_POINTER(_Ptr);
; 2075 : 		return (find_last_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2076 : 		}
; 2077 : 
; 2078 : 	size_type find_last_not_of(_Elem _Ch,
; 2079 : 		size_type _Off = npos) const
; 2080 : 		{	// look for non _Ch before _Off
; 2081 : 		return (find_last_not_of((const _Elem *)&_Ch, _Off, 1));
; 2082 : 		}
; 2083 : 
; 2084 : 	_Myt substr(size_type _Off = 0, size_type _Count = npos) const
; 2085 : 		{	// return [_Off, _Off + _Count) as new string
; 2086 : 		return (_Myt(*this, _Off, _Count, get_allocator()));
; 2087 : 		}
; 2088 : 
; 2089 : 	static int _Traits_compare(const _Elem * const _Left, const size_type _Left_size,
; 2090 : 		const _Elem * const _Right, const size_type _Right_size)
; 2091 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 2092 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;
; 2093 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);
; 2094 : 
; 2095 : 		if (_Ans != 0)
; 2096 : 			return (_Ans);
; 2097 : 
; 2098 : 		if (_Left_size < _Right_size)
; 2099 : 			return (-1);
; 2100 : 
; 2101 : 		if (_Left_size > _Right_size)
; 2102 : 			return (1);
; 2103 : 
; 2104 : 		return (0);
; 2105 : 		}
; 2106 : 
; 2107 : 	size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const
; 2108 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off
; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;
; 2110 : 		if (_Size <= _Max_effective_size)
; 2111 : 			return (_Size);
; 2112 : 		else
; 2113 : 			return (_Max_effective_size);
; 2114 : 		}
; 2115 : 
; 2116 : 	int compare(const _Myt& _Right) const _NOEXCEPT
; 2117 : 		{	// compare [0, _Mysize()) with _Right
; 2118 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2119 : 			_Right._Myptr(), _Right._Mysize()));
; 2120 : 		}
; 2121 : 
; 2122 : 	int compare(size_type _Off,
; 2123 : 		size_type _N0, const _Myt& _Right) const
; 2124 : 		{	// compare [_Off, _Off + _N0) with _Right
; 2125 : 		_Check_offset(_Off);
; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2127 : 			_Right._Myptr(), _Right._Mysize()));
; 2128 : 		}
; 2129 : 
; 2130 : 	int compare(size_type _Off,
; 2131 : 		size_type _N0, const _Myt& _Right,
; 2132 : 		size_type _Roff, size_type _Count = npos) const
; 2133 : 		{	// compare [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 2134 : 		_Check_offset(_Off);
; 2135 : 		_Right._Check_offset(_Roff);
; 2136 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2137 : 			_Right._Myptr() + _Roff, _Right._Clamp_suffix_size(_Roff, _Count)));
; 2138 : 		}
; 2139 : 
; 2140 : 	int compare(const _Elem *_Ptr) const
; 2141 : 		{	// compare [0, _Mysize()) with [_Ptr, <null>)
; 2142 : 		_DEBUG_POINTER(_Ptr);
; 2143 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2144 : 			_Ptr, _Traits::length(_Ptr)));
; 2145 : 		}
; 2146 : 
; 2147 : 	int compare(size_type _Off, size_type _N0, const _Elem *_Ptr) const
; 2148 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, <null>)
; 2149 : 		_DEBUG_POINTER(_Ptr);
; 2150 : 		_Check_offset(_Off);
; 2151 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2152 : 			_Ptr, _Traits::length(_Ptr)));
; 2153 : 		}
; 2154 : 
; 2155 : 	int compare(size_type _Off,
; 2156 : 		size_type _N0, const _Elem *_Ptr, size_type _Count) const
; 2157 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 2158 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2159 : 		_Check_offset(_Off);
; 2160 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2161 : 			_Ptr, _Count));
; 2162 : 		}
; 2163 : 
; 2164 : 	allocator_type get_allocator() const _NOEXCEPT
; 2165 : 		{	// return allocator object for values
; 2166 : 		return (this->_Getal());
; 2167 : 		}
; 2168 : 
; 2169 : 	void _Chassign(size_type _Off, size_type _Count, _Elem _Ch)
; 2170 : 		{	// assign _Count copies of _Ch beginning at _Off
; 2171 : 		if (_Count == 1)
; 2172 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);
; 2173 : 		else
; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);
; 2175 : 		}
; 2176 : 
; 2177 : 	void _Copy(size_type _Newsize, size_type _Oldlen)
; 2178 : 		{	// copy _Oldlen elements to newly allocated buffer
; 2179 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;
; 2180 : 		if (max_size() < _Newres)
; 2181 : 			_Newres = _Newsize;	// undo roundup if too big
; 2182 : 		else if (this->_Myres() / 2 <= _Newres / 3)
; 2183 : 			;
; 2184 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)
; 2185 : 			_Newres = this->_Myres()
; 2186 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2187 : 		else
; 2188 : 			_Newres = max_size();	// settle for max_size()
; 2189 : 
; 2190 : 		_Elem *_Ptr;
; 2191 : 		_TRY_BEGIN
; 2192 : 			_Ptr = this->_Getal().allocate(_Newres + 1);
; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00049	49 83 f8 10	 cmp	 r8, 16
  0004d	72 0e		 jb	 SHORT $LN144@catch$0

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	49 ff c0	 inc	 r8
  00052	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00055	48 8b cb	 mov	 rcx, rbx
  00058	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN144@catch$0:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0005d	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00065	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006d	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00072	72 03		 jb	 SHORT $LN245@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00074	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN245@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00077	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2199 : 			_RERAISE;

  0007a	33 d2		 xor	 edx, edx
  0007c	33 c9		 xor	 ecx, ecx
  0007e	e8 00 00 00 00	 call	 _CxxThrowException
  00083	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Size$ = 24
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b c2	 sub	 rax, rdx

; 2110 : 		if (_Size <= _Max_effective_size)

  00007	4c 3b c0	 cmp	 r8, rax
  0000a	49 0f 46 c0	 cmovbe	 rax, r8

; 2111 : 			return (_Size);
; 2112 : 		else
; 2113 : 			return (_Max_effective_size);
; 2114 : 		}

  0000e	c3		 ret	 0
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT

; 1781 : 		return (this->_Mysize() == 0);

  00000	33 c0		 xor	 eax, eax
  00002	48 39 41 10	 cmp	 QWORD PTR [rcx+16], rax
  00006	0f 94 c0	 sete	 al

; 1782 : 		}

  00009	c3		 ret	 0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 1747 : 		const size_type _Num = this->_Getal().max_size();
; 1748 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	48 c7 c0 fe ff
	ff ff		 mov	 rax, -2

; 1749 : 		}

  00007	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN13@c_str

; 1727 : 		return (this->_Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1728 : 		}

  0000a	c3		 ret	 0
$LN13@c_str:

; 1727 : 		return (this->_Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 1728 : 		}

  0000e	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Count$ = 64
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1342 : 		{	// erase elements [_Off, _Off + _Count)

$LN129:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  0000a	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]

; 1342 : 		{	// erase elements [_Off, _Off + _Count)

  0000e	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00011	48 3b fa	 cmp	 rdi, rdx
  00014	0f 82 a4 00 00
	00		 jb	 $LN127@erase

; 1343 : 		_Check_offset(_Off);
; 1344 : 		if (this->_Mysize() - _Off <= _Count)

  0001a	48 8b c7	 mov	 rax, rdi
  0001d	48 2b c2	 sub	 rax, rdx
  00020	49 3b c0	 cmp	 rax, r8
  00023	77 35		 ja	 SHORT $LN2@erase

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00025	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00029	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0002e	72 15		 jb	 SHORT $LN52@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00030	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00033	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  00037	48 8b c1	 mov	 rax, rcx

; 1354 : 		}

  0003a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
$LN52@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00045	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00048	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  0004c	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  0004f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
$LN2@erase:

; 1345 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1346 : 		else if (0 < _Count)

  0005a	4d 85 c0	 test	 r8, r8
  0005d	74 51		 je	 SHORT $LN124@erase

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00064	72 05		 jb	 SHORT $LN73@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00066	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00069	eb 03		 jmp	 SHORT $LN74@erase
$LN73@erase:
  0006b	48 8b c1	 mov	 rax, rcx
$LN74@erase:

; 1347 : 			{	// move elements down
; 1348 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1349 : 			size_type _Newsize = this->_Mysize() - _Count;

  0006e	49 2b f8	 sub	 rdi, r8
  00071	48 8d 0c 10	 lea	 rcx, QWORD PTR [rax+rdx]

; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  00075	48 8b c7	 mov	 rax, rdi
  00078	48 2b c2	 sub	 rax, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  0007b	74 0c		 je	 SHORT $LN93@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  0007d	4a 8d 14 01	 lea	 rdx, QWORD PTR [rcx+r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  00081	4c 8b c0	 mov	 r8, rax
  00084	e8 00 00 00 00	 call	 memmove
$LN93@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00089	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008d	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00092	72 15		 jb	 SHORT $LN115@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00094	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00097	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  0009b	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  0009e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
$LN115@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a9	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ac	c6 04 3b 00	 mov	 BYTE PTR [rbx+rdi], 0
$LN124@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  000b0	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  000b3	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000b8	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
$LN127@erase:

; 2278 : 		_Xout_of_range("invalid string position");

  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  000c5	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  000ca	cc		 int	 3
$LN126@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1335 : 		{	// erase elements [_Off, ...)

$LN54:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 26		 jb	 SHORT $LN52@erase

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0000a	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000e	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00013	72 0f		 jb	 SHORT $LN40@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00015	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00018	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1338 : 		return (*this);

  0001c	48 8b c1	 mov	 rax, rcx

; 1339 : 		}

  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
$LN40@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00024	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00027	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1339 : 		}

  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	c3		 ret	 0
$LN52@erase:

; 2278 : 		_Xout_of_range("invalid string position");

  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00037	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0003c	cc		 int	 3
$LN51@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  00000	80 3a 00	 cmp	 BYTE PTR [rdx], 0
  00003	75 08		 jne	 SHORT $LN5@assign
  00005	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00008	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN5@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0000d	49 83 c8 ff	 or	 r8, -1
$LL7@assign:
  00011	49 ff c0	 inc	 r8
  00014	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00019	75 f6		 jne	 SHORT $LL7@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0001b	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1160 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN233:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00018	48 85 d2	 test	 rdx, rdx
  0001b	74 5a		 je	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00021	48 83 fa 10	 cmp	 rdx, 16
  00025	72 05		 jb	 SHORT $LN20@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00027	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002a	eb 03		 jmp	 SHORT $LN21@assign
$LN20@assign:
  0002c	48 8b c1	 mov	 rax, rcx
$LN21@assign:

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002f	48 3b f0	 cmp	 rsi, rax
  00032	72 43		 jb	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00034	48 83 fa 10	 cmp	 rdx, 16
  00038	72 03		 jb	 SHORT $LN39@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN39@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003d	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  00041	48 3b ce	 cmp	 rcx, rsi
  00044	76 31		 jbe	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00046	48 83 fa 10	 cmp	 rdx, 16
  0004a	72 05		 jb	 SHORT $LN65@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0004c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	eb 03		 jmp	 SHORT $LN66@assign
$LN65@assign:
  00051	48 8b c3	 mov	 rax, rbx
$LN66@assign:

; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,

  00054	48 2b f0	 sub	 rsi, rax
  00057	4d 8b c8	 mov	 r9, r8
  0005a	4c 8b c6	 mov	 r8, rsi
  0005d	48 8b d3	 mov	 rdx, rbx
  00060	48 8b cb	 mov	 rcx, rbx

; 1172 : 		}

  00063	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00068	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5f		 pop	 rdi

; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,

  00072	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@assign:

; 2220 : 		if (max_size() < _Newsize)

  00077	49 83 f8 fe	 cmp	 r8, -2
  0007b	0f 87 a2 00 00
	00		 ja	 $LN231@assign

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00081	4c 39 43 18	 cmp	 QWORD PTR [rbx+24], r8
  00085	73 20		 jae	 SHORT $LN75@assign

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00087	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0008b	48 8b d7	 mov	 rdx, rdi
  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
$LN172@assign:

; 2228 : 			_Eos(0);	// new size is zero, just null terminate
; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00096	48 85 ff	 test	 rdi, rdi

; 1164 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1165 : 
; 1166 : 		if (_Grow(_Count))

  00099	74 75		 je	 SHORT $LN227@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009b	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000a0	72 44		 jb	 SHORT $LN185@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  000a2	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a5	eb 42		 jmp	 SHORT $LN186@assign
$LN75@assign:

; 2227 : 		else if (_Newsize == 0)

  000a7	4d 85 c0	 test	 r8, r8
  000aa	75 ea		 jne	 SHORT $LN172@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ac	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b0	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000b5	72 19		 jb	 SHORT $LN163@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000b7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ba	44 88 00	 mov	 BYTE PTR [rax], r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1171 : 		return (*this);

  000bd	48 8b c3	 mov	 rax, rbx

; 1172 : 		}

  000c0	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c5	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000ca	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ce	5f		 pop	 rdi
  000cf	c3		 ret	 0
$LN163@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d0	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000d3	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1172 : 		}

  000d6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000db	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000e0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e4	5f		 pop	 rdi
  000e5	c3		 ret	 0
$LN185@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e6	48 8b cb	 mov	 rcx, rbx
$LN186@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000e9	48 85 ff	 test	 rdi, rdi
  000ec	74 0b		 je	 SHORT $LN196@assign
  000ee	4c 8b c7	 mov	 r8, rdi
  000f1	48 8b d6	 mov	 rdx, rsi
  000f4	e8 00 00 00 00	 call	 memcpy
$LN196@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000f9	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000fd	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00102	72 05		 jb	 SHORT $LN218@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00104	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00107	eb 03		 jmp	 SHORT $LN219@assign
$LN218@assign:
  00109	48 8b c3	 mov	 rax, rbx
$LN219@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0010c	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN227@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1172 : 		}

  00110	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00115	48 8b c3	 mov	 rax, rbx
  00118	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0011d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00121	5f		 pop	 rdi
  00122	c3		 ret	 0
$LN231@assign:

; 2261 : 		_Xlength_error("string too long");

  00123	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0012a	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012f	cc		 int	 3
$LN230@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN265:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	48 89 7c 24 18	 mov	 QWORD PTR [rsp+24], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)

  00019	49 8b f9	 mov	 rdi, r9
  0001c	4d 8b f0	 mov	 r14, r8
  0001f	48 8b f2	 mov	 rsi, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 d9 00 00
	00		 jb	 $LN261@assign

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 2110 : 		if (_Size <= _Max_effective_size)

  00031	4c 3b c8	 cmp	 r9, rax
  00034	48 0f 47 f8	 cmova	 rdi, rax

; 1145 : 		_Right._Check_offset(_Roff);
; 1146 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1147 : 
; 1148 : 		if (this == &_Right)

  00038	48 3b ca	 cmp	 rcx, rdx
  0003b	75 2f		 jne	 SHORT $LN2@assign

; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0003d	49 8d 04 38	 lea	 rax, QWORD PTR [r8+rdi]

; 2266 : 		if (this->_Mysize() < _Off)

  00041	48 39 41 10	 cmp	 QWORD PTR [rcx+16], rax
  00045	0f 82 c9 00 00
	00		 jb	 $LN263@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0004b	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00054	72 03		 jb	 SHORT $LN75@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00056	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN75@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00059	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0005d	33 d2		 xor	 edx, edx
  0005f	48 8b cb	 mov	 rcx, rbx
  00062	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 1150 : 		else if (_Grow(_Count))

  00067	e9 82 00 00 00	 jmp	 $LN256@assign
$LN2@assign:

; 2220 : 		if (max_size() < _Newsize)

  0006c	48 83 ff fe	 cmp	 rdi, -2
  00070	0f 87 ab 00 00
	00		 ja	 $LN264@assign

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00076	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0007a	73 27		 jae	 SHORT $LN87@assign

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0007c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00080	48 8b d7	 mov	 rdx, rdi
  00083	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00088	48 85 ff	 test	 rdi, rdi

; 1150 : 		else if (_Grow(_Count))

  0008b	74 61		 je	 SHORT $LN256@assign
$LN260@assign:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0008d	48 83 7e 18 10	 cmp	 QWORD PTR [rsi+24], 16
  00092	72 03		 jb	 SHORT $LN196@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00094	48 8b 36	 mov	 rsi, QWORD PTR [rsi]
$LN196@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00097	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0009c	72 25		 jb	 SHORT $LN214@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0009e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a1	eb 23		 jmp	 SHORT $LN215@assign
$LN87@assign:

; 2227 : 		else if (_Newsize == 0)

  000a3	48 85 ff	 test	 rdi, rdi
  000a6	75 e5		 jne	 SHORT $LN260@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000a8	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ac	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  000b1	72 08		 jb	 SHORT $LN175@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000b3	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000b6	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000b9	eb 33		 jmp	 SHORT $LN256@assign
$LN175@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000bb	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000be	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000c1	eb 2b		 jmp	 SHORT $LN256@assign
$LN214@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c3	48 8b cb	 mov	 rcx, rbx
$LN215@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000c6	48 85 ff	 test	 rdi, rdi
  000c9	74 0c		 je	 SHORT $LN225@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1152 : 			_Traits::copy(this->_Myptr(),

  000cb	4a 8d 14 36	 lea	 rdx, QWORD PTR [rsi+r14]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000cf	4c 8b c7	 mov	 r8, rdi
  000d2	e8 00 00 00 00	 call	 memcpy
$LN225@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d7	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000db	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000e0	72 05		 jb	 SHORT $LN247@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000e2	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e5	eb 03		 jmp	 SHORT $LN248@assign
$LN247@assign:
  000e7	48 8b c3	 mov	 rax, rbx
$LN248@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ea	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN256@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1157 : 		}

  000ee	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000f3	48 8b c3	 mov	 rax, rbx
  000f6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000fb	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  00100	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00104	41 5e		 pop	 r14
  00106	c3		 ret	 0
$LN261@assign:

; 2278 : 		_Xout_of_range("invalid string position");

  00107	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0010e	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00113	cc		 int	 3
$LN263@assign:
  00114	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0011b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00120	cc		 int	 3
$LN264@assign:

; 2261 : 		_Xlength_error("string too long");

  00121	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00128	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012d	cc		 int	 3
$LN258@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  00000	80 3a 00	 cmp	 BYTE PTR [rdx], 0
  00003	75 08		 jne	 SHORT $LN5@append
  00005	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00008	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN5@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0000d	49 83 c8 ff	 or	 r8, -1
$LL7@append:
  00011	49 ff c0	 inc	 r8
  00014	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00019	75 f6		 jne	 SHORT $LL7@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  0001b	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1082 : 		{	// append [_Ptr, _Ptr + _Count)

$LN267:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f0	 mov	 rsi, r8
  00012	48 8b ea	 mov	 rbp, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00018	48 85 d2	 test	 rdx, rdx
  0001b	74 5a		 je	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	4c 8b 49 18	 mov	 r9, QWORD PTR [rcx+24]
  00021	49 83 f9 10	 cmp	 r9, 16
  00025	72 05		 jb	 SHORT $LN21@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00027	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002a	eb 03		 jmp	 SHORT $LN22@append
$LN21@append:
  0002c	48 8b c1	 mov	 rax, rcx
$LN22@append:

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002f	48 3b d0	 cmp	 rdx, rax
  00032	72 43		 jb	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00034	49 83 f9 10	 cmp	 r9, 16
  00038	72 03		 jb	 SHORT $LN40@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN40@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003d	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  00041	48 3b ca	 cmp	 rcx, rdx
  00044	76 31		 jbe	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00046	49 83 f9 10	 cmp	 r9, 16
  0004a	72 05		 jb	 SHORT $LN66@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0004c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	eb 03		 jmp	 SHORT $LN67@append
$LN66@append:
  00051	48 8b c3	 mov	 rax, rbx
$LN67@append:

; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,

  00054	48 2b e8	 sub	 rbp, rax
  00057	4d 8b c8	 mov	 r9, r8
  0005a	4c 8b c5	 mov	 r8, rbp
  0005d	48 8b d3	 mov	 rdx, rbx
  00060	48 8b cb	 mov	 rcx, rbx

; 1097 : 		}

  00063	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00068	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5e		 pop	 rsi

; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,

  00072	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@append:

; 1086 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1087 : 		if (npos - this->_Mysize() <= _Count)

  00077	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0007b	48 83 c8 ff	 or	 rax, -1
  0007f	49 2b c0	 sub	 rax, r8
  00082	48 3b c6	 cmp	 rax, rsi
  00085	0f 86 a0 00 00
	00		 jbe	 $LN264@append

; 1088 : 			_Xlen();	// result too long
; 1089 : 
; 1090 : 		const size_type _Num = this->_Mysize() + _Count;

  0008b	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00090	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1091 : 		if (0 < _Count && _Grow(_Num))

  00094	48 85 f6	 test	 rsi, rsi
  00097	74 7a		 je	 SHORT $LN257@append

; 2220 : 		if (max_size() < _Newsize)

  00099	48 83 ff fe	 cmp	 rdi, -2
  0009d	0f 87 95 00 00
	00		 ja	 $LN266@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  000a3	48 39 7b 18	 cmp	 QWORD PTR [rbx+24], rdi
  000a7	73 1c		 jae	 SHORT $LN97@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  000a9	48 8b d7	 mov	 rdx, rdi
  000ac	48 8b cb	 mov	 rcx, rbx
  000af	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000b4	48 85 ff	 test	 rdi, rdi

; 1091 : 		if (0 < _Count && _Grow(_Num))

  000b7	74 5a		 je	 SHORT $LN257@append
$LN263@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b9	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000be	72 25		 jb	 SHORT $LN206@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000c0	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c3	eb 23		 jmp	 SHORT $LN207@append
$LN97@append:

; 2227 : 		else if (_Newsize == 0)

  000c5	48 85 ff	 test	 rdi, rdi
  000c8	75 ef		 jne	 SHORT $LN263@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ca	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ce	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d3	72 08		 jb	 SHORT $LN185@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000d5	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000d8	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000db	eb 36		 jmp	 SHORT $LN257@append
$LN185@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000dd	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000e0	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000e3	eb 2e		 jmp	 SHORT $LN257@append
$LN206@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e5	48 8b cb	 mov	 rcx, rbx
$LN207@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000e8	48 85 f6	 test	 rsi, rsi
  000eb	74 0f		 je	 SHORT $LN226@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1093 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

  000ed	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000f1	4c 8b c6	 mov	 r8, rsi
  000f4	48 8b d5	 mov	 rdx, rbp
  000f7	e8 00 00 00 00	 call	 memcpy
$LN226@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000fc	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00100	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00105	72 05		 jb	 SHORT $LN248@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00107	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0010a	eb 03		 jmp	 SHORT $LN249@append
$LN248@append:
  0010c	48 8b c3	 mov	 rax, rbx
$LN249@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0010f	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN257@append:
  00113	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1096 : 		return (*this);

  00118	48 8b c3	 mov	 rax, rbx

; 1097 : 		}

  0011b	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00120	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00125	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00129	5e		 pop	 rsi
  0012a	c3		 ret	 0
$LN264@append:

; 2261 : 		_Xlength_error("string too long");

  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00132	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00137	cc		 int	 3
$LN266@append:
  00138	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0013f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00144	cc		 int	 3
$LN261@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)

$LN244:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)

  00019	49 8b f1	 mov	 rsi, r9
  0001c	49 8b e8	 mov	 rbp, r8
  0001f	4c 8b f2	 mov	 r14, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 d0 00 00
	00		 jb	 $LN240@append

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)

  00031	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]

; 2110 : 		if (_Size <= _Max_effective_size)

  00035	4c 3b c8	 cmp	 r9, rax
  00038	48 0f 47 f0	 cmova	 rsi, rax

; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)

  0003c	48 83 c8 ff	 or	 rax, -1
  00040	49 2b c0	 sub	 rax, r8
  00043	48 3b c6	 cmp	 rax, rsi
  00046	0f 86 bf 00 00
	00		 jbe	 $LN242@append

; 1069 : 			_Xlen();	// result too long
; 1070 : 
; 1071 : 		const size_type _Num = this->_Mysize() + _Count;

  0004c	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00051	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1072 : 		if (0 < _Count && _Grow(_Num))

  00055	48 85 f6	 test	 rsi, rsi
  00058	0f 84 82 00 00
	00		 je	 $LN234@append

; 2220 : 		if (max_size() < _Newsize)

  0005e	48 83 ff fe	 cmp	 rdi, -2
  00062	0f 87 b0 00 00
	00		 ja	 $LN243@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00068	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0006c	73 23		 jae	 SHORT $LN56@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0006e	48 8b d7	 mov	 rdx, rdi
  00071	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00076	48 85 ff	 test	 rdi, rdi

; 1072 : 		if (0 < _Count && _Grow(_Num))

  00079	74 65		 je	 SHORT $LN234@append
$LN239@append:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0007b	49 83 7e 18 10	 cmp	 QWORD PTR [r14+24], 16
  00080	72 03		 jb	 SHORT $LN165@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00082	4d 8b 36	 mov	 r14, QWORD PTR [r14]
$LN165@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00085	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0008a	72 25		 jb	 SHORT $LN183@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0008c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008f	eb 23		 jmp	 SHORT $LN184@append
$LN56@append:

; 2227 : 		else if (_Newsize == 0)

  00091	48 85 ff	 test	 rdi, rdi
  00094	75 e5		 jne	 SHORT $LN239@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00096	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009a	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0009f	72 08		 jb	 SHORT $LN144@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000a1	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000a4	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000a7	eb 37		 jmp	 SHORT $LN234@append
$LN144@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a9	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ac	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000af	eb 2f		 jmp	 SHORT $LN234@append
$LN183@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b1	48 8b cb	 mov	 rcx, rbx
$LN184@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000b4	48 85 f6	 test	 rsi, rsi
  000b7	74 10		 je	 SHORT $LN203@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1074 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

  000b9	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  000bd	49 8d 14 2e	 lea	 rdx, QWORD PTR [r14+rbp]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000c1	4c 8b c6	 mov	 r8, rsi
  000c4	e8 00 00 00 00	 call	 memcpy
$LN203@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000c9	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000cd	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d2	72 05		 jb	 SHORT $LN225@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000d4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d7	eb 03		 jmp	 SHORT $LN226@append
$LN225@append:
  000d9	48 8b c3	 mov	 rax, rbx
$LN226@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000dc	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN234@append:
  000e0	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1078 : 		return (*this);

  000e5	48 8b c3	 mov	 rax, rbx

; 1079 : 		}

  000e8	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000ed	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000f2	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000f7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000fb	41 5e		 pop	 r14
  000fd	c3		 ret	 0
$LN240@append:

; 2278 : 		_Xout_of_range("invalid string position");

  000fe	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00105	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0010a	cc		 int	 3
$LN242@append:

; 2261 : 		_Xlength_error("string too long");

  0010b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00112	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00117	cc		 int	 3
$LN243@append:
  00118	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0011f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00124	cc		 int	 3
$LN237@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1060 : 		return (append(_Right, 0, npos));

  00000	49 83 c9 ff	 or	 r9, -1
  00004	45 33 c0	 xor	 r8d, r8d
  00007	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 1011 : 		{	// destroy the string

$LN118:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]

; 1011 : 		{	// destroy the string

  0000a	48 8b d9	 mov	 rbx, rcx

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	49 83 f8 10	 cmp	 r8, 16
  00011	72 0b		 jb	 SHORT $LN6@basic_stri

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00013	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00016	49 ff c0	 inc	 r8
  00019	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN6@basic_stri:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001e	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00026	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002e	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00033	72 0c		 jb	 SHORT $LN106@basic_stri
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00035	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00038	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1013 : 		}

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5b		 pop	 rbx
  00040	c3		 ret	 0
$LN106@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00041	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1013 : 		}

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT

; 956  : 		{	// assign by moving _Right

$LN248:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)

  0000a	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
  0000f	48 8b da	 mov	 rbx, rdx
  00012	48 8b f9	 mov	 rdi, rcx
  00015	73 11		 jae	 SHORT $LN2@Assign_rv

; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  00017	4c 8b 42 10	 mov	 r8, QWORD PTR [rdx+16]
  0001b	49 83 c0 01	 add	 r8, 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  0001f	74 19		 je	 SHORT $LN3@Assign_rv
  00021	e8 00 00 00 00	 call	 memmove
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 960  : 		else

  00026	eb 12		 jmp	 SHORT $LN3@Assign_rv
$LN2@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 85 c9	 test	 rcx, rcx
  0002b	74 06		 je	 SHORT $LN81@Assign_rv
  0002d	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00030	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN81@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 963  : 			_Right._Bx()._Ptr = pointer();

  00033	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN3@Assign_rv:

; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();

  0003a	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  0003e	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 966  : 		this->_Myres() = _Right._Myres();

  00042	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00046	48 89 47 18	 mov	 QWORD PTR [rdi+24], rax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0004a	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00052	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005a	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0005f	72 11		 jb	 SHORT $LN236@Assign_rv
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00061	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00064	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 968  : 		}

  00067	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
$LN236@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00072	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 968  : 		}

  00075	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 906  : 		{	// construct by moving _Right

$LN142:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00006	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 906  : 		{	// construct by moving _Right

  0000e	48 8b d9	 mov	 rbx, rcx

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00011	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00019	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  0001c	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv

; 909  : 		}

  00021	48 8b c3	 mov	 rax, rbx
  00024	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 830  : 		{	// construct from [_Ptr, <null>)

$LN131:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	45 33 c0	 xor	 r8d, r8d

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00009	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00011	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 830  : 		{	// construct from [_Ptr, <null>)

  00015	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00018	44 88 01	 mov	 BYTE PTR [rcx], r8b

; 523  : 		return (*_First == 0 ? 0

  0001b	44 38 02	 cmp	 BYTE PTR [rdx], r8b
  0001e	74 0e		 je	 SHORT $LN128@basic_stri
  00020	49 83 c8 ff	 or	 r8, -1
$LL129@basic_stri:
  00024	49 ff c0	 inc	 r8
  00027	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  0002c	75 f6		 jne	 SHORT $LL129@basic_stri
$LN128@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0002e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}

  00033	48 8b c3	 mov	 rax, rbx
  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5b		 pop	 rbx
  0003b	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 774  : 		{	// construct by copying _Right

$LN143:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00006	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  0000e	49 83 c9 ff	 or	 r9, -1

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00012	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  0001a	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0001d	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 774  : 		{	// construct by copying _Right

  00020	48 8b d9	 mov	 rbx, rcx

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  00023	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 777  : 		}

  00028	48 8b c3	 mov	 rax, rbx
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5b		 pop	 rbx
  00030	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 319  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 320  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 314  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 315  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 299  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 300  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 294  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 295  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT

; 728  : 		return (_Get_data()._Myres);

  00000	48 8d 41 18	 lea	 rax, QWORD PTR [rcx+24]

; 729  : 		}

  00004	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 723  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 724  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 718  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 719  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT

; 708  : 		return (_Get_data()._Bx);

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		}

  00003	c3		 ret	 0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 701  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 702  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 696  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 697  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 691  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 692  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 686  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 687  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 573  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 566  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 567  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 566  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 567  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 561  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 562  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 561  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 562  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 487  : 		{	// initialize values
; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 490  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT

; 906  : 		return (_Mytraits::max_size(*this));

  00000	48 83 c8 ff	 or	 rax, -1

; 907  : 		}

  00004	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT

; 884  : 		{	// deallocate object at _Ptr, ignore size

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	49 83 f8 ff	 cmp	 r8, -1
  00008	77 35		 ja	 SHORT $LN16@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0000a	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  00011	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00013	f6 c2 1f	 test	 dl, 31
  00016	75 2d		 jne	 SHORT $LN18@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00018	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0001c	48 3b c2	 cmp	 rax, rdx
  0001f	73 2a		 jae	 SHORT $LN19@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00021	48 2b d0	 sub	 rdx, rax
  00024	48 83 fa 08	 cmp	 rdx, 8
  00028	72 27		 jb	 SHORT $LN20@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0002a	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0002e	77 27		 ja	 SHORT $LN21@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00030	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00033	48 8b ca	 mov	 rcx, rdx

; 885  : 		_Mybase::deallocate(_Ptr, _Count);
; 886  : 		}

  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  0003a	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN18@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN19@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN20@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN21@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT

; 874  : 		return (_Mybase::allocate(_Count));

  00000	e9 00 00 00 00	 jmp	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 845  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 835  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
__formal$ = 24
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 811  : 		return (_Mytraits::select_on_container_copy_construction(*this));

  00000	48 8b c2	 mov	 rax, rdx

; 812  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$ = 16
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 773  : 		return (_Al);

  00000	48 8b c1	 mov	 rax, rcx

; 774  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
_Al$ = 8
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 767  : 		return (_Al.max_size());

  00000	48 83 c8 ff	 or	 rax, -1

; 768  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@D@std@@QEBA_KXZ PROC		; std::allocator<char>::max_size, COMDAT

; 649  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 83 c8 ff	 or	 rax, -1

; 650  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator@D@std@@QEBA_KXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 624  : 		{	// allocate array of _Count elements

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN3@allocate:

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN4@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 83 fa ff	 cmp	 rdx, -1
  00014	77 3f		 ja	 SHORT $LN14@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;
; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00016	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0001d	72 27		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0001f	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  00023	48 3b ca	 cmp	 rcx, rdx
  00026	76 33		 jbe	 SHORT $LN16@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00028	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0002d	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00030	48 85 c0	 test	 rax, rax
  00033	74 2c		 je	 SHORT $LN17@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00035	48 83 c0 27	 add	 rax, 39			; 00000027H
  00039	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0003d	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00046	48 8b ca	 mov	 rcx, rdx
  00049	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0004e	48 85 c0	 test	 rax, rax
  00051	75 b8		 jne	 SHORT $LN3@allocate
  00053	eb 12		 jmp	 SHORT $LN18@allocate
$LN14@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00055	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0005a	cc		 int	 3
$LN16@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0005b	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00060	cc		 int	 3
$LN17@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00061	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00066	cc		 int	 3
$LN18@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00067	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006c	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 619  : 		{	// deallocate object at _Ptr

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	49 83 f8 ff	 cmp	 r8, -1
  00008	77 35		 ja	 SHORT $LN13@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0000a	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  00011	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00013	f6 c2 1f	 test	 dl, 31
  00016	75 2d		 jne	 SHORT $LN15@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00018	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0001c	48 3b c2	 cmp	 rax, rdx
  0001f	73 2a		 jae	 SHORT $LN16@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00021	48 2b d0	 sub	 rdx, rax
  00024	48 83 fa 08	 cmp	 rdx, 8
  00028	72 27		 jb	 SHORT $LN17@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0002a	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0002e	77 27		 ja	 SHORT $LN18@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00030	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00033	48 8b ca	 mov	 rcx, rdx

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 621  : 		}

  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  0003a	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN15@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN16@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN17@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN18@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@D@std@@QEAA@AEBV01@@Z PROC		; std::allocator<char>::allocator<char>, COMDAT

; 604  : 		{	// construct by copying (do nothing)
; 605  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 600  : 		{	// construct default allocator (do nothing)
; 601  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::count, COMDAT

; 135  : 		return (_MyRep);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 136  : 		}

  00003	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?zero@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@SA?AV123@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 8
?zero@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@SA?AV123@XZ PROC ; std::chrono::duration<int,std::ratio<3600,1> >::zero, COMDAT

; 116  : 			: _MyRep(static_cast<_Rep>(_Val))

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [rcx], 0

; 208  : 		return (_Myt(duration_values<_Rep>::zero()));

  00006	48 8b c1	 mov	 rax, rcx

; 209  : 		}

  00009	c3		 ret	 0
?zero@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@SA?AV123@XZ ENDP ; std::chrono::duration<int,std::ratio<3600,1> >::zero
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?count@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?count@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEBAHXZ PROC ; std::chrono::duration<int,std::ratio<3600,1> >::count, COMDAT

; 135  : 		return (_MyRep);

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 136  : 		}

  00002	c3		 ret	 0
?count@?$duration@HU?$ratio@$0OBA@$00@std@@@chrono@std@@QEBAHXZ ENDP ; std::chrono::duration<int,std::ratio<3600,1> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>, COMDAT

; 116  : 			: _MyRep(static_cast<_Rep>(_Val))

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 118  : 		}

  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=, COMDAT

; 178  : 		_MyRep -= _Right._MyRep;

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 29 01	 sub	 QWORD PTR [rcx], rax

; 179  : 		return (*this);

  00006	48 8b c1	 mov	 rax, rcx

; 180  : 		}

  00009	c3		 ret	 0
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=, COMDAT

; 172  : 		_MyRep += _Right._MyRep;

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 01 01	 add	 QWORD PTR [rcx], rax

; 173  : 		return (*this);

  00006	48 8b c1	 mov	 rax, rcx

; 174  : 		}

  00009	c3		 ret	 0
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT

; 135  : 		return (_MyRep);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 136  : 		}

  00003	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>, COMDAT

; 116  : 			: _MyRep(static_cast<_Rep>(_Val))

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 118  : 		}

  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch, COMDAT

; 258  : 		return (_MyDur);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 89 02	 mov	 QWORD PTR [rdx], rax
  00006	48 8b c2	 mov	 rax, rdx

; 259  : 		}

  00009	c3		 ret	 0
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 8
_Other$ = 16
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >, COMDAT

; 243  : 		: _MyDur(_Other)

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 245  : 		}

  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count, COMDAT

; 135  : 		return (_MyRep);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 136  : 		}

  00003	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\chrono
;	COMDAT ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 48
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ PROC ; std::chrono::system_clock::now, COMDAT

; 973  : 		{	// get current time

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 974  : 		return (time_point(duration(_Xtime_get_ticks())));

  00009	e8 00 00 00 00	 call	 _Xtime_get_ticks

; 243  : 		: _MyDur(_Other)

  0000e	48 89 03	 mov	 QWORD PTR [rbx], rax

; 974  : 		return (time_point(duration(_Xtime_get_ticks())));

  00011	48 8b c3	 mov	 rax, rbx

; 975  : 		}

  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5b		 pop	 rbx
  00019	c3		 ret	 0
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ENDP ; std::chrono::system_clock::now
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Count$ = 56
_Sz$ = 64
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b ca	 mov	 r9, rdx

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00007	48 83 c8 ff	 or	 rax, -1
  0000b	33 d2		 xor	 edx, edx
  0000d	49 f7 f0	 div	 r8
  00010	4c 3b c8	 cmp	 r9, rax
  00013	77 36		 ja	 SHORT $LN10@Deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00015	4d 0f af c8	 imul	 r9, r8

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00019	49 81 f9 00 10
	00 00		 cmp	 r9, 4096		; 00001000H
  00020	72 20		 jb	 SHORT $LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00022	f6 c1 1f	 test	 cl, 31
  00025	75 2a		 jne	 SHORT $LN12@Deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00027	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0002b	48 3b c1	 cmp	 rax, rcx
  0002e	73 27		 jae	 SHORT $LN13@Deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00030	48 2b c8	 sub	 rcx, rax
  00033	48 83 f9 08	 cmp	 rcx, 8
  00037	72 24		 jb	 SHORT $LN14@Deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00039	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003d	77 24		 ja	 SHORT $LN15@Deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003f	48 8b c8	 mov	 rcx, rax
$LN3@Deallocate:

; 133  : 	}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN10@Deallocate:

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN12@Deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN13@Deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN14@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN15@Deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN9@Deallocate:
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Count$ = 48
_Sz$ = 56
_Try_aligned_allocation$ = 64
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b ca	 mov	 r9, rdx

; 49   : 	void *_Ptr = 0;
; 50   : 
; 51   : 	if (_Count == 0)

  00007	48 85 c9	 test	 rcx, rcx
  0000a	75 07		 jne	 SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

  0000c	33 c0		 xor	 eax, eax
$LN8@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}

  0000e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00012	c3		 ret	 0
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00013	33 d2		 xor	 edx, edx
  00015	48 83 c8 ff	 or	 rax, -1
  00019	49 f7 f1	 div	 r9
  0001c	48 3b c1	 cmp	 rax, rcx
  0001f	72 48		 jb	 SHORT $LN11@Allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  00021	49 0f af c9	 imul	 rcx, r9

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00025	45 84 c0	 test	 r8b, r8b
  00028	74 33		 je	 SHORT $LN4@Allocate
  0002a	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  00031	72 2a		 jb	 SHORT $LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00033	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00037	48 3b c1	 cmp	 rax, rcx
  0003a	76 33		 jbe	 SHORT $LN13@Allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00044	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00047	48 85 c0	 test	 rax, rax
  0004a	74 29		 je	 SHORT $LN14@Allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0004c	48 83 c0 27	 add	 rax, 39			; 00000027H
  00050	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00054	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}

  00058	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005c	c3		 ret	 0
$LN4@Allocate:

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else
; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  0005d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00062	48 85 c0	 test	 rax, rax
  00065	75 a7		 jne	 SHORT $LN8@Allocate
  00067	eb 12		 jmp	 SHORT $LN15@Allocate
$LN11@Allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00069	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006e	cc		 int	 3
$LN13@Allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0006f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00074	cc		 int	 3
$LN14@Allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00075	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007a	cc		 int	 3
$LN15@Allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0007b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00080	cc		 int	 3
$LN10@Allocate:
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT

; 55   : 		}

  00000	c2 00 00	 ret	 0
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT

; 44   : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 606  : 		return (EOF);

  00000	83 c8 ff	 or	 eax, -1

; 607  : 		}

  00003	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 595  : 		return (_Left == _Right);

  00000	8b 12		 mov	 edx, DWORD PTR [rdx]
  00002	39 11		 cmp	 DWORD PTR [rcx], edx
  00004	0f 94 c0	 sete	 al

; 596  : 		}

  00007	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z PROC	; std::char_traits<char>::to_int_type, COMDAT

; 589  : 		return ((unsigned char)_Ch);

  00000	0f b6 01	 movzx	 eax, BYTE PTR [rcx]

; 590  : 		}

  00003	c3		 ret	 0
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z ENDP	; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 565  : 		_Left = _Right;

  00000	0f b6 02	 movzx	 eax, BYTE PTR [rdx]
  00003	88 01		 mov	 BYTE PTR [rcx], al

; 566  : 		}

  00005	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::move, COMDAT

; 553  : 		return (_Count == 0 ? _First1

  00000	4d 85 c0	 test	 r8, r8
  00003	75 04		 jne	 SHORT $LN3@move
  00005	48 8b c1	 mov	 rax, rcx

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

  00008	c3		 ret	 0
$LN3@move:

; 553  : 		return (_Count == 0 ? _First1

  00009	e9 00 00 00 00	 jmp	 memmove
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 530  : 		return (_Count == 0 ? _First1

  00009	4d 85 c0	 test	 r8, r8
  0000c	74 05		 je	 SHORT $LN5@copy
  0000e	e8 00 00 00 00	 call	 memcpy
$LN5@copy:
  00013	48 8b c3	 mov	 rax, rbx

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SA_KPEBD@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$char_traits@D@std@@SA_KPEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 523  : 		return (*_First == 0 ? 0

  00000	80 39 00	 cmp	 BYTE PTR [rcx], 0
  00003	75 03		 jne	 SHORT $LN3@length
  00005	33 c0		 xor	 eax, eax

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00007	c3		 ret	 0
$LN3@length:

; 523  : 		return (*_First == 0 ? 0

  00008	48 83 c8 ff	 or	 rax, -1
  0000c	0f 1f 40 00	 npad	 4
$LL5@length:
  00010	48 ff c0	 inc	 rax
  00013	80 3c 01 00	 cmp	 BYTE PTR [rcx+rax], 0
  00017	75 f7		 jne	 SHORT $LL5@length

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00019	c3		 ret	 0
?length@?$char_traits@D@std@@SA_KPEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??3@YAXPEAX0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
??3@YAXPEAX0@Z PROC					; operator delete, COMDAT

; 94   :         return;
; 95   :     }

  00000	c2 00 00	 ret	 0
??3@YAXPEAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 88   :         (void)_Size;
; 89   :         return _Where;

  00000	48 8b c2	 mov	 rax, rdx

; 90   :     }

  00003	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN8:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN6@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN6@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 90   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx
  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy

; 68   :     }

  0002c	48 8b c3	 mov	 rax, rbx
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5b		 pop	 rbx
  00034	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 32
this$ = 64
_Message$ = 72
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 53   :     {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 54   :         __std_exception_data _InitData = { _Message, true };

  00009	c6 44 24 28 01	 mov	 BYTE PTR _InitData$[rsp+8], 1
  0000e	48 8b c2	 mov	 rax, rdx
  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0001c	48 89 44 24 20	 mov	 QWORD PTR _InitData$[rsp], rax
  00021	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  00024	33 c9		 xor	 ecx, ecx
  00026	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00029	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  0002d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$[rsp]
  00032	e8 00 00 00 00	 call	 __std_exception_copy

; 56   :     }

  00037	48 8b c3	 mov	 rax, rbx
  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5b		 pop	 rbx
  0003f	c3		 ret	 0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
