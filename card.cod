; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24206.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	_invalid_parameter_noinfo_noreturn:PROC
EXTRN	fread:PROC
EXTRN	isspace:PROC
EXTRN	__std_terminate:PROC
EXTRN	__stdio_common_vfprintf:PROC
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	fseek:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	fclose:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	__acrt_iob_func:PROC
EXTRN	fopen:PROC
EXTRN	toupper:PROC
EXTRN	memmove:PROC
EXTRN	ftell:PROC
EXTRN	__security_check_cookie:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
$SG4294967199 DB 'rb', 00H
	ORG $+1
$SG4294967196 DB '%c%c', 00H
	ORG $+3
$SG4294967194 DB 0aH, 00H
	ORG $+2
$SG4294967195 DB 'cards.txt', 00H
CONST	ENDS
PUBLIC	??$construct@UCard@@U1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z ; std::allocator<Card>::construct<Card,Card>
PUBLIC	??$construct@UCard@@U1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@$$QEAU3@@Z ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card>
PUBLIC	??$forward@UCard@@@std@@YA$$QEAUCard@@AEAU1@@Z	; std::forward<Card>
PUBLIC	??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z	; std::_Copy_memmove<char * __ptr64,char * __ptr64>
PUBLIC	??$construct@UCard@@U1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card>
PUBLIC	??$move@AEAUCard@@@std@@YA$$QEAUCard@@AEAU1@@Z	; std::move<Card & __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked1@DDV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked1<char,char,std::allocator<char> >
PUBLIC	??$_Ptr_move_cat@DD@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAD0@Z ; std::_Ptr_move_cat<char,char>
PUBLIC	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
PUBLIC	??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
PUBLIC	??$_Ptr_move_cat@UCard@@U1@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@AEBQEAUCard@@0@Z ; std::_Ptr_move_cat<Card,Card>
PUBLIC	??$_Rechecked@PEADPEAD@std@@YAAEAPEADAEAPEADPEAD@Z ; std::_Rechecked<char * __ptr64,char * __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<char * __ptr64,char * __ptr64,std::allocator<char> >
PUBLIC	??$_Rechecked@PEAUCard@@PEAU1@@std@@YAAEAPEAUCard@@AEAPEAU1@PEAU1@@Z ; std::_Rechecked<Card * __ptr64,Card * __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
PUBLIC	??$_Unchecked@PEAUCard@@@std@@YAPEAUCard@@PEAU1@@Z ; std::_Unchecked<Card * __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ; std::allocator<char>::destroy<char * __ptr64>
PUBLIC	??$construct@UCard@@AEBU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEBU2@@Z ; std::allocator<Card>::construct<Card,Card const & __ptr64>
PUBLIC	??$construct@UCard@@AEAU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEAU2@@Z ; std::allocator<Card>::construct<Card,Card & __ptr64>
PUBLIC	??$_Unchecked@PEAD@std@@YAPEADPEAD@Z		; std::_Unchecked<char * __ptr64>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >
PUBLIC	??0?$allocator@UCard@@@std@@QEAA@AEBV01@@Z	; std::allocator<Card>::allocator<Card>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?begin@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::vector<char,std::allocator<char> >::begin
PUBLIC	?end@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::vector<char,std::allocator<char> >::end
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<Card> >::_Wrap_alloc<std::allocator<Card> >
PUBLIC	??$_Destroy_range1@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<char>,char * __ptr64>
PUBLIC	??$_Uninitialized_move@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ; std::_Uninitialized_move<char * __ptr64,char * __ptr64,std::allocator<char> >
PUBLIC	??$_Destroy_range1@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<Card>,Card * __ptr64>
PUBLIC	??$_Uninitialized_move@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z ; std::_Uninitialized_move<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
PUBLIC	??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * __ptr64 & __ptr64>
PUBLIC	??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$_Uninitialized_default_fill_n1@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_default_fill_n1<char * __ptr64,unsigned __int64,std::allocator<char> >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1><std::_Wrap_alloc<std::allocator<Card> > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<Card> > >
PUBLIC	??$construct@UCard@@AEBU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEBU3@@Z ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card const & __ptr64>
PUBLIC	??$forward@AEBUCard@@@std@@YAAEBUCard@@AEBU1@@Z	; std::forward<Card const & __ptr64>
PUBLIC	??$construct@UCard@@AEAU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEAU3@@Z ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card & __ptr64>
PUBLIC	??$forward@AEAUCard@@@std@@YAAEAUCard@@AEAU1@@Z	; std::forward<Card & __ptr64>
PUBLIC	??$end@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ; std::end<std::vector<char,std::allocator<char> > >
PUBLIC	??$begin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ; std::begin<std::vector<char,std::allocator<char> > >
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??0?$allocator@UCard@@@std@@QEAA@XZ		; std::allocator<Card>::allocator<Card>
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<Card> >::_Wrap_alloc<std::allocator<Card> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<Card> >::_Vector_val<std::_Simple_types<Card> >
PUBLIC	??$_Destroy_range@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ; std::_Destroy_range<std::allocator<char>,char * __ptr64>
PUBLIC	??$_Umove@PEAD@?$vector@DV?$allocator@D@std@@@std@@IEAAPEADPEAD00@Z ; std::vector<char,std::allocator<char> >::_Umove<char * __ptr64>
PUBLIC	??$_Destroy_range@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<Card>,Card * __ptr64>
PUBLIC	??$_Umove@PEAUCard@@@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAPEAUCard@@PEAU2@00@Z ; std::vector<Card,std::allocator<Card> >::_Umove<Card * __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char * __ptr64>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1><>
PUBLIC	??$forward@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA$$QEAV?$vector@DV?$allocator@D@std@@@0@AEAV10@@Z ; std::forward<std::vector<char,std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
PUBLIC	??$_Uninitialized_default_fill_n@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ; std::_Uninitialized_default_fill_n<char * __ptr64,unsigned __int64,std::allocator<char> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$forward@V?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAV?$vector@UCard@@V?$allocator@UCard@@@std@@@0@AEAV10@@Z ; std::forward<std::vector<Card,std::allocator<Card> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > ><std::_Wrap_alloc<std::allocator<Card> >,void>
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<Card> > & __ptr64>
PUBLIC	??$construct@UCard@@AEBU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEBU2@@Z ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card const & __ptr64>
PUBLIC	??$construct@UCard@@AEAU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEAU2@@Z ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card & __ptr64>
PUBLIC	??$_Unfancy@UCard@@@std@@YAPEAUCard@@PEAU1@@Z	; std::_Unfancy<Card>
PUBLIC	??$addressof@$$CBUCard@@@std@@YAPEBUCard@@AEBU1@@Z ; std::addressof<Card const >
PUBLIC	??$cend@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ; std::cend<std::vector<char,std::allocator<char> > >
PUBLIC	??$cbegin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ; std::cbegin<std::vector<char,std::allocator<char> > >
PUBLIC	??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
PUBLIC	?max_size@?$allocator@D@std@@QEBA_KXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator@UCard@@@std@@QEBA_KXZ	; std::allocator<Card>::max_size
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?allocate@?$allocator@UCard@@@std@@QEAAPEAUCard@@_K@Z ; std::allocator<Card>::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SA_KAEBV?$allocator@UCard@@@2@@Z ; std::allocator_traits<std::allocator<Card> >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_second
PUBLIC	??0?$allocator@D@std@@QEAA@AEBV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::capacity
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myend
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?deallocate@?$allocator@UCard@@@std@@QEAAXPEAUCard@@_K@Z ; std::allocator<Card>::deallocate
PUBLIC	?capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ; std::vector<Card,std::allocator<Card> >::capacity
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Get_data
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myend
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAPEAUCard@@_K@Z ; std::_Wrap_alloc<std::allocator<Card> >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<Card> >::max_size
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Unused_capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::_Unused_capacity
PUBLIC	?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::max_size
PUBLIC	?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IEAAXPEAD0@Z ; std::vector<char,std::allocator<char> >::_Destroy
PUBLIC	?_Grow_to@?$vector@DV?$allocator@D@std@@@std@@IEBA_K_K@Z ; std::vector<char,std::allocator<char> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Reallocate
PUBLIC	?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IEBAXXZ ; std::vector<char,std::allocator<char> >::_Xlen
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Swap_all
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myend
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Unused_capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ; std::vector<Card,std::allocator<Card> >::_Unused_capacity
PUBLIC	?size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ; std::vector<Card,std::allocator<Card> >::size
PUBLIC	?max_size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ; std::vector<Card,std::allocator<Card> >::max_size
PUBLIC	?_Destroy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXPEAUCard@@0@Z ; std::vector<Card,std::allocator<Card> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_K_K@Z ; std::vector<Card,std::allocator<Card> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ; std::vector<Card,std::allocator<Card> >::_Reallocate
PUBLIC	?_Xlen@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXXZ ; std::vector<Card,std::allocator<Card> >::_Xlen
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Swap_all
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Mylast
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@_K@Z ; std::_Wrap_alloc<std::allocator<Card> >::deallocate
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Compat
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_second
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	?_Assign_rv@?$vector@DV?$allocator@D@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<char,std::allocator<char> >::_Assign_rv
PUBLIC	?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::size
PUBLIC	?_Pop_back_n@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Pop_back_n
PUBLIC	?_Reserve@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Reserve
PUBLIC	?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IEAAXXZ ; std::vector<char,std::allocator<char> >::_Tidy
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Mylast
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::_Compat
PUBLIC	?_Assign_rv@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<Card,std::allocator<Card> >::_Assign_rv
PUBLIC	?_Inside@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_NPEBUCard@@@Z ; std::vector<Card,std::allocator<Card> >::_Inside
PUBLIC	?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ; std::vector<Card,std::allocator<Card> >::_Reserve
PUBLIC	?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ ; std::vector<Card,std::allocator<Card> >::_Tidy
PUBLIC	?_Orphan_range@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXPEAUCard@@0@Z ; std::vector<Card,std::allocator<Card> >::_Orphan_range
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myend
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEBUCard@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator==
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ	; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
PUBLIC	??0?$vector@DV?$allocator@D@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
PUBLIC	??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
PUBLIC	?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z ; std::vector<char,std::allocator<char> >::resize
PUBLIC	?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator++
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator!=
PUBLIC	??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ; std::vector<Card,std::allocator<Card> >::vector<Card,std::allocator<Card> >
PUBLIC	??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<Card,std::allocator<Card> >::vector<Card,std::allocator<Card> >
PUBLIC	??1?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ; std::vector<Card,std::allocator<Card> >::~vector<Card,std::allocator<Card> >
PUBLIC	?begin@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ ; std::vector<Card,std::allocator<Card> >::begin
PUBLIC	?end@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ ; std::vector<Card,std::allocator<Card> >::end
PUBLIC	?push_back@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAXAEBUCard@@@Z ; std::vector<Card,std::allocator<Card> >::push_back
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEAUCard@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator++
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator!=
PUBLIC	main
PUBLIC	?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z ; read_cards
PUBLIC	?printcard@@YAXUCard@@@Z			; printcard
PUBLIC	??9@YA_NAEBUCard@@0@Z				; operator!=
PUBLIC	??8@YA_NAEBUCard@@0@Z				; operator==
PUBLIC	?Invalid@Card@@SA?AU1@XZ			; Card::Invalid
PUBLIC	??0Card@@QEAA@W4Suit@@W4Face@@@Z		; Card::Card
PUBLIC	?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; myio::read_all_bytes
PUBLIC	?tell@CFile@myio@@QEBA_KXZ			; myio::CFile::tell
PUBLIC	?seek@CFile@myio@@QEAAHJH@Z			; myio::CFile::seek
PUBLIC	?handle@CFile@myio@@QEBAPEAU_iobuf@@XZ		; myio::CFile::handle
PUBLIC	??1CFile@myio@@QEAA@XZ				; myio::CFile::~CFile
PUBLIC	??0CFile@myio@@QEAA@PEBD0@Z			; myio::CFile::CFile
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z	; std::_Iterator_base0::_Adopt
PUBLIC	?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z	; std::_Container_base0::_Swap_all
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?assign@?$char_traits@D@std@@SAXAEADAEBD@Z	; std::char_traits<char>::assign
PUBLIC	?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::move
PUBLIC	?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::copy
PUBLIC	?length@?$char_traits@D@std@@SA_KPEBD@Z		; std::char_traits<char>::length
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	printf
PUBLIC	_vfprintf_l
PUBLIC	__local_stdio_printf_options
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked1@DDV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@DDV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z DD imagerel $LN10
	DD	imagerel $LN10+48
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+14
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z DD imagerel $LN20
	DD	imagerel $LN20+48
	DD	imagerel $unwind$??$_Uninitialized_move@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z DD imagerel $LN19
	DD	imagerel $LN19+14
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Umove@PEAD@?$vector@DV?$allocator@D@std@@@std@@IEAAPEADPEAD00@Z DD imagerel $LN28
	DD	imagerel $LN28+45
	DD	imagerel $unwind$??$_Umove@PEAD@?$vector@DV?$allocator@D@std@@@std@@IEAAPEADPEAD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Umove@PEAUCard@@@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAPEAUCard@@PEAU2@00@Z DD imagerel $LN27
	DD	imagerel $LN27+26
	DD	imagerel $unwind$??$_Umove@PEAUCard@@@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAPEAUCard@@PEAU2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN16
	DD	imagerel $LN16+83
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UCard@@@std@@QEAAPEAUCard@@_K@Z DD imagerel $LN17
	DD	imagerel $LN17+108
	DD	imagerel $unwind$?allocate@?$allocator@UCard@@@std@@QEAAPEAUCard@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD imagerel $LN18
	DD	imagerel $LN18+81
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel $LN464
	DD	imagerel $LN464+389
	DD	imagerel $unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+47
	DD	imagerel $unwind$?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+154
	DD	imagerel $unwind$?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD imagerel $LN19
	DD	imagerel $LN19+83
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UCard@@@std@@QEAAXPEAUCard@@_K@Z DD imagerel $LN19
	DD	imagerel $LN19+105
	DD	imagerel $unwind$?deallocate@?$allocator@UCard@@@std@@QEAAXPEAUCard@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAPEAUCard@@_K@Z DD imagerel $LN20
	DD	imagerel $LN20+108
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAPEAUCard@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN39
	DD	imagerel $LN39+61
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN94
	DD	imagerel $LN94+159
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN91
	DD	imagerel $LN91+89
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD imagerel $LN19
	DD	imagerel $LN19+28
	DD	imagerel $unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD imagerel $LN21
	DD	imagerel $LN21+81
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD imagerel $LN211
	DD	imagerel $LN211+95
	DD	imagerel $unwind$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD imagerel $LN211+95
	DD	imagerel $LN211+212
	DD	imagerel $chain$0$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD imagerel $LN211+212
	DD	imagerel $LN211+218
	DD	imagerel $chain$1$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD imagerel $LN211+218
	DD	imagerel $LN211+242
	DD	imagerel $chain$2$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD imagerel $LN212
	DD	imagerel $LN212+121
	DD	imagerel $unwind$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD imagerel $LN212+121
	DD	imagerel $LN212+258
	DD	imagerel $chain$0$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD imagerel $LN212+258
	DD	imagerel $LN212+270
	DD	imagerel $chain$1$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD imagerel $LN212+270
	DD	imagerel $LN212+300
	DD	imagerel $chain$2$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@_K@Z DD imagerel $LN22
	DD	imagerel $LN22+105
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN212
	DD	imagerel $LN212+300
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN189
	DD	imagerel $LN189+301
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD imagerel $LN120
	DD	imagerel $LN120+170
	DD	imagerel $unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reserve@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD imagerel $LN136
	DD	imagerel $LN136+117
	DD	imagerel $unwind$?_Reserve@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IEAAXXZ DD imagerel $LN112
	DD	imagerel $LN112+112
	DD	imagerel $unwind$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD imagerel $LN136
	DD	imagerel $LN136+128
	DD	imagerel $unwind$?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ DD imagerel $LN113
	DD	imagerel $LN113+139
	DD	imagerel $unwind$?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD imagerel $LN130
	DD	imagerel $LN130+48
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN123
	DD	imagerel $LN123+129
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DD imagerel $LN115
	DD	imagerel $LN115+112
	DD	imagerel $unwind$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z DD imagerel $LN330
	DD	imagerel $LN330+193
	DD	imagerel $unwind$?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAXAEBUCard@@@Z DD imagerel $LN227
	DD	imagerel $LN227+133
	DD	imagerel $unwind$?push_back@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAXAEBUCard@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN425
	DD	imagerel $LN425+426
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ DD imagerel ??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ
	DD	imagerel ??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ+316
	DD	imagerel $unwind$??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z DD imagerel ??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z
	DD	imagerel ??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z+37
	DD	imagerel $unwind$??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z DD imagerel ??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z
	DD	imagerel ??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z+100
	DD	imagerel $unwind$??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ DD imagerel ??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ
	DD	imagerel ??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ+74
	DD	imagerel $unwind$??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z DD imagerel $LN404
	DD	imagerel $LN404+488
	DD	imagerel $unwind$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA DD imagerel ?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?printcard@@YAXUCard@@@Z DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$?printcard@@YAXUCard@@@Z
$pdata$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD imagerel $LN61
	DD	imagerel $LN61+236
	DD	imagerel $unwind$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA DD imagerel ?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
	DD	imagerel ?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?tell@CFile@myio@@QEBA_KXZ DD imagerel $LN4
	DD	imagerel $LN4+19
	DD	imagerel $unwind$?tell@CFile@myio@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CFile@myio@@QEAA@PEBD0@Z DD imagerel $LN4
	DD	imagerel $LN4+39
	DD	imagerel $unwind$??0CFile@myio@@QEAA@PEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN16
	DD	imagerel $LN16+105
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN14
	DD	imagerel $LN14+108
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+28
	DD	imagerel $unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN8
	DD	imagerel $LN8+83
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CFile@myio@@QEAA@PEBD0@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?tell@CFile@myio@@QEBA_KXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
	ORG $+6
$cppxdata$main DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$main
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$main
	DD	020H
	DD	00H
	DD	01H
$cppxdata$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z
	DD	028H
	DD	00H
	DD	01H
$cppxdata$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
xdata	SEGMENT
$unwind$main DD	081f11H
	DD	015641fH
	DD	014541bH
	DD	0133417H
	DD	07004f20bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$main
$stateUnwindMap$main DD 0ffffffffH
	DD	imagerel main$dtor$1
$ip2state$main DD imagerel main
	DD	0ffffffffH
	DD	imagerel main+78
	DD	00H
	DD	imagerel main+312
	DD	0ffffffffH
$unwind$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z DD 061a11H
	DD	0e00b5212H
	DD	060087009H
	DD	050063007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z
$stateUnwindMap$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA
$ip2state$?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z DD imagerel ?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z
	DD	0ffffffffH
	DD	imagerel ?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z+29
	DD	00H
$unwind$?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA DD 020601H
	DD	050023206H
$unwind$?printcard@@YAXUCard@@@Z DD 010401H
	DD	04204H
$unwind$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 062619H
	DD	0103417H
	DD	0e007920bH
	DD	060047005H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	04aH
$stateUnwindMap$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$0@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
$ip2state$?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD imagerel ?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	0ffffffffH
	DD	imagerel ?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z+44
	DD	00H
	DD	imagerel ?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z+58
	DD	01H
	DD	imagerel ?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z+112
	DD	02H
	DD	imagerel ?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z+181
	DD	01H
	DD	imagerel ?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z+194
	DD	00H
$unwind$?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAXAEBUCard@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD 020021H
	DD	085400H
	DD	imagerel $LN212
	DD	imagerel $LN212+121
	DD	imagerel $unwind$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD 021H
	DD	imagerel $LN212
	DD	imagerel $LN212+121
	DD	imagerel $unwind$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD 020521H
	DD	085405H
	DD	imagerel $LN212
	DD	imagerel $LN212+121
	DD	imagerel $unwind$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z DD 081501H
	DD	0b7415H
	DD	0a6415H
	DD	093415H
	DD	0e0115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD 020021H
	DD	065400H
	DD	imagerel $LN211
	DD	imagerel $LN211+95
	DD	imagerel $unwind$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD 021H
	DD	imagerel $LN211
	DD	imagerel $LN211+95
	DD	imagerel $unwind$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD 020521H
	DD	065405H
	DD	imagerel $LN211
	DD	imagerel $LN211+95
	DD	imagerel $unwind$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAPEAUCard@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UCard@@@std@@QEAAXPEAUCard@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+110
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+176
	DD	0ffffffffH
	DD	imagerel ?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+21
	DD	02H
	DD	imagerel ?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+33
	DD	00H
	DD	imagerel ?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+14
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	08H
	DD	imagerel $ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 052119H
	DD	0e0146218H
	DD	060117012H
	DD	03010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UCard@@@std@@QEAAPEAUCard@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Umove@PEAUCard@@@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAPEAUCard@@PEAU2@00@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Umove@PEAD@?$vector@DV?$allocator@D@std@@@std@@IEAAPEADPEAD00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked1@DDV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 81   :     static unsigned __int64 _OptionsStorage;
; 82   :     return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 83   : }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$dead$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 638  : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	49 8b d9	 mov	 rbx, r9
  00012	48 8b fa	 mov	 rdi, rdx
  00015	48 8b f1	 mov	 rsi, rcx

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	45 33 c9	 xor	 r9d, r9d
  00020	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00025	4c 8b c7	 mov	 r8, rdi
  00028	48 8b d6	 mov	 rdx, rsi
  0002b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002e	e8 00 00 00 00	 call	 __stdio_common_vfprintf

; 640  : }

  00033	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00038	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0003d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Format$ = 80
printf	PROC						; COMDAT

; 950  : {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	53		 push	 rbx
  00015	56		 push	 rsi
  00016	57		 push	 rdi
  00017	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0001b	48 8b f9	 mov	 rdi, rcx

; 951  :     int _Result;
; 952  :     va_list _ArgList;
; 953  :     __crt_va_start(_ArgList, _Format);

  0001e	48 8d 74 24 58	 lea	 rsi, QWORD PTR _Format$[rsp+8]

; 954  :     _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00023	b9 01 00 00 00	 mov	 ecx, 1
  00028	e8 00 00 00 00	 call	 __acrt_iob_func
  0002d	48 8b d8	 mov	 rbx, rax

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00030	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00035	45 33 c9	 xor	 r9d, r9d
  00038	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0003d	4c 8b c7	 mov	 r8, rdi
  00040	48 8b d3	 mov	 rdx, rbx
  00043	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00046	e8 00 00 00 00	 call	 __stdio_common_vfprintf

; 955  :     __crt_va_end(_ArgList);
; 956  :     return _Result;
; 957  : }

  0004b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004f	5f		 pop	 rdi
  00050	5e		 pop	 rsi
  00051	5b		 pop	 rbx
  00052	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$dead$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 88   :         (void)_Size;
; 89   :         return _Where;

  00000	48 8b c2	 mov	 rax, rdx

; 90   :     }

  00003	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SA_KPEBD@Z
_TEXT	SEGMENT
_First$dead$ = 8
?length@?$char_traits@D@std@@SA_KPEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 523  : 		return (*_First == 0 ? 0

  00000	b8 09 00 00 00	 mov	 eax, 9

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00005	c3		 ret	 0
?length@?$char_traits@D@std@@SA_KPEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 530  : 		return (_Count == 0 ? _First1

  00009	4d 85 c0	 test	 r8, r8
  0000c	74 05		 je	 SHORT $LN5@copy
  0000e	e8 00 00 00 00	 call	 memcpy
$LN5@copy:
  00013	48 8b c3	 mov	 rax, rbx

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::move, COMDAT

; 553  : 		return (_Count == 0 ? _First1

  00000	4d 85 c0	 test	 r8, r8
  00003	75 04		 jne	 SHORT $LN3@move
  00005	48 8b c1	 mov	 rax, rcx

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

  00008	c3		 ret	 0
$LN3@move:

; 553  : 		return (_Count == 0 ? _First1

  00009	e9 00 00 00 00	 jmp	 memmove
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 565  : 		_Left = _Right;

  00000	0f b6 02	 movzx	 eax, BYTE PTR [rdx]
  00003	88 01		 mov	 BYTE PTR [rcx], al

; 566  : 		}

  00005	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT

; 44   : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z PROC	; std::_Container_base0::_Swap_all, COMDAT

; 48   : 		}

  00000	c2 00 00	 ret	 0
?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z ENDP	; std::_Container_base0::_Swap_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT

; 55   : 		}

  00000	c2 00 00	 ret	 0
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Count$ = 48
_Sz$ = 56
_Try_aligned_allocation$dead$ = 64
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

$LN14:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b c2	 mov	 r8, rdx

; 49   : 	void *_Ptr = 0;
; 50   : 
; 51   : 	if (_Count == 0)

  00007	48 85 c9	 test	 rcx, rcx
  0000a	75 07		 jne	 SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

  0000c	33 c0		 xor	 eax, eax

; 87   : 	}

  0000e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00012	c3		 ret	 0
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00013	33 d2		 xor	 edx, edx
  00015	48 83 c8 ff	 or	 rax, -1
  00019	49 f7 f0	 div	 r8
  0001c	48 3b c1	 cmp	 rax, rcx
  0001f	72 3f		 jb	 SHORT $LN11@Allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  00021	49 0f af c8	 imul	 rcx, r8

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00025	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0002c	72 25		 jb	 SHORT $LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002e	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00032	48 3b c1	 cmp	 rax, rcx
  00035	76 2f		 jbe	 SHORT $LN13@Allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0003f	48 8d 48 27	 lea	 rcx, QWORD PTR [rax+39]
  00043	48 83 e1 e0	 and	 rcx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00047	48 89 41 f8	 mov	 QWORD PTR [rcx-8], rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);
; 85   : 		}
; 86   : 	return (_Ptr);

  0004b	48 8b c1	 mov	 rax, rcx

; 87   : 	}

  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
$LN4@Allocate:

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else
; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  00053	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00058	48 8b c8	 mov	 rcx, rax

; 87   : 	}

  0005b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005f	c3		 ret	 0
$LN11@Allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00060	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00065	cc		 int	 3
$LN13@Allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00066	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006b	cc		 int	 3
$LN10@Allocate:
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Count$ = 56
_Sz$ = 64
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b ca	 mov	 r9, rdx

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00007	48 83 c8 ff	 or	 rax, -1
  0000b	33 d2		 xor	 edx, edx
  0000d	49 f7 f0	 div	 r8
  00010	4c 3b c8	 cmp	 r9, rax
  00013	77 36		 ja	 SHORT $LN10@Deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00015	4d 0f af c8	 imul	 r9, r8

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00019	49 81 f9 00 10
	00 00		 cmp	 r9, 4096		; 00001000H
  00020	72 20		 jb	 SHORT $LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00022	f6 c1 1f	 test	 cl, 31
  00025	75 2a		 jne	 SHORT $LN12@Deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00027	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0002b	48 3b c1	 cmp	 rax, rcx
  0002e	73 27		 jae	 SHORT $LN13@Deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00030	48 2b c8	 sub	 rcx, rax
  00033	48 83 f9 08	 cmp	 rcx, 8
  00037	72 24		 jb	 SHORT $LN14@Deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00039	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003d	77 24		 ja	 SHORT $LN15@Deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003f	48 8b c8	 mov	 rcx, rax
$LN3@Deallocate:

; 133  : 	}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN10@Deallocate:

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN12@Deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN13@Deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN14@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN15@Deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN9@Deallocate:
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\myio.hh
;	COMDAT ??0CFile@myio@@QEAA@PEBD0@Z
_TEXT	SEGMENT
this$ = 48
path$ = 56
mode$dead$ = 64
??0CFile@myio@@QEAA@PEBD0@Z PROC			; myio::CFile::CFile, COMDAT

; 15   :   CFile(const char * path, const char *mode) { 

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b c2	 mov	 rax, rdx
  00009	48 8b d9	 mov	 rbx, rcx

; 16   :     handle_ = fopen(path, mode);

  0000c	48 8b c8	 mov	 rcx, rax
  0000f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967199
  00016	e8 00 00 00 00	 call	 fopen
  0001b	48 89 03	 mov	 QWORD PTR [rbx], rax

; 17   :   };

  0001e	48 8b c3	 mov	 rax, rbx
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5b		 pop	 rbx
  00026	c3		 ret	 0
??0CFile@myio@@QEAA@PEBD0@Z ENDP			; myio::CFile::CFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\myio.hh
;	COMDAT ??1CFile@myio@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CFile@myio@@QEAA@XZ PROC				; myio::CFile::~CFile, COMDAT

; 18   :   ~CFile() { if(!handle_) fclose(handle_); }

  00000	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  00004	75 07		 jne	 SHORT $LN2@CFile
  00006	33 c9		 xor	 ecx, ecx
  00008	e9 00 00 00 00	 jmp	 fclose
$LN2@CFile:
  0000d	c3		 ret	 0
??1CFile@myio@@QEAA@XZ ENDP				; myio::CFile::~CFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\myio.hh
;	COMDAT ?handle@CFile@myio@@QEBAPEAU_iobuf@@XZ
_TEXT	SEGMENT
this$ = 8
?handle@CFile@myio@@QEBAPEAU_iobuf@@XZ PROC		; myio::CFile::handle, COMDAT

; 20   :   FILE* handle() const { return handle_; }

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	c3		 ret	 0
?handle@CFile@myio@@QEBAPEAU_iobuf@@XZ ENDP		; myio::CFile::handle
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\myio.hh
;	COMDAT ?seek@CFile@myio@@QEAAHJH@Z
_TEXT	SEGMENT
this$ = 8
offset$dead$ = 16
origin$ = 24
?seek@CFile@myio@@QEAAHJH@Z PROC			; myio::CFile::seek, COMDAT

; 21   :   int seek(long offset, int origin) { return fseek(handle_, offset, origin); }

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	33 d2		 xor	 edx, edx
  00005	e9 00 00 00 00	 jmp	 fseek
?seek@CFile@myio@@QEAAHJH@Z ENDP			; myio::CFile::seek
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\myio.hh
;	COMDAT ?tell@CFile@myio@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 48
?tell@CFile@myio@@QEBA_KXZ PROC				; myio::CFile::tell, COMDAT

; 22   :   size_t tell() const { return ftell(handle_); }

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00007	e8 00 00 00 00	 call	 ftell
  0000c	48 98		 cdqe
  0000e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00012	c3		 ret	 0
?tell@CFile@myio@@QEBA_KXZ ENDP				; myio::CFile::tell
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\myio.hh
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\myio.hh
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$ = 48
file$ = 56
path$GSCopy$ = 64
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
path$ = 120
?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; myio::read_all_bytes

; 25   : std::vector<char> read_all_bytes(std::string path) {

$LN61:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000b	49 c7 43 c0 fe
	ff ff ff	 mov	 QWORD PTR [r11-64], -2
  00013	49 89 5b 18	 mov	 QWORD PTR [r11+24], rbx
  00017	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001e	48 33 c4	 xor	 rax, rsp
  00021	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00026	4c 8b f2	 mov	 r14, rdx
  00029	48 8b f1	 mov	 rsi, rcx
  0002c	49 89 4b c8	 mov	 QWORD PTR [r11-56], rcx
  00030	49 89 53 d8	 mov	 QWORD PTR [r11-40], rdx
  00034	33 c0		 xor	 eax, eax
  00036	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 485  : 		: _Myfirst(),

  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  0003d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00041	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  00045	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR $T1[rsp], 1
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 521  : 		return (this->_BUF_SIZE <= _Myres

  0004d	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
  00052	72 05		 jb	 SHORT $LN29@read_all_b
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00054	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 521  : 		return (this->_BUF_SIZE <= _Myres

  00057	eb 03		 jmp	 SHORT $LN30@read_all_b
$LN29@read_all_b:
  00059	49 8b ce	 mov	 rcx, r14
$LN30@read_all_b:
; File c:\users\alist_000\cppmisc\myio.hh

; 16   :     handle_ = fopen(path, mode);

  0005c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967199
  00063	e8 00 00 00 00	 call	 fopen
  00068	48 8b d8	 mov	 rbx, rax
  0006b	48 89 44 24 38	 mov	 QWORD PTR file$[rsp], rax

; 21   :   int seek(long offset, int origin) { return fseek(handle_, offset, origin); }

  00070	33 d2		 xor	 edx, edx
  00072	44 8d 42 02	 lea	 r8d, QWORD PTR [rdx+2]
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 fseek

; 22   :   size_t tell() const { return ftell(handle_); }

  0007e	48 8b cb	 mov	 rcx, rbx
  00081	e8 00 00 00 00	 call	 ftell
  00086	48 63 f8	 movsxd	 rdi, eax

; 21   :   int seek(long offset, int origin) { return fseek(handle_, offset, origin); }

  00089	45 33 c0	 xor	 r8d, r8d
  0008c	33 d2		 xor	 edx, edx
  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 fseek

; 26   :   std::vector<char> buffer;
; 27   :   CFile file(path.c_str(), "rb");
; 28   :   file.seek(0L, SEEK_END);
; 29   :   size_t length = file.tell();
; 30   :   file.seek(0L, SEEK_SET);
; 31   :   buffer.resize(length);

  00096	48 8b d7	 mov	 rdx, rdi
  00099	48 8b ce	 mov	 rcx, rsi
  0009c	e8 00 00 00 00	 call	 ?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z ; std::vector<char,std::allocator<char> >::resize

; 32   :   fread(buffer.data(), sizeof(char), length, file.handle());

  000a1	4c 8b cb	 mov	 r9, rbx
  000a4	4c 8b c7	 mov	 r8, rdi
  000a7	ba 01 00 00 00	 mov	 edx, 1
  000ac	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  000af	e8 00 00 00 00	 call	 fread
  000b4	90		 npad	 1

; 18   :   ~CFile() { if(!handle_) fclose(handle_); }

  000b5	48 85 db	 test	 rbx, rbx
  000b8	75 08		 jne	 SHORT $LN58@read_all_b
  000ba	33 c9		 xor	 ecx, ecx
  000bc	e8 00 00 00 00	 call	 fclose
  000c1	90		 npad	 1
$LN58@read_all_b:

; 33   :   return buffer;

  000c2	49 8b ce	 mov	 rcx, r14
  000c5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ca	48 8b c6	 mov	 rax, rsi

; 34   : }

  000cd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d2	48 33 cc	 xor	 rcx, rsp
  000d5	e8 00 00 00 00	 call	 __security_check_cookie
  000da	48 8b 9c 24 80
	00 00 00	 mov	 rbx, QWORD PTR [rsp+128]
  000e2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e6	41 5e		 pop	 r14
  000e8	5f		 pop	 rdi
  000e9	5e		 pop	 rsi
  000ea	c3		 ret	 0
  000eb	cc		 int	 3
?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; myio::read_all_bytes
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$ = 48
file$ = 56
path$GSCopy$ = 64
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
path$ = 120
?dtor$0@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `myio::read_all_bytes'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR path$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `myio::read_all_bytes'::`1'::dtor$0
$T1 = 32
__$ReturnUdt$GSCopy$ = 48
file$ = 56
path$GSCopy$ = 64
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
path$ = 120
?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `myio::read_all_bytes'::`1'::dtor$1
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00018	83 e0 01	 and	 eax, 1
  0001b	85 c0		 test	 eax, eax
  0001d	74 0d		 je	 SHORT $LN5@dtor$1
  0001f	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00023	48 8b 4d 30	 mov	 rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
  00027	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
$LN5@dtor$1:
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `myio::read_all_bytes'::`1'::dtor$1
$T1 = 32
__$ReturnUdt$GSCopy$ = 48
file$ = 56
path$GSCopy$ = 64
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
path$ = 120
?dtor$2@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `myio::read_all_bytes'::`1'::dtor$2
  00032	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR file$[rdx]
  00039	e9 00 00 00 00	 jmp	 ??1CFile@myio@@QEAA@XZ	; myio::CFile::~CFile
?dtor$2@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `myio::read_all_bytes'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$ = 48
file$ = 56
path$GSCopy$ = 64
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
path$ = 120
?dtor$0@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `myio::read_all_bytes'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR path$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `myio::read_all_bytes'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$ = 48
file$ = 56
path$GSCopy$ = 64
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
path$ = 120
?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `myio::read_all_bytes'::`1'::dtor$1
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00018	83 e0 01	 and	 eax, 1
  0001b	85 c0		 test	 eax, eax
  0001d	74 0d		 je	 SHORT $LN5@dtor$1
  0001f	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00023	48 8b 4d 30	 mov	 rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
  00027	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
$LN5@dtor$1:
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?dtor$1@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `myio::read_all_bytes'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$ = 48
file$ = 56
path$GSCopy$ = 64
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
path$ = 120
?dtor$2@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `myio::read_all_bytes'::`1'::dtor$2
  00032	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR file$[rdx]
  00039	e9 00 00 00 00	 jmp	 ??1CFile@myio@@QEAA@XZ	; myio::CFile::~CFile
?dtor$2@?0??read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `myio::read_all_bytes'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ??0Card@@QEAA@W4Suit@@W4Face@@@Z
_TEXT	SEGMENT
this$ = 8
s$ = 16
f$ = 24
??0Card@@QEAA@W4Suit@@W4Face@@@Z PROC			; Card::Card, COMDAT

; 29   :   Card(Suit s, Face f) : suit(s), face(f) {}

  00000	88 11		 mov	 BYTE PTR [rcx], dl
  00002	48 8b c1	 mov	 rax, rcx
  00005	44 88 41 01	 mov	 BYTE PTR [rcx+1], r8b
  00009	c3		 ret	 0
??0Card@@QEAA@W4Suit@@W4Face@@@Z ENDP			; Card::Card
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ?Invalid@Card@@SA?AU1@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 8
?Invalid@Card@@SA?AU1@XZ PROC				; Card::Invalid, COMDAT

; 29   :   Card(Suit s, Face f) : suit(s), face(f) {}

  00000	66 c7 01 00 00	 mov	 WORD PTR [rcx], 0

; 31   :   static Card Invalid() noexcept { return {Suit::Invalid, Face::Invalid}; }

  00005	48 8b c1	 mov	 rax, rcx
  00008	c3		 ret	 0
?Invalid@Card@@SA?AU1@XZ ENDP				; Card::Invalid
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
_TEXT	SEGMENT
a$ = 8
b$ = 16
??8@YA_NAEBUCard@@0@Z PROC				; operator==

; 35   :   return a.suit == b.suit && a.face == b.face;

  00000	0f b6 02	 movzx	 eax, BYTE PTR [rdx]
  00003	38 01		 cmp	 BYTE PTR [rcx], al
  00005	75 0c		 jne	 SHORT $LN3@operator
  00007	0f b6 42 01	 movzx	 eax, BYTE PTR [rdx+1]
  0000b	38 41 01	 cmp	 BYTE PTR [rcx+1], al
  0000e	75 03		 jne	 SHORT $LN3@operator
  00010	b0 01		 mov	 al, 1

; 36   : }

  00012	c3		 ret	 0
$LN3@operator:

; 35   :   return a.suit == b.suit && a.face == b.face;

  00013	32 c0		 xor	 al, al

; 36   : }

  00015	c3		 ret	 0
??8@YA_NAEBUCard@@0@Z ENDP				; operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
_TEXT	SEGMENT
a$ = 8
b$ = 16
??9@YA_NAEBUCard@@0@Z PROC				; operator!=

; 35   :   return a.suit == b.suit && a.face == b.face;

  00000	0f b6 02	 movzx	 eax, BYTE PTR [rdx]
  00003	38 01		 cmp	 BYTE PTR [rcx], al
  00005	75 0c		 jne	 SHORT $LN5@operator
  00007	0f b6 42 01	 movzx	 eax, BYTE PTR [rdx+1]
  0000b	38 41 01	 cmp	 BYTE PTR [rcx+1], al
  0000e	75 03		 jne	 SHORT $LN5@operator

; 37   : bool operator!=(const Card &a, const Card &b) noexcept { return !(a == b); }

  00010	32 c0		 xor	 al, al
  00012	c3		 ret	 0
$LN5@operator:
  00013	b0 01		 mov	 al, 1
  00015	c3		 ret	 0
??9@YA_NAEBUCard@@0@Z ENDP				; operator!=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
_TEXT	SEGMENT
c$ = 48
?printcard@@YAXUCard@@@Z PROC				; printcard

; 39   : void printcard(Card c) {

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 40   :   printf("%c%c", static_cast<char>(c.suit), static_cast<char>(c.face));

  00004	0f b7 c1	 movzx	 eax, cx
  00007	0f be d1	 movsx	 edx, cl
  0000a	66 c1 e8 08	 shr	 ax, 8
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG4294967196
  00015	44 0f be c0	 movsx	 r8d, al
  00019	e8 00 00 00 00	 call	 printf

; 41   : }

  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
?printcard@@YAXUCard@@@Z ENDP				; printcard
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 96
c$3 = 104
data$ = 104
start$ = 112
end$ = 120
?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z PROC ; read_cards

; 43   : std::vector<Card> read_cards(const std::vector<char> &data) {

$LN404:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	53		 push	 rbx
  00007	56		 push	 rsi
  00008	57		 push	 rdi
  00009	41 56		 push	 r14
  0000b	48 8b ec	 mov	 rbp, rsp
  0000e	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00012	48 c7 45 f8 fe
	ff ff ff	 mov	 QWORD PTR $T2[rbp-48], -2
  0001a	48 8b d9	 mov	 rbx, rcx
  0001d	33 c0		 xor	 eax, eax
  0001f	89 45 f0	 mov	 DWORD PTR $T1[rbp-48], eax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 485  : 		: _Myfirst(),

  00022	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00025	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00029	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  0002d	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T1[rbp-48], 1

; 46   : 		: _Ptr(_Parg)

  00034	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00037	48 89 4d 40	 mov	 QWORD PTR start$[rbp-48], rcx
  0003b	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0003f	48 89 45 48	 mov	 QWORD PTR end$[rbp-48], rax

; 214  : 		return (_Ptr == _Right._Ptr);

  00043	48 3b c8	 cmp	 rcx, rax
; File c:\users\alist_000\cppmisc\card.cc

; 92   :   while (start != end) {

  00046	0f 84 68 01 00
	00		 je	 $LN403@read_cards
  0004c	41 be 23 00 01
	00		 mov	 r14d, 65571		; 00010023H
  00052	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:__ImageBase
  00059	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@read_cards:

; 49   :     while (isspace(*start) && start != end)

  00060	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  00063	e8 00 00 00 00	 call	 isspace
  00068	85 c0		 test	 eax, eax
  0006a	74 25		 je	 SHORT $LN87@read_cards
  0006c	0f 1f 40 00	 npad	 4
$LL86@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 214  : 		return (_Ptr == _Right._Ptr);

  00070	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
  00074	48 3b 4d 48	 cmp	 rcx, QWORD PTR end$[rbp-48]
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  00078	0f 84 26 01 00
	00		 je	 $LN82@read_cards
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  0007e	48 ff c1	 inc	 rcx
  00081	48 89 4d 40	 mov	 QWORD PTR start$[rbp-48], rcx
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  00085	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  00088	e8 00 00 00 00	 call	 isspace
  0008d	85 c0		 test	 eax, eax
  0008f	75 df		 jne	 SHORT $LL86@read_cards
$LN87@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 214  : 		return (_Ptr == _Right._Ptr);

  00091	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
  00095	48 3b 4d 48	 cmp	 rcx, QWORD PTR end$[rbp-48]
; File c:\users\alist_000\cppmisc\card.cc

; 80   :     if (start == end)

  00099	0f 84 05 01 00
	00		 je	 $LN82@read_cards

; 67   :     s = toupper(s);

  0009f	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  000a2	e8 00 00 00 00	 call	 toupper
  000a7	8b f8		 mov	 edi, eax
  000a9	8d 48 bd	 lea	 ecx, DWORD PTR [rax-67]
  000ac	80 f9 10	 cmp	 cl, 16
  000af	77 06		 ja	 SHORT $LN116@read_cards
  000b1	41 0f a3 ce	 bt	 r14d, ecx

; 68   :     switch (s) {
; 69   :     case 'H':
; 70   :     case 'C':
; 71   :     case 'D':
; 72   :     case 'S':
; 73   :       return static_cast<Suit>(s);

  000b5	72 03		 jb	 SHORT $LN112@read_cards
$LN116@read_cards:

; 74   :     default:
; 75   :       return Suit::Invalid;

  000b7	40 32 ff	 xor	 dil, dil
$LN112@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  000ba	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
  000be	48 ff c1	 inc	 rcx
  000c1	48 89 4d 40	 mov	 QWORD PTR start$[rbp-48], rcx

; 214  : 		return (_Ptr == _Right._Ptr);

  000c5	48 3b 4d 48	 cmp	 rcx, QWORD PTR end$[rbp-48]
; File c:\users\alist_000\cppmisc\card.cc

; 83   :     if (++start == end || suit == Suit::Invalid)

  000c9	0f 84 d5 00 00
	00		 je	 $LN82@read_cards
  000cf	40 84 ff	 test	 dil, dil
  000d2	0f 84 cc 00 00
	00		 je	 $LN82@read_cards

; 53   :     s = toupper(s);

  000d8	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  000db	e8 00 00 00 00	 call	 toupper

; 54   :     switch (s) {

  000e0	0f be c8	 movsx	 ecx, al
  000e3	83 c1 c7	 add	 ecx, -57		; ffffffffffffffc7H
  000e6	83 f9 1b	 cmp	 ecx, 27
  000e9	0f 87 b1 00 00
	00		 ja	 $LN394@read_cards
  000ef	48 63 c9	 movsxd	 rcx, ecx
  000f2	0f b6 8c 0e 00
	00 00 00	 movzx	 ecx, BYTE PTR $LN401@read_cards[rsi+rcx]
  000fa	8b 94 8e 00 00
	00 00		 mov	 edx, DWORD PTR $LN402@read_cards[rsi+rcx*4]
  00101	48 03 d6	 add	 rdx, rsi
  00104	ff e2		 jmp	 rdx
$LN132@read_cards:

; 86   :     if (face == Face::Invalid)

  00106	84 c0		 test	 al, al
  00108	0f 84 92 00 00
	00		 je	 $LN394@read_cards
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  0010e	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
  00112	48 ff c1	 inc	 rcx
  00115	48 89 4d 40	 mov	 QWORD PTR start$[rbp-48], rcx
; File c:\users\alist_000\cppmisc\card.cc

; 29   :   Card(Suit s, Face f) : suit(s), face(f) {}

  00119	40 88 7d 38	 mov	 BYTE PTR c$3[rbp-48], dil
  0011d	88 45 39	 mov	 BYTE PTR c$3[rbp-47], al
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

  00120	48 8b 43 08	 mov	 rax, QWORD PTR [rbx+8]
  00124	48 8d 55 38	 lea	 rdx, QWORD PTR c$3[rbp-48]
  00128	48 3b d0	 cmp	 rdx, rax
  0012b	73 46		 jae	 SHORT $LN164@read_cards
  0012d	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00130	4c 8d 45 38	 lea	 r8, QWORD PTR c$3[rbp-48]
  00134	49 3b d0	 cmp	 rdx, r8
  00137	77 3a		 ja	 SHORT $LN164@read_cards

; 1279 : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

  00139	48 8d 7d 38	 lea	 rdi, QWORD PTR c$3[rbp-48]
  0013d	48 2b fa	 sub	 rdi, rdx
  00140	48 d1 ff	 sar	 rdi, 1

; 1280 : 			if (this->_Mylast() == this->_Myend())

  00143	48 3b 43 10	 cmp	 rax, QWORD PTR [rbx+16]
  00147	75 0c		 jne	 SHORT $LN166@read_cards

; 1281 : 				_Reserve(1);

  00149	48 8b cb	 mov	 rcx, rbx
  0014c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ; std::vector<Card,std::allocator<Card> >::_Reserve
  00151	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
$LN166@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00155	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]
  00159	48 85 d2	 test	 rdx, rdx
  0015c	74 0e		 je	 SHORT $LN288@read_cards
  0015e	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00161	0f b7 0c 78	 movzx	 ecx, WORD PTR [rax+rdi*2]
  00165	66 89 0a	 mov	 WORD PTR [rdx], cx
  00168	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
$LN288@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1285 : 			++this->_Mylast();

  0016c	48 83 43 08 02	 add	 QWORD PTR [rbx+8], 2

; 1286 : 			}
; 1287 : 		else

  00171	eb 37		 jmp	 SHORT $LN165@read_cards
$LN164@read_cards:

; 1288 : 			{	// push back a non-element
; 1289 : 			if (this->_Mylast() == this->_Myend())

  00173	48 3b 43 10	 cmp	 rax, QWORD PTR [rbx+16]
  00177	75 0c		 jne	 SHORT $LN167@read_cards

; 1290 : 				_Reserve(1);

  00179	48 8b cb	 mov	 rcx, rbx
  0017c	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ; std::vector<Card,std::allocator<Card> >::_Reserve
  00181	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
$LN167@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00185	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]
  00189	48 85 d2	 test	 rdx, rdx
  0018c	74 0b		 je	 SHORT $LN371@read_cards
  0018e	0f b7 45 38	 movzx	 eax, WORD PTR c$3[rbp-48]
  00192	66 89 02	 mov	 WORD PTR [rdx], ax
  00195	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
$LN371@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1294 : 			++this->_Mylast();

  00199	48 83 43 08 02	 add	 QWORD PTR [rbx+8], 2
  0019e	eb 0a		 jmp	 SHORT $LN165@read_cards
$LN394@read_cards:
; File c:\users\alist_000\cppmisc\card.cc

; 87   :       return Card::Invalid();

  001a0	48 8b 4d 40	 mov	 rcx, QWORD PTR start$[rbp-48]
$LN82@read_cards:

; 29   :   Card(Suit s, Face f) : suit(s), face(f) {}

  001a4	66 c7 45 38 00
	00		 mov	 WORD PTR c$3[rbp-48], 0
$LN165@read_cards:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 214  : 		return (_Ptr == _Right._Ptr);

  001aa	48 3b 4d 48	 cmp	 rcx, QWORD PTR end$[rbp-48]
; File c:\users\alist_000\cppmisc\card.cc

; 92   :   while (start != end) {

  001ae	0f 85 ac fe ff
	ff		 jne	 $LL2@read_cards
$LN403@read_cards:

; 93   :     Card c = getCard();
; 94   :     if(c != Card::Invalid()) result.push_back(c);
; 95   :   }
; 96   :   return result;

  001b4	48 8b c3	 mov	 rax, rbx

; 97   : }

  001b7	48 83 c4 30	 add	 rsp, 48			; 00000030H
  001bb	41 5e		 pop	 r14
  001bd	5f		 pop	 rdi
  001be	5e		 pop	 rsi
  001bf	5b		 pop	 rbx
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
  001c2	cc		 int	 3
  001c3	90		 npad	 1
$LN402@read_cards:
  001c4	00 00 00 00	 DD	 $LN132@read_cards
  001c8	00 00 00 00	 DD	 $LN394@read_cards
$LN401@read_cards:
  001cc	00		 DB	 0
  001cd	01		 DB	 1
  001ce	01		 DB	 1
  001cf	01		 DB	 1
  001d0	01		 DB	 1
  001d1	01		 DB	 1
  001d2	01		 DB	 1
  001d3	01		 DB	 1
  001d4	00		 DB	 0
  001d5	01		 DB	 1
  001d6	01		 DB	 1
  001d7	01		 DB	 1
  001d8	01		 DB	 1
  001d9	01		 DB	 1
  001da	01		 DB	 1
  001db	01		 DB	 1
  001dc	01		 DB	 1
  001dd	00		 DB	 0
  001de	00		 DB	 0
  001df	01		 DB	 1
  001e0	01		 DB	 1
  001e1	01		 DB	 1
  001e2	01		 DB	 1
  001e3	01		 DB	 1
  001e4	00		 DB	 0
  001e5	01		 DB	 1
  001e6	01		 DB	 1
  001e7	00		 DB	 0
?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z ENDP ; read_cards
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 96
c$3 = 104
data$ = 104
start$ = 112
end$ = 120
?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA PROC ; `read_cards'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN7@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ; std::vector<Card,std::allocator<Card> >::~vector<Card,std::allocator<Card> >
$LN7@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA ENDP ; `read_cards'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 96
c$3 = 104
data$ = 104
start$ = 112
end$ = 120
?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA PROC ; `read_cards'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN7@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ; std::vector<Card,std::allocator<Card> >::~vector<Card,std::allocator<Card> >
$LN7@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z@4HA ENDP ; `read_cards'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ PROC ; <lambda_e88a3977e7502aa3c90487c4d1d1e036>::operator(), COMDAT

; 48   :   auto skipWhitespace = [&] {

  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 86   : 		return (*_Ptr);

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\card.cc

; 48   :   auto skipWhitespace = [&] {

  00009	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 86   : 		return (*_Ptr);

  0000c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  0000f	0f be 0a	 movsx	 ecx, BYTE PTR [rdx]
  00012	e8 00 00 00 00	 call	 isspace
  00017	85 c0		 test	 eax, eax
  00019	74 29		 je	 SHORT $LN21@operator
  0001b	0f 1f 44 00 00	 npad	 5
$LL2@operator:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 214  : 		return (_Ptr == _Right._Ptr);

  00020	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00024	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00027	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0002a	48 39 10	 cmp	 QWORD PTR [rax], rdx
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  0002d	74 15		 je	 SHORT $LN21@operator
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  0002f	48 ff 00	 inc	 QWORD PTR [rax]

; 86   : 		return (*_Ptr);

  00032	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  00038	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  0003b	e8 00 00 00 00	 call	 isspace
  00040	85 c0		 test	 eax, eax
  00042	75 dc		 jne	 SHORT $LL2@operator
$LN21@operator:

; 50   :       start++;
; 51   :   };

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
??R<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEBAXXZ ENDP ; <lambda_e88a3977e7502aa3c90487c4d1d1e036>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ??0<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEAA@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@0@Z
_TEXT	SEGMENT
this$ = 8
<start>$ = 16
<end>$ = 24
??0<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEAA@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@0@Z PROC ; <lambda_e88a3977e7502aa3c90487c4d1d1e036>::<lambda_e88a3977e7502aa3c90487c4d1d1e036>, COMDAT

; 51   :   };

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
  00003	48 8b c1	 mov	 rax, rcx
  00006	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  0000a	c3		 ret	 0
??0<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@QEAA@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@0@Z ENDP ; <lambda_e88a3977e7502aa3c90487c4d1d1e036>::<lambda_e88a3977e7502aa3c90487c4d1d1e036>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z
_TEXT	SEGMENT
this$dead$ = 48
s$ = 56
??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z PROC ; <lambda_feed70f0583f79cbed9a8f69b1af8760>::operator(), COMDAT

; 52   :   auto toFace = [&](char s) noexcept {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 53   :     s = toupper(s);

  00004	0f be ca	 movsx	 ecx, dl
  00007	e8 00 00 00 00	 call	 toupper

; 54   :     switch (s) {

  0000c	0f be c8	 movsx	 ecx, al
  0000f	83 c1 c7	 add	 ecx, -57		; ffffffffffffffc7H
  00012	83 f9 1b	 cmp	 ecx, 27
  00015	77 20		 ja	 SHORT $LN5@operator
  00017	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:__ImageBase
  0001e	48 63 c9	 movsxd	 rcx, ecx
  00021	41 0f b6 8c 08
	00 00 00 00	 movzx	 ecx, BYTE PTR $LN7@operator[r8+rcx]
  0002a	41 8b 94 88 00
	00 00 00	 mov	 edx, DWORD PTR $LN8@operator[r8+rcx*4]
  00032	49 03 d0	 add	 rdx, r8
  00035	ff e2		 jmp	 rdx
$LN5@operator:

; 55   :     case 'Q':
; 56   :     case 'K':
; 57   :     case 'T':
; 58   :     case 'A':
; 59   :     case '9':
; 60   :     case 'J':
; 61   :       return static_cast<Face>(s);
; 62   :     default:
; 63   :       return Face::Invalid;

  00037	32 c0		 xor	 al, al
$LN1@operator:

; 64   :     }
; 65   :   };

  00039	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003d	c3		 ret	 0
  0003e	66 90		 npad	 2
$LN8@operator:
  00040	00 00 00 00	 DD	 $LN1@operator
  00044	00 00 00 00	 DD	 $LN5@operator
$LN7@operator:
  00048	00		 DB	 0
  00049	01		 DB	 1
  0004a	01		 DB	 1
  0004b	01		 DB	 1
  0004c	01		 DB	 1
  0004d	01		 DB	 1
  0004e	01		 DB	 1
  0004f	01		 DB	 1
  00050	00		 DB	 0
  00051	01		 DB	 1
  00052	01		 DB	 1
  00053	01		 DB	 1
  00054	01		 DB	 1
  00055	01		 DB	 1
  00056	01		 DB	 1
  00057	01		 DB	 1
  00058	01		 DB	 1
  00059	00		 DB	 0
  0005a	00		 DB	 0
  0005b	01		 DB	 1
  0005c	01		 DB	 1
  0005d	01		 DB	 1
  0005e	01		 DB	 1
  0005f	01		 DB	 1
  00060	00		 DB	 0
  00061	01		 DB	 1
  00062	01		 DB	 1
  00063	00		 DB	 0
??R<lambda_feed70f0583f79cbed9a8f69b1af8760>@@QEBA?AW4Face@@D@Z ENDP ; <lambda_feed70f0583f79cbed9a8f69b1af8760>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z
_TEXT	SEGMENT
this$dead$ = 48
s$ = 56
??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z PROC ; <lambda_dc7f57feb49f5532b9382d99d419f399>::operator(), COMDAT

; 66   :   auto toSuit = [&](char s) noexcept {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 67   :     s = toupper(s);

  00004	0f be ca	 movsx	 ecx, dl
  00007	e8 00 00 00 00	 call	 toupper
  0000c	8d 48 bd	 lea	 ecx, DWORD PTR [rax-67]
  0000f	80 f9 10	 cmp	 cl, 16
  00012	77 0a		 ja	 SHORT $LN5@operator

; 68   :     switch (s) {
; 69   :     case 'H':
; 70   :     case 'C':
; 71   :     case 'D':
; 72   :     case 'S':
; 73   :       return static_cast<Suit>(s);

  00014	ba 23 00 01 00	 mov	 edx, 65571		; 00010023H
  00019	0f a3 ca	 bt	 edx, ecx
  0001c	72 02		 jb	 SHORT $LN1@operator
$LN5@operator:

; 74   :     default:
; 75   :       return Suit::Invalid;

  0001e	32 c0		 xor	 al, al
$LN1@operator:

; 76   :     }
; 77   :   };

  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	c3		 ret	 0
??R<lambda_dc7f57feb49f5532b9382d99d419f399>@@QEBA?AW4Suit@@D@Z ENDP ; <lambda_dc7f57feb49f5532b9382d99d419f399>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ PROC ; <lambda_85ccf88837739ae91ef6c56eaf539046>::operator(), COMDAT

; 78   :   auto getCard = [&] {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 79   :     skipWhitespace();

  0000f	48 8b 39	 mov	 rdi, QWORD PTR [rcx]
  00012	48 8b f1	 mov	 rsi, rcx
  00015	48 8b da	 mov	 rbx, rdx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 86   : 		return (*_Ptr);

  00018	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0001b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  0001e	41 0f be 08	 movsx	 ecx, BYTE PTR [r8]
  00022	e8 00 00 00 00	 call	 isspace
  00027	85 c0		 test	 eax, eax
  00029	74 29		 je	 SHORT $LN80@operator
  0002b	0f 1f 44 00 00	 npad	 5
$LL8@operator:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 214  : 		return (_Ptr == _Right._Ptr);

  00030	48 8b 47 08	 mov	 rax, QWORD PTR [rdi+8]
  00034	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00037	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003a	48 39 0a	 cmp	 QWORD PTR [rdx], rcx
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  0003d	74 15		 je	 SHORT $LN80@operator
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  0003f	48 ff 02	 inc	 QWORD PTR [rdx]

; 86   : 		return (*_Ptr);

  00042	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 49   :     while (isspace(*start) && start != end)

  00048	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  0004b	e8 00 00 00 00	 call	 isspace
  00050	85 c0		 test	 eax, eax
  00052	75 dc		 jne	 SHORT $LL8@operator
$LN80@operator:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 214  : 		return (_Ptr == _Right._Ptr);

  00054	48 8b 46 08	 mov	 rax, QWORD PTR [rsi+8]
  00058	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0005b	48 8b 46 10	 mov	 rax, QWORD PTR [rsi+16]
  0005f	48 3b 08	 cmp	 rcx, QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 80   :     if (start == end)

  00062	0f 84 97 00 00
	00		 je	 $LN4@operator

; 67   :     s = toupper(s);

  00068	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  0006b	e8 00 00 00 00	 call	 toupper
  00070	8b f8		 mov	 edi, eax
  00072	83 c0 bd	 add	 eax, -67		; ffffffffffffffbdH
  00075	3c 10		 cmp	 al, 16
  00077	77 0a		 ja	 SHORT $LN38@operator
  00079	b9 23 00 01 00	 mov	 ecx, 65571		; 00010023H
  0007e	0f a3 c1	 bt	 ecx, eax
  00081	72 03		 jb	 SHORT $LN34@operator
$LN38@operator:

; 68   :     switch (s) {
; 69   :     case 'H':
; 70   :     case 'C':
; 71   :     case 'D':
; 72   :     case 'S':
; 73   :       return static_cast<Suit>(s);
; 74   :     default:
; 75   :       return Suit::Invalid;

  00083	40 32 ff	 xor	 dil, dil
$LN34@operator:

; 83   :     if (++start == end || suit == Suit::Invalid)

  00086	48 8b 46 08	 mov	 rax, QWORD PTR [rsi+8]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  0008a	48 ff 00	 inc	 QWORD PTR [rax]
  0008d	48 8b 08	 mov	 rcx, QWORD PTR [rax]

; 214  : 		return (_Ptr == _Right._Ptr);

  00090	48 8b 46 10	 mov	 rax, QWORD PTR [rsi+16]
  00094	48 3b 08	 cmp	 rcx, QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 83   :     if (++start == end || suit == Suit::Invalid)

  00097	74 66		 je	 SHORT $LN4@operator
  00099	40 84 ff	 test	 dil, dil
  0009c	74 61		 je	 SHORT $LN4@operator
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 86   : 		return (*_Ptr);

  0009e	48 8b 46 08	 mov	 rax, QWORD PTR [rsi+8]
  000a2	48 8b 08	 mov	 rcx, QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 53   :     s = toupper(s);

  000a5	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  000a8	e8 00 00 00 00	 call	 toupper

; 54   :     switch (s) {

  000ad	0f be c8	 movsx	 ecx, al
  000b0	44 8b c0	 mov	 r8d, eax
  000b3	83 c1 c7	 add	 ecx, -57		; ffffffffffffffc7H
  000b6	83 f9 1b	 cmp	 ecx, 27
  000b9	77 44		 ja	 SHORT $LN4@operator
  000bb	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:__ImageBase
  000c2	48 63 c9	 movsxd	 rcx, ecx
  000c5	0f b6 8c 08 00
	00 00 00	 movzx	 ecx, BYTE PTR $LN78@operator[rax+rcx]
  000cd	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR $LN79@operator[rax+rcx*4]
  000d4	48 03 d0	 add	 rdx, rax
  000d7	ff e2		 jmp	 rdx
$LN54@operator:

; 85   :     auto face = toFace(*start);
; 86   :     if (face == Face::Invalid)

  000d9	45 84 c0	 test	 r8b, r8b
  000dc	74 21		 je	 SHORT $LN4@operator

; 87   :       return Card::Invalid();
; 88   :     start++;

  000de	48 8b 46 08	 mov	 rax, QWORD PTR [rsi+8]

; 29   :   Card(Suit s, Face f) : suit(s), face(f) {}

  000e2	40 88 3b	 mov	 BYTE PTR [rbx], dil
  000e5	44 88 43 01	 mov	 BYTE PTR [rbx+1], r8b
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  000e9	48 ff 00	 inc	 QWORD PTR [rax]
; File c:\users\alist_000\cppmisc\card.cc

; 84   :       return Card::Invalid();

  000ec	48 8b c3	 mov	 rax, rbx

; 89   :     return Card{suit, face};
; 90   :   };

  000ef	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000f4	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000f9	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000fd	5f		 pop	 rdi
  000fe	c3		 ret	 0
$LN4@operator:
  000ff	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00104	48 8b c3	 mov	 rax, rbx

; 29   :   Card(Suit s, Face f) : suit(s), face(f) {}

  00107	66 c7 03 00 00	 mov	 WORD PTR [rbx], 0

; 89   :     return Card{suit, face};
; 90   :   };

  0010c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00111	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
  00117	90		 npad	 1
$LN79@operator:
  00118	00 00 00 00	 DD	 $LN54@operator
  0011c	00 00 00 00	 DD	 $LN4@operator
$LN78@operator:
  00120	00		 DB	 0
  00121	01		 DB	 1
  00122	01		 DB	 1
  00123	01		 DB	 1
  00124	01		 DB	 1
  00125	01		 DB	 1
  00126	01		 DB	 1
  00127	01		 DB	 1
  00128	00		 DB	 0
  00129	01		 DB	 1
  0012a	01		 DB	 1
  0012b	01		 DB	 1
  0012c	01		 DB	 1
  0012d	01		 DB	 1
  0012e	01		 DB	 1
  0012f	01		 DB	 1
  00130	01		 DB	 1
  00131	00		 DB	 0
  00132	00		 DB	 0
  00133	01		 DB	 1
  00134	01		 DB	 1
  00135	01		 DB	 1
  00136	01		 DB	 1
  00137	01		 DB	 1
  00138	00		 DB	 0
  00139	01		 DB	 1
  0013a	01		 DB	 1
  0013b	00		 DB	 0
??R<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEBA?AUCard@@XZ ENDP ; <lambda_85ccf88837739ae91ef6c56eaf539046>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
;	COMDAT ??0<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEAA@AEAV<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@1AEAV<lambda_dc7f57feb49f5532b9382d99d419f399>@@AEAV<lambda_feed70f0583f79cbed9a8f69b1af8760>@@@Z
_TEXT	SEGMENT
this$ = 8
<skipWhitespace>$ = 16
<start>$ = 24
<end>$ = 32
<toSuit>$ = 40
<toFace>$ = 48
??0<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEAA@AEAV<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@1AEAV<lambda_dc7f57feb49f5532b9382d99d419f399>@@AEAV<lambda_feed70f0583f79cbed9a8f69b1af8760>@@@Z PROC ; <lambda_85ccf88837739ae91ef6c56eaf539046>::<lambda_85ccf88837739ae91ef6c56eaf539046>, COMDAT

; 90   :   };

  00000	48 8b 44 24 28	 mov	 rax, QWORD PTR <toSuit>$[rsp]
  00005	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR <toFace>$[rsp]
  0000e	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  00012	48 8b c1	 mov	 rax, rcx
  00015	48 89 11	 mov	 QWORD PTR [rcx], rdx
  00018	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  0001c	4c 89 49 10	 mov	 QWORD PTR [rcx+16], r9
  00020	c3		 ret	 0
??0<lambda_85ccf88837739ae91ef6c56eaf539046>@@QEAA@AEAV<lambda_e88a3977e7502aa3c90487c4d1d1e036>@@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@1AEAV<lambda_dc7f57feb49f5532b9382d99d419f399>@@AEAV<lambda_feed70f0583f79cbed9a8f69b1af8760>@@@Z ENDP ; <lambda_85ccf88837739ae91ef6c56eaf539046>::<lambda_85ccf88837739ae91ef6c56eaf539046>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\card.cc
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\card.cc
_TEXT	SEGMENT
cards$ = 40
buffer$ = 64
$T1 = 88
main	PROC

; 99   : int main() {

$LN425:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000b	48 c7 40 98 fe
	ff ff ff	 mov	 QWORD PTR [rax-104], -2
  00013	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00017	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  0001b	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001f	48 c7 40 e8 0f
	00 00 00	 mov	 QWORD PTR [rax-24], 15

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00027	33 ed		 xor	 ebp, ebp
  00029	48 89 68 e0	 mov	 QWORD PTR [rax-32], rbp
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0002d	40 88 68 d0	 mov	 BYTE PTR [rax-48], bpl
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00031	44 8d 45 09	 lea	 r8d, QWORD PTR [rbp+9]
  00035	48 8d 48 d0	 lea	 rcx, QWORD PTR [rax-48]
  00039	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\alist_000\cppmisc\card.cc

; 100  :   auto buffer = myio::read_all_bytes("cards.txt");

  0003e	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T1[rsp]
  00043	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buffer$[rsp]
  00048	e8 00 00 00 00	 call	 ?read_all_bytes@myio@@YA?AV?$vector@DV?$allocator@D@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; myio::read_all_bytes
  0004d	90		 npad	 1

; 101  :   auto cards = read_cards(buffer);

  0004e	48 8d 54 24 40	 lea	 rdx, QWORD PTR buffer$[rsp]
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR cards$[rsp]
  00058	e8 00 00 00 00	 call	 ?read_cards@@YA?AV?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@AEBV?$vector@DV?$allocator@D@std@@@2@@Z ; read_cards
  0005d	8b fd		 mov	 edi, ebp
  0005f	48 8b 5c 24 28	 mov	 rbx, QWORD PTR cards$[rsp]
  00064	48 8b 74 24 30	 mov	 rsi, QWORD PTR cards$[rsp+8]
  00069	48 2b f3	 sub	 rsi, rbx
  0006c	48 ff c6	 inc	 rsi
  0006f	48 d1 ee	 shr	 rsi, 1
  00072	48 3b 5c 24 30	 cmp	 rbx, QWORD PTR cards$[rsp+8]
  00077	48 0f 47 f5	 cmova	 rsi, rbp

; 102  :   for (Card c : cards) {

  0007b	48 85 f6	 test	 rsi, rsi
  0007e	74 3a		 je	 SHORT $LN3@main
$LL4@main:
  00080	0f bf 03	 movsx	 eax, WORD PTR [rbx]

; 40   :   printf("%c%c", static_cast<char>(c.suit), static_cast<char>(c.face));

  00083	0f b7 c8	 movzx	 ecx, ax
  00086	66 c1 e9 08	 shr	 cx, 8
  0008a	44 0f be c1	 movsx	 r8d, cl
  0008e	0f be d0	 movsx	 edx, al
  00091	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG4294967196
  00098	e8 00 00 00 00	 call	 printf

; 103  :     printcard(c);
; 104  :     printf("\n");

  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG4294967194
  000a4	e8 00 00 00 00	 call	 printf
  000a9	48 8d 5b 02	 lea	 rbx, QWORD PTR [rbx+2]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 113  : 		++_Ptr;

  000ad	48 ff c7	 inc	 rdi
; File c:\users\alist_000\cppmisc\card.cc

; 102  :   for (Card c : cards) {

  000b0	48 3b fe	 cmp	 rdi, rsi
  000b3	75 cb		 jne	 SHORT $LL4@main
  000b5	48 8b 5c 24 28	 mov	 rbx, QWORD PTR cards$[rsp]
$LN3@main:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1637 : 		if (this->_Myfirst() != pointer())

  000ba	48 85 db	 test	 rbx, rbx
  000bd	74 79		 je	 SHORT $LN206@main

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();
; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());
; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

  000bf	48 8b 44 24 38	 mov	 rax, QWORD PTR cards$[rsp+16]
  000c4	48 2b c3	 sub	 rax, rbx
  000c7	48 d1 f8	 sar	 rax, 1
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  000ca	48 b9 ff ff ff
	ff ff ff ff 7f	 mov	 rcx, 9223372036854775807 ; 7fffffffffffffffH
  000d4	48 3b c1	 cmp	 rax, rcx
  000d7	76 06		 jbe	 SHORT $LN273@main
  000d9	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000de	cc		 int	 3
$LN273@main:

; 95   : 	const size_t _User_size = _Count * _Sz;

  000df	48 03 c0	 add	 rax, rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000e2	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000e8	72 38		 jb	 SHORT $LN274@main

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000ea	f6 c3 1f	 test	 bl, 31
  000ed	74 06		 je	 SHORT $LN275@main
  000ef	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000f4	cc		 int	 3
$LN275@main:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000f5	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000f9	48 3b c3	 cmp	 rax, rbx
  000fc	72 06		 jb	 SHORT $LN276@main
  000fe	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00103	cc		 int	 3
$LN276@main:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00104	48 2b d8	 sub	 rbx, rax
  00107	48 83 fb 08	 cmp	 rbx, 8
  0010b	73 06		 jae	 SHORT $LN277@main
  0010d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00112	cc		 int	 3
$LN277@main:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00113	48 83 fb 27	 cmp	 rbx, 39			; 00000027H
  00117	76 06		 jbe	 SHORT $LN278@main
  00119	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0011e	cc		 int	 3
$LN278@main:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0011f	48 8b d8	 mov	 rbx, rax
$LN274@main:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00122	48 8b cb	 mov	 rcx, rbx
  00125	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  0012a	0f 57 c0	 xorps	 xmm0, xmm0
  0012d	f3 0f 7f 44 24
	28		 movdqu	 XMMWORD PTR cards$[rsp], xmm0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1645 : 			this->_Myend() = pointer();

  00133	48 89 6c 24 38	 mov	 QWORD PTR cards$[rsp+16], rbp
$LN206@main:

; 1637 : 		if (this->_Myfirst() != pointer())

  00138	48 8b 4c 24 40	 mov	 rcx, QWORD PTR buffer$[rsp]
  0013d	48 85 c9	 test	 rcx, rcx
  00140	74 4d		 je	 SHORT $LN315@main

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();
; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());
; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

  00142	48 8b 44 24 50	 mov	 rax, QWORD PTR buffer$[rsp+16]
  00147	48 2b c1	 sub	 rax, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0014a	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00150	72 38		 jb	 SHORT $LN383@main

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00152	f6 c1 1f	 test	 cl, 31
  00155	74 06		 je	 SHORT $LN384@main
  00157	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0015c	cc		 int	 3
$LN384@main:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0015d	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00161	48 3b c1	 cmp	 rax, rcx
  00164	72 06		 jb	 SHORT $LN385@main
  00166	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0016b	cc		 int	 3
$LN385@main:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0016c	48 2b c8	 sub	 rcx, rax
  0016f	48 83 f9 08	 cmp	 rcx, 8
  00173	73 06		 jae	 SHORT $LN386@main
  00175	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0017a	cc		 int	 3
$LN386@main:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0017b	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0017f	76 06		 jbe	 SHORT $LN387@main
  00181	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00186	cc		 int	 3
$LN387@main:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00187	48 8b c8	 mov	 rcx, rax
$LN383@main:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0018a	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN315@main:
; File c:\users\alist_000\cppmisc\card.cc

; 106  :   return 0;

  0018f	33 c0		 xor	 eax, eax

; 107  : }

  00191	4c 8d 9c 24 80
	00 00 00	 lea	 r11, QWORD PTR [rsp+128]
  00199	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  0019d	49 8b 6b 20	 mov	 rbp, QWORD PTR [r11+32]
  001a1	49 8b 73 28	 mov	 rsi, QWORD PTR [r11+40]
  001a5	49 8b e3	 mov	 rsp, r11
  001a8	5f		 pop	 rdi
  001a9	c3		 ret	 0
$LN424@main:
main	ENDP
_TEXT	ENDS
text$x	SEGMENT
cards$ = 40
buffer$ = 64
$T1 = 88
main$dtor$1 PROC
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR buffer$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
main$dtor$1 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
cards$ = 40
buffer$ = 64
$T1 = 88
main$dtor$1 PROC
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR buffer$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
main$dtor$1 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator!=, COMDAT

; 218  : 		{	// test for iterator inequality

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00006	0f 95 c0	 setne	 al

; 219  : 		return (!(*this == _Right));
; 220  : 		}

  00009	c3		 ret	 0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator++, COMDAT

; 113  : 		++_Ptr;

  00000	48 83 01 02	 add	 QWORD PTR [rcx], 2

; 341  : 		++*(_Mybase *)this;
; 342  : 		return (*this);

  00004	48 8b c1	 mov	 rax, rcx

; 343  : 		}

  00007	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEAUCard@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEAUCard@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator*, COMDAT

; 331  : 		return ((reference)**(_Mybase *)this);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 332  : 		}

  00003	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEAUCard@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?push_back@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAXAEBUCard@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAXAEBUCard@@@Z PROC ; std::vector<Card,std::allocator<Card> >::push_back, COMDAT

; 1276 : 		{	// insert element at end

$LN227:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

  0000a	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 1276 : 		{	// insert element at end

  0000e	48 8b fa	 mov	 rdi, rdx
  00011	48 8b d9	 mov	 rbx, rcx

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

  00014	48 3b d0	 cmp	 rdx, rax
  00017	73 3f		 jae	 SHORT $LN2@push_back
  00019	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0001c	48 3b ca	 cmp	 rcx, rdx
  0001f	77 37		 ja	 SHORT $LN2@push_back

; 1277 : 		if (_Inside(_STD addressof(_Val)))
; 1278 : 			{	// push back an element
; 1279 : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

  00021	48 2b f9	 sub	 rdi, rcx
  00024	48 d1 ff	 sar	 rdi, 1

; 1280 : 			if (this->_Mylast() == this->_Myend())

  00027	48 3b 43 10	 cmp	 rax, QWORD PTR [rbx+16]
  0002b	75 08		 jne	 SHORT $LN4@push_back

; 1281 : 				_Reserve(1);

  0002d	48 8b cb	 mov	 rcx, rbx
  00030	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ; std::vector<Card,std::allocator<Card> >::_Reserve
$LN4@push_back:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00035	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]
  00039	48 85 d2	 test	 rdx, rdx
  0003c	74 37		 je	 SHORT $LN209@push_back
  0003e	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00041	0f b7 0c 78	 movzx	 ecx, WORD PTR [rax+rdi*2]
  00045	66 89 0a	 mov	 WORD PTR [rdx], cx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1294 : 			++this->_Mylast();

  00048	48 83 43 08 02	 add	 QWORD PTR [rbx+8], 2

; 1295 : 			}
; 1296 : 		}

  0004d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
$LN2@push_back:

; 1282 : 			_Orphan_range(this->_Mylast(), this->_Mylast());
; 1283 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),
; 1284 : 				this->_Myfirst()[_Idx]);
; 1285 : 			++this->_Mylast();
; 1286 : 			}
; 1287 : 		else
; 1288 : 			{	// push back a non-element
; 1289 : 			if (this->_Mylast() == this->_Myend())

  00058	48 3b 43 10	 cmp	 rax, QWORD PTR [rbx+16]
  0005c	75 08		 jne	 SHORT $LN5@push_back

; 1290 : 				_Reserve(1);

  0005e	48 8b cb	 mov	 rcx, rbx
  00061	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ; std::vector<Card,std::allocator<Card> >::_Reserve
$LN5@push_back:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00066	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  0006a	48 85 c9	 test	 rcx, rcx
  0006d	74 06		 je	 SHORT $LN209@push_back
  0006f	0f b7 07	 movzx	 eax, WORD PTR [rdi]
  00072	66 89 01	 mov	 WORD PTR [rcx], ax
$LN209@push_back:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1294 : 			++this->_Mylast();

  00075	48 83 43 08 02	 add	 QWORD PTR [rbx+8], 2

; 1295 : 			}
; 1296 : 		}

  0007a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
?push_back@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAXAEBUCard@@@Z ENDP ; std::vector<Card,std::allocator<Card> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?end@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ PROC ; std::vector<Card,std::allocator<Card> >::end, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1068 : 		return (iterator(this->_Mylast(), &this->_Get_data()));

  00007	48 8b c2	 mov	 rax, rdx

; 1069 : 		}

  0000a	c3		 ret	 0
?end@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ ENDP ; std::vector<Card,std::allocator<Card> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?begin@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ PROC ; std::vector<Card,std::allocator<Card> >::begin, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1058 : 		return (iterator(this->_Myfirst(), &this->_Get_data()));

  00006	48 8b c2	 mov	 rax, rdx

; 1059 : 		}

  00009	c3		 ret	 0
?begin@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@2@XZ ENDP ; std::vector<Card,std::allocator<Card> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??1?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ PROC ; std::vector<Card,std::allocator<Card> >::~vector<Card,std::allocator<Card> >, COMDAT

; 976  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ ; std::vector<Card,std::allocator<Card> >::_Tidy
??1?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Card,std::allocator<Card> >::~vector<Card,std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<Card,std::allocator<Card> >::vector<Card,std::allocator<Card> >, COMDAT

; 485  : 		: _Myfirst(),

  00000	45 33 c0	 xor	 r8d, r8d
  00003	4c 89 01	 mov	 QWORD PTR [rcx], r8

; 486  : 		_Mylast(),

  00006	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8

; 487  : 		_Myend()

  0000a	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 870  : 		this->_Myfirst() = _Right._Myfirst();

  0000e	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00011	48 89 01	 mov	 QWORD PTR [rcx], rax

; 871  : 		this->_Mylast() = _Right._Mylast();

  00014	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00018	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 872  : 		this->_Myend() = _Right._Myend();

  0001c	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  00020	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 842  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());
; 843  : 		}

  00024	48 8b c1	 mov	 rax, rcx

; 874  : 		_Right._Myfirst() = pointer();

  00027	4c 89 02	 mov	 QWORD PTR [rdx], r8

; 875  : 		_Right._Mylast() = pointer();

  0002a	4c 89 42 08	 mov	 QWORD PTR [rdx+8], r8

; 876  : 		_Right._Myend() = pointer();

  0002e	4c 89 42 10	 mov	 QWORD PTR [rdx+16], r8

; 842  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());
; 843  : 		}

  00032	c3		 ret	 0
??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<Card,std::allocator<Card> >::vector<Card,std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ PROC ; std::vector<Card,std::allocator<Card> >::vector<Card,std::allocator<Card> >, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 708  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Card,std::allocator<Card> >::vector<Card,std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator!=, COMDAT

; 218  : 		{	// test for iterator inequality

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00006	0f 95 c0	 setne	 al

; 219  : 		return (!(*this == _Right));
; 220  : 		}

  00009	c3		 ret	 0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator==, COMDAT

; 212  : 		{	// test for iterator equality

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00006	0f 94 c0	 sete	 al

; 213  : 		_Compat(_Right);
; 214  : 		return (_Ptr == _Right._Ptr);
; 215  : 		}

  00009	c3		 ret	 0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA?AV01@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
__formal$dead$ = 24
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA?AV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator++, COMDAT

; 119  : 		_Myiter _Tmp = *this;

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 89 02	 mov	 QWORD PTR [rdx], rax

; 113  : 		++_Ptr;

  00006	48 ff c0	 inc	 rax
  00009	48 89 01	 mov	 QWORD PTR [rcx], rax

; 120  : 		++*this;
; 121  : 		return (_Tmp);

  0000c	48 8b c2	 mov	 rax, rdx

; 122  : 		}

  0000f	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA?AV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator++, COMDAT

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 98   : 		if (_Mycont == 0
; 99   : 			|| _Ptr == nullptr_t{}
; 100  : 			|| _Mycont->_Mylast <= _Ptr)
; 101  : 			{	// report error
; 102  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 103  : 			_SCL_SECURE_OUT_OF_RANGE;
; 104  : 			}
; 105  : 
; 106  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 107  : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 108  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 109  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 110  : 		_SCL_SECURE_VALIDATE_RANGE(_Ptr < _Mycont->_Mylast);
; 111  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 112  : 
; 113  : 		++_Ptr;

  00000	48 ff 01	 inc	 QWORD PTR [rcx]

; 114  : 		return (*this);

  00003	48 8b c1	 mov	 rax, rcx

; 115  : 		}

  00006	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator*, COMDAT

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 68   : 		if (_Mycont == 0
; 69   : 			|| _Ptr == _Tptr()
; 70   : 			|| _Ptr < _Mycont->_Myfirst
; 71   : 			|| _Mycont->_Mylast <= _Ptr)
; 72   : 			{	// report error
; 73   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 74   : 			_SCL_SECURE_OUT_OF_RANGE;
; 75   : 			}
; 76   : 
; 77   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 78   : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 79   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 80   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 81   : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 87   : 		}

  00003	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ PROC ; std::vector<char,std::allocator<char> >::data, COMDAT

; 1247 : 		return (_Unfancy(this->_Myfirst()));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1248 : 		}

  00003	c3		 ret	 0
?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ENDP ; std::vector<char,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z PROC ; std::vector<char,std::allocator<char> >::resize, COMDAT

; 1133 : 		{	// determine new length, padding as needed

$LN330:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  0000a	4c 8b 49 08	 mov	 r9, QWORD PTR [rcx+8]

; 1133 : 		{	// determine new length, padding as needed

  0000e	48 8b d9	 mov	 rbx, rcx

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00011	4c 8b 01	 mov	 r8, QWORD PTR [rcx]

; 1133 : 		{	// determine new length, padding as needed

  00014	48 8b fa	 mov	 rdi, rdx

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00017	49 8b c9	 mov	 rcx, r9
  0001a	49 2b c8	 sub	 rcx, r8

; 1134 : 		if (_Newsize < size())

  0001d	48 3b d1	 cmp	 rdx, rcx
  00020	73 13		 jae	 SHORT $LN2@resize

; 1528 : 		pointer _Ptr = this->_Mylast() - _Count;

  00022	49 8d 04 10	 lea	 rax, QWORD PTR [r8+rdx]

; 1529 : 
; 1530 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1531 : 		_Orphan_range(_Ptr, this->_Mylast());
; 1532 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1533 : 
; 1534 : 		_Destroy(_Ptr, this->_Mylast());
; 1535 : 		this->_Mylast() = _Ptr;

  00026	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1147 : 			}
; 1148 : 		}

  0002a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
$LN2@resize:

; 1135 : 			_Pop_back_n(size() - _Newsize);
; 1136 : 		else if (size() < _Newsize)

  00035	48 3b cf	 cmp	 rcx, rdi
  00038	73 6f		 jae	 SHORT $LN4@resize

; 1048 : 		return (this->_Myend() - this->_Mylast());

  0003a	4c 8b 5b 10	 mov	 r11, QWORD PTR [rbx+16]

; 1137 : 			{	// pad as needed
; 1138 : 			_Reserve(_Newsize - size());

  0003e	49 8b d0	 mov	 rdx, r8
  00041	49 2b d1	 sub	 rdx, r9

; 1048 : 		return (this->_Myend() - this->_Mylast());

  00044	49 8b c3	 mov	 rax, r11
  00047	49 2b c1	 sub	 rax, r9

; 1137 : 			{	// pad as needed
; 1138 : 			_Reserve(_Newsize - size());

  0004a	4c 8d 14 3a	 lea	 r10, QWORD PTR [rdx+rdi]

; 1627 : 		if (_Unused_capacity() < _Count)

  0004e	49 3b c2	 cmp	 rax, r10
  00051	73 38		 jae	 SHORT $LN125@resize

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

  00053	48 8d 42 ff	 lea	 rax, QWORD PTR [rdx-1]
  00057	49 3b c2	 cmp	 rax, r10
  0005a	72 58		 jb	 SHORT $LN328@resize

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  0005c	4d 2b d8	 sub	 r11, r8

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  0005f	4a 8d 14 11	 lea	 rdx, QWORD PTR [rcx+r10]
  00063	45 33 c0	 xor	 r8d, r8d

; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00066	49 8b c3	 mov	 rax, r11
  00069	48 d1 e8	 shr	 rax, 1
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	49 03 c3	 add	 rax, r11
  00072	48 f7 d1	 not	 rcx
  00075	49 3b cb	 cmp	 rcx, r11

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  00078	48 8b cb	 mov	 rcx, rbx
  0007b	4c 0f 43 c0	 cmovae	 r8, rax
  0007f	4c 3b c2	 cmp	 r8, rdx
  00082	49 0f 43 d0	 cmovae	 rdx, r8
  00086	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Reallocate
$LN125@resize:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 471  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

  0008b	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  0008f	33 d2		 xor	 edx, edx
  00091	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  00094	4c 2b c1	 sub	 r8, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1140 : 			_Uninitialized_default_fill_n(this->_Mylast(), _Newsize - size(),

  00097	4c 03 c7	 add	 r8, rdi
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 471  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

  0009a	e8 00 00 00 00	 call	 memset
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1146 : 			this->_Mylast() += _Newsize - size();

  0009f	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000a2	48 03 cf	 add	 rcx, rdi
  000a5	48 89 4b 08	 mov	 QWORD PTR [rbx+8], rcx
$LN4@resize:

; 1147 : 			}
; 1148 : 		}

  000a9	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000ae	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
$LN328@resize:

; 1765 : 		_Xlength_error("vector<T> too long");

  000b4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  000bb	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000c0	cc		 int	 3
$LN327@resize:
?resize@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z ENDP ; std::vector<char,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >, COMDAT

; 975  : 		{	// destroy the object

$LN115:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1637 : 		if (this->_Myfirst() != pointer())

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 41		 je	 SHORT $LN4@vector

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();
; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());
; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

  00011	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00015	48 2b c1	 sub	 rax, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00018	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001e	72 20		 jb	 SHORT $LN72@vector

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00020	f6 c1 1f	 test	 cl, 31
  00023	75 33		 jne	 SHORT $LN110@vector

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00025	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00029	48 3b c1	 cmp	 rax, rcx
  0002c	73 30		 jae	 SHORT $LN112@vector

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002e	48 2b c8	 sub	 rcx, rax
  00031	48 83 f9 08	 cmp	 rcx, 8
  00035	72 2d		 jb	 SHORT $LN113@vector

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00037	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003b	77 2d		 ja	 SHORT $LN114@vector

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003d	48 8b c8	 mov	 rcx, rax
$LN72@vector:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00040	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1643 : 			this->_Myfirst() = pointer();

  00045	33 c0		 xor	 eax, eax
  00047	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1644 : 			this->_Mylast() = pointer();

  0004a	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1645 : 			this->_Myend() = pointer();

  0004e	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN4@vector:

; 977  : 		}

  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5b		 pop	 rbx
  00057	c3		 ret	 0
$LN110@vector:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00058	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005d	cc		 int	 3
$LN112@vector:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0005e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00063	cc		 int	 3
$LN113@vector:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00064	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00069	cc		 int	 3
$LN114@vector:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0006a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006f	cc		 int	 3
$LN109@vector:
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >, COMDAT

; 485  : 		: _Myfirst(),

  00000	45 33 c0	 xor	 r8d, r8d
  00003	4c 89 01	 mov	 QWORD PTR [rcx], r8

; 486  : 		_Mylast(),

  00006	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8

; 487  : 		_Myend()

  0000a	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 870  : 		this->_Myfirst() = _Right._Myfirst();

  0000e	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00011	48 89 01	 mov	 QWORD PTR [rcx], rax

; 871  : 		this->_Mylast() = _Right._Mylast();

  00014	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00018	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 872  : 		this->_Myend() = _Right._Myend();

  0001c	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  00020	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 842  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());
; 843  : 		}

  00024	48 8b c1	 mov	 rax, rcx

; 874  : 		_Right._Myfirst() = pointer();

  00027	4c 89 02	 mov	 QWORD PTR [rdx], r8

; 875  : 		_Right._Mylast() = pointer();

  0002a	4c 89 42 08	 mov	 QWORD PTR [rdx+8], r8

; 876  : 		_Right._Myend() = pointer();

  0002e	4c 89 42 10	 mov	 QWORD PTR [rdx+16], r8

; 842  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());
; 843  : 		}

  00032	c3		 ret	 0
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 708  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 521  : 		return (this->_BUF_SIZE <= _Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN13@c_str

; 1743 : 		return (this->_Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1744 : 		}

  0000a	c3		 ret	 0
$LN13@c_str:

; 1743 : 		return (this->_Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 1744 : 		}

  0000e	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 1016 : 		{	// destroy the string

$LN123:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]

; 1016 : 		{	// destroy the string

  0000a	48 8b d9	 mov	 rbx, rcx

; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	48 83 f8 10	 cmp	 rax, 16
  00011	72 33		 jb	 SHORT $LN86@basic_stri
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 716  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00013	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00016	48 ff c0	 inc	 rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00019	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001f	72 20		 jb	 SHORT $LN81@basic_stri

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00021	f6 c1 1f	 test	 cl, 31
  00024	75 43		 jne	 SHORT $LN118@basic_stri

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00026	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0002a	48 3b c1	 cmp	 rax, rcx
  0002d	73 40		 jae	 SHORT $LN120@basic_stri

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002f	48 2b c8	 sub	 rcx, rax
  00032	48 83 f9 08	 cmp	 rcx, 8
  00036	72 3d		 jb	 SHORT $LN121@basic_stri

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00038	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003c	77 3d		 ja	 SHORT $LN122@basic_stri

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003e	48 8b c8	 mov	 rcx, rax
$LN81@basic_stri:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN86@basic_stri:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00046	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0004e	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00053	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0005b	72 03		 jb	 SHORT $LN109@basic_stri
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0005d	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN109@basic_stri:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00060	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1018 : 		}

  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5b		 pop	 rbx
  00068	c3		 ret	 0
$LN118@basic_stri:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00069	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006e	cc		 int	 3
$LN120@basic_stri:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0006f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00074	cc		 int	 3
$LN121@basic_stri:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00075	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007a	cc		 int	 3
$LN122@basic_stri:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0007b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00080	cc		 int	 3
$LN117@basic_stri:
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$dead$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 836  : 		{	// construct from [_Ptr, <null>)

$LN130:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00006	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0000e	41 b8 09 00 00
	00		 mov	 r8d, 9

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00014	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0

; 836  : 		{	// construct from [_Ptr, <null>)

  0001c	48 8b d9	 mov	 rbx, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0001f	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00022	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 837  : 		_Tidy();
; 838  : 		assign(_Ptr);
; 839  : 		}

  00027	48 8b c3	 mov	 rax, rbx
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5b		 pop	 rbx
  0002f	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
  00000	c2 00 00	 ret	 0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
  00000	c2 00 00	 ret	 0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
  00000	c2 00 00	 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator==, COMDAT

; 212  : 		{	// test for iterator equality

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00006	0f 94 c0	 sete	 al

; 213  : 		_Compat(_Right);
; 214  : 		return (_Ptr == _Right._Ptr);
; 215  : 		}

  00009	c3		 ret	 0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator++, COMDAT

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 98   : 		if (_Mycont == 0
; 99   : 			|| _Ptr == nullptr_t{}
; 100  : 			|| _Mycont->_Mylast <= _Ptr)
; 101  : 			{	// report error
; 102  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 103  : 			_SCL_SECURE_OUT_OF_RANGE;
; 104  : 			}
; 105  : 
; 106  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 107  : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 108  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 109  : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 110  : 		_SCL_SECURE_VALIDATE_RANGE(_Ptr < _Mycont->_Mylast);
; 111  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 112  : 
; 113  : 		++_Ptr;

  00000	48 83 01 02	 add	 QWORD PTR [rcx], 2

; 114  : 		return (*this);

  00004	48 8b c1	 mov	 rax, rcx

; 115  : 		}

  00007	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEBUCard@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEBUCard@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator*, COMDAT

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 68   : 		if (_Mycont == 0
; 69   : 			|| _Ptr == _Tptr()
; 70   : 			|| _Ptr < _Mycont->_Myfirst
; 71   : 			|| _Mycont->_Mylast <= _Ptr)
; 72   : 			{	// report error
; 73   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 74   : 			_SCL_SECURE_OUT_OF_RANGE;
; 75   : 			}
; 76   : 
; 77   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 78   : 		_SCL_SECURE_VALIDATE(_Ptr != _Tptr());
; 79   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 80   : 		_SCL_SECURE_VALIDATE(_Mycont != 0);
; 81   : 		_SCL_SECURE_VALIDATE_RANGE(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 87   : 		}

  00003	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAAEBUCard@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 314  : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<Card> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myend, COMDAT

; 663  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 664  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Mylast, COMDAT

; 653  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 654  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myfirst, COMDAT

; 643  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 644  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAPEAUCard@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Get_data, COMDAT

; 633  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 634  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Getal, COMDAT

; 623  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 624  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 521  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Orphan_range@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXPEAUCard@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXPEAUCard@@0@Z PROC ; std::vector<Card,std::allocator<Card> >::_Orphan_range, COMDAT

; 1794 : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_range@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXPEAUCard@@0@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ PROC ; std::vector<Card,std::allocator<Card> >::_Tidy, COMDAT

; 1636 : 		{	// free all storage

$LN113:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1637 : 		if (this->_Myfirst() != pointer())

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 56		 je	 SHORT $LN2@Tidy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

  00011	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00015	48 ba ff ff ff
	ff ff ff ff 7f	 mov	 rdx, 9223372036854775807 ; 7fffffffffffffffH
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

  0001f	48 2b c1	 sub	 rax, rcx
  00022	48 d1 f8	 sar	 rax, 1
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00025	48 3b c2	 cmp	 rax, rdx
  00028	77 43		 ja	 SHORT $LN107@Tidy

; 95   : 	const size_t _User_size = _Count * _Sz;

  0002a	48 03 c0	 add	 rax, rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0002d	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00033	72 20		 jb	 SHORT $LN70@Tidy

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00035	f6 c1 1f	 test	 cl, 31
  00038	75 39		 jne	 SHORT $LN109@Tidy

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0003a	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0003e	48 3b c1	 cmp	 rax, rcx
  00041	73 36		 jae	 SHORT $LN110@Tidy

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00043	48 2b c8	 sub	 rcx, rax
  00046	48 83 f9 08	 cmp	 rcx, 8
  0004a	72 33		 jb	 SHORT $LN111@Tidy

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0004c	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00050	77 33		 ja	 SHORT $LN112@Tidy

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00052	48 8b c8	 mov	 rcx, rax
$LN70@Tidy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00055	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1643 : 			this->_Myfirst() = pointer();

  0005a	33 c0		 xor	 eax, eax
  0005c	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1644 : 			this->_Mylast() = pointer();

  0005f	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1645 : 			this->_Myend() = pointer();

  00063	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1647 : 		}

  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5b		 pop	 rbx
  0006c	c3		 ret	 0
$LN107@Tidy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0006d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00072	cc		 int	 3
$LN109@Tidy:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00073	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00078	cc		 int	 3
$LN110@Tidy:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00079	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007e	cc		 int	 3
$LN111@Tidy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0007f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00084	cc		 int	 3
$LN112@Tidy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00085	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0008a	cc		 int	 3
$LN106@Tidy:
?_Tidy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXXZ ENDP ; std::vector<Card,std::allocator<Card> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$dead$ = 56
?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z PROC ; std::vector<Card,std::allocator<Card> >::_Reserve, COMDAT

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

$LN136:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1048 : 		return (this->_Myend() - this->_Mylast());

  00004	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

  00008	4c 8b c1	 mov	 r8, rcx

; 1048 : 		return (this->_Myend() - this->_Mylast());

  0000b	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0000f	49 8b c1	 mov	 rax, r9
  00012	48 2b c2	 sub	 rax, rdx
  00015	48 d1 f8	 sar	 rax, 1

; 1627 : 		if (_Unused_capacity() < _Count)

  00018	48 83 f8 01	 cmp	 rax, 1
  0001c	73 50		 jae	 SHORT $LN2@Reserve

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  0001e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

  00021	49 ba ff ff ff
	ff ff ff ff 7f	 mov	 r10, 9223372036854775807 ; 7fffffffffffffffH

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  0002b	48 2b d1	 sub	 rdx, rcx

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

  0002e	49 8b c2	 mov	 rax, r10

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00031	48 d1 fa	 sar	 rdx, 1

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

  00034	48 2b c2	 sub	 rax, rdx
  00037	48 83 f8 01	 cmp	 rax, 1
  0003b	72 36		 jb	 SHORT $LN134@Reserve

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  0003d	4c 2b c9	 sub	 r9, rcx

; 1630 : 				_Xlen();
; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  00040	48 ff c2	 inc	 rdx

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  00043	49 d1 f9	 sar	 r9, 1
  00046	33 c9		 xor	 ecx, ecx

; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00048	49 8b c1	 mov	 rax, r9
  0004b	48 d1 e8	 shr	 rax, 1
  0004e	4c 2b d0	 sub	 r10, rax
  00051	49 03 c1	 add	 rax, r9
  00054	4d 3b d1	 cmp	 r10, r9
  00057	48 0f 43 c8	 cmovae	 rcx, rax
  0005b	48 3b ca	 cmp	 rcx, rdx
  0005e	48 0f 43 d1	 cmovae	 rdx, rcx

; 1630 : 				_Xlen();
; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  00062	49 8b c8	 mov	 rcx, r8

; 1632 : 			}
; 1633 : 		}

  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 1630 : 				_Xlen();
; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  00069	e9 00 00 00 00	 jmp	 ?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ; std::vector<Card,std::allocator<Card> >::_Reallocate
$LN2@Reserve:

; 1632 : 			}
; 1633 : 		}

  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	c3		 ret	 0
$LN134@Reserve:

; 1765 : 		_Xlength_error("vector<T> too long");

  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0007a	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0007f	cc		 int	 3
$LN133@Reserve:
?_Reserve@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Inside@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_NPEBUCard@@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_NPEBUCard@@@Z PROC ; std::vector<Card,std::allocator<Card> >::_Inside, COMDAT

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

  00000	48 3b 51 08	 cmp	 rdx, QWORD PTR [rcx+8]
  00004	73 08		 jae	 SHORT $LN3@Inside
  00006	48 39 11	 cmp	 QWORD PTR [rcx], rdx
  00009	77 03		 ja	 SHORT $LN3@Inside
  0000b	b0 01		 mov	 al, 1

; 1598 : 		}

  0000d	c3		 ret	 0
$LN3@Inside:

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

  0000e	32 c0		 xor	 al, al

; 1598 : 		}

  00010	c3		 ret	 0
?_Inside@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_NPEBUCard@@@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Assign_rv@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
__formal$dead$ = 24
?_Assign_rv@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<Card,std::allocator<Card> >::_Assign_rv, COMDAT

; 869  : 		this->_Swap_all((_Myt&)_Right);
; 870  : 		this->_Myfirst() = _Right._Myfirst();

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 871  : 		this->_Mylast() = _Right._Mylast();

  00006	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0000a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 872  : 		this->_Myend() = _Right._Myend();

  0000e	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  00012	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 873  : 
; 874  : 		_Right._Myfirst() = pointer();

  00016	33 c0		 xor	 eax, eax
  00018	48 89 02	 mov	 QWORD PTR [rdx], rax

; 875  : 		_Right._Mylast() = pointer();

  0001b	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax

; 876  : 		_Right._Myend() = pointer();

  0001f	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax

; 877  : 		}

  00023	c3		 ret	 0
?_Assign_rv@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::_Compat, COMDAT

; 262  : 		}

  00000	c2 00 00	 ret	 0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Mylast, COMDAT

; 653  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 654  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myfirst, COMDAT

; 643  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 644  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 623  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 624  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 521  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IEAAXXZ PROC	; std::vector<char,std::allocator<char> >::_Tidy, COMDAT

; 1636 : 		{	// free all storage

$LN112:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1637 : 		if (this->_Myfirst() != pointer())

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 41		 je	 SHORT $LN2@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();
; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());
; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

  00011	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00015	48 2b c1	 sub	 rax, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00018	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001e	72 20		 jb	 SHORT $LN70@Tidy

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00020	f6 c1 1f	 test	 cl, 31
  00023	75 33		 jne	 SHORT $LN107@Tidy

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00025	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00029	48 3b c1	 cmp	 rax, rcx
  0002c	73 30		 jae	 SHORT $LN109@Tidy

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002e	48 2b c8	 sub	 rcx, rax
  00031	48 83 f9 08	 cmp	 rcx, 8
  00035	72 2d		 jb	 SHORT $LN110@Tidy

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00037	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003b	77 2d		 ja	 SHORT $LN111@Tidy

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003d	48 8b c8	 mov	 rcx, rax
$LN70@Tidy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00040	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1643 : 			this->_Myfirst() = pointer();

  00045	33 c0		 xor	 eax, eax
  00047	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1644 : 			this->_Mylast() = pointer();

  0004a	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1645 : 			this->_Myend() = pointer();

  0004e	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1647 : 		}

  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5b		 pop	 rbx
  00057	c3		 ret	 0
$LN107@Tidy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00058	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005d	cc		 int	 3
$LN109@Tidy:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0005e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00063	cc		 int	 3
$LN110@Tidy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00064	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00069	cc		 int	 3
$LN111@Tidy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0006a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006f	cc		 int	 3
$LN106@Tidy:
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IEAAXXZ ENDP	; std::vector<char,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Reserve@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?_Reserve@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z PROC ; std::vector<char,std::allocator<char> >::_Reserve, COMDAT

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

$LN136:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1048 : 		return (this->_Myend() - this->_Mylast());

  00004	4c 8b 51 10	 mov	 r10, QWORD PTR [rcx+16]

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

  00008	4c 8b c2	 mov	 r8, rdx

; 1048 : 		return (this->_Myend() - this->_Mylast());

  0000b	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  0000f	49 8b c2	 mov	 rax, r10
  00012	48 2b c2	 sub	 rax, rdx

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

  00015	4c 8b c9	 mov	 r9, rcx

; 1627 : 		if (_Unused_capacity() < _Count)

  00018	49 3b c0	 cmp	 rax, r8
  0001b	73 46		 jae	 SHORT $LN2@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

  0001d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00020	48 8b c1	 mov	 rax, rcx
  00023	48 2b c2	 sub	 rax, rdx
  00026	48 ff c8	 dec	 rax
  00029	49 3b c0	 cmp	 rax, r8
  0002c	72 3a		 jb	 SHORT $LN134@Reserve

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  0002e	4c 2b d1	 sub	 r10, rcx

; 1630 : 				_Xlen();
; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  00031	48 2b d1	 sub	 rdx, rcx
  00034	49 03 d0	 add	 rdx, r8

; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00037	49 8b c2	 mov	 rax, r10
  0003a	48 d1 e8	 shr	 rax, 1
  0003d	45 33 c0	 xor	 r8d, r8d
  00040	48 8b c8	 mov	 rcx, rax
  00043	49 03 c2	 add	 rax, r10
  00046	48 f7 d1	 not	 rcx
  00049	49 3b ca	 cmp	 rcx, r10

; 1630 : 				_Xlen();
; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  0004c	49 8b c9	 mov	 rcx, r9
  0004f	4c 0f 43 c0	 cmovae	 r8, rax
  00053	4c 3b c2	 cmp	 r8, rdx
  00056	49 0f 43 d0	 cmovae	 rdx, r8

; 1632 : 			}
; 1633 : 		}

  0005a	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 1630 : 				_Xlen();
; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

  0005e	e9 00 00 00 00	 jmp	 ?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Reallocate
$LN2@Reserve:

; 1632 : 			}
; 1633 : 		}

  00063	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00067	c3		 ret	 0
$LN134@Reserve:

; 1765 : 		_Xlength_error("vector<T> too long");

  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0006f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00074	cc		 int	 3
$LN133@Reserve:
?_Reserve@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z ENDP ; std::vector<char,std::allocator<char> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Pop_back_n@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Pop_back_n@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z PROC ; std::vector<char,std::allocator<char> >::_Pop_back_n, COMDAT

; 1528 : 		pointer _Ptr = this->_Mylast() - _Count;
; 1529 : 
; 1530 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1531 : 		_Orphan_range(_Ptr, this->_Mylast());
; 1532 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1533 : 
; 1534 : 		_Destroy(_Ptr, this->_Mylast());
; 1535 : 		this->_Mylast() = _Ptr;

  00000	48 29 51 08	 sub	 QWORD PTR [rcx+8], rdx

; 1536 : 		}

  00004	c3		 ret	 0
?_Pop_back_n@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z ENDP ; std::vector<char,std::allocator<char> >::_Pop_back_n
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC	; std::vector<char,std::allocator<char> >::size, COMDAT

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]

; 1181 : 		}

  00007	c3		 ret	 0
?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP	; std::vector<char,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Assign_rv@?$vector@DV?$allocator@D@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
__formal$dead$ = 24
?_Assign_rv@?$vector@DV?$allocator@D@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<char,std::allocator<char> >::_Assign_rv, COMDAT

; 869  : 		this->_Swap_all((_Myt&)_Right);
; 870  : 		this->_Myfirst() = _Right._Myfirst();

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 871  : 		this->_Mylast() = _Right._Mylast();

  00006	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0000a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 872  : 		this->_Myend() = _Right._Myend();

  0000e	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  00012	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 873  : 
; 874  : 		_Right._Myfirst() = pointer();

  00016	33 c0		 xor	 eax, eax
  00018	48 89 02	 mov	 QWORD PTR [rdx], rax

; 875  : 		_Right._Mylast() = pointer();

  0001b	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax

; 876  : 		_Right._Myend() = pointer();

  0001f	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax

; 877  : 		}

  00023	c3		 ret	 0
?_Assign_rv@?$vector@DV?$allocator@D@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<char,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 534  : 			}

  00000	c2 00 00	 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 729  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 730  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 697  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 698  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 692  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 693  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT

; 496  : 		_Mysize(0),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 497  : 		_Myres(0)

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 590  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 521  : 		return (this->_BUF_SIZE <= _Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 583  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 584  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 583  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 584  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 578  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 579  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 578  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 579  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Built$ = 56
_Newsize$ = 64
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 2248 : 		{	// initialize buffer, deallocating any storage

$LN120:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f0	 mov	 rsi, r8
  00012	48 8b d9	 mov	 rbx, rcx

; 2249 : 		if (!_Built)

  00015	84 d2		 test	 dl, dl
  00017	74 4f		 je	 SHORT $LN84@Tidy

; 2250 : 			;
; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00019	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0001e	72 48		 jb	 SHORT $LN84@Tidy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;

  00020	48 8b 39	 mov	 rdi, QWORD PTR [rcx]

; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));
; 2255 : 			if (0 < _Newsize)

  00023	4d 85 c0	 test	 r8, r8
  00026	74 08		 je	 SHORT $LN57@Tidy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  00028	48 8b d7	 mov	 rdx, rdi
  0002b	e8 00 00 00 00	 call	 memcpy
$LN57@Tidy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00030	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00034	48 ff c0	 inc	 rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00037	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0003d	72 21		 jb	 SHORT $LN79@Tidy

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0003f	40 f6 c7 1f	 test	 dil, 31
  00043	75 4d		 jne	 SHORT $LN115@Tidy

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00045	48 8b 47 f8	 mov	 rax, QWORD PTR [rdi-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00049	48 3b c7	 cmp	 rax, rdi
  0004c	73 4a		 jae	 SHORT $LN117@Tidy

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0004e	48 2b f8	 sub	 rdi, rax
  00051	48 83 ff 08	 cmp	 rdi, 8
  00055	72 47		 jb	 SHORT $LN118@Tidy

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00057	48 83 ff 27	 cmp	 rdi, 39			; 00000027H
  0005b	77 47		 ja	 SHORT $LN119@Tidy

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0005d	48 8b f8	 mov	 rdi, rax
$LN79@Tidy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00060	48 8b cf	 mov	 rcx, rdi
  00063	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN84@Tidy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00068	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00070	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00075	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00079	72 03		 jb	 SHORT $LN107@Tidy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0007b	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN107@Tidy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0007e	c6 04 33 00	 mov	 BYTE PTR [rbx+rsi], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2262 : 		}

  00082	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00087	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0008c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00090	5f		 pop	 rdi
  00091	c3		 ret	 0
$LN115@Tidy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00092	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00097	cc		 int	 3
$LN117@Tidy:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00098	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0009d	cc		 int	 3
$LN118@Tidy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0009e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a3	cc		 int	 3
$LN119@Tidy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000a4	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a9	cc		 int	 3
$LN114@Tidy:
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$dead$ = 16
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1181 : 		_DEBUG_POINTER(_Ptr);
; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00000	41 b8 09 00 00
	00		 mov	 r8d, 9
  00006	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$dead$ = 56
_Count$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN189:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0000f	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

  00013	49 8b f8	 mov	 rdi, r8
  00016	48 8b d9	 mov	 rbx, rcx

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00019	48 83 fa 10	 cmp	 rdx, 16
  0001d	72 05		 jb	 SHORT $LN20@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0001f	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00022	eb 03		 jmp	 SHORT $LN21@assign
$LN20@assign:
  00024	48 8b c3	 mov	 rax, rbx
$LN21@assign:

; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00027	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:$SG4294967195
  0002e	48 3b f0	 cmp	 rsi, rax
  00031	72 43		 jb	 SHORT $LN2@assign

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00033	48 83 fa 10	 cmp	 rdx, 16
  00037	72 03		 jb	 SHORT $LN35@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN35@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003c	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  00040	48 3b ce	 cmp	 rcx, rsi
  00043	76 31		 jbe	 SHORT $LN2@assign

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00045	48 83 fa 10	 cmp	 rdx, 16
  00049	72 05		 jb	 SHORT $LN57@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0004b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0004e	eb 03		 jmp	 SHORT $LN58@assign
$LN57@assign:
  00050	48 8b c3	 mov	 rax, rbx
$LN58@assign:

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1167 : 		if (_Inside(_Ptr))
; 1168 : 			return (assign(*this,

  00053	48 2b f0	 sub	 rsi, rax
  00056	4c 8b cf	 mov	 r9, rdi
  00059	4c 8b c6	 mov	 r8, rsi
  0005c	48 8b d3	 mov	 rdx, rbx
  0005f	48 8b cb	 mov	 rcx, rbx

; 1177 : 		}

  00062	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00067	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1167 : 		if (_Inside(_Ptr))
; 1168 : 			return (assign(*this,

  00071	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@assign:

; 2225 : 		if (max_size() < _Newsize)

  00076	48 83 ff fe	 cmp	 rdi, -2
  0007a	0f 87 a0 00 00
	00		 ja	 $LN187@assign

; 2226 : 			_Xlen();	// result too long
; 2227 : 		if (this->_Myres() < _Newsize)

  00080	48 3b d7	 cmp	 rdx, rdi
  00083	73 20		 jae	 SHORT $LN63@assign

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00085	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00089	48 8b d7	 mov	 rdx, rdi
  0008c	48 8b cb	 mov	 rcx, rbx
  0008f	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2233 : 			_Eos(0);	// new size is zero, just null terminate
; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

  00094	48 85 ff	 test	 rdi, rdi

; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))

  00097	74 74		 je	 SHORT $LN181@assign
$LN186@assign:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00099	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0009e	72 43		 jb	 SHORT $LN158@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  000a0	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000a3	eb 41		 jmp	 SHORT $LN159@assign
$LN63@assign:

; 2232 : 		else if (_Newsize == 0)

  000a5	48 85 ff	 test	 rdi, rdi
  000a8	75 ef		 jne	 SHORT $LN186@assign

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  000aa	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000ae	48 83 fa 10	 cmp	 rdx, 16
  000b2	72 19		 jb	 SHORT $LN140@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  000b4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000b7	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1176 : 		return (*this);

  000ba	48 8b c3	 mov	 rax, rbx

; 1177 : 		}

  000bd	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c2	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000c7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000cb	5f		 pop	 rdi
  000cc	c3		 ret	 0
$LN140@assign:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000cd	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000d0	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1177 : 		}

  000d3	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000d8	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000dd	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e1	5f		 pop	 rdi
  000e2	c3		 ret	 0
$LN158@assign:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000e3	48 8b cb	 mov	 rcx, rbx
$LN159@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000e6	48 85 ff	 test	 rdi, rdi
  000e9	74 0b		 je	 SHORT $LN165@assign
  000eb	4c 8b c7	 mov	 r8, rdi
  000ee	48 8b d6	 mov	 rdx, rsi
  000f1	e8 00 00 00 00	 call	 memcpy
$LN165@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000f6	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  000fb	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000ff	72 05		 jb	 SHORT $LN176@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00101	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00104	eb 03		 jmp	 SHORT $LN177@assign
$LN176@assign:
  00106	48 8b c3	 mov	 rax, rbx
$LN177@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00109	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN181@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1177 : 		}

  0010d	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00112	48 8b c3	 mov	 rax, rbx
  00115	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0011a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0011e	5f		 pop	 rdi
  0011f	c3		 ret	 0
$LN187@assign:

; 2266 : 		_Xlength_error("string too long");

  00120	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00127	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012c	cc		 int	 3
$LN184@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN212:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	48 89 7c 24 18	 mov	 QWORD PTR [rsp+24], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2271 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

  00019	49 8b f9	 mov	 rdi, r9
  0001c	4d 8b f0	 mov	 r14, r8
  0001f	48 8b f2	 mov	 rsi, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2271 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 d7 00 00
	00		 jb	 $LN208@assign

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 2113 : 		if (_Size <= _Max_effective_size)

  00031	4c 3b c8	 cmp	 r9, rax
  00034	48 0f 47 f8	 cmova	 rdi, rax

; 1150 : 		_Right._Check_offset(_Roff);
; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1152 : 
; 1153 : 		if (this == &_Right)

  00038	48 3b ca	 cmp	 rcx, rdx
  0003b	75 2d		 jne	 SHORT $LN2@assign

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0003d	49 8d 04 38	 lea	 rax, QWORD PTR [r8+rdi]

; 2271 : 		if (this->_Mysize() < _Off)

  00041	48 39 41 10	 cmp	 QWORD PTR [rcx+16], rax
  00045	0f 82 c7 00 00
	00		 jb	 $LN210@assign

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  0004b	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0004f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00054	72 03		 jb	 SHORT $LN64@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00056	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN64@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00059	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0005d	48 8b cb	 mov	 rcx, rbx
  00060	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 1155 : 		else if (_Grow(_Count))

  00065	e9 82 00 00 00	 jmp	 $LN203@assign
$LN2@assign:

; 2225 : 		if (max_size() < _Newsize)

  0006a	48 83 ff fe	 cmp	 rdi, -2
  0006e	0f 87 ab 00 00
	00		 ja	 $LN211@assign

; 2226 : 			_Xlen();	// result too long
; 2227 : 		if (this->_Myres() < _Newsize)

  00074	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  00078	73 27		 jae	 SHORT $LN72@assign

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0007a	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0007e	48 8b d7	 mov	 rdx, rdi
  00081	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

  00086	48 85 ff	 test	 rdi, rdi

; 1155 : 		else if (_Grow(_Count))

  00089	74 61		 je	 SHORT $LN203@assign
$LN207@assign:

; 521  : 		return (this->_BUF_SIZE <= _Myres

  0008b	48 83 7e 18 10	 cmp	 QWORD PTR [rsi+24], 16
  00090	72 03		 jb	 SHORT $LN166@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00092	48 8b 36	 mov	 rsi, QWORD PTR [rsi]
$LN166@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00095	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0009a	72 25		 jb	 SHORT $LN180@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0009c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0009f	eb 23		 jmp	 SHORT $LN181@assign
$LN72@assign:

; 2232 : 		else if (_Newsize == 0)

  000a1	48 85 ff	 test	 rdi, rdi
  000a4	75 e5		 jne	 SHORT $LN207@assign

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000a6	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  000ab	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000af	72 08		 jb	 SHORT $LN149@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  000b1	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000b4	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

  000b7	eb 33		 jmp	 SHORT $LN203@assign
$LN149@assign:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000b9	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000bc	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

  000bf	eb 2b		 jmp	 SHORT $LN203@assign
$LN180@assign:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000c1	48 8b cb	 mov	 rcx, rbx
$LN181@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000c4	48 85 ff	 test	 rdi, rdi
  000c7	74 0c		 je	 SHORT $LN187@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1157 : 			_Traits::copy(this->_Myptr(),

  000c9	4a 8d 14 36	 lea	 rdx, QWORD PTR [rsi+r14]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000cd	4c 8b c7	 mov	 r8, rdi
  000d0	e8 00 00 00 00	 call	 memcpy
$LN187@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000d5	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  000da	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000de	72 05		 jb	 SHORT $LN198@assign
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  000e0	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000e3	eb 03		 jmp	 SHORT $LN199@assign
$LN198@assign:
  000e5	48 8b c3	 mov	 rax, rbx
$LN199@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000e8	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN203@assign:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1162 : 		}

  000ec	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000f1	48 8b c3	 mov	 rax, rbx
  000f4	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000f9	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  000fe	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00102	41 5e		 pop	 r14
  00104	c3		 ret	 0
$LN208@assign:

; 2283 : 		_Xout_of_range("invalid string position");

  00105	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0010c	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00111	cc		 int	 3
$LN210@assign:
  00112	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00119	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0011e	cc		 int	 3
$LN211@assign:

; 2266 : 		_Xlength_error("string too long");

  0011f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00126	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012b	cc		 int	 3
$LN205@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_second, COMDAT

; 315  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 316  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_first, COMDAT

; 295  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 296  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Compat, COMDAT

; 262  : 		}

  00000	c2 00 00	 ret	 0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 48   : 		this->_Adopt(_Pvector);
; 49   : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@@std@@QEAA@PEAUCard@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<Card> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@_K@Z PROC ; std::_Wrap_alloc<std::allocator<Card> >::deallocate, COMDAT

; 982  : 		{	// deallocate object at _Ptr, ignore size

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 38		 ja	 SHORT $LN16@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	4b 8d 04 00	 lea	 rax, QWORD PTR [r8+r8]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001d	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0001f	f6 c2 1f	 test	 dl, 31
  00022	75 2d		 jne	 SHORT $LN18@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00024	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00028	48 3b c2	 cmp	 rax, rdx
  0002b	73 2a		 jae	 SHORT $LN19@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002d	48 2b d0	 sub	 rdx, rax
  00030	48 83 fa 08	 cmp	 rdx, 8
  00034	72 27		 jb	 SHORT $LN20@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00036	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003a	77 27		 ja	 SHORT $LN21@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003c	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0003f	48 8b ca	 mov	 rcx, rdx

; 983  : 		_Mybase::deallocate(_Ptr, _Count);
; 984  : 		}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN18@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN19@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN20@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN21@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<Card> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Mylast, COMDAT

; 658  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 659  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myfirst, COMDAT

; 648  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 649  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Right$dead$ = 16
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Swap_all, COMDAT

; 618  : 		_Get_data()._Swap_all(_Right._Get_data());
; 619  : 		}

  00000	c2 00 00	 ret	 0
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Orphan_all, COMDAT

; 613  : 		_Get_data()._Orphan_all();
; 614  : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Xlen@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xlen@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXXZ PROC ; std::vector<Card,std::allocator<Card> >::_Xlen, COMDAT

; 1764 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1765 : 		_Xlength_error("vector<T> too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBAXXZ ENDP ; std::vector<Card,std::allocator<Card> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 64
_Count$ = 72
?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z PROC ; std::vector<Card,std::allocator<Card> >::_Reallocate, COMDAT

; 1601 : 		{	// move to array of exactly _Count elements

$LN212:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00015	48 8b f2	 mov	 rsi, rdx
  00018	48 8b f9	 mov	 rdi, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 51   : 	if (_Count == 0)

  0001b	49 be ff ff ff
	ff ff ff ff 7f	 mov	 r14, 9223372036854775807 ; 7fffffffffffffffH
  00025	48 85 d2	 test	 rdx, rdx
  00028	75 04		 jne	 SHORT $LN20@Reallocate

; 52   : 		return (_Ptr);

  0002a	33 db		 xor	 ebx, ebx
  0002c	eb 41		 jmp	 SHORT $LN26@Reallocate
$LN20@Reallocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  0002e	49 3b f6	 cmp	 rsi, r14
  00031	0f 87 cb 00 00
	00		 ja	 $LN204@Reallocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  00037	48 8d 0c 12	 lea	 rcx, QWORD PTR [rdx+rdx]

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  0003b	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  00042	72 23		 jb	 SHORT $LN22@Reallocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00044	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00048	48 3b c1	 cmp	 rax, rcx
  0004b	0f 86 b7 00 00
	00		 jbe	 $LN206@Reallocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00059	48 8d 58 27	 lea	 rbx, QWORD PTR [rax+39]
  0005d	48 83 e3 e0	 and	 rbx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00061	48 89 43 f8	 mov	 QWORD PTR [rbx-8], rax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  00065	eb 08		 jmp	 SHORT $LN26@Reallocate
$LN22@Reallocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0006c	48 8b d8	 mov	 rbx, rax
$LN26@Reallocate:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  0006f	48 8b 57 08	 mov	 rdx, QWORD PTR [rdi+8]
  00073	4c 8b c3	 mov	 r8, rbx
  00076	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00079	48 89 6c 24 40	 mov	 QWORD PTR [rsp+64], rbp
  0007e	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00083	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00086	48 8b 6f 08	 mov	 rbp, QWORD PTR [rdi+8]
  0008a	48 2b e9	 sub	 rbp, rcx
  0008d	48 d1 fd	 sar	 rbp, 1

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);
; 1603 : 
; 1604 : 		_TRY_BEGIN
; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);
; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END
; 1610 : 
; 1611 : 		size_type _Size = size();
; 1612 : 		if (this->_Myfirst() != pointer())

  00090	48 85 c9	 test	 rcx, rcx
  00093	74 3f		 je	 SHORT $LN172@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());
; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

  00095	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  00099	48 2b c1	 sub	 rax, rcx
  0009c	48 d1 f8	 sar	 rax, 1
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0009f	49 3b c6	 cmp	 rax, r14
  000a2	77 6a		 ja	 SHORT $LN207@Reallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  000a4	48 03 c0	 add	 rax, rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000a7	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000ad	72 20		 jb	 SHORT $LN167@Reallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000af	f6 c1 1f	 test	 cl, 31
  000b2	75 60		 jne	 SHORT $LN208@Reallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000b4	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000b8	48 3b c1	 cmp	 rax, rcx
  000bb	73 5d		 jae	 SHORT $LN209@Reallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000bd	48 2b c8	 sub	 rcx, rax
  000c0	48 83 f9 08	 cmp	 rcx, 8
  000c4	72 5a		 jb	 SHORT $LN210@Reallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000c6	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000ca	77 5a		 ja	 SHORT $LN211@Reallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000cc	48 8b c8	 mov	 rcx, rax
$LN167@Reallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000cf	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN172@Reallocate:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1620 : 		this->_Myend() = _Ptr + _Count;

  000d4	48 8d 04 73	 lea	 rax, QWORD PTR [rbx+rsi*2]

; 1623 : 		}

  000d8	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  000dd	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
  000e1	48 8d 04 6b	 lea	 rax, QWORD PTR [rbx+rbp*2]
  000e5	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000ea	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax
  000ee	48 89 1f	 mov	 QWORD PTR [rdi], rbx
  000f1	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  000f6	48 8b 7c 24 58	 mov	 rdi, QWORD PTR [rsp+88]
  000fb	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ff	41 5e		 pop	 r14
  00101	c3		 ret	 0
$LN204@Reallocate:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 56   : 		_Xbad_alloc();	// report no memory

  00102	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00107	cc		 int	 3
$LN206@Reallocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00108	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0010d	cc		 int	 3
$LN207@Reallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0010e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00113	cc		 int	 3
$LN208@Reallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00114	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00119	cc		 int	 3
$LN209@Reallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0011a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0011f	cc		 int	 3
$LN210@Reallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00120	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00125	cc		 int	 3
$LN211@Reallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00126	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0012b	cc		 int	 3
$LN203@Reallocate:
?_Reallocate@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAX_K@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Reallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Grow_to@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_K_K@Z PROC ; std::vector<Card,std::allocator<Card> >::_Grow_to, COMDAT

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  00000	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]

; 1586 : 		size_type _Capacity = capacity();
; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00004	49 b8 ff ff ff
	ff ff ff ff 7f	 mov	 r8, 9223372036854775807	; 7fffffffffffffffH

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  0000e	4c 2b 09	 sub	 r9, QWORD PTR [rcx]
  00011	49 d1 f9	 sar	 r9, 1

; 1586 : 		size_type _Capacity = capacity();
; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00014	49 8b c1	 mov	 rax, r9
  00017	48 d1 e8	 shr	 rax, 1
  0001a	4c 2b c0	 sub	 r8, rax
  0001d	4a 8d 0c 08	 lea	 rcx, QWORD PTR [rax+r9]
  00021	33 c0		 xor	 eax, eax
  00023	4d 3b c1	 cmp	 r8, r9
  00026	48 0f 43 c1	 cmovae	 rax, rcx

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

  0002a	48 3b c2	 cmp	 rax, rdx
  0002d	48 0f 42 c2	 cmovb	 rax, rdx

; 1591 : 			_Capacity = _Count;
; 1592 : 		return (_Capacity);
; 1593 : 		}

  00031	c3		 ret	 0
?_Grow_to@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEBA_K_K@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Destroy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXPEAUCard@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
_First$dead$ = 16
_Last$dead$ = 24
?_Destroy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXPEAUCard@@0@Z PROC ; std::vector<Card,std::allocator<Card> >::_Destroy, COMDAT

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1582 : 		}

  00000	c2 00 00	 ret	 0
?_Destroy@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAXPEAUCard@@0@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?max_size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ PROC ; std::vector<Card,std::allocator<Card> >::max_size, COMDAT

; 1185 : 		return (this->_Getal().max_size());

  00000	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 1186 : 		}

  0000a	c3		 ret	 0
?max_size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<Card,std::allocator<Card> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ PROC ; std::vector<Card,std::allocator<Card> >::size, COMDAT

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  00007	48 d1 f8	 sar	 rax, 1

; 1181 : 		}

  0000a	c3		 ret	 0
?size@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<Card,std::allocator<Card> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Unused_capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Unused_capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ PROC ; std::vector<Card,std::allocator<Card> >::_Unused_capacity, COMDAT

; 1048 : 		return (this->_Myend() - this->_Mylast());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 41 08	 sub	 rax, QWORD PTR [rcx+8]
  00008	48 d1 f8	 sar	 rax, 1

; 1049 : 		}

  0000b	c3		 ret	 0
?_Unused_capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<Card,std::allocator<Card> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 295  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 296  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myend, COMDAT

; 663  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 664  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAPEADXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Mylast, COMDAT

; 658  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 659  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myfirst, COMDAT

; 648  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 649  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 633  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 634  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Right$dead$ = 16
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Swap_all, COMDAT

; 618  : 		_Get_data()._Swap_all(_Right._Get_data());
; 619  : 		}

  00000	c2 00 00	 ret	 0
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT

; 613  : 		_Get_data()._Orphan_all();
; 614  : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IEBAXXZ PROC	; std::vector<char,std::allocator<char> >::_Xlen, COMDAT

; 1764 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1765 : 		_Xlength_error("vector<T> too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IEBAXXZ ENDP	; std::vector<char,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z PROC ; std::vector<char,std::allocator<char> >::_Reallocate, COMDAT

; 1601 : 		{	// move to array of exactly _Count elements

$LN211:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fa	 mov	 rdi, rdx
  00012	48 8b f1	 mov	 rsi, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 51   : 	if (_Count == 0)

  00015	48 85 d2	 test	 rdx, rdx
  00018	75 04		 jne	 SHORT $LN20@Reallocate

; 52   : 		return (_Ptr);

  0001a	33 db		 xor	 ebx, ebx
  0001c	eb 34		 jmp	 SHORT $LN26@Reallocate
$LN20@Reallocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)
; 56   : 		_Xbad_alloc();	// report no memory
; 57   : 	const size_t _User_size = _Count * _Sz;
; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  0001e	48 81 ff 00 10
	00 00		 cmp	 rdi, 4096		; 00001000H
  00025	72 20		 jb	 SHORT $LN22@Reallocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00027	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  0002b	48 3b cf	 cmp	 rcx, rdi
  0002e	0f 86 a0 00 00
	00		 jbe	 $LN205@Reallocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00034	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00039	48 8d 58 27	 lea	 rbx, QWORD PTR [rax+39]
  0003d	48 83 e3 e0	 and	 rbx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00041	48 89 43 f8	 mov	 QWORD PTR [rbx-8], rax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  00045	eb 0b		 jmp	 SHORT $LN26@Reallocate
$LN22@Reallocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  00047	48 8b cf	 mov	 rcx, rdi
  0004a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0004f	48 8b d8	 mov	 rbx, rax
$LN26@Reallocate:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 2302 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

  00052	48 8b 16	 mov	 rdx, QWORD PTR [rsi]

; 2303 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);
; 2304 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);
; 2305 : 	const size_t _Count = _Last_ch - _First_ch;
; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00055	48 8b cb	 mov	 rcx, rbx
  00058	4c 8b 46 08	 mov	 r8, QWORD PTR [rsi+8]
  0005c	4c 2b c2	 sub	 r8, rdx
  0005f	48 89 6c 24 30	 mov	 QWORD PTR [rsp+48], rbp
  00064	e8 00 00 00 00	 call	 memmove
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

  00069	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0006c	48 8b 6e 08	 mov	 rbp, QWORD PTR [rsi+8]
  00070	48 2b e9	 sub	 rbp, rcx

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);
; 1603 : 
; 1604 : 		_TRY_BEGIN
; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);
; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END
; 1610 : 
; 1611 : 		size_type _Size = size();
; 1612 : 		if (this->_Myfirst() != pointer())

  00073	48 85 c9	 test	 rcx, rcx
  00076	74 34		 je	 SHORT $LN173@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());
; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

  00078	48 8b 46 10	 mov	 rax, QWORD PTR [rsi+16]
  0007c	48 2b c1	 sub	 rax, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0007f	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00085	72 20		 jb	 SHORT $LN168@Reallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00087	f6 c1 1f	 test	 cl, 31
  0008a	75 4e		 jne	 SHORT $LN207@Reallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0008c	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00090	48 3b c1	 cmp	 rax, rcx
  00093	73 4b		 jae	 SHORT $LN208@Reallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00095	48 2b c8	 sub	 rcx, rax
  00098	48 83 f9 08	 cmp	 rcx, 8
  0009c	72 48		 jb	 SHORT $LN209@Reallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0009e	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000a2	77 48		 ja	 SHORT $LN210@Reallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000a4	48 8b c8	 mov	 rcx, rax
$LN168@Reallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000a7	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN173@Reallocate:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1620 : 		this->_Myend() = _Ptr + _Count;

  000ac	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]
  000b0	48 89 46 10	 mov	 QWORD PTR [rsi+16], rax

; 1621 : 		this->_Mylast() = _Ptr + _Size;

  000b4	48 8d 04 2b	 lea	 rax, QWORD PTR [rbx+rbp]
  000b8	48 8b 6c 24 30	 mov	 rbp, QWORD PTR [rsp+48]
  000bd	48 89 46 08	 mov	 QWORD PTR [rsi+8], rax

; 1622 : 		this->_Myfirst() = _Ptr;

  000c1	48 89 1e	 mov	 QWORD PTR [rsi], rbx

; 1623 : 		}

  000c4	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000c9	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000ce	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
$LN205@Reallocate:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 67   : 			_Xbad_alloc();	// report no memory

  000d4	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  000d9	cc		 int	 3
$LN207@Reallocate:

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000da	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000df	cc		 int	 3
$LN208@Reallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000e0	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000e5	cc		 int	 3
$LN209@Reallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000e6	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000eb	cc		 int	 3
$LN210@Reallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000ec	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000f1	cc		 int	 3
$LN204@Reallocate:
?_Reallocate@?$vector@DV?$allocator@D@std@@@std@@IEAAX_K@Z ENDP ; std::vector<char,std::allocator<char> >::_Reallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Grow_to@?$vector@DV?$allocator@D@std@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@DV?$allocator@D@std@@@std@@IEBA_K_K@Z PROC ; std::vector<char,std::allocator<char> >::_Grow_to, COMDAT

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  00000	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]
  00004	4c 2b 09	 sub	 r9, QWORD PTR [rcx]

; 1586 : 		size_type _Capacity = capacity();
; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00007	49 8b c1	 mov	 rax, r9
  0000a	48 d1 e8	 shr	 rax, 1
  0000d	4c 8b c0	 mov	 r8, rax
  00010	49 f7 d0	 not	 r8
  00013	4a 8d 0c 08	 lea	 rcx, QWORD PTR [rax+r9]
  00017	33 c0		 xor	 eax, eax
  00019	4d 3b c1	 cmp	 r8, r9
  0001c	48 0f 43 c1	 cmovae	 rax, rcx

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

  00020	48 3b c2	 cmp	 rax, rdx
  00023	48 0f 42 c2	 cmovb	 rax, rdx

; 1591 : 			_Capacity = _Count;
; 1592 : 		return (_Capacity);
; 1593 : 		}

  00027	c3		 ret	 0
?_Grow_to@?$vector@DV?$allocator@D@std@@@std@@IEBA_K_K@Z ENDP ; std::vector<char,std::allocator<char> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IEAAXPEAD0@Z
_TEXT	SEGMENT
this$dead$ = 8
_First$dead$ = 16
_Last$dead$ = 24
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IEAAXPEAD0@Z PROC ; std::vector<char,std::allocator<char> >::_Destroy, COMDAT

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());
; 1582 : 		}

  00000	c2 00 00	 ret	 0
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IEAAXPEAD0@Z ENDP ; std::vector<char,std::allocator<char> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC ; std::vector<char,std::allocator<char> >::max_size, COMDAT

; 1185 : 		return (this->_Getal().max_size());

  00000	48 83 c8 ff	 or	 rax, -1

; 1186 : 		}

  00004	c3		 ret	 0
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP ; std::vector<char,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Unused_capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Unused_capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC ; std::vector<char,std::allocator<char> >::_Unused_capacity, COMDAT

; 1048 : 		return (this->_Myend() - this->_Mylast());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 41 08	 sub	 rax, QWORD PTR [rcx+8]

; 1049 : 		}

  00008	c3		 ret	 0
?_Unused_capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP ; std::vector<char,std::allocator<char> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 300  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 301  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 295  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 296  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 521  : 		return (this->_BUF_SIZE <= _Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 521  : 		return (this->_BUF_SIZE <= _Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT

; 982  : 		{	// deallocate object at _Ptr, ignore size

$LN21:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00004	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0000b	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0000d	f6 c2 1f	 test	 dl, 31
  00010	75 27		 jne	 SHORT $LN16@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00012	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00016	48 3b c2	 cmp	 rax, rdx
  00019	73 24		 jae	 SHORT $LN18@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0001b	48 2b d0	 sub	 rdx, rax
  0001e	48 83 fa 08	 cmp	 rdx, 8
  00022	72 21		 jb	 SHORT $LN19@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00024	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  00028	77 21		 ja	 SHORT $LN20@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0002a	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0002d	48 8b ca	 mov	 rcx, rdx

; 983  : 		_Mybase::deallocate(_Ptr, _Count);
; 984  : 		}

  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00034	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00039	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0003e	cc		 int	 3
$LN18@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN19@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN20@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT

; 734  : 		return (_Get_data()._Myres);

  00000	48 8d 41 18	 lea	 rax, QWORD PTR [rcx+24]

; 735  : 		}

  00004	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 724  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 725  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT

; 714  : 		return (_Get_data()._Bx);

  00000	48 8b c1	 mov	 rax, rcx

; 715  : 		}

  00003	c3		 ret	 0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 707  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 708  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 702  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 703  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT

; 2270 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2271 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 05		 jb	 SHORT $LN17@Check_offs

; 2272 : 			_Xran();
; 2273 : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN17@Check_offs:

; 2283 : 		_Xout_of_range("invalid string position");

  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0001b	cc		 int	 3
$LN16@Check_offs:
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 2265 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		_Xlength_error("string too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$dead$ = 16
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00000	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00004	48 83 fa 10	 cmp	 rdx, 16
  00008	72 05		 jb	 SHORT $LN16@Inside
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0000a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0000d	eb 03		 jmp	 SHORT $LN17@Inside
$LN16@Inside:
  0000f	48 8b c1	 mov	 rax, rcx
$LN17@Inside:

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00012	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG4294967195
  00019	4c 3b c0	 cmp	 r8, rax
  0001c	72 1e		 jb	 SHORT $LN4@Inside

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0001e	48 83 fa 10	 cmp	 rdx, 16
  00022	72 05		 jb	 SHORT $LN30@Inside
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00024	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00027	eb 03		 jmp	 SHORT $LN31@Inside
$LN30@Inside:
  00029	48 8b d1	 mov	 rdx, rcx
$LN31@Inside:

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002c	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00030	48 8d 0c 02	 lea	 rcx, QWORD PTR [rdx+rax]
  00034	49 3b c8	 cmp	 rcx, r8
  00037	76 03		 jbe	 SHORT $LN4@Inside

; 2242 : 		else
; 2243 : 			return (true);

  00039	b0 01		 mov	 al, 1

; 2244 : 		}

  0003b	c3		 ret	 0
$LN4@Inside:

; 2241 : 			return (false);	// don't ask

  0003c	32 c0		 xor	 al, al

; 2244 : 		}

  0003e	c3		 ret	 0
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Trim$dead$ = 64
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT

; 2224 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN91:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b da	 mov	 rbx, rdx

; 2225 : 		if (max_size() < _Newsize)

  00009	48 83 fa fe	 cmp	 rdx, -2
  0000d	77 3d		 ja	 SHORT $LN89@Grow

; 2226 : 			_Xlen();	// result too long
; 2227 : 		if (this->_Myres() < _Newsize)

  0000f	48 39 51 18	 cmp	 QWORD PTR [rcx+24], rdx
  00013	73 15		 jae	 SHORT $LN5@Grow

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00015	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00019	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  0001e	48 85 db	 test	 rbx, rbx
  00021	0f 95 c0	 setne	 al

; 2235 : 		}

  00024	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
$LN5@Grow:

; 2229 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)
; 2230 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2231 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2232 : 		else if (_Newsize == 0)

  0002a	48 85 db	 test	 rbx, rbx
  0002d	75 14		 jne	 SHORT $LN88@Grow

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0002f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00034	48 89 59 10	 mov	 QWORD PTR [rcx+16], rbx

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00038	72 03		 jb	 SHORT $LN80@Grow
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN80@Grow:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0003d	c6 01 00	 mov	 BYTE PTR [rcx], 0
  00040	48 85 db	 test	 rbx, rbx
$LN88@Grow:
  00043	0f 95 c0	 setne	 al
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2235 : 		}

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5b		 pop	 rbx
  0004b	c3		 ret	 0
$LN89@Grow:

; 2266 : 		_Xlength_error("string too long");

  0004c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00053	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00058	cc		 int	 3
$LN87@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16

; 2218 : 		auto& _Dx = this->_Get_data();
; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00005	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00009	72 08		 jb	 SHORT $LN11@Eos
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  0000b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0000e	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2220 : 		}

  00012	c3		 ret	 0
$LN11@Eos:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00013	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2220 : 		}

  00017	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Size$ = 24
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b c2	 sub	 rax, rdx

; 2113 : 		if (_Size <= _Max_effective_size)

  00007	4c 3b c0	 cmp	 r8, rax
  0000a	49 0f 46 c0	 cmovbe	 rax, r8

; 2114 : 			return (_Size);
; 2115 : 		else
; 2116 : 			return (_Max_effective_size);
; 2117 : 		}

  0000e	c3		 ret	 0
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
this$ = 48
_Off$dead$ = 56
_Count$ = 64
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1347 : 		{	// erase elements [_Off, _Off + _Count)

$LN94:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1348 : 		_Check_offset(_Off);
; 1349 : 		if (this->_Mysize() - _Off <= _Count)

  0000a	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
  0000e	48 8b d9	 mov	 rbx, rcx
  00011	49 3b f8	 cmp	 rdi, r8
  00014	77 34		 ja	 SHORT $LN2@erase

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00016	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0001e	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00023	72 14		 jb	 SHORT $LN41@erase
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00025	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00028	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1358 : 		return (*this);

  0002b	48 8b c1	 mov	 rax, rcx

; 1359 : 		}

  0002e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
$LN41@erase:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00039	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0003c	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1359 : 		}

  0003f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
$LN2@erase:

; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1351 : 		else if (0 < _Count)

  0004a	4d 85 c0	 test	 r8, r8
  0004d	74 42		 je	 SHORT $LN92@erase

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0004f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00054	72 03		 jb	 SHORT $LN59@erase
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00056	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN59@erase:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;

  00059	49 2b f8	 sub	 rdi, r8
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  0005c	74 0c		 je	 SHORT $LN74@erase
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  0005e	4a 8d 14 01	 lea	 rdx, QWORD PTR [rcx+r8]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  00062	4c 8b c7	 mov	 r8, rdi
  00065	e8 00 00 00 00	 call	 memmove
$LN74@erase:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0006a	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  0006f	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00073	72 15		 jb	 SHORT $LN85@erase
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00075	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00078	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1358 : 		return (*this);

  0007c	48 8b c3	 mov	 rax, rbx

; 1359 : 		}

  0007f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00084	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
$LN85@erase:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0008a	48 8b c3	 mov	 rax, rbx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0008d	c6 04 3b 00	 mov	 BYTE PTR [rbx+rdi], 0
$LN92@erase:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1358 : 		return (*this);

  00091	48 8b c3	 mov	 rax, rbx

; 1359 : 		}

  00094	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00099	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009d	5f		 pop	 rdi
  0009e	c3		 ret	 0
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1340 : 		{	// erase elements [_Off, ...)

$LN39:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2271 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 26		 jb	 SHORT $LN37@erase

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  0000a	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0000e	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00013	72 0f		 jb	 SHORT $LN29@erase
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00015	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00018	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1343 : 		return (*this);

  0001c	48 8b c1	 mov	 rax, rcx

; 1344 : 		}

  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
$LN29@erase:

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00024	48 8b c1	 mov	 rax, rcx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00027	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 1344 : 		}

  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	c3		 ret	 0
$LN37@erase:

; 2283 : 		_Xout_of_range("invalid string position");

  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00037	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0003c	cc		 int	 3
$LN36@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<Card> >::max_size, COMDAT

; 1004 : 		return (_Mytraits::max_size(*this));

  00000	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 1005 : 		}

  0000a	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Card> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAPEAUCard@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAPEAUCard@@_K@Z PROC ; std::_Wrap_alloc<std::allocator<Card> >::allocate, COMDAT

; 971  : 		{	// allocate array of _Count elements

$LN20:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 09		 jne	 SHORT $LN6@allocate

; 52   : 		return (_Ptr);

  00009	33 c9		 xor	 ecx, ecx

; 972  : 		return (_Mybase::allocate(_Count));

  0000b	8b c1		 mov	 eax, ecx

; 973  : 		}

  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00011	c3		 ret	 0
$LN6@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00012	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0001c	48 3b d0	 cmp	 rdx, rax
  0001f	77 3f		 ja	 SHORT $LN17@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  00021	48 8d 0c 12	 lea	 rcx, QWORD PTR [rdx+rdx]

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00025	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0002c	72 25		 jb	 SHORT $LN8@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002e	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00032	48 3b c1	 cmp	 rax, rcx
  00035	76 2f		 jbe	 SHORT $LN19@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0003f	48 8d 48 27	 lea	 rcx, QWORD PTR [rax+39]
  00043	48 83 e1 e0	 and	 rcx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00047	48 89 41 f8	 mov	 QWORD PTR [rcx-8], rax

; 972  : 		return (_Mybase::allocate(_Count));

  0004b	48 8b c1	 mov	 rax, rcx

; 973  : 		}

  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
$LN8@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00053	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00058	48 8b c8	 mov	 rcx, rax

; 973  : 		}

  0005b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005f	c3		 ret	 0
$LN17@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00060	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00065	cc		 int	 3
$LN19@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00066	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006b	cc		 int	 3
$LN16@allocate:
?allocate@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAPEAUCard@@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<Card> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myend, COMDAT

; 668  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 669  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBQEAUCard@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Get_data, COMDAT

; 638  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 639  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Getal, COMDAT

; 628  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 629  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ PROC ; std::vector<Card,std::allocator<Card> >::capacity, COMDAT

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  00007	48 d1 f8	 sar	 rax, 1

; 1044 : 		}

  0000a	c3		 ret	 0
?capacity@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<Card,std::allocator<Card> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?deallocate@?$allocator@UCard@@@std@@QEAAXPEAUCard@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UCard@@@std@@QEAAXPEAUCard@@_K@Z PROC ; std::allocator<Card>::deallocate, COMDAT

; 715  : 		{	// deallocate object at _Ptr

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 38		 ja	 SHORT $LN13@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	4b 8d 04 00	 lea	 rax, QWORD PTR [r8+r8]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001d	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0001f	f6 c2 1f	 test	 dl, 31
  00022	75 2d		 jne	 SHORT $LN15@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00024	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00028	48 3b c2	 cmp	 rax, rdx
  0002b	73 2a		 jae	 SHORT $LN16@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002d	48 2b d0	 sub	 rdx, rax
  00030	48 83 fa 08	 cmp	 rdx, 8
  00034	72 27		 jb	 SHORT $LN17@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00036	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003a	77 27		 ja	 SHORT $LN18@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003c	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0003f	48 8b ca	 mov	 rcx, rdx

; 716  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 717  : 		}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN15@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN16@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN17@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN18@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@UCard@@@std@@QEAAXPEAUCard@@_K@Z ENDP ; std::allocator<Card>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 315  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 316  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myend, COMDAT

; 668  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 669  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBQEADXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 638  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 639  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 628  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 629  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC ; std::vector<char,std::allocator<char> >::capacity, COMDAT

; 1043 : 		return (this->_Myend() - this->_Myfirst());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]

; 1044 : 		}

  00007	c3		 ret	 0
?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP ; std::vector<char,std::allocator<char> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 320  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 321  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 315  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 316  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT

; 1004 : 		return (_Mytraits::max_size(*this));

  00000	48 83 c8 ff	 or	 rax, -1

; 1005 : 		}

  00004	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT

; 971  : 		{	// allocate array of _Count elements

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 09		 jne	 SHORT $LN6@allocate

; 52   : 		return (_Ptr);

  00009	33 c9		 xor	 ecx, ecx

; 972  : 		return (_Mybase::allocate(_Count));

  0000b	8b c1		 mov	 eax, ecx

; 973  : 		}

  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00011	c3		 ret	 0
$LN6@allocate:

; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00012	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00019	72 22		 jb	 SHORT $LN8@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0001b	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  0001f	48 3b ca	 cmp	 rcx, rdx
  00022	76 29		 jbe	 SHORT $LN17@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00024	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00029	48 8d 48 27	 lea	 rcx, QWORD PTR [rax+39]
  0002d	48 83 e1 e0	 and	 rcx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00031	48 89 41 f8	 mov	 QWORD PTR [rcx-8], rax

; 972  : 		return (_Mybase::allocate(_Count));

  00035	48 8b c1	 mov	 rax, rcx

; 973  : 		}

  00038	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003c	c3		 ret	 0
$LN8@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  0003d	48 8b ca	 mov	 rcx, rdx
  00040	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00045	48 8b c8	 mov	 rcx, rax

; 973  : 		}

  00048	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004c	c3		 ret	 0
$LN17@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0004d	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00052	cc		 int	 3
$LN16@allocate:
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT

; 2282 : 		{	// report an out_of_range error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2283 : 		_Xout_of_range("invalid string position");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00010	cc		 int	 3
$LN3@Xran:
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN464:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	53		 push	 rbx
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	41 56		 push	 r14
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00018	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00021	4d 8b f0	 mov	 r14, r8
  00024	48 8b d9	 mov	 rbx, rcx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00027	48 8b fa	 mov	 rdi, rdx
  0002a	48 83 cf 0f	 or	 rdi, 15

; 2184 : 		if (max_size() < _Newres)

  0002e	48 83 ff fe	 cmp	 rdi, -2
  00032	76 05		 jbe	 SHORT $LN2@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

  00034	48 8b fa	 mov	 rdi, rdx

; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)

  00037	eb 35		 jmp	 SHORT $LN108@Copy
$LN2@Copy:
  00039	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  0003d	49 8b c8	 mov	 rcx, r8
  00040	48 d1 e9	 shr	 rcx, 1
  00043	48 b8 ab aa aa
	aa aa aa aa aa	 mov	 rax, -6148914691236517205 ; aaaaaaaaaaaaaaabH
  0004d	48 f7 e7	 mul	 rdi
  00050	48 d1 ea	 shr	 rdx, 1
  00053	48 3b ca	 cmp	 rcx, rdx
  00056	76 16		 jbe	 SHORT $LN108@Copy

; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00058	48 c7 c7 fe ff
	ff ff		 mov	 rdi, -2
  0005f	48 8b c7	 mov	 rax, rdi
  00062	48 2b c1	 sub	 rax, rcx
  00065	4c 3b c0	 cmp	 r8, rax
  00068	77 04		 ja	 SHORT $LN108@Copy

; 2189 : 			_Newres = this->_Myres()

  0006a	4a 8d 3c 01	 lea	 rdi, QWORD PTR [rcx+r8]
$LN108@Copy:

; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else
; 2192 : 			_Newres = max_size();	// settle for max_size()
; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN
; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

  0006e	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 51   : 	if (_Count == 0)

  00072	48 85 c9	 test	 rcx, rcx
  00075	75 04		 jne	 SHORT $LN136@Copy

; 52   : 		return (_Ptr);

  00077	33 f6		 xor	 esi, esi
  00079	eb 35		 jmp	 SHORT $LN135@Copy
$LN136@Copy:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)
; 56   : 		_Xbad_alloc();	// report no memory
; 57   : 	const size_t _User_size = _Count * _Sz;
; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  0007b	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  00082	72 24		 jb	 SHORT $LN138@Copy

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00084	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00088	48 3b c1	 cmp	 rax, rcx
  0008b	77 05		 ja	 SHORT $LN140@Copy

; 67   : 			_Xbad_alloc();	// report no memory

  0008d	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN140@Copy:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00092	48 8b c8	 mov	 rcx, rax
  00095	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0009a	48 8d 70 27	 lea	 rsi, QWORD PTR [rax+39]
  0009e	48 83 e6 e0	 and	 rsi, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  000a2	48 89 46 f8	 mov	 QWORD PTR [rsi-8], rax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  000a6	eb 08		 jmp	 SHORT $LN135@Copy
$LN138@Copy:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  000a8	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000ad	48 8b f0	 mov	 rsi, rax
$LN135@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
  000b0	eb 14		 jmp	 SHORT $LN18@Copy
$LN19@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
  000b2	48 8b 5c 24 60	 mov	 rbx, QWORD PTR this$[rsp]
  000b7	4c 8b 74 24 70	 mov	 r14, QWORD PTR _Oldlen$[rsp]
  000bc	48 8b 7c 24 68	 mov	 rdi, QWORD PTR _Newres$[rsp]
  000c1	48 8b 74 24 78	 mov	 rsi, QWORD PTR _Ptr$[rsp]
$LN18@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2207 : 		if (0 < _Oldlen)

  000c6	4d 85 f6	 test	 r14, r14
  000c9	74 1f		 je	 SHORT $LN285@Copy

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000cb	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d0	72 05		 jb	 SHORT $LN276@Copy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  000d2	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000d5	eb 03		 jmp	 SHORT $LN277@Copy
$LN276@Copy:
  000d7	48 8b d3	 mov	 rdx, rbx
$LN277@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000da	4d 85 f6	 test	 r14, r14
  000dd	74 0b		 je	 SHORT $LN285@Copy
  000df	4d 8b c6	 mov	 r8, r14
  000e2	48 8b ce	 mov	 rcx, rsi
  000e5	e8 00 00 00 00	 call	 memcpy
$LN285@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000ea	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  000ee	48 83 f8 10	 cmp	 rax, 16
  000f2	72 4b		 jb	 SHORT $LN369@Copy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));
; 2255 : 			if (0 < _Newsize)
; 2256 : 				_Traits::copy(this->_Bx()._Buf,
; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000f4	48 ff c0	 inc	 rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 716  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  000f7	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000fa	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00100	72 38		 jb	 SHORT $LN364@Copy

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00102	f6 c1 1f	 test	 cl, 31
  00105	74 06		 je	 SHORT $LN365@Copy
  00107	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0010c	cc		 int	 3
$LN365@Copy:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0010d	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00111	48 3b c1	 cmp	 rax, rcx
  00114	72 06		 jb	 SHORT $LN366@Copy
  00116	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0011b	cc		 int	 3
$LN366@Copy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0011c	48 2b c8	 sub	 rcx, rax
  0011f	48 83 f9 08	 cmp	 rcx, 8
  00123	73 06		 jae	 SHORT $LN367@Copy
  00125	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0012a	cc		 int	 3
$LN367@Copy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0012b	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0012f	76 06		 jbe	 SHORT $LN368@Copy
  00131	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00136	cc		 int	 3
$LN368@Copy:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00137	48 8b c8	 mov	 rcx, rax
$LN364@Copy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0013a	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN369@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0013f	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00147	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0014f	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00154	72 05		 jb	 SHORT $LN392@Copy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00156	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 514  : 		return (this->_BUF_SIZE <= _Myres

  00159	eb 03		 jmp	 SHORT $LN393@Copy
$LN392@Copy:
  0015b	48 8b c3	 mov	 rax, rbx
$LN393@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  0015e	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00161	48 89 33	 mov	 QWORD PTR [rbx], rsi
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2212 : 		this->_Myres() = _Newres;

  00164	48 89 7b 18	 mov	 QWORD PTR [rbx+24], rdi

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  00168	4c 89 73 10	 mov	 QWORD PTR [rbx+16], r14

; 514  : 		return (this->_BUF_SIZE <= _Myres

  0016c	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00171	72 03		 jb	 SHORT $LN456@Copy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  00173	48 8b de	 mov	 rbx, rsi
$LN456@Copy:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  00176	42 c6 04 33 00	 mov	 BYTE PTR [rbx+r14], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2214 : 		}

  0017b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0017f	41 5e		 pop	 r14
  00181	5f		 pop	 rdi
  00182	5e		 pop	 rsi
  00183	5b		 pop	 rbx
  00184	c3		 ret	 0
$LN462@Copy:
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$107

; 2197 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  0001d	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

  00021	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$107
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
  0002e	cc		 int	 3
?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$107
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$106

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL

  0002f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00034	53		 push	 rbx
  00035	55		 push	 rbp
  00036	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 734  : 		return (_Get_data()._Myres);

  0003d	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00041	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00045	48 83 f8 10	 cmp	 rax, 16
  00049	72 57		 jb	 SHORT $LN236@catch$106

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));
; 2255 : 			if (0 < _Newsize)
; 2256 : 				_Traits::copy(this->_Bx()._Buf,
; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004b	48 ff c0	 inc	 rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 716  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0004e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00051	48 83 f8 ff	 cmp	 rax, -1
  00055	76 06		 jbe	 SHORT $LN230@catch$106
  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN230@catch$106:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);
; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}
; 88   : 
; 89   : 		// FUNCTION _Deallocate
; 90   : inline
; 91   : 	void _Deallocate(void * _Ptr, size_t _Count, size_t _Sz)
; 92   : 	{	// deallocate storage for _Count elements of size _Sz
; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);
; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0005d	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00063	72 38		 jb	 SHORT $LN231@catch$106

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00065	f6 c1 1f	 test	 cl, 31
  00068	74 06		 je	 SHORT $LN232@catch$106
  0006a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006f	cc		 int	 3
$LN232@catch$106:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00070	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00074	48 3b c1	 cmp	 rax, rcx
  00077	72 06		 jb	 SHORT $LN233@catch$106
  00079	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007e	cc		 int	 3
$LN233@catch$106:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0007f	48 2b c8	 sub	 rcx, rax
  00082	48 83 f9 08	 cmp	 rcx, 8
  00086	73 06		 jae	 SHORT $LN234@catch$106
  00088	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0008d	cc		 int	 3
$LN234@catch$106:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0008e	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00092	76 06		 jbe	 SHORT $LN235@catch$106
  00094	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00099	cc		 int	 3
$LN235@catch$106:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0009a	48 8b c8	 mov	 rcx, rax
$LN231@catch$106:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0009d	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN236@catch$106:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000a2	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  000aa	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000b2	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000b7	72 03		 jb	 SHORT $LN260@catch$106
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  000b9	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN260@catch$106:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000bc	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;

  000bf	33 d2		 xor	 edx, edx
  000c1	33 c9		 xor	 ecx, ecx
  000c3	e8 00 00 00 00	 call	 _CxxThrowException
  000c8	90		 npad	 1
?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$106
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$107

; 2197 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  0001d	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

  00021	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$107
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
  0002e	cc		 int	 3
?catch$107@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$107
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$106

; 735  : 		}
; 736  : 
; 737  : 	const size_type& _Myres() const _NOEXCEPT
; 738  : 		{	// return const reference to _Myres
; 739  : 		return (_Get_data()._Myres);
; 740  : 		}
; 741  : 
; 742  : private:
; 743  : 	_Compressed_pair<_Alty, _String_val<_Val_types> > _Mypair;
; 744  : 	};
; 745  : 
; 746  : 		// TEMPLATE CLASS basic_string
; 747  : template<class _Elem,
; 748  : 	class _Traits,
; 749  : 	class _Alloc>
; 750  : 	class basic_string
; 751  : 		: public _String_alloc<_String_base_types<_Elem, _Alloc> >
; 752  : 	{	// null-terminated transparent array of elements
; 753  : public:
; 754  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Myt;
; 755  : 	typedef _String_alloc<_String_base_types<_Elem, _Alloc> > _Mybase;
; 756  : 	typedef _Traits traits_type;
; 757  : 	typedef _Alloc allocator_type;
; 758  : 
; 759  : 	typedef typename _Mybase::_Alty _Alty;
; 760  : 
; 761  : 	typedef typename _Mybase::value_type value_type;
; 762  : 	typedef typename _Mybase::size_type size_type;
; 763  : 	typedef typename _Mybase::difference_type difference_type;
; 764  : 	typedef typename _Mybase::pointer pointer;
; 765  : 	typedef typename _Mybase::const_pointer const_pointer;
; 766  : 	typedef typename _Mybase::reference reference;
; 767  : 	typedef typename _Mybase::const_reference const_reference;
; 768  : 
; 769  : 	typedef typename _Mybase::iterator iterator;
; 770  : 	typedef typename _Mybase::const_iterator const_iterator;
; 771  : 
; 772  : 	typedef _STD reverse_iterator<iterator> reverse_iterator;
; 773  : 	typedef _STD reverse_iterator<const_iterator> const_reverse_iterator;
; 774  : 
; 775  : 	basic_string(const _Myt& _Right)
; 776  : 
; 777  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())
; 778  : 
; 779  : 
; 780  : 		{	// construct by copying _Right
; 781  : 		_Tidy();
; 782  : 		assign(_Right, 0, npos);
; 783  : 		}
; 784  : 
; 785  : 	basic_string(const _Myt& _Right, const _Alloc& _Al)
; 786  : 		: _Mybase(_Al)
; 787  : 		{	// construct by copying with allocator
; 788  : 		_Tidy();
; 789  : 		assign(_Right, 0, npos);
; 790  : 		}
; 791  : 
; 792  : 	basic_string() _NOEXCEPT_OP(is_nothrow_default_constructible<_Alloc>::value)
; 793  : 		: _Mybase()
; 794  : 		{	// construct empty string
; 795  : 		_Tidy();
; 796  : 		}
; 797  : 
; 798  : 	explicit basic_string(const _Alloc& _Al) _NOEXCEPT
; 799  : 		: _Mybase(_Al)
; 800  : 		{	// construct empty string with allocator
; 801  : 		_Tidy();
; 802  : 		}
; 803  : 
; 804  : 	basic_string(const _Myt& _Right, size_type _Roff,
; 805  : 		size_type _Count = npos)
; 806  : 		: _Mybase(_Right._Getal())
; 807  : 		{	// construct from _Right [_Roff, _Roff + _Count)
; 808  : 		_Tidy();
; 809  : 		assign(_Right, _Roff, _Count);
; 810  : 		}
; 811  : 
; 812  : 	basic_string(const _Myt& _Right, size_type _Roff, size_type _Count,
; 813  : 		const _Alloc& _Al)
; 814  : 		: _Mybase(_Al)
; 815  : 		{	// construct from _Right [_Roff, _Roff + _Count) with allocator
; 816  : 		_Tidy();
; 817  : 		assign(_Right, _Roff, _Count);
; 818  : 		}
; 819  : 
; 820  : 	basic_string(const _Elem *_Ptr, size_type _Count)
; 821  : 		: _Mybase()
; 822  : 		{	// construct from [_Ptr, _Ptr + _Count)
; 823  : 		_Tidy();
; 824  : 		assign(_Ptr, _Count);
; 825  : 		}
; 826  : 
; 827  : 	basic_string(const _Elem *_Ptr, size_type _Count, const _Alloc& _Al)
; 828  : 		: _Mybase(_Al)
; 829  : 		{	// construct from [_Ptr, _Ptr + _Count) with allocator
; 830  : 		_Tidy();
; 831  : 		assign(_Ptr, _Count);
; 832  : 		}
; 833  : 
; 834  : 	basic_string(const _Elem *_Ptr)
; 835  : 		: _Mybase()
; 836  : 		{	// construct from [_Ptr, <null>)
; 837  : 		_Tidy();
; 838  : 		assign(_Ptr);
; 839  : 		}
; 840  : 
; 841  : 	basic_string(const _Elem *_Ptr, const _Alloc& _Al)
; 842  : 		: _Mybase(_Al)
; 843  : 		{	// construct from [_Ptr, <null>) with allocator
; 844  : 		_Tidy();
; 845  : 		assign(_Ptr);
; 846  : 		}
; 847  : 
; 848  : 	basic_string(size_type _Count, _Elem _Ch)
; 849  : 		: _Mybase()
; 850  : 		{	// construct from _Count * _Ch
; 851  : 		_Tidy();
; 852  : 		assign(_Count, _Ch);
; 853  : 		}
; 854  : 
; 855  : 	basic_string(size_type _Count, _Elem _Ch, const _Alloc& _Al)
; 856  : 		: _Mybase(_Al)
; 857  : 		{	// construct from _Count * _Ch with allocator
; 858  : 		_Tidy();
; 859  : 		assign(_Count, _Ch);
; 860  : 		}
; 861  : 
; 862  : 	template<class _Iter,
; 863  : 		class = typename enable_if<_Is_iterator<_Iter>::value,
; 864  : 			void>::type>
; 865  : 		basic_string(_Iter _First, _Iter _Last, const _Alloc& _Al = _Alloc())
; 866  : 		: _Mybase(_Al)
; 867  : 		{	// construct from [_First, _Last) with optional allocator
; 868  : 		_DEBUG_RANGE(_First, _Last);
; 869  : 		_Tidy();
; 870  : 		_Construct(_Unchecked(_First), _Unchecked(_Last), _Iter_cat_t<_Iter>());
; 871  : 		}
; 872  : 
; 873  : 	template<class _Iter>
; 874  : 		void _Construct(_Iter _First,
; 875  : 			_Iter _Last, input_iterator_tag)
; 876  : 		{	// initialize from [_First, _Last), input iterators
; 877  : 		_TRY_BEGIN
; 878  : 		for (; _First != _Last; ++_First)
; 879  : 			append((size_type)1, (_Elem)*_First);
; 880  : 		_CATCH_ALL
; 881  : 		_Tidy(true);
; 882  : 		_RERAISE;
; 883  : 		_CATCH_END
; 884  : 		}
; 885  : 
; 886  : 	template<class _Iter>
; 887  : 		void _Construct(_Iter _First,
; 888  : 			_Iter _Last, forward_iterator_tag)
; 889  : 		{	// initialize from [_First, _Last), forward iterators
; 890  : 		size_type _Count = _STD distance(_First, _Last);
; 891  : 		reserve(_Count);
; 892  : 		_Construct(_First, _Last, input_iterator_tag());
; 893  : 		}
; 894  : 
; 895  : 	void _Construct(_Elem *_First,
; 896  : 		_Elem *_Last, random_access_iterator_tag)
; 897  : 		{	// initialize from [_First, _Last), pointers
; 898  : 		if (_First != _Last)
; 899  : 			assign(_First, _Last - _First);
; 900  : 		}
; 901  : 
; 902  : 	void _Construct(const _Elem *_First,
; 903  : 		const _Elem *_Last, random_access_iterator_tag)
; 904  : 		{	// initialize from [_First, _Last), const pointers
; 905  : 		if (_First != _Last)
; 906  : 			assign(_First, _Last - _First);
; 907  : 		}
; 908  : 
; 909  : 	basic_string(_Myt&& _Right) _NOEXCEPT
; 910  : 		: _Mybase(_STD move(_Right._Getal()))
; 911  : 		{	// construct by moving _Right
; 912  : 		_Tidy();
; 913  : 		_Assign_rv(_STD forward<_Myt>(_Right));
; 914  : 		}
; 915  : 
; 916  : 	basic_string(_Myt&& _Right, const _Alloc& _Al)
; 917  : 		: _Mybase(_Al)
; 918  : 		{	// construct by moving _Right, allocator
; 919  : 		if (this->_Getal() != _Right._Getal())
; 920  : 			assign(_Right.begin(), _Right.end());
; 921  : 		else
; 922  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 923  : 		}
; 924  : 
; 925  : 	_Myt& operator=(_Myt&& _Right)
; 926  : 		_NOEXCEPT_OP(_Alty::propagate_on_container_move_assignment::value
; 927  : 			|| _Alty::is_always_equal::value)
; 928  : 		{	// assign by moving _Right
; 929  : 		if (this != &_Right)
; 930  : 			{	// different, assign it
; 931  : 			_Tidy(true);
; 932  : 
; 933  : 			if (_Alty::propagate_on_container_move_assignment::value
; 934  : 				&& this->_Getal() != _Right._Getal())
; 935  : 				this->_Move_alloc(_Right._Getal());
; 936  : 
; 937  : 			if (this->_Getal() != _Right._Getal())
; 938  : 				assign(_Right.begin(), _Right.end());
; 939  : 			else
; 940  : 				_Assign_rv(_STD forward<_Myt>(_Right));
; 941  : 			}
; 942  : 		return (*this);
; 943  : 		}
; 944  : 
; 945  : 	_Myt& assign(_Myt&& _Right) _NOEXCEPT
; 946  : 		{	// assign by moving _Right
; 947  : 		if (this == &_Right)
; 948  : 			;
; 949  : 		else if (get_allocator() != _Right.get_allocator()
; 950  : 			&& this->_BUF_SIZE <= _Right._Myres())
; 951  : 			*this = _Right;
; 952  : 		else
; 953  : 			{	// not same, clear this and steal from _Right
; 954  : 			_Tidy(true);
; 955  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 956  : 			}
; 957  : 		return (*this);
; 958  : 		}
; 959  : 
; 960  : 	void _Assign_rv(_Myt&& _Right)
; 961  : 		{	// assign by moving _Right
; 962  : 		if (_Right._Myres() < this->_BUF_SIZE)
; 963  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,
; 964  : 				_Right._Mysize() + 1);
; 965  : 		else
; 966  : 			{	// copy pointer
; 967  : 			this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Right._Bx()._Ptr);
; 968  : 			_Right._Bx()._Ptr = pointer();
; 969  : 			}
; 970  : 		this->_Mysize() = _Right._Mysize();
; 971  : 		this->_Myres() = _Right._Myres();
; 972  : 		_Right._Tidy();
; 973  : 		}
; 974  : 
; 975  : 	basic_string(_XSTD initializer_list<_Elem> _Ilist,
; 976  : 		const _Alloc& _Al = allocator_type())
; 977  : 		: _Mybase(_Al)
; 978  : 		{	// construct from initializer_list
; 979  : 		_Tidy();
; 980  : 		assign(_Ilist.begin(), _Ilist.end());
; 981  : 		}
; 982  : 
; 983  : 	_Myt& operator=(_XSTD initializer_list<_Elem> _Ilist)
; 984  : 		{	// assign initializer_list
; 985  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 986  : 		}
; 987  : 
; 988  : 	_Myt& operator+=(_XSTD initializer_list<_Elem> _Ilist)
; 989  : 		{	// append initializer_list
; 990  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 991  : 		}
; 992  : 
; 993  : 	_Myt& assign(_XSTD initializer_list<_Elem> _Ilist)
; 994  : 		{	// assign initializer_list
; 995  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 996  : 		}
; 997  : 
; 998  : 	_Myt& append(_XSTD initializer_list<_Elem> _Ilist)
; 999  : 		{	// append initializer_list
; 1000 : 		return (append(_Ilist.begin(), _Ilist.end()));
; 1001 : 		}
; 1002 : 
; 1003 : 	iterator insert(const_iterator _Where,
; 1004 : 		_XSTD initializer_list<_Elem> _Ilist)
; 1005 : 		{	// insert initializer_list
; 1006 : 		return (insert(_Where, _Ilist.begin(), _Ilist.end()));
; 1007 : 		}
; 1008 : 
; 1009 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1010 : 		_XSTD initializer_list<_Elem> _Ilist)
; 1011 : 		{	// replace with initializer_list
; 1012 : 		return (replace(_First, _Last, _Ilist.begin(), _Ilist.end()));
; 1013 : 		}
; 1014 : 
; 1015 : 	~basic_string() _NOEXCEPT
; 1016 : 		{	// destroy the string
; 1017 : 		_Tidy(true);
; 1018 : 		}
; 1019 : 
; 1020 : 	_PGLOBAL static const size_type npos;	// bad/missing length/position
; 1021 : 
; 1022 : 	_Myt& operator=(const _Myt& _Right)
; 1023 : 		{	// assign _Right
; 1024 : 		if (this != &_Right)
; 1025 : 			{	// different, assign it
; 1026 : 			if (this->_Getal() != _Right._Getal()
; 1027 : 				&& _Alty::propagate_on_container_copy_assignment::value)
; 1028 : 				{	// change allocator before copying
; 1029 : 				_Tidy(true);
; 1030 : 				this->_Copy_alloc(_Right._Getal());
; 1031 : 				}
; 1032 : 
; 1033 : 			assign(_Right);
; 1034 : 			}
; 1035 : 		return (*this);
; 1036 : 		}
; 1037 : 
; 1038 : 	_Myt& operator=(const _Elem *_Ptr)
; 1039 : 		{	// assign [_Ptr, <null>)
; 1040 : 		return (assign(_Ptr));
; 1041 : 		}
; 1042 : 
; 1043 : 	_Myt& operator=(_Elem _Ch)
; 1044 : 		{	// assign 1 * _Ch
; 1045 : 		return (assign(1, _Ch));
; 1046 : 		}
; 1047 : 
; 1048 : 	_Myt& operator+=(const _Myt& _Right)
; 1049 : 		{	// append _Right
; 1050 : 		return (append(_Right));
; 1051 : 		}
; 1052 : 
; 1053 : 	_Myt& operator+=(const _Elem *_Ptr)
; 1054 : 		{	// append [_Ptr, <null>)
; 1055 : 		return (append(_Ptr));
; 1056 : 		}
; 1057 : 
; 1058 : 	_Myt& operator+=(_Elem _Ch)
; 1059 : 		{	// append 1 * _Ch
; 1060 : 		return (append((size_type)1, _Ch));
; 1061 : 		}
; 1062 : 
; 1063 : 	_Myt& append(const _Myt& _Right)
; 1064 : 		{	// append _Right
; 1065 : 		return (append(_Right, 0, npos));
; 1066 : 		}
; 1067 : 
; 1068 : 	_Myt& append(const _Myt& _Right,
; 1069 : 		size_type _Roff, size_type _Count = npos)
; 1070 : 		{	// append _Right [_Roff, _Roff + _Count)
; 1071 : 		_Right._Check_offset(_Roff);
; 1072 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1073 : 		if (npos - this->_Mysize() <= _Count)
; 1074 : 			_Xlen();	// result too long
; 1075 : 
; 1076 : 		const size_type _Num = this->_Mysize() + _Count;
; 1077 : 		if (0 < _Count && _Grow(_Num))
; 1078 : 			{	// make room and append new stuff
; 1079 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),
; 1080 : 				_Right._Myptr() + _Roff, _Count);
; 1081 : 			_Eos(_Num);
; 1082 : 			}
; 1083 : 		return (*this);
; 1084 : 		}
; 1085 : 
; 1086 : 	_Myt& append(const _Elem *_Ptr, size_type _Count)
; 1087 : 		{	// append [_Ptr, _Ptr + _Count)
; 1088 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1089 : 		if (_Inside(_Ptr))
; 1090 : 			return (append(*this,
; 1091 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1092 : 		if (npos - this->_Mysize() <= _Count)
; 1093 : 			_Xlen();	// result too long
; 1094 : 
; 1095 : 		const size_type _Num = this->_Mysize() + _Count;
; 1096 : 		if (0 < _Count && _Grow(_Num))
; 1097 : 			{	// make room and append new stuff
; 1098 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);
; 1099 : 			_Eos(_Num);
; 1100 : 			}
; 1101 : 		return (*this);
; 1102 : 		}
; 1103 : 
; 1104 : 	_Myt& append(const _Elem *_Ptr)
; 1105 : 		{	// append [_Ptr, <null>)
; 1106 : 		_DEBUG_POINTER(_Ptr);
; 1107 : 		return (append(_Ptr, _Traits::length(_Ptr)));
; 1108 : 		}
; 1109 : 
; 1110 : 	_Myt& append(size_type _Count, _Elem _Ch)
; 1111 : 		{	// append _Count * _Ch
; 1112 : 		if (npos - this->_Mysize() <= _Count)
; 1113 : 			_Xlen();	// result too long
; 1114 : 
; 1115 : 		const size_type _Num = this->_Mysize() + _Count;
; 1116 : 		if (0 < _Count && _Grow(_Num))
; 1117 : 			{	// make room and append new stuff using assign
; 1118 : 			_Chassign(this->_Mysize(), _Count, _Ch);
; 1119 : 			_Eos(_Num);
; 1120 : 			}
; 1121 : 		return (*this);
; 1122 : 		}
; 1123 : 
; 1124 : 	template<class _Iter>
; 1125 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1126 : 			_Myt&>::type
; 1127 : 		append(_Iter _First, _Iter _Last)
; 1128 : 		{	// append [_First, _Last), input iterators
; 1129 : 		return (replace(end(), end(), _First, _Last));
; 1130 : 		}
; 1131 : 
; 1132 : 	_Myt& append(const_pointer _First, const_pointer _Last)
; 1133 : 		{	// append [_First, _Last), const pointers
; 1134 : 		return (replace(end(), end(), _First, _Last));
; 1135 : 		}
; 1136 : 
; 1137 : 	_Myt& append(const_iterator _First, const_iterator _Last)
; 1138 : 		{	// append [_First, _Last), const_iterators
; 1139 : 		return (replace(end(), end(), _First, _Last));
; 1140 : 		}
; 1141 : 
; 1142 : 	_Myt& assign(const _Myt& _Right)
; 1143 : 		{	// assign _Right
; 1144 : 		return (assign(_Right, 0, npos));
; 1145 : 		}
; 1146 : 
; 1147 : 	_Myt& assign(const _Myt& _Right,
; 1148 : 		size_type _Roff, size_type _Count = npos)
; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)
; 1150 : 		_Right._Check_offset(_Roff);
; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1152 : 
; 1153 : 		if (this == &_Right)
; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring
; 1155 : 		else if (_Grow(_Count))
; 1156 : 			{	// make room and assign new stuff
; 1157 : 			_Traits::copy(this->_Myptr(),
; 1158 : 				_Right._Myptr() + _Roff, _Count);
; 1159 : 			_Eos(_Count);
; 1160 : 			}
; 1161 : 		return (*this);
; 1162 : 		}
; 1163 : 
; 1164 : 	_Myt& assign(const _Elem *_Ptr, size_type _Count)
; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)
; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1167 : 		if (_Inside(_Ptr))
; 1168 : 			return (assign(*this,
; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))
; 1172 : 			{	// make room and assign new stuff
; 1173 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);
; 1174 : 			_Eos(_Count);
; 1175 : 			}
; 1176 : 		return (*this);
; 1177 : 		}
; 1178 : 
; 1179 : 	_Myt& assign(const _Elem *_Ptr)
; 1180 : 		{	// assign [_Ptr, <null>)
; 1181 : 		_DEBUG_POINTER(_Ptr);
; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));
; 1183 : 		}
; 1184 : 
; 1185 : 	_Myt& assign(size_type _Count, _Elem _Ch)
; 1186 : 		{	// assign _Count * _Ch
; 1187 : 		if (_Count == npos)
; 1188 : 			_Xlen();	// result too long
; 1189 : 
; 1190 : 		if (_Grow(_Count))
; 1191 : 			{	// make room and assign new stuff
; 1192 : 			_Chassign(0, _Count, _Ch);
; 1193 : 			_Eos(_Count);
; 1194 : 			}
; 1195 : 		return (*this);
; 1196 : 		}
; 1197 : 
; 1198 : 	template<class _Iter>
; 1199 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1200 : 			_Myt&>::type
; 1201 : 		assign(_Iter _First, _Iter _Last)
; 1202 : 		{	// assign [_First, _Last), input iterators
; 1203 : 		return (replace(begin(), end(), _First, _Last));
; 1204 : 		}
; 1205 : 
; 1206 : 	_Myt& assign(const_pointer _First, const_pointer _Last)
; 1207 : 		{	// assign [_First, _Last), const pointers
; 1208 : 		return (replace(begin(), end(), _First, _Last));
; 1209 : 		}
; 1210 : 
; 1211 : 	_Myt& assign(const_iterator _First, const_iterator _Last)
; 1212 : 		{	// assign [_First, _Last), const_iterators
; 1213 : 		return (replace(begin(), end(), _First, _Last));
; 1214 : 		}
; 1215 : 
; 1216 : 	_Myt& insert(size_type _Off, const _Myt& _Right)
; 1217 : 		{	// insert _Right at _Off
; 1218 : 		return (insert(_Off, _Right, 0, npos));
; 1219 : 		}
; 1220 : 
; 1221 : 	_Myt& insert(size_type _Off,
; 1222 : 		const _Myt& _Right, size_type _Roff, size_type _Count = npos)
; 1223 : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off
; 1224 : 		_Check_offset(_Off);
; 1225 : 		_Right._Check_offset(_Roff);
; 1226 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1227 : 		if (npos - this->_Mysize() <= _Count)
; 1228 : 			_Xlen();	// result too long
; 1229 : 
; 1230 : 		const size_type _Num = this->_Mysize() + _Count;
; 1231 : 		if (0 < _Count && _Grow(_Num))
; 1232 : 			{	// make room and insert new stuff
; 1233 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1234 : 				this->_Myptr() + _Off,
; 1235 : 				this->_Mysize() - _Off);	// empty out hole
; 1236 : 			if (this == &_Right)
; 1237 : 				_Traits::move(this->_Myptr() + _Off,
; 1238 : 					this->_Myptr() + (_Off < _Roff ? _Roff + _Count : _Roff),
; 1239 : 						_Count);	// substring
; 1240 : 			else
; 1241 : 				_Traits::copy(this->_Myptr() + _Off,
; 1242 : 					_Right._Myptr() + _Roff, _Count);	// fill hole
; 1243 : 			_Eos(_Num);
; 1244 : 			}
; 1245 : 		return (*this);
; 1246 : 		}
; 1247 : 
; 1248 : 	_Myt& insert(size_type _Off,
; 1249 : 		const _Elem *_Ptr, size_type _Count)
; 1250 : 		{	// insert [_Ptr, _Ptr + _Count) at _Off
; 1251 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1252 : 		if (_Inside(_Ptr))
; 1253 : 			return (insert(_Off, *this,
; 1254 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1255 : 		_Check_offset(_Off);
; 1256 : 		if (npos - this->_Mysize() <= _Count)
; 1257 : 			_Xlen();	// result too long
; 1258 : 		const size_type _Num = this->_Mysize() + _Count;
; 1259 : 		if (0 < _Count && _Grow(_Num))
; 1260 : 			{	// make room and insert new stuff
; 1261 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1262 : 				this->_Myptr() + _Off,
; 1263 : 				this->_Mysize() - _Off);	// empty out hole
; 1264 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1265 : 			_Eos(_Num);
; 1266 : 			}
; 1267 : 		return (*this);
; 1268 : 		}
; 1269 : 
; 1270 : 	_Myt& insert(size_type _Off, const _Elem *_Ptr)
; 1271 : 		{	// insert [_Ptr, <null>) at _Off
; 1272 : 		_DEBUG_POINTER(_Ptr);
; 1273 : 		return (insert(_Off, _Ptr, _Traits::length(_Ptr)));
; 1274 : 		}
; 1275 : 
; 1276 : 	_Myt& insert(size_type _Off,
; 1277 : 		size_type _Count, _Elem _Ch)
; 1278 : 		{	// insert _Count * _Ch at _Off
; 1279 : 		_Check_offset(_Off);
; 1280 : 		if (npos - this->_Mysize() <= _Count)
; 1281 : 			_Xlen();	// result too long
; 1282 : 		const size_type _Num = this->_Mysize() + _Count;
; 1283 : 		if (0 < _Count && _Grow(_Num))
; 1284 : 			{	// make room and insert new stuff
; 1285 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1286 : 				this->_Myptr() + _Off,
; 1287 : 				this->_Mysize() - _Off);	// empty out hole
; 1288 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1289 : 			_Eos(_Num);
; 1290 : 			}
; 1291 : 		return (*this);
; 1292 : 		}
; 1293 : 
; 1294 : 	iterator insert(const_iterator _Where)
; 1295 : 		{	// insert <null> at _Where
; 1296 : 		return (insert(_Where, _Elem()));
; 1297 : 		}
; 1298 : 
; 1299 : 	iterator insert(const_iterator _Where, _Elem _Ch)
; 1300 : 		{	// insert _Ch at _Where
; 1301 : 		size_type _Off = _Where - begin();
; 1302 : 		insert(_Off, 1, _Ch);
; 1303 : 		return (begin() + _Off);
; 1304 : 		}
; 1305 : 
; 1306 : 	iterator insert(const_iterator _Where, size_type _Count, _Elem _Ch)
; 1307 : 		{	// insert _Count * _Elem at _Where
; 1308 : 		size_type _Off = _Where - begin();
; 1309 : 		insert(_Off, _Count, _Ch);
; 1310 : 		return (begin() + _Off);
; 1311 : 		}
; 1312 : 
; 1313 : 	template<class _Iter>
; 1314 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1315 : 			iterator>::type
; 1316 : 		insert(const_iterator _Where, _Iter _First, _Iter _Last)
; 1317 : 		{	// insert [_First, _Last) at _Where, input iterators
; 1318 : 		size_type _Off = _Where - begin();
; 1319 : 		replace(_Where, _Where, _First, _Last);
; 1320 : 		return (begin() + _Off);
; 1321 : 		}
; 1322 : 
; 1323 : 	iterator insert(const_iterator _Where,
; 1324 : 		const_pointer _First, const_pointer _Last)
; 1325 : 		{	// insert [_First, _Last) at _Where, const pointers
; 1326 : 		size_type _Off = _Where - begin();
; 1327 : 		replace(_Where, _Where, _First, _Last);
; 1328 : 		return (begin() + _Off);
; 1329 : 		}
; 1330 : 
; 1331 : 	iterator insert(const_iterator _Where,
; 1332 : 		const_iterator _First, const_iterator _Last)
; 1333 : 		{	// insert [_First, _Last) at _Where, const_iterators
; 1334 : 		size_type _Off = _Where - begin();
; 1335 : 		replace(_Where, _Where, _First, _Last);
; 1336 : 		return (begin() + _Off);
; 1337 : 		}
; 1338 : 
; 1339 : 	_Myt& erase(size_type _Off = 0)
; 1340 : 		{	// erase elements [_Off, ...)
; 1341 : 		_Check_offset(_Off);
; 1342 : 		_Eos(_Off);
; 1343 : 		return (*this);
; 1344 : 		}
; 1345 : 
; 1346 : 	_Myt& erase(size_type _Off, size_type _Count)
; 1347 : 		{	// erase elements [_Off, _Off + _Count)
; 1348 : 		_Check_offset(_Off);
; 1349 : 		if (this->_Mysize() - _Off <= _Count)
; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1351 : 		else if (0 < _Count)
; 1352 : 			{	// move elements down
; 1353 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;
; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);
; 1356 : 			_Eos(_Newsize);
; 1357 : 			}
; 1358 : 		return (*this);
; 1359 : 		}
; 1360 : 
; 1361 : 	iterator erase(const_iterator _Where)
; 1362 : 		{	// erase element at _Where
; 1363 : 		size_type _Count = _Where - begin();
; 1364 : 		erase(_Count, 1);
; 1365 : 		return (begin() + _Count);
; 1366 : 		}
; 1367 : 
; 1368 : 	iterator erase(const_iterator _First, const_iterator _Last)
; 1369 : 		{	// erase substring [_First, _Last)
; 1370 : 		_DEBUG_RANGE(_First, _Last);
; 1371 : 		size_type _Count = _First - begin();
; 1372 : 		erase(_Count, _Last - _First);
; 1373 : 		return (begin() + _Count);
; 1374 : 		}
; 1375 : 
; 1376 : 	void clear() _NOEXCEPT
; 1377 : 		{	// erase all
; 1378 : 		_Eos(0);
; 1379 : 		}
; 1380 : 
; 1381 : 	_Myt& replace(size_type _Off, size_type _N0, const _Myt& _Right)
; 1382 : 		{	// replace [_Off, _Off + _N0) with _Right
; 1383 : 		return (replace(_Off, _N0, _Right, 0, npos));
; 1384 : 		}
; 1385 : 
; 1386 : 	_Myt& replace(size_type _Off,
; 1387 : 		size_type _N0, const _Myt& _Right, size_type _Roff,
; 1388 : 			size_type _Count = npos)
; 1389 : 		{	// replace [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 1390 : 		_Check_offset(_Off);
; 1391 : 		_Right._Check_offset(_Roff);
; 1392 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1393 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1394 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1395 : 			_Xlen();	// result too long
; 1396 : 
; 1397 : 		const size_type _Nm = this->_Mysize() - _N0 - _Off;	// length of kept tail
; 1398 : 		const size_type _Newsize = this->_Mysize() + _Count - _N0;
; 1399 : 		if (this->_Mysize() < _Newsize)
; 1400 : 			_Grow(_Newsize);
; 1401 : 
; 1402 : 		if (_Count == _N0)
; 1403 : 			{	// only one movement required, so _Traits::move handles any overlap
; 1404 : 			_Traits::move(this->_Myptr() + _Off,
; 1405 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1406 : 			}
; 1407 : 		else if (this != &_Right)
; 1408 : 			{	// no overlap, just move down and copy in new stuff
; 1409 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1410 : 				this->_Myptr() + _Off + _N0, _Nm);	// empty hole
; 1411 : 			_Traits::copy(this->_Myptr() + _Off,
; 1412 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1413 : 			}
; 1414 : 		else if (_Count < _N0)
; 1415 : 			{	// hole doesn't get larger, just copy in substring
; 1416 : 			_Traits::move(this->_Myptr() + _Off,
; 1417 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1418 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1419 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1420 : 			}
; 1421 : 		else if (_Roff <= _Off)
; 1422 : 			{	// hole gets larger, substring begins before hole
; 1423 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1424 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1425 : 			_Traits::move(this->_Myptr() + _Off,
; 1426 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1427 : 			}
; 1428 : 		else if (_Off + _N0 <= _Roff)
; 1429 : 			{	// hole gets larger, substring begins after hole
; 1430 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1431 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1432 : 			_Traits::move(this->_Myptr() + _Off,
; 1433 : 				this->_Myptr() + (_Roff + _Count - _N0),
; 1434 : 				_Count);	// fill hole
; 1435 : 			}
; 1436 : 		else
; 1437 : 			{	// hole gets larger, substring begins in hole
; 1438 : 			_Traits::move(this->_Myptr() + _Off,
; 1439 : 				this->_Myptr() + _Roff, _N0);	// fill old hole
; 1440 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1441 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1442 : 			_Traits::move(this->_Myptr() + _Off + _N0,
; 1443 : 				this->_Myptr() + _Roff + _Count,
; 1444 : 				_Count - _N0);	// fill rest of new hole
; 1445 : 			}
; 1446 : 
; 1447 : 		_Eos(_Newsize);
; 1448 : 		return (*this);
; 1449 : 		}
; 1450 : 
; 1451 : 	_Myt& replace(size_type _Off,
; 1452 : 		size_type _N0, const _Elem *_Ptr, size_type _Count)
; 1453 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 1454 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1455 : 		if (_Inside(_Ptr))
; 1456 : 			return (replace(_Off, _N0, *this,
; 1457 : 				_Ptr - this->_Myptr(),
; 1458 : 				_Count));	// substring, replace carefully
; 1459 : 		_Check_offset(_Off);
; 1460 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1461 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1462 : 			_Xlen();	// result too long
; 1463 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1464 : 
; 1465 : 		if (_Count < _N0)
; 1466 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1467 : 				this->_Myptr() + _Off + _N0,
; 1468 : 				_Nm);	// smaller hole, move tail up
; 1469 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1470 : 		if ((0 < _Count || 0 < _N0)
; 1471 : 			&& _Grow(_Num))
; 1472 : 			{	// make room and rearrange
; 1473 : 			if (_N0 < _Count)
; 1474 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1475 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1476 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1477 : 			_Eos(_Num);
; 1478 : 			}
; 1479 : 		return (*this);
; 1480 : 		}
; 1481 : 
; 1482 : 	_Myt& replace(size_type _Off, size_type _N0, const _Elem *_Ptr)
; 1483 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, <null>)
; 1484 : 		_DEBUG_POINTER(_Ptr);
; 1485 : 		return (replace(_Off, _N0, _Ptr, _Traits::length(_Ptr)));
; 1486 : 		}
; 1487 : 
; 1488 : 	_Myt& replace(size_type _Off,
; 1489 : 		size_type _N0, size_type _Count, _Elem _Ch)
; 1490 : 		{	// replace [_Off, _Off + _N0) with _Count * _Ch
; 1491 : 		_Check_offset(_Off);
; 1492 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1493 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1494 : 			_Xlen();	// result too long
; 1495 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1496 : 
; 1497 : 		if (_Count < _N0)
; 1498 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1499 : 				this->_Myptr() + _Off + _N0,
; 1500 : 				_Nm);	// smaller hole, move tail up
; 1501 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1502 : 		if ((0 < _Count || 0 < _N0)
; 1503 : 			&& _Grow(_Num))
; 1504 : 			{	// make room and rearrange
; 1505 : 			if (_N0 < _Count)
; 1506 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1507 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1508 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1509 : 			_Eos(_Num);
; 1510 : 			}
; 1511 : 		return (*this);
; 1512 : 		}
; 1513 : 
; 1514 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1515 : 		const _Myt& _Right)
; 1516 : 		{	// replace [_First, _Last) with _Right
; 1517 : 		return (replace(_First - begin(), _Last - _First, _Right));
; 1518 : 		}
; 1519 : 
; 1520 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1521 : 		const _Elem *_Ptr, size_type _Count)
; 1522 : 		{	// replace [_First, _Last) with [_Ptr, _Ptr + _Count)
; 1523 : 		return (replace(_First - begin(), _Last - _First, _Ptr, _Count));
; 1524 : 		}
; 1525 : 
; 1526 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1527 : 		const _Elem *_Ptr)
; 1528 : 		{	// replace [_First, _Last) with [_Ptr, <null>)
; 1529 : 		return (replace(_First - begin(), _Last - _First, _Ptr));
; 1530 : 		}
; 1531 : 
; 1532 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1533 : 		size_type _Count, _Elem _Ch)
; 1534 : 		{	// replace [_First, _Last) with _Count * _Ch
; 1535 : 		return (replace(_First - begin(), _Last - _First, _Count, _Ch));
; 1536 : 		}
; 1537 : 
; 1538 : 	template<class _Iter>
; 1539 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1540 : 			_Myt&>::type
; 1541 : 		replace(const_iterator _First, const_iterator _Last,
; 1542 : 			_Iter _First2, _Iter _Last2)
; 1543 : 		{	// replace [_First, _Last) with [_First2, _Last2), input iterators
; 1544 : 		_Myt _Right(_First2, _Last2);
; 1545 : 		replace(_First, _Last, _Right);
; 1546 : 		return (*this);
; 1547 : 		}
; 1548 : 
; 1549 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1550 : 		const_pointer _First2, const_pointer _Last2)
; 1551 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1552 : 		if (_First2 == _Last2)
; 1553 : 			erase(_First - begin(), _Last - _First);
; 1554 : 		else
; 1555 : 			replace(_First - begin(), _Last - _First,
; 1556 : 				&*_First2, _Last2 - _First2);
; 1557 : 		return (*this);
; 1558 : 		}
; 1559 : 
; 1560 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1561 : 		pointer _First2, pointer _Last2)
; 1562 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1563 : 		if (_First2 == _Last2)
; 1564 : 			erase(_First - begin(), _Last - _First);
; 1565 : 		else
; 1566 : 			replace(_First - begin(), _Last - _First,
; 1567 : 				&*_First2, _Last2 - _First2);
; 1568 : 		return (*this);
; 1569 : 		}
; 1570 : 
; 1571 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1572 : 		const_iterator _First2, const_iterator _Last2)
; 1573 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1574 : 		if (_First2 == _Last2)
; 1575 : 			erase(_First - begin(), _Last - _First);
; 1576 : 		else
; 1577 : 			replace(_First - begin(), _Last - _First,
; 1578 : 				&*_First2, _Last2 - _First2);
; 1579 : 		return (*this);
; 1580 : 		}
; 1581 : 
; 1582 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1583 : 		iterator _First2, iterator _Last2)
; 1584 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1585 : 		if (_First2 == _Last2)
; 1586 : 			erase(_First - begin(), _Last - _First);
; 1587 : 		else
; 1588 : 			replace(_First - begin(), _Last - _First,
; 1589 : 				&*_First2, _Last2 - _First2);
; 1590 : 		return (*this);
; 1591 : 		}
; 1592 : 
; 1593 : 	iterator begin() _NOEXCEPT
; 1594 : 		{	// return iterator for beginning of mutable sequence
; 1595 : 		auto _Mydata = &this->_Get_data();
; 1596 : 		return (iterator(this->_Getal().address(*_Mydata->_Myptr()), _Mydata));
; 1597 : 		}
; 1598 : 
; 1599 : 	const_iterator begin() const _NOEXCEPT
; 1600 : 		{	// return iterator for beginning of nonmutable sequence
; 1601 : 		auto _Mydata = &this->_Get_data();
; 1602 : 		return (const_iterator(this->_Getal().address(*_Mydata->_Myptr()), _Mydata));
; 1603 : 		}
; 1604 : 
; 1605 : 	iterator end() _NOEXCEPT
; 1606 : 		{	// return iterator for end of mutable sequence
; 1607 : 		auto _Mydata = &this->_Get_data();
; 1608 : 		return (iterator(this->_Getal().address(*_Mydata->_Myptr()) + _Mydata->_Mysize, _Mydata));
; 1609 : 		}
; 1610 : 
; 1611 : 	const_iterator end() const _NOEXCEPT
; 1612 : 		{	// return iterator for end of nonmutable sequence
; 1613 : 		auto _Mydata = &this->_Get_data();
; 1614 : 		return (const_iterator(this->_Getal().address(*_Mydata->_Myptr()) + _Mydata->_Mysize, _Mydata));
; 1615 : 		}
; 1616 : 
; 1617 : 	reverse_iterator rbegin() _NOEXCEPT
; 1618 : 		{	// return iterator for beginning of reversed mutable sequence
; 1619 : 		return (reverse_iterator(end()));
; 1620 : 		}
; 1621 : 
; 1622 : 	const_reverse_iterator rbegin() const _NOEXCEPT
; 1623 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1624 : 		return (const_reverse_iterator(end()));
; 1625 : 		}
; 1626 : 
; 1627 : 	reverse_iterator rend() _NOEXCEPT
; 1628 : 		{	// return iterator for end of reversed mutable sequence
; 1629 : 		return (reverse_iterator(begin()));
; 1630 : 		}
; 1631 : 
; 1632 : 	const_reverse_iterator rend() const _NOEXCEPT
; 1633 : 		{	// return iterator for end of reversed nonmutable sequence
; 1634 : 		return (const_reverse_iterator(begin()));
; 1635 : 		}
; 1636 : 
; 1637 : 	const_iterator cbegin() const _NOEXCEPT
; 1638 : 		{	// return iterator for beginning of nonmutable sequence
; 1639 : 		return (begin());
; 1640 : 		}
; 1641 : 
; 1642 : 	const_iterator cend() const _NOEXCEPT
; 1643 : 		{	// return iterator for end of nonmutable sequence
; 1644 : 		return (end());
; 1645 : 		}
; 1646 : 
; 1647 : 	const_reverse_iterator crbegin() const _NOEXCEPT
; 1648 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1649 : 		return (rbegin());
; 1650 : 		}
; 1651 : 
; 1652 : 	const_reverse_iterator crend() const _NOEXCEPT
; 1653 : 		{	// return iterator for end of reversed nonmutable sequence
; 1654 : 		return (rend());
; 1655 : 		}
; 1656 : 
; 1657 : 	void shrink_to_fit()
; 1658 : 		{	// reduce capacity
; 1659 : 		if ((size() | this->_ALLOC_MASK) < capacity())
; 1660 : 			{	// worth shrinking, do it
; 1661 : 			_Myt _Tmp(*this);
; 1662 : 			swap(_Tmp);
; 1663 : 			}
; 1664 : 		}
; 1665 : 
; 1666 : 	reference at(size_type _Off)
; 1667 : 		{	// subscript mutable sequence with checking
; 1668 : 		_Check_offset_exclusive(_Off);
; 1669 : 		return (this->_Myptr()[_Off]);
; 1670 : 		}
; 1671 : 
; 1672 : 	const_reference at(size_type _Off) const
; 1673 : 		{	// subscript nonmutable sequence with checking
; 1674 : 		_Check_offset_exclusive(_Off);
; 1675 : 		return (this->_Myptr()[_Off]);
; 1676 : 		}
; 1677 : 
; 1678 : 	reference operator[](size_type _Off)
; 1679 : 		{	// subscript mutable sequence
; 1680 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1681 : 		if (this->_Mysize() < _Off)	// sic
; 1682 : 			_DEBUG_ERROR("string subscript out of range");
; 1683 : 
; 1684 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1685 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1686 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1687 : 
; 1688 : 		return (this->_Myptr()[_Off]);
; 1689 : 		}
; 1690 : 
; 1691 : 	const_reference operator[](size_type _Off) const
; 1692 : 		{	// subscript nonmutable sequence
; 1693 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1694 : 		if (this->_Mysize() < _Off)	// sic
; 1695 : 			_DEBUG_ERROR("string subscript out of range");
; 1696 : 
; 1697 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1698 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1699 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1700 : 
; 1701 : 		return (this->_Myptr()[_Off]);
; 1702 : 		}
; 1703 : 
; 1704 : 	void push_back(_Elem _Ch)
; 1705 : 		{	// insert element at end
; 1706 : 		auto& _Dx = this->_Get_data();
; 1707 : 		auto& _Sz = _Dx._Mysize;
; 1708 : 		if (_Sz == _Dx._Myres)
; 1709 : 			_Grow(_Sz + 1); // _Grow checks for overflow
; 1710 : 		auto _Ptr = _Dx._Myptr();
; 1711 : 		_Traits::assign(_Ptr[_Sz], _Ch);
; 1712 : 		++_Sz;
; 1713 : 		_Traits::assign(_Ptr[_Sz], _Elem());
; 1714 : 		}
; 1715 : 
; 1716 : 	void pop_back()
; 1717 : 		{	// erase element at end
; 1718 : 		erase(this->_Mysize() - 1);	// throws if _Mysize() == 0
; 1719 : 		}
; 1720 : 
; 1721 : 	reference front()
; 1722 : 		{	// return first element of mutable sequence
; 1723 : 		return (*begin());
; 1724 : 		}
; 1725 : 
; 1726 : 	const_reference front() const
; 1727 : 		{	// return first element of nonmutable sequence
; 1728 : 		return (*begin());
; 1729 : 		}
; 1730 : 
; 1731 : 	reference back()
; 1732 : 		{	// return last element of mutable sequence
; 1733 : 		return (*(end() - 1));
; 1734 : 		}
; 1735 : 
; 1736 : 	const_reference back() const
; 1737 : 		{	// return last element of nonmutable sequence
; 1738 : 		return (*(end() - 1));
; 1739 : 		}
; 1740 : 
; 1741 : 	const _Elem *c_str() const _NOEXCEPT
; 1742 : 		{	// return pointer to null-terminated nonmutable array
; 1743 : 		return (this->_Myptr());
; 1744 : 		}
; 1745 : 
; 1746 : 	const _Elem *data() const _NOEXCEPT
; 1747 : 		{	// return pointer to nonmutable array
; 1748 : 		return (this->_Myptr());
; 1749 : 		}
; 1750 : 
; 1751 : #if _HAS_CXX17
; 1752 : 	_Elem *data() _NOEXCEPT
; 1753 : 		{	// return pointer to mutable array
; 1754 : 		return (this->_Myptr());
; 1755 : 		}
; 1756 : #endif /* _HAS_CXX17 */
; 1757 : 
; 1758 : 	size_type length() const _NOEXCEPT
; 1759 : 		{	// return length of sequence
; 1760 : 		return (this->_Mysize());
; 1761 : 		}
; 1762 : 
; 1763 : 	size_type size() const _NOEXCEPT
; 1764 : 		{	// return length of sequence
; 1765 : 		return (this->_Mysize());
; 1766 : 		}
; 1767 : 
; 1768 : 	size_type max_size() const _NOEXCEPT
; 1769 : 		{	// return maximum possible length of sequence
; 1770 : 		const size_type _Num = this->_Getal().max_size();
; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);
; 1772 : 		}
; 1773 : 
; 1774 : 	void resize(size_type _Newsize)
; 1775 : 		{	// determine new length, padding with null elements as needed
; 1776 : 		resize(_Newsize, _Elem());
; 1777 : 		}
; 1778 : 
; 1779 : 	void resize(size_type _Newsize, _Elem _Ch)
; 1780 : 		{	// determine new length, padding with _Ch elements as needed
; 1781 : 		if (_Newsize <= this->_Mysize())
; 1782 : 			_Eos(_Newsize);
; 1783 : 		else
; 1784 : 			append(_Newsize - this->_Mysize(), _Ch);
; 1785 : 		}
; 1786 : 
; 1787 : 	size_type capacity() const _NOEXCEPT
; 1788 : 		{	// return current length of allocated storage
; 1789 : 		return (this->_Myres());
; 1790 : 		}
; 1791 : 
; 1792 : 	void reserve(size_type _Newcap = 0)
; 1793 : 		{	// determine new minimum length of allocated storage
; 1794 : 		if (this->_Mysize() <= _Newcap && this->_Myres() != _Newcap)
; 1795 : 			{	// change reservation
; 1796 : 			size_type _Size = this->_Mysize();
; 1797 : 			if (_Grow(_Newcap, true))
; 1798 : 				_Eos(_Size);
; 1799 : 			}
; 1800 : 		}
; 1801 : 
; 1802 : 	bool empty() const _NOEXCEPT
; 1803 : 		{	// test if sequence is empty
; 1804 : 		return (this->_Mysize() == 0);
; 1805 : 		}
; 1806 : 
; 1807 : 	_SCL_INSECURE_DEPRECATE_FN(basic_string::copy)
; 1808 : 	size_type copy(_Elem *_Ptr,
; 1809 : 		size_type _Count, size_type _Off = 0) const
; 1810 : 		{	// copy [_Off, _Off + _Count) to [_Ptr, _Ptr + _Count)
; 1811 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1812 : 		_Check_offset(_Off);
; 1813 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1814 : 		_Traits::copy(_Ptr, this->_Myptr() + _Off, _Count);
; 1815 : 		return (_Count);
; 1816 : 		}
; 1817 : 
; 1818 : 	size_type _Copy_s(_Elem *_Dest, size_type _Dest_size,
; 1819 : 		size_type _Count, size_type _Off = 0) const
; 1820 : 		{	// copy [_Off, _Off + _Count) to [_Dest, _Dest + _Count)
; 1821 : 		_DEBUG_POINTER_IF(_Count != 0, _Dest);
; 1822 : 		_Check_offset(_Off);
; 1823 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1824 : 		_Traits::_Copy_s(_Dest, _Dest_size, this->_Myptr() + _Off, _Count);
; 1825 : 		return (_Count);
; 1826 : 		}
; 1827 : 
; 1828 : 	void _Swap_bx(_Myt& _Right)
; 1829 : 		{	// exchange _Bx() with _Right._Bx()
; 1830 : 		if (this->_BUF_SIZE <= this->_Myres())
; 1831 : 			if (this->_BUF_SIZE <= _Right._Myres())
; 1832 : 				_Swap_adl(this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 1833 : 			else
; 1834 : 				{	// swap large with small
; 1835 : 				pointer _Ptr = this->_Bx()._Ptr;
; 1836 : 				this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));
; 1837 : 				_Traits::copy(this->_Bx()._Buf,
; 1838 : 					_Right._Bx()._Buf, _Right._Mysize() + 1);
; 1839 : 				this->_Getal().construct(_STD addressof(_Right._Bx()._Ptr), _Ptr);
; 1840 : 				}
; 1841 : 		else
; 1842 : 			if (_Right._Myres() < this->_BUF_SIZE)
; 1843 : 				_STD swap(this->_Bx()._Buf, _Right._Bx()._Buf);
; 1844 : 			else
; 1845 : 				{	// swap small with large
; 1846 : 				pointer _Ptr = _Right._Bx()._Ptr;
; 1847 : 				this->_Getal().destroy(_STD addressof(_Right._Bx()._Ptr));
; 1848 : 				_Traits::copy(_Right._Bx()._Buf,
; 1849 : 					this->_Bx()._Buf, this->_Mysize() + 1);
; 1850 : 				this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Ptr);
; 1851 : 				}
; 1852 : 		}
; 1853 : 
; 1854 : 	void swap(_Myt& _Right)
; 1855 : 		_NOEXCEPT_OP(_Alty::propagate_on_container_swap::value
; 1856 : 			|| _Alty::is_always_equal::value)
; 1857 : 		{	// exchange contents with _Right
; 1858 : 		if (this != &_Right)
; 1859 : 			{	// (maybe) swap allocators, swap control information
; 1860 : 			_Pocs(this->_Getal(), _Right._Getal());
; 1861 : 			this->_Swap_all(_Right);
; 1862 : 			_Swap_bx(_Right);
; 1863 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1864 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1865 : 			}
; 1866 : 		}
; 1867 : 
; 1868 : 	size_type find(const _Myt& _Right, size_type _Off = 0) const _NOEXCEPT
; 1869 : 		{	// look for _Right beginning at or after _Off
; 1870 : 		return (find(_Right._Myptr(), _Off, _Right.size()));
; 1871 : 		}
; 1872 : 
; 1873 : 	size_type find(const _Elem *_Ptr,
; 1874 : 		size_type _Off, size_type _Count) const
; 1875 : 		{	// look for [_Ptr, _Ptr + _Count) beginning at or after _Off
; 1876 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1877 : 		if (_Count == 0 && _Off <= this->_Mysize())
; 1878 : 			return (_Off);	// null string always matches (if inside string)
; 1879 : 
; 1880 : 		size_type _Nm;
; 1881 : 		if (_Off < this->_Mysize() && _Count <= (_Nm = this->_Mysize() - _Off))
; 1882 : 			{	// room for match, look for it
; 1883 : 			const _Elem *_Uptr, *_Vptr;
; 1884 : 			for (_Nm -= _Count - 1, _Vptr = this->_Myptr() + _Off;
; 1885 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1886 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)
; 1887 : 				if (_Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1888 : 					return (_Uptr - this->_Myptr());	// found a match
; 1889 : 			}
; 1890 : 
; 1891 : 		return (npos);	// no match
; 1892 : 		}
; 1893 : 
; 1894 : 	size_type find(const _Elem *_Ptr, size_type _Off = 0) const
; 1895 : 		{	// look for [_Ptr, <null>) beginning at or after _Off
; 1896 : 		_DEBUG_POINTER(_Ptr);
; 1897 : 		return (find(_Ptr, _Off, _Traits::length(_Ptr)));
; 1898 : 		}
; 1899 : 
; 1900 : 	size_type find(_Elem _Ch, size_type _Off = 0) const
; 1901 : 		{	// look for _Ch at or after _Off
; 1902 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1903 : 		}
; 1904 : 
; 1905 : 	size_type rfind(const _Myt& _Right, size_type _Off = npos) const _NOEXCEPT
; 1906 : 		{	// look for _Right beginning before _Off
; 1907 : 		return (rfind(_Right._Myptr(), _Off, _Right.size()));
; 1908 : 		}
; 1909 : 
; 1910 : 	size_type rfind(const _Elem *_Ptr,
; 1911 : 		size_type _Off, size_type _Count) const
; 1912 : 		{	// look for [_Ptr, _Ptr + _Count) beginning before _Off
; 1913 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1914 : 		if (_Count == 0)
; 1915 : 			return (_Off < this->_Mysize() ? _Off
; 1916 : 				: this->_Mysize());	// null always matches
; 1917 : 		if (_Count <= this->_Mysize())
; 1918 : 			{	// room for match, look for it
; 1919 : 			const _Elem *_Uptr = this->_Myptr() +
; 1920 : 				(_Off < this->_Mysize() - _Count ? _Off
; 1921 : 					: this->_Mysize() - _Count);
; 1922 : 			for (; ; --_Uptr)
; 1923 : 				if (_Traits::eq(*_Uptr, *_Ptr)
; 1924 : 					&& _Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1925 : 					return (_Uptr - this->_Myptr());	// found a match
; 1926 : 				else if (_Uptr == this->_Myptr())
; 1927 : 					break;	// at beginning, no more chance for match
; 1928 : 			}
; 1929 : 
; 1930 : 		return (npos);	// no match
; 1931 : 		}
; 1932 : 
; 1933 : 	size_type rfind(const _Elem *_Ptr, size_type _Off = npos) const
; 1934 : 		{	// look for [_Ptr, <null>) beginning before _Off
; 1935 : 		_DEBUG_POINTER(_Ptr);
; 1936 : 		return (rfind(_Ptr, _Off, _Traits::length(_Ptr)));
; 1937 : 		}
; 1938 : 
; 1939 : 	size_type rfind(_Elem _Ch, size_type _Off = npos) const
; 1940 : 		{	// look for _Ch before _Off
; 1941 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 1942 : 		}
; 1943 : 
; 1944 : 	size_type find_first_of(const _Myt& _Right,
; 1945 : 		size_type _Off = 0) const _NOEXCEPT
; 1946 : 		{	// look for one of _Right at or after _Off
; 1947 : 		return (find_first_of(_Right._Myptr(), _Off, _Right.size()));
; 1948 : 		}
; 1949 : 
; 1950 : 	size_type find_first_of(const _Elem *_Ptr,
; 1951 : 		size_type _Off, size_type _Count) const
; 1952 : 		{	// look for one of [_Ptr, _Ptr + _Count) at or after _Off
; 1953 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1954 : 		if (0 < _Count && _Off < this->_Mysize())
; 1955 : 			{	// room for match, look for it
; 1956 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 1957 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 1958 : 				_Uptr < _Vptr; ++_Uptr)
; 1959 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1960 : 					return (_Uptr - this->_Myptr());	// found a match
; 1961 : 			}
; 1962 : 
; 1963 : 		return (npos);	// no match
; 1964 : 		}
; 1965 : 
; 1966 : 	size_type find_first_of(const _Elem *_Ptr,
; 1967 : 		size_type _Off = 0) const
; 1968 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 1969 : 		_DEBUG_POINTER(_Ptr);
; 1970 : 		return (find_first_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 1971 : 		}
; 1972 : 
; 1973 : 	size_type find_first_of(_Elem _Ch,
; 1974 : 		size_type _Off = 0) const
; 1975 : 		{	// look for _Ch at or after _Off
; 1976 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1977 : 		}
; 1978 : 
; 1979 : 	size_type find_last_of(const _Myt& _Right,
; 1980 : 		size_type _Off = npos) const _NOEXCEPT
; 1981 : 		{	// look for one of _Right before _Off
; 1982 : 		return (find_last_of(_Right._Myptr(), _Off, _Right.size()));
; 1983 : 		}
; 1984 : 
; 1985 : 	size_type find_last_of(const _Elem *_Ptr,
; 1986 : 		size_type _Off, size_type _Count) const
; 1987 : 		{	// look for one of [_Ptr, _Ptr + _Count) before _Off
; 1988 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1989 : 		if (0 < _Count && 0 < this->_Mysize())
; 1990 : 			{	// worth searching, do it
; 1991 : 			const _Elem *_Uptr = this->_Myptr()
; 1992 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 1993 : 			for (; ; --_Uptr)
; 1994 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1995 : 					return (_Uptr - this->_Myptr());	// found a match
; 1996 : 				else if (_Uptr == this->_Myptr())
; 1997 : 					break;	// at beginning, no more chance for match
; 1998 : 			}
; 1999 : 
; 2000 : 		return (npos);	// no match
; 2001 : 		}
; 2002 : 
; 2003 : 	size_type find_last_of(const _Elem *_Ptr,
; 2004 : 		size_type _Off = npos) const
; 2005 : 		{	// look for one of [_Ptr, <null>) before _Off
; 2006 : 		_DEBUG_POINTER(_Ptr);
; 2007 : 		return (find_last_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2008 : 		}
; 2009 : 
; 2010 : 	size_type find_last_of(_Elem _Ch,
; 2011 : 		size_type _Off = npos) const
; 2012 : 		{	// look for _Ch before _Off
; 2013 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 2014 : 		}
; 2015 : 
; 2016 : 	size_type find_first_not_of(const _Myt& _Right,
; 2017 : 		size_type _Off = 0) const _NOEXCEPT
; 2018 : 		{	// look for none of _Right at or after _Off
; 2019 : 		return (find_first_not_of(_Right._Myptr(), _Off,
; 2020 : 			_Right.size()));
; 2021 : 		}
; 2022 : 
; 2023 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2024 : 		size_type _Off, size_type _Count) const
; 2025 : 		{	// look for none of [_Ptr, _Ptr + _Count) at or after _Off
; 2026 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2027 : 		if (_Off < this->_Mysize())
; 2028 : 			{	// room for match, look for it
; 2029 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 2030 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 2031 : 				_Uptr < _Vptr; ++_Uptr)
; 2032 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2033 : 					return (_Uptr - this->_Myptr());
; 2034 : 			}
; 2035 : 		return (npos);
; 2036 : 		}
; 2037 : 
; 2038 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2039 : 		size_type _Off = 0) const
; 2040 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 2041 : 		_DEBUG_POINTER(_Ptr);
; 2042 : 		return (find_first_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2043 : 		}
; 2044 : 
; 2045 : 	size_type find_first_not_of(_Elem _Ch,
; 2046 : 		size_type _Off = 0) const
; 2047 : 		{	// look for non _Ch at or after _Off
; 2048 : 		return (find_first_not_of((const _Elem *)&_Ch, _Off, 1));
; 2049 : 		}
; 2050 : 
; 2051 : 	size_type find_last_not_of(const _Myt& _Right,
; 2052 : 		size_type _Off = npos) const _NOEXCEPT
; 2053 : 		{	// look for none of _Right before _Off
; 2054 : 		return (find_last_not_of(_Right._Myptr(), _Off, _Right.size()));
; 2055 : 		}
; 2056 : 
; 2057 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2058 : 		size_type _Off, size_type _Count) const
; 2059 : 		{	// look for none of [_Ptr, _Ptr + _Count) before _Off
; 2060 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2061 : 		if (0 < this->_Mysize())
; 2062 : 			{	// worth searching, do it
; 2063 : 			const _Elem *_Uptr = this->_Myptr()
; 2064 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 2065 : 			for (; ; --_Uptr)
; 2066 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2067 : 					return (_Uptr - this->_Myptr());
; 2068 : 				else if (_Uptr == this->_Myptr())
; 2069 : 					break;
; 2070 : 			}
; 2071 : 		return (npos);
; 2072 : 		}
; 2073 : 
; 2074 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2075 : 		size_type _Off = npos) const
; 2076 : 		{	// look for none of [_Ptr, <null>) before _Off
; 2077 : 		_DEBUG_POINTER(_Ptr);
; 2078 : 		return (find_last_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2079 : 		}
; 2080 : 
; 2081 : 	size_type find_last_not_of(_Elem _Ch,
; 2082 : 		size_type _Off = npos) const
; 2083 : 		{	// look for non _Ch before _Off
; 2084 : 		return (find_last_not_of((const _Elem *)&_Ch, _Off, 1));
; 2085 : 		}
; 2086 : 
; 2087 : 	_Myt substr(size_type _Off = 0, size_type _Count = npos) const
; 2088 : 		{	// return [_Off, _Off + _Count) as new string
; 2089 : 		return (_Myt(*this, _Off, _Count, get_allocator()));
; 2090 : 		}
; 2091 : 
; 2092 : 	static int _Traits_compare(const _Elem * const _Left, const size_type _Left_size,
; 2093 : 		const _Elem * const _Right, const size_type _Right_size)
; 2094 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 2095 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;
; 2096 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);
; 2097 : 
; 2098 : 		if (_Ans != 0)
; 2099 : 			return (_Ans);
; 2100 : 
; 2101 : 		if (_Left_size < _Right_size)
; 2102 : 			return (-1);
; 2103 : 
; 2104 : 		if (_Left_size > _Right_size)
; 2105 : 			return (1);
; 2106 : 
; 2107 : 		return (0);
; 2108 : 		}
; 2109 : 
; 2110 : 	size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const
; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off
; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;
; 2113 : 		if (_Size <= _Max_effective_size)
; 2114 : 			return (_Size);
; 2115 : 		else
; 2116 : 			return (_Max_effective_size);
; 2117 : 		}
; 2118 : 
; 2119 : 	int compare(const _Myt& _Right) const _NOEXCEPT
; 2120 : 		{	// compare [0, _Mysize()) with _Right
; 2121 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2122 : 			_Right._Myptr(), _Right._Mysize()));
; 2123 : 		}
; 2124 : 
; 2125 : 	int compare(size_type _Off,
; 2126 : 		size_type _N0, const _Myt& _Right) const
; 2127 : 		{	// compare [_Off, _Off + _N0) with _Right
; 2128 : 		_Check_offset(_Off);
; 2129 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2130 : 			_Right._Myptr(), _Right._Mysize()));
; 2131 : 		}
; 2132 : 
; 2133 : 	int compare(size_type _Off,
; 2134 : 		size_type _N0, const _Myt& _Right,
; 2135 : 		size_type _Roff, size_type _Count = npos) const
; 2136 : 		{	// compare [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 2137 : 		_Check_offset(_Off);
; 2138 : 		_Right._Check_offset(_Roff);
; 2139 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2140 : 			_Right._Myptr() + _Roff, _Right._Clamp_suffix_size(_Roff, _Count)));
; 2141 : 		}
; 2142 : 
; 2143 : 	int compare(const _Elem *_Ptr) const
; 2144 : 		{	// compare [0, _Mysize()) with [_Ptr, <null>)
; 2145 : 		_DEBUG_POINTER(_Ptr);
; 2146 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2147 : 			_Ptr, _Traits::length(_Ptr)));
; 2148 : 		}
; 2149 : 
; 2150 : 	int compare(size_type _Off, size_type _N0, const _Elem *_Ptr) const
; 2151 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, <null>)
; 2152 : 		_DEBUG_POINTER(_Ptr);
; 2153 : 		_Check_offset(_Off);
; 2154 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2155 : 			_Ptr, _Traits::length(_Ptr)));
; 2156 : 		}
; 2157 : 
; 2158 : 	int compare(size_type _Off,
; 2159 : 		size_type _N0, const _Elem *_Ptr, size_type _Count) const
; 2160 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 2161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2162 : 		_Check_offset(_Off);
; 2163 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2164 : 			_Ptr, _Count));
; 2165 : 		}
; 2166 : 
; 2167 : 	allocator_type get_allocator() const _NOEXCEPT
; 2168 : 		{	// return allocator object for values
; 2169 : 		allocator_type _Ret(this->_Getal());
; 2170 : 		return (_Ret);
; 2171 : 		}
; 2172 : 
; 2173 : 	void _Chassign(size_type _Off, size_type _Count, _Elem _Ch)
; 2174 : 		{	// assign _Count copies of _Ch beginning at _Off
; 2175 : 		if (_Count == 1)
; 2176 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);
; 2177 : 		else
; 2178 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);
; 2179 : 		}
; 2180 : 
; 2181 : 	void _Copy(size_type _Newsize, size_type _Oldlen)
; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer
; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;
; 2184 : 		if (max_size() < _Newres)
; 2185 : 			_Newres = _Newsize;	// undo roundup if too big
; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)
; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)
; 2189 : 			_Newres = this->_Myres()
; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else
; 2192 : 			_Newres = max_size();	// settle for max_size()
; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN
; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL

  0002f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00034	53		 push	 rbx
  00035	55		 push	 rbp
  00036	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 734  : 		return (_Get_data()._Myres);

  0003d	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00041	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00045	48 83 f8 10	 cmp	 rax, 16
  00049	72 57		 jb	 SHORT $LN236@catch$106

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));
; 2255 : 			if (0 < _Newsize)
; 2256 : 				_Traits::copy(this->_Bx()._Buf,
; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004b	48 ff c0	 inc	 rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 716  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0004e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00051	48 83 f8 ff	 cmp	 rax, -1
  00055	76 06		 jbe	 SHORT $LN230@catch$106
  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN230@catch$106:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0005d	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00063	72 38		 jb	 SHORT $LN231@catch$106

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00065	f6 c1 1f	 test	 cl, 31
  00068	74 06		 je	 SHORT $LN232@catch$106
  0006a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006f	cc		 int	 3
$LN232@catch$106:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00070	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00074	48 3b c1	 cmp	 rax, rcx
  00077	72 06		 jb	 SHORT $LN233@catch$106
  00079	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007e	cc		 int	 3
$LN233@catch$106:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0007f	48 2b c8	 sub	 rcx, rax
  00082	48 83 f9 08	 cmp	 rcx, 8
  00086	73 06		 jae	 SHORT $LN234@catch$106
  00088	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0008d	cc		 int	 3
$LN234@catch$106:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0008e	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00092	76 06		 jbe	 SHORT $LN235@catch$106
  00094	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00099	cc		 int	 3
$LN235@catch$106:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0009a	48 8b c8	 mov	 rcx, rax
$LN231@catch$106:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0009d	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN236@catch$106:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000a2	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

  000aa	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 514  : 		return (this->_BUF_SIZE <= _Myres

  000b2	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000b7	72 03		 jb	 SHORT $LN260@catch$106
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef

; 740  : 	return (_Ptr);

  000b9	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN260@catch$106:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\iosfwd

; 565  : 		_Left = _Right;

  000bc	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 2203 : 			_RERAISE;

  000bf	33 d2		 xor	 edx, edx
  000c1	33 c9		 xor	 ecx, ecx
  000c3	e8 00 00 00 00	 call	 _CxxThrowException
  000c8	90		 npad	 1
?catch$106@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$106
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 1770 : 		const size_type _Num = this->_Getal().max_size();
; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	48 c7 c0 fe ff
	ff ff		 mov	 rax, -2

; 1772 : 		}

  00007	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 715  : 		{	// deallocate object at _Ptr

$LN18:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00004	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0000b	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0000d	f6 c2 1f	 test	 dl, 31
  00010	75 27		 jne	 SHORT $LN13@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00012	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00016	48 3b c2	 cmp	 rax, rdx
  00019	73 24		 jae	 SHORT $LN15@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0001b	48 2b d0	 sub	 rdx, rax
  0001e	48 83 fa 08	 cmp	 rdx, 8
  00022	72 21		 jb	 SHORT $LN16@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00024	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  00028	77 21		 ja	 SHORT $LN17@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0002a	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0002d	48 8b ca	 mov	 rcx, rdx

; 716  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 717  : 		}

  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00034	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00039	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0003e	cc		 int	 3
$LN15@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN16@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN17@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??0?$allocator@D@std@@QEAA@AEBV01@@Z PROC		; std::allocator<char>::allocator<char>, COMDAT

; 700  : 		{	// construct by copying (do nothing)
; 701  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_second, COMDAT

; 320  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 321  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_first, COMDAT

; 300  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 301  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SA_KAEBV?$allocator@UCard@@@2@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
?max_size@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SA_KAEBV?$allocator@UCard@@@2@@Z PROC ; std::allocator_traits<std::allocator<Card> >::max_size, COMDAT

; 865  : 		return (_Al.max_size());

  00000	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 866  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SA_KAEBV?$allocator@UCard@@@2@@Z ENDP ; std::allocator_traits<std::allocator<Card> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?allocate@?$allocator@UCard@@@std@@QEAAPEAUCard@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UCard@@@std@@QEAAPEAUCard@@_K@Z PROC ; std::allocator<Card>::allocate, COMDAT

; 720  : 		{	// allocate array of _Count elements

$LN17:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 09		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c9		 xor	 ecx, ecx

; 721  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  0000b	8b c1		 mov	 eax, ecx

; 722  : 		}

  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00011	c3		 ret	 0
$LN4@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00012	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0001c	48 3b d0	 cmp	 rdx, rax
  0001f	77 3f		 ja	 SHORT $LN14@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  00021	48 8d 0c 12	 lea	 rcx, QWORD PTR [rdx+rdx]

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00025	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0002c	72 25		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002e	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00032	48 3b c1	 cmp	 rax, rcx
  00035	76 2f		 jbe	 SHORT $LN16@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0003f	48 8d 48 27	 lea	 rcx, QWORD PTR [rax+39]
  00043	48 83 e1 e0	 and	 rcx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00047	48 89 41 f8	 mov	 QWORD PTR [rcx-8], rax

; 721  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  0004b	48 8b c1	 mov	 rax, rcx

; 722  : 		}

  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00053	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00058	48 8b c8	 mov	 rcx, rax

; 722  : 		}

  0005b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005f	c3		 ret	 0
$LN14@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00060	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00065	cc		 int	 3
$LN16@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00066	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006b	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@UCard@@@std@@QEAAPEAUCard@@_K@Z ENDP ; std::allocator<Card>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 320  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 321  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 300  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 301  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 865  : 		return (_Al.max_size());

  00000	48 83 c8 ff	 or	 rax, -1

; 866  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 720  : 		{	// allocate array of _Count elements

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 09		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c9		 xor	 ecx, ecx

; 721  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  0000b	8b c1		 mov	 eax, ecx

; 722  : 		}

  0000d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00011	c3		 ret	 0
$LN4@allocate:

; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00012	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  00019	72 22		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0001b	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  0001f	48 3b ca	 cmp	 rcx, rdx
  00022	76 29		 jbe	 SHORT $LN14@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00024	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);
; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00029	48 8d 48 27	 lea	 rcx, QWORD PTR [rax+39]
  0002d	48 83 e1 e0	 and	 rcx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00031	48 89 41 f8	 mov	 QWORD PTR [rcx-8], rax

; 721  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  00035	48 8b c1	 mov	 rax, rcx

; 722  : 		}

  00038	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003c	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  0003d	48 8b ca	 mov	 rcx, rdx
  00040	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00045	48 8b c8	 mov	 rcx, rax

; 722  : 		}

  00048	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004c	c3		 ret	 0
$LN14@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0004d	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00052	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$allocator@UCard@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$allocator@UCard@@@std@@QEBA_KXZ PROC	; std::allocator<Card>::max_size, COMDAT

; 745  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 746  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator@UCard@@@std@@QEBA_KXZ ENDP	; std::allocator<Card>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$allocator@D@std@@QEBA_KXZ PROC		; std::allocator<char>::max_size, COMDAT

; 745  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 83 c8 ff	 or	 rax, -1

; 746  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator@D@std@@QEBA_KXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c2 00 00	 ret	 0
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$cbegin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$cbegin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z PROC ; std::cbegin<std::vector<char,std::allocator<char> > >, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 1397 : 	return (_STD begin(_Cont));

  00006	48 8b c1	 mov	 rax, rcx

; 1398 : 	}

  00009	c3		 ret	 0
??$cbegin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ENDP ; std::cbegin<std::vector<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$cend@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$cend@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z PROC ; std::cend<std::vector<char,std::allocator<char> > >, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 1405 : 	return (_STD end(_Cont));

  00007	48 8b c1	 mov	 rax, rcx

; 1406 : 	}

  0000a	c3		 ret	 0
??$cend@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ENDP ; std::cend<std::vector<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
;	COMDAT ??$addressof@$$CBUCard@@@std@@YAPEBUCard@@AEBU1@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBUCard@@@std@@YAPEBUCard@@AEBU1@@Z PROC	; std::addressof<Card const >, COMDAT

; 725  : 	return (__builtin_addressof(_Val));

  00000	48 8b c1	 mov	 rax, rcx

; 726  : 	}

  00003	c3		 ret	 0
??$addressof@$$CBUCard@@@std@@YAPEBUCard@@AEBU1@@Z ENDP	; std::addressof<Card const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
;	COMDAT ??$_Unfancy@UCard@@@std@@YAPEAUCard@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UCard@@@std@@YAPEAUCard@@PEAU1@@Z PROC	; std::_Unfancy<Card>, COMDAT

; 740  : 	return (_Ptr);

  00000	48 8b c1	 mov	 rax, rcx

; 741  : 	}

  00003	c3		 ret	 0
??$_Unfancy@UCard@@@std@@YAPEAUCard@@PEAU1@@Z ENDP	; std::_Unfancy<Card>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@AEAU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEAU2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@AEAU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN13@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN13@construct:

; 991  : 		_Mytraits::construct(*this, _Ptr,
; 992  : 			_STD forward<_Types>(_Args)...);
; 993  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@AEAU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@AEBU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEBU2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@AEBU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEBU2@@Z PROC ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card const & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN13@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN13@construct:

; 991  : 		_Mytraits::construct(*this, _Ptr,
; 992  : 			_STD forward<_Types>(_Args)...);
; 993  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@AEBU1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@AEBU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<Card> > & __ptr64>, COMDAT

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1293 : 	}

  00003	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<Card> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > ><std::_Wrap_alloc<std::allocator<Card> >,void>, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 529  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > >::_Vector_alloc<std::_Vec_base_types<Card,std::allocator<Card> > ><std::_Wrap_alloc<std::allocator<Card> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@V?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAV?$vector@UCard@@V?$allocator@UCard@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAV?$vector@UCard@@V?$allocator@UCard@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::vector<Card,std::allocator<Card> > >, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@V?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAV?$vector@UCard@@V?$allocator@UCard@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::vector<Card,std::allocator<Card> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 740  : 	return (_Ptr);

  00000	48 8b c1	 mov	 rax, rcx

; 741  : 	}

  00003	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Count$ = 16
_Al$dead$ = 24
??$_Uninitialized_default_fill_n@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<char * __ptr64,unsigned __int64,std::allocator<char> >, COMDAT

; 471  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

  00000	4c 8b c2	 mov	 r8, rdx
  00003	33 d2		 xor	 edx, edx
  00005	e9 00 00 00 00	 jmp	 memset
??$_Uninitialized_default_fill_n@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<char * __ptr64,unsigned __int64,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>, COMDAT

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1293 : 	}

  00003	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 529  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > >::_Vector_alloc<std::_Vec_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA$$QEAV?$vector@DV?$allocator@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA$$QEAV?$vector@DV?$allocator@D@std@@@0@AEAV10@@Z PROC ; std::forward<std::vector<char,std::allocator<char> > >, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA$$QEAV?$vector@DV?$allocator@D@std@@@0@AEAV10@@Z ENDP ; std::forward<std::vector<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1><>, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 281  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1><>, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 281  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring

; 496  : 		_Mysize(0),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 497  : 		_Myres(0)

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 281  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char * __ptr64>, COMDAT

; 725  : 	return (__builtin_addressof(_Val));

  00000	48 8b c1	 mov	 rax, rcx

; 726  : 	}

  00003	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$dead$ = 16
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 999  : 		_Mytraits::destroy(*this, _Ptr);
; 1000 : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN13@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN13@construct:

; 991  : 		_Mytraits::construct(*this, _Ptr,
; 992  : 			_STD forward<_Types>(_Args)...);
; 993  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??$_Umove@PEAUCard@@@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAPEAUCard@@PEAU2@00@Z
_TEXT	SEGMENT
this$dead$ = 64
_First$ = 72
_Last$ = 80
_Ptr$ = 88
??$_Umove@PEAUCard@@@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAPEAUCard@@PEAU2@00@Z PROC ; std::vector<Card,std::allocator<Card> >::_Umove<Card * __ptr64>, COMDAT

; 1658 : 		{	// move initializing [_First, _Last), using allocator

$LN27:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	49 8b c0	 mov	 rax, r8
  00007	48 8b ca	 mov	 rcx, rdx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  0000a	48 8b d0	 mov	 rdx, rax
  0000d	4d 8b c1	 mov	 r8, r9
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1661 : 		}

  00015	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00019	c3		 ret	 0
??$_Umove@PEAUCard@@@?$vector@UCard@@V?$allocator@UCard@@@std@@@std@@IEAAPEAUCard@@PEAU2@00@Z ENDP ; std::vector<Card,std::allocator<Card> >::_Umove<Card * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Card>,Card * __ptr64>, COMDAT

; 1111 : 		// note that this is an optimization for debug mode codegen;
; 1112 : 		// in release mode the BE removes all of this
; 1113 : 	typedef typename _Alloc::value_type _Val;
; 1114 : 	_Destroy_range1(_First, _Last, _Al, conjunction<
; 1115 : 		is_trivially_destructible<_Val>,
; 1116 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1117 : 	}

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Card>,Card * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??$_Umove@PEAD@?$vector@DV?$allocator@D@std@@@std@@IEAAPEADPEAD00@Z
_TEXT	SEGMENT
this$dead$ = 48
_First$ = 56
_Last$ = 64
_Ptr$ = 72
??$_Umove@PEAD@?$vector@DV?$allocator@D@std@@@std@@IEAAPEADPEAD00@Z PROC ; std::vector<char,std::allocator<char> >::_Umove<char * __ptr64>, COMDAT

; 1658 : 		{	// move initializing [_First, _Last), using allocator

$LN28:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b d8	 mov	 rbx, r8
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  0000d	49 8b c9	 mov	 rcx, r9
  00010	48 2b da	 sub	 rbx, rdx
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1658 : 		{	// move initializing [_First, _Last), using allocator

  00013	49 8b f9	 mov	 rdi, r9
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00016	4c 8b c3	 mov	 r8, rbx
  00019	e8 00 00 00 00	 call	 memmove

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  0001e	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 1661 : 		}

  00022	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00027	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Umove@PEAD@?$vector@DV?$allocator@D@std@@@std@@IEAAPEADPEAD00@Z ENDP ; std::vector<char,std::allocator<char> >::_Umove<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<char>,char * __ptr64>, COMDAT

; 1111 : 		// note that this is an optimization for debug mode codegen;
; 1112 : 		// in release mode the BE removes all of this
; 1113 : 	typedef typename _Alloc::value_type _Val;
; 1114 : 	_Destroy_range1(_First, _Last, _Al, conjunction<
; 1115 : 		is_trivially_destructible<_Val>,
; 1116 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1117 : 	}

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<char>,char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<Card> >::_Vector_val<std::_Simple_types<Card> >, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UCard@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<Card> >::_Vector_val<std::_Simple_types<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<Card> >::_Wrap_alloc<std::allocator<Card> >, COMDAT

; 933  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<Card> >::_Wrap_alloc<std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >, COMDAT

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 496  : 		_Mysize(0),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 497  : 		_Myres(0)

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 499  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 933  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 696  : 		{	// construct default allocator (do nothing)
; 697  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$allocator@UCard@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UCard@@@std@@QEAA@XZ PROC		; std::allocator<Card>::allocator<Card>, COMDAT

; 696  : 		{	// construct default allocator (do nothing)
; 697  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@UCard@@@std@@QEAA@XZ ENDP		; std::allocator<Card>::allocator<Card>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 529  : 			{	// user-provided, for fancy pointers
; 530  : 			}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$begin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$begin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z PROC ; std::begin<std::vector<char,std::allocator<char> > >, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 1362 : 	return (_Cont.begin());

  00006	48 8b c1	 mov	 rax, rcx

; 1363 : 	}

  00009	c3		 ret	 0
??$begin@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ENDP ; std::begin<std::vector<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$end@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$end@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z PROC ; std::end<std::vector<char,std::allocator<char> > >, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 1374 : 	return (_Cont.end());

  00007	48 8b c1	 mov	 rax, rcx

; 1375 : 	}

  0000a	c3		 ret	 0
??$end@V?$vector@DV?$allocator@D@std@@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@0@AEBV?$vector@DV?$allocator@D@std@@@0@@Z ENDP ; std::end<std::vector<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@AEAUCard@@@std@@YAAEAUCard@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAUCard@@@std@@YAAEAUCard@@AEAU1@@Z PROC	; std::forward<Card & __ptr64>, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@AEAUCard@@@std@@YAAEAUCard@@AEAU1@@Z ENDP	; std::forward<Card & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@AEAU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEAU3@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@AEAU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEAU3@@Z PROC ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN8@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN8@construct:

; 853  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 854  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@AEAU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEAU3@@Z ENDP ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@AEBUCard@@@std@@YAAEBUCard@@AEBU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBUCard@@@std@@YAAEBUCard@@AEBU1@@Z PROC	; std::forward<Card const & __ptr64>, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@AEBUCard@@@std@@YAAEBUCard@@AEBU1@@Z ENDP	; std::forward<Card const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@AEBU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEBU3@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@AEBU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEBU3@@Z PROC ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card const & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN8@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN8@construct:

; 853  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 854  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@AEBU1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@AEBU3@@Z ENDP ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<Card> > >, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<Card> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1><std::_Wrap_alloc<std::allocator<Card> > >, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 290  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@UCard@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Card> >,std::_Vector_val<std::_Simple_types<Card> >,1><std::_Wrap_alloc<std::allocator<Card> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_default_fill_n1@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Count$ = 16
__formal$dead$ = 24
__formal$dead$ = 32
??$_Uninitialized_default_fill_n1@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_default_fill_n1<char * __ptr64,unsigned __int64,std::allocator<char> >, COMDAT

; 471  : 	_CSTD memset(_First, 0, _Count * sizeof(_Iter_value_t<_FwdIt>));

  00000	4c 8b c2	 mov	 r8, rdx
  00003	33 d2		 xor	 edx, edx
  00005	e9 00 00 00 00	 jmp	 memset
??$_Uninitialized_default_fill_n1@PEAD_KV?$allocator@D@std@@@std@@YAXPEAD_KAEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_default_fill_n1<char * __ptr64,unsigned __int64,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector

; 485  : 		: _Myfirst(),

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 486  : 		_Mylast(),

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 487  : 		_Myend()

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 290  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_Vector_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$dead$ = 16
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 860  : 		_Al.destroy(_Ptr);
; 861  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * __ptr64 & __ptr64>, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN8@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN8@construct:

; 853  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 854  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_move@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z PROC ; std::_Uninitialized_move<Card * __ptr64,Card * __ptr64,std::allocator<Card> >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN19:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<Card * __ptr64,Card * __ptr64,std::allocator<Card> >

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,
; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_move@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
__formal$dead$ = 32
??$_Destroy_range1@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<Card>,Card * __ptr64>, COMDAT

; 1104 : 		// nothing to do
; 1105 : 	}

  00000	c2 00 00	 ret	 0
??$_Destroy_range1@V?$allocator@UCard@@@std@@PEAUCard@@@std@@YAXPEAUCard@@0AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<Card>,Card * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z PROC ; std::_Uninitialized_move<char * __ptr64,char * __ptr64,std::allocator<char> >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN20:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

  00010	48 2b d9	 sub	 rbx, rcx

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 319  : 	}

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Uninitialized_move@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ENDP ; std::_Uninitialized_move<char * __ptr64,char * __ptr64,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
__formal$dead$ = 32
??$_Destroy_range1@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<char>,char * __ptr64>, COMDAT

; 1104 : 		// nothing to do
; 1105 : 	}

  00000	c2 00 00	 ret	 0
??$_Destroy_range1@V?$allocator@D@std@@PEAD@std@@YAXPEAD0AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<char>,char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$dead$ = 16
??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<Card> >::_Wrap_alloc<std::allocator<Card> >, COMDAT

; 943  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<Card> >::_Wrap_alloc<std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?end@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::vector<char,std::allocator<char> >::end, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1073 : 		return (const_iterator(this->_Mylast(), &this->_Get_data()));

  00007	48 8b c2	 mov	 rax, rdx

; 1074 : 		}

  0000a	c3		 ret	 0
?end@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::vector<char,std::allocator<char> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ?begin@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::vector<char,std::allocator<char> >::begin, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1063 : 		return (const_iterator(this->_Myfirst(), &this->_Get_data()));

  00006	48 8b c2	 mov	 rax, rdx

; 1064 : 		}

  00009	c3		 ret	 0
?begin@?$vector@DV?$allocator@D@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::vector<char,std::allocator<char> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$dead$ = 16
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 943  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??0?$allocator@UCard@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??0?$allocator@UCard@@@std@@QEAA@AEBV01@@Z PROC		; std::allocator<Card>::allocator<Card>, COMDAT

; 700  : 		{	// construct by copying (do nothing)
; 701  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@UCard@@@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<Card>::allocator<Card>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 48   : 		this->_Adopt(_Pvector);
; 49   : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEADPEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$_Unchecked@PEAD@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAD@std@@YAPEADPEAD@Z PROC		; std::_Unchecked<char * __ptr64>, COMDAT

; 428  : 	return (_Src);

  00000	48 8b c1	 mov	 rax, rcx

; 429  : 	}

  00003	c3		 ret	 0
??$_Unchecked@PEAD@std@@YAPEADPEAD@Z ENDP		; std::_Unchecked<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@AEAU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEAU2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@AEAU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEAU2@@Z PROC ; std::allocator<Card>::construct<Card,Card & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN3@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN3@construct:

; 734  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@AEAU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEAU2@@Z ENDP ; std::allocator<Card>::construct<Card,Card & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@AEBU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEBU2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@AEBU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEBU2@@Z PROC ; std::allocator<Card>::construct<Card,Card const & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN3@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN3@construct:

; 734  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@AEBU1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@AEBU2@@Z ENDP ; std::allocator<Card>::construct<Card,Card const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$dead$ = 16
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z PROC	; std::allocator<char>::destroy<char * __ptr64>, COMDAT

; 740  : 		_Ptr->~_Uty();
; 741  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ENDP	; std::allocator<char>::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN3@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN3@construct:

; 734  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$_Unchecked@PEAUCard@@@std@@YAPEAUCard@@PEAU1@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAUCard@@@std@@YAPEAUCard@@PEAU1@@Z PROC	; std::_Unchecked<Card * __ptr64>, COMDAT

; 428  : 	return (_Src);

  00000	48 8b c1	 mov	 rax, rcx

; 429  : 	}

  00003	c3		 ret	 0
??$_Unchecked@PEAUCard@@@std@@YAPEAUCard@@PEAU1@@Z ENDP	; std::_Unchecked<Card * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_move_al_unchecked@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<Card * __ptr64,Card * __ptr64,std::allocator<Card> >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN9:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<Card * __ptr64,Card * __ptr64,std::allocator<Card> >

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_move_al_unchecked@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$_Rechecked@PEAUCard@@PEAU1@@std@@YAAEAPEAUCard@@AEAPEAU1@PEAU1@@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEAUCard@@PEAU1@@std@@YAAEAPEAUCard@@AEAPEAU1@PEAU1@@Z PROC ; std::_Rechecked<Card * __ptr64,Card * __ptr64>, COMDAT

; 458  : 	_Dest = _Src;

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 459  : 	return (_Dest);

  00003	48 8b c1	 mov	 rax, rcx

; 460  : 	}

  00006	c3		 ret	 0
??$_Rechecked@PEAUCard@@PEAU1@@std@@YAAEAPEAUCard@@AEAPEAU1@PEAU1@@Z ENDP ; std::_Rechecked<Card * __ptr64,Card * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move_al_unchecked@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<char * __ptr64,char * __ptr64,std::allocator<char> >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

  00010	48 2b d9	 sub	 rbx, rcx

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 306  : 	}

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Uninitialized_move_al_unchecked@PEADPEADV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<char * __ptr64,char * __ptr64,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$_Rechecked@PEADPEAD@std@@YAAEAPEADAEAPEADPEAD@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEADPEAD@std@@YAAEAPEADAEAPEADPEAD@Z PROC	; std::_Rechecked<char * __ptr64,char * __ptr64>, COMDAT

; 458  : 	_Dest = _Src;

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 459  : 	return (_Dest);

  00003	48 8b c1	 mov	 rax, rcx

; 460  : 	}

  00006	c3		 ret	 0
??$_Rechecked@PEADPEAD@std@@YAAEAPEADAEAPEADPEAD@Z ENDP	; std::_Rechecked<char * __ptr64,char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$_Ptr_move_cat@UCard@@U1@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@AEBQEAUCard@@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
??$_Ptr_move_cat@UCard@@U1@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@AEBQEAUCard@@0@Z PROC ; std::_Ptr_move_cat<Card,Card>, COMDAT

; 810  : 	return {};

  00000	48 8b c1	 mov	 rax, rcx

; 811  : 	}

  00003	c3		 ret	 0
??$_Ptr_move_cat@UCard@@U1@@std@@YA?AU_Trivially_copyable_ptr_iterator_tag@0@AEBQEAUCard@@0@Z ENDP ; std::_Ptr_move_cat<Card,Card>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
_Al$dead$ = 32
__formal$dead$ = 40
__formal$dead$ = 48
??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<Card * __ptr64,Card * __ptr64,std::allocator<Card> >, COMDAT

; 273  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

  00000	45 33 c9	 xor	 r9d, r9d
  00003	4c 8b d2	 mov	 r10, rdx
  00006	4c 2b d1	 sub	 r10, rcx
  00009	49 ff c2	 inc	 r10
  0000c	49 d1 ea	 shr	 r10, 1
  0000f	48 3b ca	 cmp	 rcx, rdx
  00012	4d 0f 47 d1	 cmova	 r10, r9

; 277  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00016	4d 85 d2	 test	 r10, r10
  00019	74 1f		 je	 SHORT $LN3@Uninitiali
  0001b	49 2b c8	 sub	 rcx, r8
  0001e	66 90		 npad	 2
$LL4@Uninitiali:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00020	4d 85 c0	 test	 r8, r8
  00023	74 09		 je	 SHORT $LN2@Uninitiali
  00025	42 0f b7 04 01	 movzx	 eax, WORD PTR [rcx+r8]
  0002a	66 41 89 00	 mov	 WORD PTR [r8], ax
$LN2@Uninitiali:
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 277  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  0002e	49 83 c0 02	 add	 r8, 2
  00032	49 ff c1	 inc	 r9
  00035	4d 3b ca	 cmp	 r9, r10
  00038	75 e6		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 278  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));
; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);
; 281  : 	_RERAISE;
; 282  : 	_CATCH_END
; 283  : 
; 284  : 	return (_Dest);

  0003a	49 8b c0	 mov	 rax, r8

; 285  : 	}

  0003d	c3		 ret	 0
??$_Uninitialized_move_al_unchecked1@PEAUCard@@PEAU1@V?$allocator@UCard@@@std@@@std@@YAPEAUCard@@PEAU1@00AEAU?$_Wrap_alloc@V?$allocator@UCard@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<Card * __ptr64,Card * __ptr64,std::allocator<Card> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z PROC ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >, COMDAT

; 554  : 		constexpr _Any_tag(_Ty&&) _NOEXCEPT {}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ENDP ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$_Ptr_move_cat@DD@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAD0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
??$_Ptr_move_cat@DD@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAD0@Z PROC ; std::_Ptr_move_cat<char,char>, COMDAT

; 810  : 	return {};

  00000	48 8b c1	 mov	 rax, rcx

; 811  : 	}

  00003	c3		 ret	 0
??$_Ptr_move_cat@DD@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAD0@Z ENDP ; std::_Ptr_move_cat<char,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@DDV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
__formal$dead$ = 88
??$_Uninitialized_move_al_unchecked1@DDV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<char,char,std::allocator<char> >, COMDAT

; 292  : 	{	// move [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

  00010	48 2b d9	 sub	 rbx, rcx

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory

; 294  : 	}

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Uninitialized_move_al_unchecked1@DDV?$allocator@D@std@@@std@@YAPEADPEAD00AEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<char,char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$move@AEAUCard@@@std@@YA$$QEAUCard@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUCard@@@std@@YA$$QEAUCard@@AEAU1@@Z PROC	; std::move<Card & __ptr64>, COMDAT

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1293 : 	}

  00003	c3		 ret	 0
??$move@AEAUCard@@@std@@YA$$QEAUCard@@AEAU1@@Z ENDP	; std::move<Card & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@U1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@U1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN13@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN13@construct:

; 991  : 		_Mytraits::construct(*this, _Ptr,
; 992  : 			_STD forward<_Types>(_Args)...);
; 993  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@U1@@?$_Wrap_alloc@V?$allocator@UCard@@@std@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Card> >::construct<Card,Card>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xutility
;	COMDAT ??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z PROC	; std::_Copy_memmove<char * __ptr64,char * __ptr64>, COMDAT

; 2301 : 	{	// implement copy-like function as memmove

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	49 8b f8	 mov	 rdi, r8

; 2302 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);
; 2303 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);
; 2304 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);
; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

  00010	48 2b d9	 sub	 rbx, rcx

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00013	48 8b d1	 mov	 rdx, rcx
  00016	4c 8b c3	 mov	 r8, rbx
  00019	48 8b cf	 mov	 rcx, rdi
  0001c	e8 00 00 00 00	 call	 memmove

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  00021	48 8d 04 3b	 lea	 rax, QWORD PTR [rbx+rdi]

; 2308 : 	}

  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z ENDP	; std::_Copy_memmove<char * __ptr64,char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\type_traits
;	COMDAT ??$forward@UCard@@@std@@YA$$QEAUCard@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UCard@@@std@@YA$$QEAUCard@@AEAU1@@Z PROC	; std::forward<Card>, COMDAT

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1277 : 	}

  00003	c3		 ret	 0
??$forward@UCard@@@std@@YA$$QEAUCard@@AEAU1@@Z ENDP	; std::forward<Card>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@U1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@$$QEAU3@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@U1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@$$QEAU3@@Z PROC ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN8@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN8@construct:

; 853  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 854  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@U1@@?$allocator_traits@V?$allocator@UCard@@@std@@@std@@SAXAEAV?$allocator@UCard@@@1@PEAUCard@@$$QEAU3@@Z ENDP ; std::allocator_traits<std::allocator<Card> >::construct<Card,Card>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24206-pre\lib\native\include\xmemory0
;	COMDAT ??$construct@UCard@@U1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UCard@@U1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z PROC ; std::allocator<Card>::construct<Card,Card>, COMDAT

; 733  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 07		 je	 SHORT $LN3@construct
  00005	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00009	66 89 02	 mov	 WORD PTR [rdx], ax
$LN3@construct:

; 734  : 		}

  0000c	c3		 ret	 0
??$construct@UCard@@U1@@?$allocator@UCard@@@std@@QEAAXPEAUCard@@$$QEAU2@@Z ENDP ; std::allocator<Card>::construct<Card,Card>
_TEXT	ENDS
END
