; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24224.0 

include listing.inc

INCLUDELIB OLDNAMES

EXTRN	malloc:PROC
EXTRN	free:PROC
EXTRN	__stdio_common_vfprintf:PROC
EXTRN	puts:PROC
EXTRN	__acrt_iob_func:PROC
EXTRN	__security_check_cookie:PROC
$SG4294967289 DB 'Some string stuff.', 00H
	ORG $+5
$SG4294967288 DB 'before %016zx', 0aH, 00H
	ORG $+1
$SG4294967287 DB 'after %016zx', 0aH, 00H
CONST	ENDS
PUBLIC	??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
PUBLIC	main
PUBLIC	printf
PUBLIC	_vfprintf_l
PUBLIC	__local_stdio_printf_options
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN4
	DD	imagerel $LN4+147
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN8
	DD	imagerel $LN8+83
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
xdata	SEGMENT
$unwind$main DD	060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 81   :     static unsigned __int64 _OptionsStorage;
; 82   :     return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 83   : }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$dead$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 638  : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	49 8b d9	 mov	 rbx, r9
  00012	48 8b fa	 mov	 rdi, rdx
  00015	48 8b f1	 mov	 rsi, rcx

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	45 33 c9	 xor	 r9d, r9d
  00020	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00025	4c 8b c7	 mov	 r8, rdi
  00028	48 8b d6	 mov	 rdx, rsi
  0002b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002e	e8 00 00 00 00	 call	 __stdio_common_vfprintf

; 640  : }

  00033	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00038	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0003d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Format$ = 80
printf	PROC						; COMDAT

; 950  : {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	53		 push	 rbx
  00015	56		 push	 rsi
  00016	57		 push	 rdi
  00017	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0001b	48 8b f9	 mov	 rdi, rcx

; 951  :     int _Result;
; 952  :     va_list _ArgList;
; 953  :     __crt_va_start(_ArgList, _Format);

  0001e	48 8d 74 24 58	 lea	 rsi, QWORD PTR _Format$[rsp+8]

; 954  :     _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00023	b9 01 00 00 00	 mov	 ecx, 1
  00028	e8 00 00 00 00	 call	 __acrt_iob_func
  0002d	48 8b d8	 mov	 rbx, rax

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00030	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00035	45 33 c9	 xor	 r9d, r9d
  00038	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0003d	4c 8b c7	 mov	 r8, rdi
  00040	48 8b d3	 mov	 rdx, rbx
  00043	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00046	e8 00 00 00 00	 call	 __stdio_common_vfprintf

; 955  :     __crt_va_end(_ArgList);
; 956  :     return _Result;
; 957  : }

  0004b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004f	5f		 pop	 rdi
  00050	5e		 pop	 rsi
  00051	5b		 pop	 rbx
  00052	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\ptr48bit.cc
_TEXT	SEGMENT
someStuff$1$ = 32
main	PROC

; 6    : int main() {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 7    :   const char someStuff[] = "Some string stuff.";

  0000f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR $SG4294967289
  00016	0f b7 3d 10 00
	00 00		 movzx	 edi, WORD PTR $SG4294967289+16

; 8    :   const int size = 123;
; 9    : 
; 10   :   char *str = static_cast<char *>(malloc(size));

  0001d	b9 7b 00 00 00	 mov	 ecx, 123		; 0000007bH
  00022	0f b6 35 12 00
	00 00		 movzx	 esi, BYTE PTR $SG4294967289+18
  00029	0f 11 44 24 20	 movups	 XMMWORD PTR someStuff$1$[rsp], xmm0
  0002e	e8 00 00 00 00	 call	 malloc

; 11   :   printf("before %016zx\n", reinterpret_cast<size_t>(str));

  00033	48 8b d0	 mov	 rdx, rax
  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG4294967288
  0003d	48 8b d8	 mov	 rbx, rax
  00040	e8 00 00 00 00	 call	 printf

; 12   :   str = reinterpret_cast<char *>(reinterpret_cast<size_t>(str) |

  00045	48 b8 00 00 00
	00 00 f0 ff 0f	 mov	 rax, 1152903912420802560 ; 0ffff00000000000H

; 13   :                                  0x0FFFF00000000000);
; 14   :   printf("after %016zx\n", reinterpret_cast<size_t>(str));

  0004f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG4294967287
  00056	48 0b d8	 or	 rbx, rax
  00059	48 8b d3	 mov	 rdx, rbx
  0005c	e8 00 00 00 00	 call	 printf

; 15   :   memcpy(str, someStuff, sizeof(someStuff));

  00061	0f 10 44 24 20	 movups	 xmm0, XMMWORD PTR someStuff$1$[rsp]

; 16   :   puts(str);

  00066	48 8b cb	 mov	 rcx, rbx
  00069	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  0006c	66 89 7b 10	 mov	 WORD PTR [rbx+16], di
  00070	40 88 73 12	 mov	 BYTE PTR [rbx+18], sil
  00074	e8 00 00 00 00	 call	 puts

; 17   :   free(str);

  00079	48 8b cb	 mov	 rcx, rbx
  0007c	e8 00 00 00 00	 call	 free

; 18   :   return 0;
; 19   : }

  00081	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00086	33 c0		 xor	 eax, eax
  00088	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0008d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00091	5f		 pop	 rdi
  00092	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\packages\visualcpptools.14.0.24224-pre\lib\native\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c2 00 00	 ret	 0
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
_TEXT	ENDS
END
