; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception?$AA@	; `string'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@	; `string'
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	??_C@_04LOAJBDKD@true?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ ; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@	; `string'
PUBLIC	??_C@_02BBAHNLBA@?$CFp?$AA@			; `string'
PUBLIC	??_C@_02CLHGNPPK@Lu?$AA@			; `string'
PUBLIC	??_C@_02HIKPPMOK@Ld?$AA@			; `string'
PUBLIC	??_C@_02BDDLJJBK@lu?$AA@			; `string'
PUBLIC	??_C@_02EAOCLKAK@ld?$AA@			; `string'
PUBLIC	??_C@_02MDKMJEGG@eE?$AA@			; `string'
PUBLIC	??_C@_02OOPEBDOJ@pP?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@8 ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > `RTTI Type Descriptor'
PUBLIC	_CTA1?AVWin32Error@wwatch@@
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	_CT??_R0?AVexception@std@@@824
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	_TI1?AVWin32Error@wwatch@@
PUBLIC	??_R0?AVWin32Error@wwatch@@@8			; wwatch::Win32Error `RTTI Type Descriptor'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ctype@_W@std@@8				; std::ctype<wchar_t>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	_CT??_R0?AVfailure@ios_base@std@@@840
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVWin32Error@wwatch@@@840
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$ctype@_W@std@@8				; std::ctype<wchar_t>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$numpunct@_W@std@@8			; std::numpunct<wchar_t>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_R17?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_R1A@?0A@EA@?$ctype@_W@std@@8			; std::ctype<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	_TI2?AVruntime_error@std@@
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	_CT??_R0?AVruntime_error@std@@@824
PUBLIC	_CT??_R0?AVbad_cast@std@@@824
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AV?$numpunct@_W@std@@@8			; std::numpunct<wchar_t> `RTTI Type Descriptor'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R3?$numpunct@_W@std@@8			; std::numpunct<wchar_t>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@?$numpunct@_W@std@@8		; std::numpunct<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8 ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	_CTA5?AVfailure@ios_base@std@@
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$ctype@_W@std@@6B@				; std::ctype<wchar_t>::`vftable'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8 ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Base Class Array'
PUBLIC	?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
PUBLIC	?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<wchar_t> >::_Psave
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
PUBLIC	?_Psave@?$_Facetptr@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >::_Psave
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8 ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Facet_base@std@@6B@			; std::_Facet_base::`RTTI Complete Object Locator'
PUBLIC	_CTA2?AVruntime_error@std@@
PUBLIC	??_7?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@ ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`vftable'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	_CT??_R0?AV_System_error@std@@@840
PUBLIC	??_R4?$numpunct@_W@std@@6B@			; std::numpunct<wchar_t>::`RTTI Complete Object Locator'
PUBLIC	??_7_Facet_base@std@@6B@			; std::_Facet_base::`vftable'
PUBLIC	??_R4?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@ ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Complete Object Locator'
PUBLIC	_CT??_R0?AVsystem_error@std@@@840
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$ctype@_W@std@@@8			; std::ctype<wchar_t> `RTTI Type Descriptor'
PUBLIC	_TI5?AVfailure@ios_base@std@@
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_7?$numpunct@_W@std@@6B@			; std::numpunct<wchar_t>::`vftable'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_R4?$ctype@_W@std@@6B@			; std::ctype<wchar_t>::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_invalid_parameter_noinfo_noreturn:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__std_terminate:PROC
EXTRN	frexp:PROC
EXTRN	free:PROC
EXTRN	_Towupper:PROC
EXTRN	__imp_ReadDirectoryChangesW:PROC
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	_Wcrtomb:PROC
EXTRN	_Init_thread_abort:PROC
EXTRN	_Getwctypes:PROC
EXTRN	_flushall:PROC
EXTRN	_Getcvt:PROC
EXTRN	localeconv:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_FormatMessageW:PROC
EXTRN	_purecall:PROC
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	_wsystem:PROC
EXTRN	_Getctype:PROC
EXTRN	_Towlower:PROC
EXTRN	atexit:PROC
EXTRN	__stdio_common_vsprintf_s:PROC
EXTRN	strcspn:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp_CreateFileW:PROC
EXTRN	_Getwctype:PROC
EXTRN	?_Syserror_map@std@@YAPEBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	?wcerr@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A:BYTE ; std::wcerr
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	?id@?$ctype@_W@std@@2V0locale@2@A:QWORD		; std::ctype<wchar_t>::id
EXTRN	?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A:BYTE ; std::wcout
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	??0_Lockit@std@@QEAA@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QEAA@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	_Init_thread_epoch:DWORD
EXTRN	memmove:PROC
EXTRN	calloc:PROC
EXTRN	_Mbrtowc:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	__security_check_cookie:PROC
;	COMDAT ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::numpunct<wchar_t> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >::_Psave
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD imagerel ??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DQ FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DQ	FLAT:??_Efailure@ios_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD imagerel ??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$ctype@_W@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@_W@std@@6B@ DD 01H				; std::ctype<wchar_t>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$ctype@_W@std@@@8
	DD	imagerel ??_R3?$ctype@_W@std@@8
	DD	imagerel ??_R4?$ctype@_W@std@@6B@
rdata$r	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DQ FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DQ	FLAT:??_Esystem_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7?$numpunct@_W@std@@6B@
CONST	SEGMENT
??_7?$numpunct@_W@std@@6B@ DQ FLAT:??_R4?$numpunct@_W@std@@6B@ ; std::numpunct<wchar_t>::`vftable'
	DQ	FLAT:??_E?$numpunct@_W@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_decimal_point@?$numpunct@_W@std@@MEBA_WXZ
	DQ	FLAT:?do_thousands_sep@?$numpunct@_W@std@@MEBA_WXZ
	DQ	FLAT:?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DQ	FLAT:?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
	DQ	FLAT:?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
CONST	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD imagerel ??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT _TI5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_TI5?AVfailure@ios_base@std@@ DD 00H
	DD	imagerel ??1failure@ios_base@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA5?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT ??_R0?AV?$ctype@_W@std@@@8
data$r	SEGMENT
??_R0?AV?$ctype@_W@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype<wchar_t> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$ctype@_W@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD imagerel ??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD imagerel ??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT _CT??_R0?AVsystem_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVsystem_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0system_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R4?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@ DD 01H ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@8
	DD	imagerel ??_R3?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8
	DD	imagerel ??_R4?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_7_Facet_base@std@@6B@
CONST	SEGMENT
??_7_Facet_base@std@@6B@ DQ FLAT:??_R4_Facet_base@std@@6B@ ; std::_Facet_base::`vftable'
	DQ	FLAT:??_E_Facet_base@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_R4?$numpunct@_W@std@@6B@
rdata$r	SEGMENT
??_R4?$numpunct@_W@std@@6B@ DD 01H			; std::numpunct<wchar_t>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$numpunct@_W@std@@@8
	DD	imagerel ??_R3?$numpunct@_W@std@@8
	DD	imagerel ??_R4?$numpunct@_W@std@@6B@
rdata$r	ENDS
;	COMDAT _CT??_R0?AV_System_error@std@@@840
xdata$x	SEGMENT
_CT??_R0?AV_System_error@std@@@840 DD 00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0_System_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_7?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@
CONST	SEGMENT
??_7?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@ DQ FLAT:??_R4?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@ ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`vftable'
	DQ	FLAT:??_E?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z
	DQ	FLAT:?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z
CONST	ENDS
;	COMDAT _CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
_CTA2?AVruntime_error@std@@ DD 02H
	DD	imagerel _CT??_R0?AVruntime_error@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT ??_R4_Facet_base@std@@6B@
rdata$r	SEGMENT
??_R4_Facet_base@std@@6B@ DD 01H			; std::_Facet_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Facet_base@std@@@8
	DD	imagerel ??_R3_Facet_base@std@@8
	DD	imagerel ??_R4_Facet_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8 DD imagerel ??_R0?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@8 ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 01H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AUctype_base@std@@@8
	DD	imagerel ??_R3ctype_base@std@@8
	DD	imagerel ??_R4ctype_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD imagerel ??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2_KB DQ ffffffffffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB
CONST	SEGMENT
?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB DQ ffffffffffffffffH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
CONST	ENDS
;	COMDAT ??_R2?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R2?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8 ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$r	SEGMENT
??_R0?AVfacet@locale@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfacet@locale@std@@', 00H
data$r	ENDS
;	COMDAT ??_7?$ctype@_W@std@@6B@
CONST	SEGMENT
??_7?$ctype@_W@std@@6B@ DQ FLAT:??_R4?$ctype@_W@std@@6B@ ; std::ctype<wchar_t>::`vftable'
	DQ	FLAT:??_E?$ctype@_W@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_is@?$ctype@_W@std@@MEBAPEB_WPEB_W0PEAF@Z
	DQ	FLAT:?do_is@?$ctype@_W@std@@MEBA_NF_W@Z
	DQ	FLAT:?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
	DQ	FLAT:?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
	DQ	FLAT:?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
	DQ	FLAT:?do_tolower@?$ctype@_W@std@@MEBA_W_W@Z
	DQ	FLAT:?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
	DQ	FLAT:?do_toupper@?$ctype@_W@std@@MEBA_W_W@Z
	DQ	FLAT:?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z
	DQ	FLAT:?do_widen@?$ctype@_W@std@@MEBA_WD@Z
	DQ	FLAT:?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z
	DQ	FLAT:?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD imagerel ??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DQ FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DQ	FLAT:??_E_System_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT _CTA5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_CTA5?AVfailure@ios_base@std@@ DD 05H
	DD	imagerel _CT??_R0?AVfailure@ios_base@std@@@840
	DD	imagerel _CT??_R0?AVsystem_error@std@@@840
	DD	imagerel _CT??_R0?AV_System_error@std@@@840
	DD	imagerel _CT??_R0?AVruntime_error@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DQ FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DQ	FLAT:??_Efacet@locale@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_R3?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8
rdata$r	SEGMENT
??_R3?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8 DD 00H ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$numpunct@_W@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$numpunct@_W@std@@8 DD imagerel ??_R0?AV?$numpunct@_W@std@@@8 ; std::numpunct<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$numpunct@_W@std@@8
rdata$r	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$numpunct@_W@std@@8
rdata$r	SEGMENT
??_R3?$numpunct@_W@std@@8 DD 00H			; std::numpunct<wchar_t>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2?$numpunct@_W@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
data$r	SEGMENT
??_R0?AUctype_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUctype_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 01H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVerror_category@std@@@8
	DD	imagerel ??_R3error_category@std@@8
	DD	imagerel ??_R4error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@system_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AV?$numpunct@_W@std@@@8
data$r	SEGMENT
??_R0?AV?$numpunct@_W@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::numpunct<wchar_t> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$numpunct@_W@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@824
	DD	imagerel _CT??_R0?AVexception@std@@@824
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD imagerel ??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD imagerel ??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@824 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@824 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT _TI2?AVruntime_error@std@@
xdata$x	SEGMENT
_TI2?AVruntime_error@std@@ DD 00H
	DD	imagerel ??1runtime_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@_W@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@_W@std@@8 DD imagerel ??_R0?AV?$ctype@_W@std@@@8 ; std::ctype<wchar_t>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$ctype@_W@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 01H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	imagerel ??_R3failure@ios_base@std@@8
	DD	imagerel ??_R4failure@ios_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$r	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DQ FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DQ	FLAT:??_Ectype_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$r	SEGMENT
??_R0?AV_Facet_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Facet_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD imagerel ??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$numpunct@_W@std@@8
rdata$r	SEGMENT
??_R2?$numpunct@_W@std@@8 DD imagerel ??_R1A@?0A@EA@?$numpunct@_W@std@@8 ; std::numpunct<wchar_t>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@_W@std@@8
rdata$r	SEGMENT
??_R3?$ctype@_W@std@@8 DD 00H				; std::ctype<wchar_t>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	imagerel ??_R2?$ctype@_W@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD imagerel ??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 01H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	imagerel ??_R3system_error@std@@8
	DD	imagerel ??_R4system_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 01H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Iostream_error_category@std@@@8
	DD	imagerel ??_R3_Iostream_error_category@std@@8
	DD	imagerel ??_R4_Iostream_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT _CT??_R0?AVWin32Error@wwatch@@@840
xdata$x	SEGMENT
_CT??_R0?AVWin32Error@wwatch@@@840 DD 00H
	DD	imagerel ??_R0?AVWin32Error@wwatch@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0Win32Error@wwatch@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD imagerel ??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DQ FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DQ	FLAT:??_E_Iostream_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Iostream_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT _CT??_R0?AVfailure@ios_base@std@@@840
xdata$x	SEGMENT
_CT??_R0?AVfailure@ios_base@std@@@840 DD 00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0failure@ios_base@std@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DQ FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DQ	FLAT:??_E_Generic_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Generic_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 01H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Generic_error_category@std@@@8
	DD	imagerel ??_R3_Generic_error_category@std@@8
	DD	imagerel ??_R4_Generic_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ctype@_W@std@@8
rdata$r	SEGMENT
??_R2?$ctype@_W@std@@8 DD imagerel ??_R1A@?0A@EA@?$ctype@_W@std@@8 ; std::ctype<wchar_t>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ctype_base@std@@8
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 01H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	imagerel ??_R3_System_error@std@@8
	DD	imagerel ??_R4_System_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AVWin32Error@wwatch@@@8
data$r	SEGMENT
??_R0?AVWin32Error@wwatch@@@8 DQ FLAT:??_7type_info@@6B@ ; wwatch::Win32Error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVWin32Error@wwatch@@', 00H
data$r	ENDS
;	COMDAT _TI1?AVWin32Error@wwatch@@
xdata$x	SEGMENT
_TI1?AVWin32Error@wwatch@@ DD 00H
	DD	imagerel ??1Win32Error@wwatch@@QEAA@XZ
	DD	00H
	DD	imagerel _CTA1?AVWin32Error@wwatch@@
xdata$x	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DQ FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DQ	FLAT:??_Eerror_category@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@824
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@824 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD imagerel ??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT _CTA1?AVWin32Error@wwatch@@
xdata$x	SEGMENT
_CTA1?AVWin32Error@wwatch@@ DD 01H
	DD	imagerel _CT??_R0?AVWin32Error@wwatch@@@840
xdata$x	ENDS
;	COMDAT ??_R0?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@'
	DB	'_W@std@@@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD imagerel ??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 01H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfacet@locale@std@@@8
	DD	imagerel ??_R3facet@locale@std@@8
	DD	imagerel ??_R4facet@locale@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD imagerel ??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
data$r	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfailure@ios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OOPEBDOJ@pP?$AA@
CONST	SEGMENT
??_C@_02OOPEBDOJ@pP?$AA@ DB 'pP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDKMJEGG@eE?$AA@
CONST	SEGMENT
??_C@_02MDKMJEGG@eE?$AA@ DB 'eE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EAOCLKAK@ld?$AA@
CONST	SEGMENT
??_C@_02EAOCLKAK@ld?$AA@ DB 'ld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BDDLJJBK@lu?$AA@
CONST	SEGMENT
??_C@_02BDDLJJBK@lu?$AA@ DB 'lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIKPPMOK@Ld?$AA@
CONST	SEGMENT
??_C@_02HIKPPMOK@Ld?$AA@ DB 'Ld', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CLHGNPPK@Lu?$AA@
CONST	SEGMENT
??_C@_02CLHGNPPK@Lu?$AA@ DB 'Lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BBAHNLBA@?$CFp?$AA@
CONST	SEGMENT
??_C@_02BBAHNLBA@?$CFp?$AA@ DB '%p', 00H		; `string'
$SG4294967197 DB ' ', 00H, 00H, 00H
$SG4294967196 DB 00H, 00H
	ORG $+2
$SG4294967195 DB ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H
$SG4294967194 DB ')', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG4294967193 DB ':', 00H, '(', 00H, 00H, 00H
	ORG $+2
$SG4294967192 DB ':', 00H, 00H, 00H
$SG4294967188 DB 09H, 00H, 00H, 00H
$SG4294967191 DB '#', 00H, '#', 00H, '#', 00H, '#', 00H, '#', 00H, '#', 00H
	DB	'#', 00H, 00H, 00H
$SG4294967190 DB 'u', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	00H, 00H
	ORG $+2
$SG4294967186 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'M', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, ':', 00H, ' ', 00H, 00H, 00H
	ORG $+8
$SG4294967189 DB ' ', 00H, '\', 00H, 'd', 00H, 'i', 00H, 'r', 00H, '\', 00H
	DB	't', 00H, 'o', 00H, '\', 00H, 'w', 00H, 'a', 00H, 't', 00H, 'c'
	DB	00H, 'h', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'd', 00H
	DB	00H, 00H
	ORG $+6
$SG4294967187 DB 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ':', 00H, ' ', 00H, 00H
	DB	00H
CONST	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@ DB 'ios_base::failbit se'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT
??_C@_04LOAJBDKD@true?$AA@ DB 'true', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@ DB 'bad locale name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception?$AA@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$_Ptr_copy_cat@PEA_WV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAPEA_WAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::_Ptr_copy_cat<wchar_t * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$_Ptr_copy_cat@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBQEAV20@@Z ; std::_Ptr_copy_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_copy_al_unchecked@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Unchecked@PEAPEA_W@std@@YAPEAPEA_WPEAPEA_W@Z ; std::_Unchecked<wchar_t * __ptr64 * __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$_Uninitialized_copy_al_unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@@Z ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
PUBLIC	??$_Uninitialized_copy@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Distance2@PEAPEA_W_J@std@@YAXPEAPEA_W0AEA_JUrandom_access_iterator_tag@0@@Z ; std::_Distance2<wchar_t * __ptr64 * __ptr64,__int64>
PUBLIC	??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::_Ptr_move_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_copy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_copy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Distance2@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_J@std@@YAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEA_JUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,__int64>
PUBLIC	??$_Ucopy@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAPEA_W0PEAV21@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Ucopy<wchar_t * __ptr64 * __ptr64>
PUBLIC	??$distance@PEAPEA_W@std@@YA_JPEAPEA_W0@Z	; std::distance<wchar_t * __ptr64 * __ptr64>
PUBLIC	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z ; std::_Rechecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ; std::allocator<char>::destroy<char * __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>
PUBLIC	??$_Ucopy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBV21@0PEAV21@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Ucopy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
PUBLIC	??$distance@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA_JPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::distance<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
PUBLIC	??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > ><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>
PUBLIC	??$_Iter_cat@PEAPEA_W@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEA_W@Z ; std::_Iter_cat<wchar_t * __ptr64 * __ptr64>
PUBLIC	??$?8_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z	; std::operator==<wchar_t,wchar_t>
PUBLIC	??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@AEBV01@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAHPEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?_Buy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAA_N_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Buy
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Unchecked
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?8V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::operator==<std::allocator<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z	; std::forward<char * __ptr64 & __ptr64>
PUBLIC	??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<char>
PUBLIC	??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z	; std::forward<wchar_t * __ptr64 & __ptr64>
PUBLIC	??$_Addressof@_W@std@@YAPEA_WAEA_WU?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<wchar_t>
PUBLIC	??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?0AEAPEAD@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAD@Z ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Compressed_pair<std::default_delete<char>,char * __ptr64,1><char * __ptr64 & __ptr64>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
PUBLIC	??$_Iter_cat@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::_Iter_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
PUBLIC	??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
PUBLIC	??$forward@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
PUBLIC	??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$_Addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
PUBLIC	??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>
PUBLIC	??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z ; std::_Any_of<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,<lambda_12cb8001b77ee58a89c74fac176e6240> >
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$end@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ; std::end<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$begin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ; std::begin<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Getvals@_W@?$numpunct@_W@std@@IEAAX_WPEBUlconv@@U_Cvtvec@@@Z ; std::numpunct<wchar_t>::_Getvals<wchar_t>
PUBLIC	?_Init@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Init
PUBLIC	?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<wchar_t>::_Init
PUBLIC	??0?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z ; std::numpunct<wchar_t>::numpunct<wchar_t>
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
PUBLIC	?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAA_JPEB_W_J@Z ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputn
PUBLIC	?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put
PUBLIC	??0?$allocator@_W@std@@QEAA@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat
PUBLIC	?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<wchar_t>::_Getcat
PUBLIC	??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
PUBLIC	??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
PUBLIC	??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@@Z ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?9V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?9_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z	; std::operator!=<wchar_t,wchar_t>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
PUBLIC	??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$addressof@_W@std@@YAPEA_WAEA_W@Z		; std::addressof<wchar_t>
PUBLIC	??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
PUBLIC	??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<wchar_t> >
PUBLIC	??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$?0PEAD@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Unique_ptr_base<char,std::default_delete<char> ><char * __ptr64>
PUBLIC	??$forward@U?$default_delete@D@std@@@std@@YA$$QEAU?$default_delete@D@0@AEAU10@@Z ; std::forward<std::default_delete<char> >
PUBLIC	??$forward@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@AEAV10@@Z ; std::forward<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>
PUBLIC	??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
PUBLIC	??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > ><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
PUBLIC	??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z ; wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >
PUBLIC	??$?0PEAPEA_WX@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@PEAPEA_W0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > ><wchar_t * __ptr64 * __ptr64,void>
PUBLIC	??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$any_of@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z ; std::any_of<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >,<lambda_12cb8001b77ee58a89c74fac176e6240> >
PUBLIC	??$cend@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ; std::cend<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$cbegin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ; std::cbegin<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ; std::_Immortalize<std::_Iostream_error_category>
PUBLIC	??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
PUBLIC	?max_size@?$allocator@D@std@@QEBA_KXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator@_W@std@@QEBA_KXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pninc
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size
PUBLIC	?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputc
PUBLIC	?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBA_JXZ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pnavail
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
PUBLIC	??0?$allocator@D@std@@QEAA@AEBV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAHXZ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::pubsync
PUBLIC	??0?$allocator@_W@std@@QEAA@AEBV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
PUBLIC	??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEA_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[]
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAPEADXZ ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEBAAEBQEADXZ ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_second
PUBLIC	?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
PUBLIC	?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
PUBLIC	??4?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_W@Z ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator=
PUBLIC	??D?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator*
PUBLIC	??E?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator++
PUBLIC	?decimal_point@?$numpunct@_W@std@@QEBA_WXZ	; std::numpunct<wchar_t>::decimal_point
PUBLIC	?thousands_sep@?$numpunct@_W@std@@QEBA_WXZ	; std::numpunct<wchar_t>::thousands_sep
PUBLIC	?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<wchar_t>::grouping
PUBLIC	?_Tidy@?$numpunct@_W@std@@AEAAXXZ		; std::numpunct<wchar_t>::_Tidy
PUBLIC	??_G?$numpunct@_W@std@@MEAAPEAXI@Z		; std::numpunct<wchar_t>::`scalar deleting destructor'
PUBLIC	?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::clear
PUBLIC	?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::tie
PUBLIC	?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
PUBLIC	?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEB_WPEBU_Container_base0@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAPEADXZ ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Myptr
PUBLIC	?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEBAAEBQEADXZ ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Myptr
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@D@2@XZ ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_first
PUBLIC	?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Unused_capacity
PUBLIC	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
PUBLIC	?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
PUBLIC	?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate
PUBLIC	?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Swap_all
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Compat
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
PUBLIC	?_Ffmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADDH@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Ffmt
PUBLIC	?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput
PUBLIC	?_Ifmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Ifmt
PUBLIC	?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput
PUBLIC	?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Put
PUBLIC	?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Rep
PUBLIC	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
PUBLIC	?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::numpunct<wchar_t>::falsename
PUBLIC	?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::numpunct<wchar_t>::truename
PUBLIC	??1?$numpunct@_W@std@@MEAA@XZ			; std::numpunct<wchar_t>::~numpunct<wchar_t>
PUBLIC	?do_decimal_point@?$numpunct@_W@std@@MEBA_WXZ	; std::numpunct<wchar_t>::do_decimal_point
PUBLIC	?do_thousands_sep@?$numpunct@_W@std@@MEBA_WXZ	; std::numpunct<wchar_t>::do_thousands_sep
PUBLIC	?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<wchar_t>::do_grouping
PUBLIC	?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::numpunct<wchar_t>::do_falsename
PUBLIC	?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::numpunct<wchar_t>::do_truename
PUBLIC	??_G?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`scalar deleting destructor'
PUBLIC	?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::setstate
PUBLIC	?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::rdbuf
PUBLIC	?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::fill
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize
PUBLIC	?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?_Tidy@?$_Yarn@D@std@@AEAAXXZ			; std::_Yarn<char>::_Tidy
PUBLIC	?_Tidy@?$_Yarn@_W@std@@AEAAXXZ			; std::_Yarn<wchar_t>::_Tidy
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEA_WPEBU_Container_base0@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEB_WXZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
PUBLIC	??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator++
PUBLIC	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==
PUBLIC	??R?$default_delete@D@std@@QEBAXPEAD@Z		; std::default_delete<char>::operator()
PUBLIC	?get@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEBAPEADXZ ; std::unique_ptr<char,std::default_delete<char> >::get
PUBLIC	?release@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAPEADXZ ; std::unique_ptr<char,std::default_delete<char> >::release
PUBLIC	?reset@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAXPEAD@Z ; std::unique_ptr<char,std::default_delete<char> >::reset
PUBLIC	?get_deleter@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAU?$default_delete@D@2@XZ ; std::_Unique_ptr_base<char,std::default_delete<char> >::get_deleter
PUBLIC	?_Assign_rv@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Assign_rv
PUBLIC	?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside
PUBLIC	?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
PUBLIC	?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator==
PUBLIC	?begin@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::begin
PUBLIC	?end@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::end
PUBLIC	??0?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >
PUBLIC	?failed@?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::failed
PUBLIC	??1?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAA@XZ ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::~num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >
PUBLIC	?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::put
PUBLIC	?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
PUBLIC	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
PUBLIC	??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
PUBLIC	??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
PUBLIC	??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
PUBLIC	??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
PUBLIC	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
PUBLIC	??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
PUBLIC	?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear
PUBLIC	?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
PUBLIC	?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize
PUBLIC	?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAH_K0AEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
PUBLIC	??0?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::_Yarn<char>
PUBLIC	??1?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	?c_str@?$_Yarn@D@std@@QEBAPEBDXZ		; std::_Yarn<char>::c_str
PUBLIC	??0?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::_Yarn<wchar_t>
PUBLIC	??1?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
PUBLIC	??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEA_WXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
PUBLIC	??E?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator++
PUBLIC	??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator!=
PUBLIC	??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ ; std::unique_ptr<char,std::default_delete<char> >::unique_ptr<char,std::default_delete<char> >
PUBLIC	??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z ; std::unique_ptr<char,std::default_delete<char> >::unique_ptr<char,std::default_delete<char> >
PUBLIC	??4?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<char,std::default_delete<char> >::operator=
PUBLIC	??1?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ ; std::unique_ptr<char,std::default_delete<char> >::~unique_ptr<char,std::default_delete<char> >
PUBLIC	??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@V?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?begin@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::end
PUBLIC	?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator++
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator!=
PUBLIC	??0?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??1FileWatcher@wwatch@@QEAA@XZ			; wwatch::FileWatcher::~FileWatcher
PUBLIC	wmain
PUBLIC	?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z ; handle
PUBLIC	?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z ; wwatch::split
PUBLIC	?endsWith@wwatch@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@0@Z ; wwatch::endsWith
PUBLIC	?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z ; wwatch::concat
PUBLIC	??0Win32Error@wwatch@@QEAA@AEBV01@@Z		; wwatch::Win32Error::Win32Error
PUBLIC	??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z ; wwatch::FileWatcher::FileWatcher
PUBLIC	??0Win32Error@wwatch@@QEAA@$$QEAV01@@Z		; wwatch::Win32Error::Win32Error
PUBLIC	??1Win32Error@wwatch@@QEAA@XZ			; wwatch::Win32Error::~Win32Error
PUBLIC	?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ ; wwatch::Win32Error::GetLastWin32Error
PUBLIC	?code@Win32Error@wwatch@@QEBAAEBIXZ		; wwatch::Win32Error::code
PUBLIC	?message@Win32Error@wwatch@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ; wwatch::Win32Error::message
PUBLIC	??0Win32Error@wwatch@@QEAA@XZ			; wwatch::Win32Error::Win32Error
PUBLIC	?hex@std@@YAAEAVios_base@1@AEAV21@@Z		; std::hex
PUBLIC	?dec@std@@YAAEAVios_base@1@AEAV21@@Z		; std::dec
PUBLIC	??0_System_error@std@@QEAA@AEBV01@@Z		; std::_System_error::_System_error
PUBLIC	??0system_error@std@@QEAA@AEBV01@@Z		; std::system_error::system_error
PUBLIC	??0failure@ios_base@std@@QEAA@AEBV012@@Z	; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UEAA@XZ		; std::ios_base::failure::~failure
PUBLIC	??_Gfailure@ios_base@std@@UEAAPEAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	?getloc@ios_base@std@@QEBA?AVlocale@2@XZ	; std::ios_base::getloc
PUBLIC	?width@ios_base@std@@QEAA_J_J@Z			; std::ios_base::width
PUBLIC	?width@ios_base@std@@QEBA_JXZ			; std::ios_base::width
PUBLIC	?precision@ios_base@std@@QEBA_JXZ		; std::ios_base::precision
PUBLIC	?setf@ios_base@std@@QEAAHHH@Z			; std::ios_base::setf
PUBLIC	?flags@ios_base@std@@QEBAHXZ			; std::ios_base::flags
PUBLIC	?good@ios_base@std@@QEBA_NXZ			; std::ios_base::good
PUBLIC	?rdstate@ios_base@std@@QEBAHXZ			; std::ios_base::rdstate
PUBLIC	?clear@ios_base@std@@QEAAXH_N@Z			; std::ios_base::clear
PUBLIC	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	?iostream_category@std@@YAAEBVerror_category@1@XZ ; std::iostream_category
PUBLIC	??1_Iostream_error_category@std@@UEAA@XZ	; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UEAAPEAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	?name@_Iostream_error_category@std@@UEBAPEBDXZ	; std::_Iostream_error_category::name
PUBLIC	??0_Iostream_error_category@std@@QEAA@XZ	; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	??1_Generic_error_category@std@@UEAA@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UEAAPEAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	?name@_Generic_error_category@std@@UEBAPEBDXZ	; std::_Generic_error_category::name
PUBLIC	??0_Generic_error_category@std@@QEAA@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	??1system_error@std@@UEAA@XZ			; std::system_error::~system_error
PUBLIC	??_Gsystem_error@std@@UEAAPEAXI@Z		; std::system_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QEAA@Verror_code@1@PEBD@Z	; std::system_error::system_error
PUBLIC	??1_System_error@std@@UEAA@XZ			; std::_System_error::~_System_error
PUBLIC	??_G_System_error@std@@UEAAPEAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
PUBLIC	?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	??8std@@YA_NAEBVerror_condition@0@0@Z		; std::operator==
PUBLIC	?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
PUBLIC	?value@error_condition@std@@QEBAHXZ		; std::error_condition::value
PUBLIC	??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
PUBLIC	?value@error_code@std@@QEBAHXZ			; std::error_code::value
PUBLIC	??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
PUBLIC	??_Gerror_category@std@@UEAAPEAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	??8error_category@std@@QEBA_NAEBV01@@Z		; std::error_category::operator==
PUBLIC	??1error_category@std@@UEAA@XZ			; std::error_category::~error_category
PUBLIC	??0error_category@std@@QEAA@XZ			; std::error_category::error_category
PUBLIC	??_G?$ctype@_W@std@@MEAAPEAXI@Z			; std::ctype<wchar_t>::`scalar deleting destructor'
PUBLIC	?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z ; std::ctype<wchar_t>::do_narrow
PUBLIC	?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z		; std::ctype<wchar_t>::do_narrow
PUBLIC	?_Donarrow@?$ctype@_W@std@@IEBAD_WD@Z		; std::ctype<wchar_t>::_Donarrow
PUBLIC	?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z	; std::ctype<wchar_t>::do_widen
PUBLIC	?do_widen@?$ctype@_W@std@@MEBA_WD@Z		; std::ctype<wchar_t>::do_widen
PUBLIC	?_Dowiden@?$ctype@_W@std@@IEBA_WD@Z		; std::ctype<wchar_t>::_Dowiden
PUBLIC	?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z ; std::ctype<wchar_t>::do_toupper
PUBLIC	?do_toupper@?$ctype@_W@std@@MEBA_W_W@Z		; std::ctype<wchar_t>::do_toupper
PUBLIC	?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z ; std::ctype<wchar_t>::do_tolower
PUBLIC	?do_tolower@?$ctype@_W@std@@MEBA_W_W@Z		; std::ctype<wchar_t>::do_tolower
PUBLIC	?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z	; std::ctype<wchar_t>::do_scan_not
PUBLIC	?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z	; std::ctype<wchar_t>::do_scan_is
PUBLIC	?do_is@?$ctype@_W@std@@MEBAPEB_WPEB_W0PEAF@Z	; std::ctype<wchar_t>::do_is
PUBLIC	?do_is@?$ctype@_W@std@@MEBA_NF_W@Z		; std::ctype<wchar_t>::do_is
PUBLIC	?_Init@?$ctype@_W@std@@IEAAXAEBV_Locinfo@2@@Z	; std::ctype<wchar_t>::_Init
PUBLIC	??1?$ctype@_W@std@@MEAA@XZ			; std::ctype<wchar_t>::~ctype<wchar_t>
PUBLIC	?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<wchar_t>::_Getcat
PUBLIC	??0?$ctype@_W@std@@QEAA@AEBV_Locinfo@1@_K@Z	; std::ctype<wchar_t>::ctype<wchar_t>
PUBLIC	?widen@?$ctype@_W@std@@QEBAPEBDPEBD0PEA_W@Z	; std::ctype<wchar_t>::widen
PUBLIC	?widen@?$ctype@_W@std@@QEBA_WD@Z		; std::ctype<wchar_t>::widen
PUBLIC	?is@?$ctype@_W@std@@QEBA_NF_W@Z			; std::ctype<wchar_t>::is
PUBLIC	??_Gctype_base@std@@UEAAPEAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	??1ctype_base@std@@UEAA@XZ			; std::ctype_base::~ctype_base
PUBLIC	??0ctype_base@std@@QEAA@_K@Z			; std::ctype_base::ctype_base
PUBLIC	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	??$_Maklocchr@_W@std@@YA_WDPEA_WAEBU_Cvtvec@@@Z	; std::_Maklocchr<wchar_t>
PUBLIC	??0_Facet_base@std@@QEAA@XZ			; std::_Facet_base::_Facet_base
PUBLIC	??_Gfacet@locale@std@@MEAAPEAXI@Z		; std::locale::facet::`scalar deleting destructor'
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	?c_str@locale@std@@QEBAPEBDXZ			; std::locale::c_str
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	??0locale@std@@QEAA@AEBV01@@Z			; std::locale::locale
PUBLIC	??1facet@locale@std@@MEAA@XZ			; std::locale::facet::~facet
PUBLIC	??0facet@locale@std@@IEAA@_K@Z			; std::locale::facet::facet
PUBLIC	?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref
PUBLIC	?_Incref@facet@locale@std@@UEAAXXZ		; std::locale::facet::_Incref
PUBLIC	??Bid@locale@std@@QEAA_KXZ			; std::locale::id::operator unsigned __int64
PUBLIC	??0id@locale@std@@QEAA@_K@Z			; std::locale::id::id
PUBLIC	??_G_Facet_base@std@@UEAAPEAXI@Z		; std::_Facet_base::`scalar deleting destructor'
PUBLIC	??1_Facet_base@std@@UEAA@XZ			; std::_Facet_base::~_Facet_base
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	?_Gettrue@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Gettrue
PUBLIC	?_Getfalse@_Locinfo@std@@QEBAPEBDXZ		; std::_Locinfo::_Getfalse
PUBLIC	?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ	; std::_Locinfo::_Getlconv
PUBLIC	?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ	; std::_Locinfo::_Getcvt
PUBLIC	?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	??1_Locinfo@std@@QEAA@XZ			; std::_Locinfo::~_Locinfo
PUBLIC	??0_Locinfo@std@@QEAA@PEBD@Z			; std::_Locinfo::_Locinfo
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QEAA@PEBD@Z		; std::runtime_error::runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	?_Init_atomic_counter@std@@YAXAEAKK@Z		; std::_Init_atomic_counter
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z	; std::_Iterator_base0::_Adopt
PUBLIC	?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z	; std::_Container_base0::_Swap_all
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?assign@?$char_traits@D@std@@SAXAEADAEBD@Z	; std::char_traits<char>::assign
PUBLIC	?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z	; std::char_traits<char>::assign
PUBLIC	?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::move
PUBLIC	?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z	; std::char_traits<char>::copy
PUBLIC	?length@?$char_traits@D@std@@SA_KPEBD@Z		; std::char_traits<char>::length
PUBLIC	?eof@?$char_traits@_W@std@@SAGXZ		; std::char_traits<wchar_t>::eof
PUBLIC	?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z	; std::char_traits<wchar_t>::eq_int_type
PUBLIC	?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z	; std::char_traits<wchar_t>::to_int_type
PUBLIC	?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z ; std::char_traits<wchar_t>::assign
PUBLIC	?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::move
PUBLIC	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
PUBLIC	?length@?$char_traits@_W@std@@SA_KPEB_W@Z	; std::char_traits<wchar_t>::length
PUBLIC	?compare@?$char_traits@_W@std@@SAHPEB_W0_K@Z	; std::char_traits<wchar_t>::compare
PUBLIC	sprintf_s
PUBLIC	_vsprintf_s_l
PUBLIC	??3@YAXPEAX0@Z					; operator delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	wmemset
PUBLIC	wmemmove
PUBLIC	wmemcpy
PUBLIC	wmemcmp
PUBLIC	__local_stdio_printf_options
PUBLIC	frexpl
PUBLIC	fabsl
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
PUBLIC	?id@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::id
PUBLIC	?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
PUBLIC	__real@4202a05f20000000
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
EXTRN	??_E?$ctype@_W@std@@MEAAPEAXI@Z:PROC		; std::ctype<wchar_t>::`vector deleting destructor'
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	??_Efacet@locale@std@@MEAAPEAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	??_E?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z:PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`vector deleting destructor'
EXTRN	??_E_System_error@std@@UEAAPEAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_E?$numpunct@_W@std@@MEAAPEAXI@Z:PROC		; std::numpunct<wchar_t>::`vector deleting destructor'
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Efailure@ios_base@std@@UEAAPEAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UEAAPEAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_Ectype_base@std@@UEAAPEAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_Eerror_category@std@@UEAAPEAXI@Z:PROC	; std::error_category::`vector deleting destructor'
EXTRN	??_E_Facet_base@std@@UEAAPEAXI@Z:PROC		; std::_Facet_base::`vector deleting destructor'
EXTRN	??_E_Generic_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Generic_error_category::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DQ 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@2V0locale@2@A DQ 01H DUP (?) ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::id
_BSS	ENDS
;	COMDAT ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A
_BSS	SEGMENT
?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A DB 010H DUP (?) ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD imagerel $LN143
	DD	imagerel $LN143+108
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA DD imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
	DD	imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD imagerel $LN148
	DD	imagerel $LN148+108
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA DD imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
	DD	imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD imagerel $LN153
	DD	imagerel $LN153+108
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA DD imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
	DD	imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel $LN193
	DD	imagerel $LN193+165
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD imagerel ?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+55
	DD	imagerel $unwind$?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel $LN205
	DD	imagerel $LN205+146
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD imagerel ?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+55
	DD	imagerel $unwind$?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+14
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+14
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+14
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD imagerel $LN124
	DD	imagerel $LN124+78
	DD	imagerel $unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN127
	DD	imagerel $LN127+75
	DD	imagerel $unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel $LN480
	DD	imagerel $LN480+26
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel $LN480+26
	DD	imagerel $LN480+184
	DD	imagerel $chain$2$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel $LN480+184
	DD	imagerel $LN480+198
	DD	imagerel $chain$3$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+14
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAPEA_W0PEAV21@@Z DD imagerel $LN24
	DD	imagerel $LN24+26
	DD	imagerel $unwind$??$_Ucopy@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAPEA_W0PEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN129
	DD	imagerel $LN129+75
	DD	imagerel $unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+14
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBV21@0PEAV21@@Z DD imagerel $LN24
	DD	imagerel $LN24+26
	DD	imagerel $unwind$??$_Ucopy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBV21@0PEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD imagerel $LN155
	DD	imagerel $LN155+95
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA DD imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA
	DD	imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD imagerel $LN155
	DD	imagerel $LN155+95
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA DD imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA
	DD	imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z DD imagerel $LN163
	DD	imagerel $LN163+166
	DD	imagerel $unwind$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA+32
	DD	imagerel $unwind$?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAA_N_K@Z DD imagerel $LN109
	DD	imagerel $LN109+98
	DD	imagerel $unwind$?_Buy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN15
	DD	imagerel $LN15+100
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN131
	DD	imagerel $LN131+75
	DD	imagerel $unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+14
	DD	imagerel $unwind$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z DD imagerel $LN163
	DD	imagerel $LN163+166
	DD	imagerel $unwind$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA+32
	DD	imagerel $unwind$?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z DD imagerel $LN160
	DD	imagerel $LN160+95
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA DD imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA
	DD	imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z DD imagerel $LN160
	DD	imagerel $LN160+95
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA DD imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA
	DD	imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD imagerel ??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	imagerel ??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z+107
	DD	imagerel $unwind$??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z DD imagerel $LN183
	DD	imagerel $LN183+244
	DD	imagerel $unwind$??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z DD imagerel $LN37
	DD	imagerel $LN37+46
	DD	imagerel $unwind$??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z DD imagerel $LN41
	DD	imagerel $LN41+523
	DD	imagerel $unwind$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA DD imagerel ?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA+32
	DD	imagerel $unwind$?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD imagerel $LN11
	DD	imagerel $LN11+55
	DD	imagerel $unwind$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z DD imagerel $LN18
	DD	imagerel $LN18+185
	DD	imagerel $unwind$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z DD imagerel $LN994
	DD	imagerel $LN994+331
	DD	imagerel $unwind$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA DD imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN31
	DD	imagerel $LN31+173
	DD	imagerel $unwind$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN30
	DD	imagerel $LN30+196
	DD	imagerel $unwind$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+44
	DD	imagerel $unwind$?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+63
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN178
	DD	imagerel $LN178+14
	DD	imagerel $unwind$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN178+14
	DD	imagerel $LN178+184
	DD	imagerel $chain$2$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN178+184
	DD	imagerel $LN178+185
	DD	imagerel $chain$3$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN178+185
	DD	imagerel $LN178+215
	DD	imagerel $chain$4$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z DD imagerel $LN24
	DD	imagerel $LN24+26
	DD	imagerel $unwind$??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DD imagerel $LN36
	DD	imagerel $LN36+351
	DD	imagerel $unwind$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z DD imagerel $LN36
	DD	imagerel $LN36+351
	DD	imagerel $unwind$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z DD imagerel $LN36
	DD	imagerel $LN36+351
	DD	imagerel $unwind$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD imagerel $LN165
	DD	imagerel $LN165+95
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA DD imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA
	DD	imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD imagerel $LN165
	DD	imagerel $LN165+95
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA DD imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA
	DD	imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD imagerel ??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	imagerel ??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z+57
	DD	imagerel $unwind$??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z DD imagerel $LN328
	DD	imagerel $LN328+445
	DD	imagerel $unwind$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEA_WX@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@PEAPEA_W0@Z DD imagerel $LN14
	DD	imagerel $LN14+36
	DD	imagerel $unwind$??$?0PEAPEA_WX@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@PEAPEA_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD imagerel $LN1097
	DD	imagerel $LN1097+595
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA DD imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z DD imagerel $LN1066
	DD	imagerel $LN1066+603
	DD	imagerel $unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA DD imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$any_of@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z DD imagerel $LN12
	DD	imagerel $LN12+14
	DD	imagerel $unwind$??$any_of@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z DD imagerel $LN39
	DD	imagerel $LN39+46
	DD	imagerel $unwind$??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD imagerel $LN23
	DD	imagerel $LN23+116
	DD	imagerel $unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN19
	DD	imagerel $LN19+109
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN19
	DD	imagerel $LN19+122
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN199
	DD	imagerel $LN199+155
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN199+155
	DD	imagerel $LN199+184
	DD	imagerel $chain$0$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN199+184
	DD	imagerel $LN199+254
	DD	imagerel $chain$1$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD imagerel $LN22
	DD	imagerel $LN22+109
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z DD imagerel $LN22
	DD	imagerel $LN22+122
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN19
	DD	imagerel $LN19+122
	DD	imagerel $unwind$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD imagerel $LN19
	DD	imagerel $LN19+93
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z DD imagerel $LN19
	DD	imagerel $LN19+105
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel $LN510
	DD	imagerel $LN510+434
	DD	imagerel $unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+51
	DD	imagerel $unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+154
	DD	imagerel $unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@_K_W@Z DD imagerel $LN126
	DD	imagerel $LN126+40
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN152
	DD	imagerel $LN152+35
	DD	imagerel $unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD imagerel $LN287
	DD	imagerel $LN287+63
	DD	imagerel $unwind$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD imagerel $LN287+63
	DD	imagerel $LN287+330
	DD	imagerel $chain$0$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD imagerel $LN287+330
	DD	imagerel $LN287+356
	DD	imagerel $chain$1$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD imagerel $LN287+356
	DD	imagerel $LN287+369
	DD	imagerel $chain$2$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD imagerel $LN486
	DD	imagerel $LN486+390
	DD	imagerel $unwind$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+51
	DD	imagerel $unwind$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+83
	DD	imagerel $unwind$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN19
	DD	imagerel $LN19+106
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN22
	DD	imagerel $LN22+122
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_W@Z DD imagerel $LN30
	DD	imagerel $LN30+103
	DD	imagerel $unwind$??4?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decimal_point@?$numpunct@_W@std@@QEBA_WXZ DD imagerel $LN8
	DD	imagerel $LN8+38
	DD	imagerel $unwind$?decimal_point@?$numpunct@_W@std@@QEBA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?thousands_sep@?$numpunct@_W@std@@QEBA_WXZ DD imagerel $LN8
	DD	imagerel $LN8+38
	DD	imagerel $unwind$?thousands_sep@?$numpunct@_W@std@@QEBA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$numpunct@_W@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+41
	DD	imagerel $unwind$?_Tidy@?$numpunct@_W@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$numpunct@_W@std@@MEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+94
	DD	imagerel $unwind$??_G?$numpunct@_W@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+96
	DD	imagerel $unwind$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA DD imagerel ?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA+27
	DD	imagerel $unwind$?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ DD imagerel $LN61
	DD	imagerel $LN61+174
	DD	imagerel $unwind$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN220
	DD	imagerel $LN220+45
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN220+45
	DD	imagerel $LN220+236
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN220+236
	DD	imagerel $LN220+249
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN220+249
	DD	imagerel $LN220+262
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN54
	DD	imagerel $LN54+61
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN129
	DD	imagerel $LN129+203
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+15
	DD	imagerel $LN105+54
	DD	imagerel $chain$0$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+54
	DD	imagerel $LN105+100
	DD	imagerel $chain$2$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+100
	DD	imagerel $LN105+139
	DD	imagerel $chain$4$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+139
	DD	imagerel $LN105+152
	DD	imagerel $chain$5$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD imagerel $LN19
	DD	imagerel $LN19+28
	DD	imagerel $unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel $LN312
	DD	imagerel $LN312+111
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN246
	DD	imagerel $LN246+76
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN246+76
	DD	imagerel $LN246+264
	DD	imagerel $chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN246+264
	DD	imagerel $LN246+290
	DD	imagerel $chain$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN246+290
	DD	imagerel $LN246+303
	DD	imagerel $chain$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD imagerel $LN269
	DD	imagerel $LN269+145
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD imagerel $LN269+145
	DD	imagerel $LN269+325
	DD	imagerel $chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD imagerel $LN269+325
	DD	imagerel $LN269+338
	DD	imagerel $chain$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD imagerel $LN269+338
	DD	imagerel $LN269+351
	DD	imagerel $chain$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN54
	DD	imagerel $LN54+69
	DD	imagerel $unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN131
	DD	imagerel $LN131+173
	DD	imagerel $unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0_W@Z DD imagerel $LN57
	DD	imagerel $LN57+72
	DD	imagerel $unwind$?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105
	DD	imagerel $LN105+24
	DD	imagerel $unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+24
	DD	imagerel $LN105+63
	DD	imagerel $chain$0$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+63
	DD	imagerel $LN105+109
	DD	imagerel $chain$2$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+109
	DD	imagerel $LN105+148
	DD	imagerel $chain$4$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD imagerel $LN105+148
	DD	imagerel $LN105+161
	DD	imagerel $chain$5$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD imagerel $LN22
	DD	imagerel $LN22+93
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z DD imagerel $LN22
	DD	imagerel $LN22+105
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN219
	DD	imagerel $LN219+54
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN219+54
	DD	imagerel $LN219+115
	DD	imagerel $chain$0$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN219+115
	DD	imagerel $LN219+206
	DD	imagerel $chain$1$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN219+206
	DD	imagerel $LN219+307
	DD	imagerel $chain$2$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN219+307
	DD	imagerel $LN219+313
	DD	imagerel $chain$4$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN219+313
	DD	imagerel $LN219+337
	DD	imagerel $chain$5$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN219+337
	DD	imagerel $LN219+361
	DD	imagerel $chain$6$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN22
	DD	imagerel $LN22+106
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z DD imagerel $LN1272
	DD	imagerel $LN1272+2013
	DD	imagerel $unwind$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z DD imagerel $LN1246
	DD	imagerel $LN1246+1896
	DD	imagerel $unwind$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z DD imagerel $LN41
	DD	imagerel $LN41+39
	DD	imagerel $unwind$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z DD imagerel $LN41+39
	DD	imagerel $LN41+145
	DD	imagerel $chain$0$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z DD imagerel $LN41+145
	DD	imagerel $LN41+176
	DD	imagerel $chain$1$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z DD imagerel $LN41
	DD	imagerel $LN41+40
	DD	imagerel $unwind$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z DD imagerel $LN41+40
	DD	imagerel $LN41+135
	DD	imagerel $chain$0$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z DD imagerel $LN41+135
	DD	imagerel $LN41+166
	DD	imagerel $chain$1$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN10
	DD	imagerel $LN10+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+49
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN8
	DD	imagerel $LN8+32
	DD	imagerel $unwind$?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$numpunct@_W@std@@MEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+62
	DD	imagerel $unwind$??1?$numpunct@_W@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN152
	DD	imagerel $LN152+75
	DD	imagerel $unwind$?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN137
	DD	imagerel $LN137+76
	DD	imagerel $unwind$?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN137
	DD	imagerel $LN137+76
	DD	imagerel $unwind$?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+43
	DD	imagerel $unwind$??_G?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD imagerel $LN264
	DD	imagerel $LN264+128
	DD	imagerel $unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244+76
	DD	imagerel $LN244+254
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244+254
	DD	imagerel $LN244+280
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN244+280
	DD	imagerel $LN244+293
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267+139
	DD	imagerel $LN267+299
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267+299
	DD	imagerel $LN267+312
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN267+312
	DD	imagerel $LN267+325
	DD	imagerel $chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN265
	DD	imagerel $LN265+302
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD imagerel $LN233
	DD	imagerel $LN233+304
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD imagerel $LN137
	DD	imagerel $LN137+182
	DD	imagerel $unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z DD imagerel $LN252
	DD	imagerel $LN252+140
	DD	imagerel $unwind$?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN229
	DD	imagerel $LN229+46
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN229+46
	DD	imagerel $LN229+170
	DD	imagerel $chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN229+170
	DD	imagerel $LN229+204
	DD	imagerel $chain$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN229+204
	DD	imagerel $LN229+254
	DD	imagerel $chain$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN229+254
	DD	imagerel $LN229+267
	DD	imagerel $chain$3$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD imagerel $LN229+267
	DD	imagerel $LN229+280
	DD	imagerel $chain$4$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN267
	DD	imagerel $LN267+315
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD imagerel $LN235
	DD	imagerel $LN235+328
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z DD imagerel $LN25
	DD	imagerel $LN25+138
	DD	imagerel $unwind$?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD imagerel $LN118
	DD	imagerel $LN118+27
	DD	imagerel $unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD imagerel $LN118+27
	DD	imagerel $LN118+74
	DD	imagerel $chain$0$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD imagerel $LN118+74
	DD	imagerel $LN118+128
	DD	imagerel $chain$1$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z DD imagerel $LN19
	DD	imagerel $LN19+28
	DD	imagerel $unwind$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN136
	DD	imagerel $LN136+133
	DD	imagerel $unwind$?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ DD imagerel $LN121
	DD	imagerel $LN121+153
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z DD imagerel $LN6
	DD	imagerel $LN6+58
	DD	imagerel $unwind$?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z DD imagerel $LN6
	DD	imagerel $LN6+60
	DD	imagerel $unwind$?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z DD imagerel $LN1314
	DD	imagerel $LN1314+889
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z DD imagerel $LN17
	DD	imagerel $LN17+244
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z DD imagerel $LN17
	DD	imagerel $LN17+244
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z DD imagerel $LN16
	DD	imagerel $LN16+254
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z DD imagerel $LN16
	DD	imagerel $LN16+254
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z DD imagerel $LN415
	DD	imagerel $LN415+644
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z DD imagerel $LN419
	DD	imagerel $LN419+648
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z DD imagerel $LN4
	DD	imagerel $LN4+157
	DD	imagerel $unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN26
	DD	imagerel $LN26+123
	DD	imagerel $unwind$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+70
	DD	imagerel $unwind$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z DD imagerel $LN6
	DD	imagerel $LN6+46
	DD	imagerel $unwind$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z DD imagerel $LN992
	DD	imagerel $LN992+396
	DD	imagerel $unwind$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA DD imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z DD imagerel $LN992
	DD	imagerel $LN992+396
	DD	imagerel $unwind$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA DD imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA+80
	DD	imagerel $unwind$?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN159
	DD	imagerel $LN159+49
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD imagerel $LN147
	DD	imagerel $LN147+60
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN421
	DD	imagerel $LN421+148
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN140
	DD	imagerel $LN140+141
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN145
	DD	imagerel $LN145+47
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W_K@Z DD imagerel $LN126
	DD	imagerel $LN126+40
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD imagerel $LN133
	DD	imagerel $LN133+73
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN144
	DD	imagerel $LN144+40
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN120
	DD	imagerel $LN120+72
	DD	imagerel $unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD imagerel $LN228
	DD	imagerel $LN228+37
	DD	imagerel $unwind$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD imagerel $LN228+37
	DD	imagerel $LN228+143
	DD	imagerel $chain$0$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD imagerel $LN228+143
	DD	imagerel $LN228+194
	DD	imagerel $chain$2$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD imagerel $LN228+194
	DD	imagerel $LN228+207
	DD	imagerel $chain$3$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD imagerel $LN228+207
	DD	imagerel $LN228+220
	DD	imagerel $chain$4$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAH_K0AEBV12@@Z DD imagerel $LN80
	DD	imagerel $LN80+85
	DD	imagerel $unwind$?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAH_K0AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@D@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+35
	DD	imagerel $unwind$??1?$_Yarn@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@_W@std@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+35
	DD	imagerel $unwind$??1?$_Yarn@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN62
	DD	imagerel $LN62+54
	DD	imagerel $unwind$??4?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@V?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD imagerel $LN26
	DD	imagerel $LN26+43
	DD	imagerel $unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@V?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD imagerel $LN511
	DD	imagerel $LN511+233
	DD	imagerel $unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD imagerel ?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
	DD	imagerel ?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD imagerel ?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
	DD	imagerel ?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$wmain DD	imagerel $LN1298
	DD	imagerel $LN1298+944
	DD	imagerel $unwind$wmain
pdata	ENDS
pdata	SEGMENT
$pdata$wmain$catch$0 DD imagerel wmain$catch$0
	DD	imagerel wmain$catch$0+177
	DD	imagerel $unwind$wmain$catch$0
pdata	ENDS
pdata	SEGMENT
$pdata$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z DD imagerel $LN671
	DD	imagerel $LN671+682
	DD	imagerel $unwind$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA DD imagerel ?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA+42
	DD	imagerel $unwind$?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z DD imagerel $LN948
	DD	imagerel $LN948+693
	DD	imagerel $unwind$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA DD imagerel ?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA
	DD	imagerel ?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?endsWith@wwatch@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@0@Z DD imagerel $LN145
	DD	imagerel $LN145+104
	DD	imagerel $unwind$?endsWith@wwatch@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@0@Z
$pdata$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z DD imagerel $LN204
	DD	imagerel $LN204+157
	DD	imagerel $unwind$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA DD imagerel ?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA
	DD	imagerel ?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Win32Error@wwatch@@QEAA@AEBV01@@Z DD imagerel $LN148
	DD	imagerel $LN148+59
	DD	imagerel $unwind$??0Win32Error@wwatch@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z DD imagerel $LN142
	DD	imagerel $LN142+264
	DD	imagerel $unwind$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Win32Error@wwatch@@QEAA@$$QEAV01@@Z DD imagerel $LN147
	DD	imagerel $LN147+52
	DD	imagerel $unwind$??0Win32Error@wwatch@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Win32Error@wwatch@@QEAA@XZ DD imagerel $LN123
	DD	imagerel $LN123+76
	DD	imagerel $unwind$??1Win32Error@wwatch@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ DD imagerel $LN269
	DD	imagerel $LN269+273
	DD	imagerel $unwind$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA DD imagerel ?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA
	DD	imagerel ?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+80
	DD	imagerel $unwind$??0_System_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@AEBV01@@Z DD imagerel $LN12
	DD	imagerel $LN12+90
	DD	imagerel $unwind$??0system_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD imagerel $LN15
	DD	imagerel $LN15+90
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD imagerel $LN20
	DD	imagerel $LN20+66
	DD	imagerel $unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD imagerel $LN6
	DD	imagerel $LN6+46
	DD	imagerel $unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel $LN898
	DD	imagerel $LN898+845
	DD	imagerel $unwind$?clear@ios_base@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+50
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?iostream_category@std@@YAAEBVerror_category@1@XZ DD imagerel $LN25
	DD	imagerel $LN25+116
	DD	imagerel $unwind$?iostream_category@std@@YAAEBVerror_category@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+43
	DD	imagerel $unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN154
	DD	imagerel $LN154+77
	DD	imagerel $unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+43
	DD	imagerel $unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN152
	DD	imagerel $LN152+86
	DD	imagerel $unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gsystem_error@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gsystem_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel $LN285
	DD	imagerel $LN285+273
	DD	imagerel $unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_System_error@std@@UEAAPEAXI@Z DD imagerel $LN14
	DD	imagerel $LN14+66
	DD	imagerel $unwind$??_G_System_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN329
	DD	imagerel $LN329+321
	DD	imagerel $unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel $LN163
	DD	imagerel $LN163+264
	DD	imagerel $unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD imagerel $LN29
	DD	imagerel $LN29+143
	DD	imagerel $unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD imagerel $LN32
	DD	imagerel $LN32+95
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN12
	DD	imagerel $LN12+39
	DD	imagerel $unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gerror_category@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_Gerror_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$ctype@_W@std@@MEAAPEAXI@Z DD imagerel $LN19
	DD	imagerel $LN19+92
	DD	imagerel $unwind$??_G?$ctype@_W@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z DD imagerel $LN16
	DD	imagerel $LN16+67
	DD	imagerel $unwind$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z DD imagerel $LN16+67
	DD	imagerel $LN16+150
	DD	imagerel $chain$0$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z DD imagerel $LN16+150
	DD	imagerel $LN16+177
	DD	imagerel $chain$1$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z DD imagerel $LN8
	DD	imagerel $LN8+84
	DD	imagerel $unwind$?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Donarrow@?$ctype@_W@std@@IEBAD_WD@Z DD imagerel $LN6
	DD	imagerel $LN6+84
	DD	imagerel $unwind$?_Donarrow@?$ctype@_W@std@@IEBAD_WD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z DD imagerel $LN14
	DD	imagerel $LN14+35
	DD	imagerel $unwind$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z DD imagerel $LN14+35
	DD	imagerel $LN14+154
	DD	imagerel $chain$1$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z DD imagerel $LN14+154
	DD	imagerel $LN14+166
	DD	imagerel $chain$2$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_widen@?$ctype@_W@std@@MEBA_WD@Z DD imagerel $LN6
	DD	imagerel $LN6+74
	DD	imagerel $unwind$?do_widen@?$ctype@_W@std@@MEBA_WD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Dowiden@?$ctype@_W@std@@IEBA_WD@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$?_Dowiden@?$ctype@_W@std@@IEBA_WD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD imagerel $LN12
	DD	imagerel $LN12+44
	DD	imagerel $unwind$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD imagerel $LN12+44
	DD	imagerel $LN12+84
	DD	imagerel $chain$0$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD imagerel $LN12+84
	DD	imagerel $LN12+103
	DD	imagerel $chain$1$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD imagerel $LN12
	DD	imagerel $LN12+44
	DD	imagerel $unwind$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD imagerel $LN12+44
	DD	imagerel $LN12+84
	DD	imagerel $chain$0$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD imagerel $LN12+84
	DD	imagerel $LN12+103
	DD	imagerel $chain$1$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20+37
	DD	imagerel $LN20+101
	DD	imagerel $chain$0$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20+101
	DD	imagerel $LN20+127
	DD	imagerel $chain$1$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20+127
	DD	imagerel $LN20+138
	DD	imagerel $chain$2$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20+37
	DD	imagerel $LN20+101
	DD	imagerel $chain$0$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20+101
	DD	imagerel $LN20+127
	DD	imagerel $chain$1$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD imagerel $LN20+127
	DD	imagerel $LN20+138
	DD	imagerel $chain$2$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_is@?$ctype@_W@std@@MEBA_NF_W@Z DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$?do_is@?$ctype@_W@std@@MEBA_NF_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$ctype@_W@std@@IEAAXAEBV_Locinfo@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+81
	DD	imagerel $unwind$?_Init@?$ctype@_W@std@@IEAAXAEBV_Locinfo@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ctype@_W@std@@MEAA@XZ DD imagerel $LN14
	DD	imagerel $LN14+59
	DD	imagerel $unwind$??1?$ctype@_W@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN37
	DD	imagerel $LN37+248
	DD	imagerel $unwind$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ctype@_W@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel $LN19
	DD	imagerel $LN19+98
	DD	imagerel $unwind$??0?$ctype@_W@std@@QEAA@AEBV_Locinfo@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$ctype@_W@std@@QEBA_WD@Z DD imagerel $LN10
	DD	imagerel $LN10+99
	DD	imagerel $unwind$?widen@?$ctype@_W@std@@QEBA_WD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is@?$ctype@_W@std@@QEBA_NF_W@Z DD imagerel $LN8
	DD	imagerel $LN8+63
	DD	imagerel $unwind$?is@?$ctype@_W@std@@QEBA_NF_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gctype_base@std@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+43
	DD	imagerel $unwind$??_Gctype_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN28
	DD	imagerel $LN28+258
	DD	imagerel $unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocchr@_W@std@@YA_WDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??$_Maklocchr@_W@std@@YA_WDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfacet@locale@std@@MEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+43
	DD	imagerel $unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+82
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+57
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0locale@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??0locale@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bid@locale@std@@QEAA_KXZ DD imagerel $LN8
	DD	imagerel $LN8+80
	DD	imagerel $unwind$??Bid@locale@std@@QEAA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Facet_base@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_G_Facet_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+63
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Locinfo@std@@QEAA@XZ DD imagerel $LN39
	DD	imagerel $LN39+163
	DD	imagerel $unwind$??1_Locinfo@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel $LN28
	DD	imagerel $LN28+201
	DD	imagerel $unwind$??0_Locinfo@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+66
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+66
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+74
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN27
	DD	imagerel $LN27+84
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN16
	DD	imagerel $LN16+105
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN16
	DD	imagerel $LN16+129
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z DD imagerel $LN4
	DD	imagerel $LN4+33
	DD	imagerel $unwind$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+28
	DD	imagerel $unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z DD imagerel $LN14
	DD	imagerel $LN14+12
	DD	imagerel $unwind$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z DD imagerel $LN14+12
	DD	imagerel $LN14+33
	DD	imagerel $chain$0$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z DD imagerel $LN14+33
	DD	imagerel $LN14+41
	DD	imagerel $chain$1$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD imagerel $LN9
	DD	imagerel $LN9+31
	DD	imagerel $unwind$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN8
	DD	imagerel $LN8+85
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+66
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+53
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemset DD imagerel $LN12
	DD	imagerel $LN12+12
	DD	imagerel $unwind$wmemset
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$wmemset DD imagerel $LN12+12
	DD	imagerel $LN12+32
	DD	imagerel $chain$0$wmemset
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$wmemset DD imagerel $LN12+32
	DD	imagerel $LN12+40
	DD	imagerel $chain$1$wmemset
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN4
	DD	imagerel $LN4+26
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@4202a05f20000000
CONST	SEGMENT
__real@4202a05f20000000 DQ 04202a05f20000000r	; 1e+10
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$wmemset DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+12
	DD	imagerel $unwind$wmemset
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$wmemset DD 020421H
	DD	07404H
	DD	imagerel $LN12
	DD	imagerel $LN12+12
	DD	imagerel $unwind$wmemset
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemset DD 010401H
	DD	0204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+12
	DD	imagerel $unwind$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z DD 020421H
	DD	07404H
	DD	imagerel $LN14
	DD	imagerel $LN14+12
	DD	imagerel $unwind$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z DD 010401H
	DD	0204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@PEBD@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel ??0_Locinfo@std@@QEAA@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+38
	DD	00H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+47
	DD	01H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+54
	DD	02H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+62
	DD	03H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+70
	DD	04H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+77
	DD	05H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+84
	DD	06H
	DD	imagerel ??0_Locinfo@std@@QEAA@PEBD@Z+187
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Locinfo@std@@QEAA@PEBD@Z DD 041811H
	DD	0d3418H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Locinfo@std@@QEAA@XZ DD imagerel ??1_Locinfo@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Locinfo@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Locinfo@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Locinfo@std@@QEAA@XZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Locinfo@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ DD 020601H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Facet_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bid@locale@std@@QEAA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0locale@std@@QEAA@AEBV01@@Z DD imagerel ??0locale@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0locale@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0locale@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0locale@std@@QEAA@AEBV01@@Z DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0locale@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1locale@std@@QEAA@XZ DD imagerel ??1locale@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1locale@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1locale@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1locale@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocchr@_W@std@@YA_WDPEA_WAEBU_Cvtvec@@@Z DD 010801H
	DD	08208H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD 0a1601H
	DD	0105416H
	DD	0f3416H
	DD	0f0127216H
	DD	0c00ee010H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gctype_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is@?$ctype@_W@std@@QEBA_NF_W@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$ctype@_W@std@@QEBA_WD@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ctype@_W@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 020601H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+85
	DD	00H
	DD	imagerel ?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+209
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 071c11H
	DD	020641cH
	DD	01f3418H
	DD	01c010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ctype@_W@std@@MEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$ctype@_W@std@@IEAAXAEBV_Locinfo@2@@Z DD 020601H
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_is@?$ctype@_W@std@@MEBA_NF_W@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 020021H
	DD	06e400H
	DD	imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 021H
	DD	imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 020521H
	DD	06e405H
	DD	imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 020021H
	DD	06e400H
	DD	imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 021H
	DD	imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 020521H
	DD	06e405H
	DD	imagerel $LN20
	DD	imagerel $LN20+37
	DD	imagerel $unwind$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+44
	DD	imagerel $unwind$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD 020521H
	DD	065405H
	DD	imagerel $LN12
	DD	imagerel $LN12+44
	DD	imagerel $unwind$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+44
	DD	imagerel $unwind$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD 020521H
	DD	065405H
	DD	imagerel $LN12
	DD	imagerel $LN12+44
	DD	imagerel $unwind$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Dowiden@?$ctype@_W@std@@IEBA_WD@Z DD 010801H
	DD	06208H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_widen@?$ctype@_W@std@@MEBA_WD@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+35
	DD	imagerel $unwind$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z DD 040e21H
	DD	08f40eH
	DD	0ee405H
	DD	imagerel $LN14
	DD	imagerel $LN14+35
	DD	imagerel $unwind$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z DD 050901H
	DD	070058209H
	DD	050036004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Donarrow@?$ctype@_W@std@@IEBAD_WD@Z DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z DD 021H
	DD	imagerel $LN16
	DD	imagerel $LN16+67
	DD	imagerel $unwind$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z DD 020821H
	DD	010e408H
	DD	imagerel $LN16
	DD	imagerel $LN16+67
	DD	imagerel $unwind$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z DD 061a19H
	DD	0f007720bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$ctype@_W@std@@MEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gerror_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	0ffffffffH
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+54
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+101
	DD	01H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+120
	DD	00H
	DD	imagerel ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z+232
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 042019H
	DD	07004b208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 041c19H
	DD	015340dH
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_System_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+104
	DD	00H
	DD	imagerel ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z+131
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 042319H
	DD	0133414H
	DD	07004d208H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gsystem_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Iostream_error_category@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?iostream_category@std@@YAAEBVerror_category@1@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel ?clear@ios_base@std@@QEAAXH_N@Z
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+243
	DD	00H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+270
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+465
	DD	01H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+488
	DD	0ffffffffH
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+666
	DD	02H
	DD	imagerel ?clear@ios_base@std@@QEAAXH_N@Z+689
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?clear@ios_base@std@@QEAAXH_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$7@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$75@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$143@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?clear@ios_base@std@@QEAAXH_N@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?clear@ios_base@std@@QEAAXH_N@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?clear@ios_base@std@@QEAAXH_N@Z
	DD	058H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@ios_base@std@@QEAAXH_N@Z DD 052c19H
	DD	0b681eH
	DD	018010eH
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?clear@ios_base@std@@QEAAXH_N@Z
	DD	0aaH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD imagerel ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	DD	0ffffffffH
	DD	imagerel ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ+22
	DD	00H
	DD	imagerel ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ+37
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 020f11H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ DD imagerel ?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ
	DD	0ffffffffH
	DD	imagerel ?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ DD 061d11H
	DD	0e641dH
	DD	0d3418H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Win32Error@wwatch@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Win32Error@wwatch@@QEAA@$$QEAV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z DD imagerel ??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z
	DD	0ffffffffH
	DD	imagerel ??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z+66
	DD	00H
	DD	imagerel ??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z+224
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z DD 072d19H
	DD	017641bH
	DD	0163417H
	DD	012010bH
	DD	07004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z
	DD	082H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Win32Error@wwatch@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
	ORG $+6
$cppxdata$wmain DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$wmain
	DD	01H
	DD	imagerel $tryMap$wmain
	DD	0dH
	DD	imagerel $ip2state$wmain
	DD	080H
	DD	00H
	DD	01H
$cppxdata$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z
	DD	038H
	DD	00H
	DD	01H
$cppxdata$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z
	DD	028H
	DD	00H
	DD	01H
$cppxdata$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
xdata	SEGMENT
$unwind$wmain DD 073219H
	DD	0263420H
	DD	020010cH
	DD	07003e005H
	DD	06002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$wmain
	DD	0f3H
$stateUnwindMap$wmain DD 0ffffffffH
	DD	imagerel wmain$dtor$0
	DD	00H
	DD	imagerel wmain$dtor$2
	DD	01H
	DD	imagerel wmain$dtor$3
	DD	02H
	DD	imagerel wmain$dtor$4
	DD	03H
	DD	00H
	DD	04H
	DD	imagerel wmain$dtor$5
	DD	03H
	DD	00H
$tryMap$wmain DD 04H
	DD	05H
	DD	06H
	DD	01H
	DD	imagerel $handlerMap$0$wmain
$handlerMap$0$wmain DD 09H
	DD	FLAT:??_R0?AVWin32Error@wwatch@@@8
	DD	088H
	DD	imagerel wmain$catch$0
	DD	048H
$ip2state$wmain DD imagerel wmain
	DD	0ffffffffH
	DD	imagerel wmain+296
	DD	00H
	DD	imagerel wmain+375
	DD	01H
	DD	imagerel wmain+415
	DD	02H
	DD	imagerel wmain+434
	DD	04H
	DD	imagerel wmain+464
	DD	05H
	DD	imagerel wmain+518
	DD	02H
	DD	imagerel wmain+586
	DD	01H
	DD	imagerel wmain+730
	DD	00H
	DD	imagerel wmain+865
	DD	0ffffffffH
	DD	imagerel wmain$catch$0
	DD	00H
	DD	imagerel wmain$catch$0+15
	DD	06H
	DD	imagerel wmain$catch$0+161
	DD	00H
$unwind$wmain$catch$0 DD 040c19H
	DD	07008320cH
	DD	030065007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$wmain
$unwind$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z DD 092d19H
	DD	0160117H
	DD	0e009f00bH
	DD	07005c007H
	DD	030036004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z
	DD	0a2H
$stateUnwindMap$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
	DD	02H
	DD	imagerel ?dtor$4@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$4@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA
$ip2state$?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z DD imagerel ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z
	DD	0ffffffffH
	DD	imagerel ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z+126
	DD	00H
	DD	imagerel ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z+162
	DD	01H
	DD	imagerel ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z+192
	DD	02H
	DD	imagerel ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z+206
	DD	04H
	DD	imagerel ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z+336
	DD	05H
	DD	imagerel ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z+626
	DD	0ffffffffH
$unwind$?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA DD 020601H
	DD	050023206H
$unwind$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z DD 0a3119H
	DD	0183423H
	DD	0f00cd213H
	DD	0d008e00aH
	DD	07004c006H
	DD	050026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z
	DD	062H
$stateUnwindMap$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA
	DD	00H
	DD	imagerel ?dtor$0@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA
$ip2state$?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z DD imagerel ?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z
	DD	0ffffffffH
	DD	imagerel ?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z+55
	DD	00H
	DD	imagerel ?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z+70
	DD	01H
	DD	imagerel ?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z+108
	DD	02H
	DD	imagerel ?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z+416
	DD	01H
	DD	imagerel ?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z+528
	DD	00H
$unwind$?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA DD 020601H
	DD	050023206H
$unwind$?endsWith@wwatch@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@0@Z DD 010401H
	DD	04204H
$unwind$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z DD 061d11H
	DD	0a641dH
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z
$stateUnwindMap$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA
$ip2state$?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z DD imagerel ?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z
	DD	0ffffffffH
	DD	imagerel ?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z+32
	DD	00H
$unwind$?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD imagerel ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
	DD	0ffffffffH
	DD	imagerel ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z+81
	DD	00H
	DD	imagerel ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z+134
	DD	0ffffffffH
	DD	imagerel ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z+164
	DD	01H
	DD	imagerel ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z+217
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 041411H
	DD	0a3414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@V?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@_W@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@D@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAH_K0AEBV12@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD 020021H
	DD	067400H
	DD	imagerel $LN228
	DD	imagerel $LN228+37
	DD	imagerel $unwind$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD 021H
	DD	imagerel $LN228
	DD	imagerel $LN228+37
	DD	imagerel $unwind$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD 020021H
	DD	067400H
	DD	imagerel $LN228
	DD	imagerel $LN228+37
	DD	imagerel $unwind$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD 020521H
	DD	067405H
	DD	imagerel $LN228
	DD	imagerel $LN228+37
	DD	imagerel $unwind$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z DD 040a01H
	DD	07340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z DD imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
	DD	0ffffffffH
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+75
	DD	00H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+130
	DD	01H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+149
	DD	02H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+160
	DD	03H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+196
	DD	04H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+282
	DD	01H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+331
	DD	09H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+349
	DD	0aH
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z+373
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA+13
	DD	05H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA+63
	DD	05H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z DD 04H
	DD	04H
	DD	08H
	DD	01H
	DD	imagerel $handlerMap$0$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	05H
	DD	00H
	DD	05H
	DD	00H
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
	DD	09H
	DD	imagerel ?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z DD 019930522H
	DD	0bH
	DD	imagerel $stateUnwindMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
	DD	01H
	DD	imagerel $tryMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
	DD	0fH
	DD	imagerel $ip2state$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
	DD	060H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z DD 061d19H
	DD	016341dH
	DD	0e005f20cH
	DD	060027003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z DD imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
	DD	0ffffffffH
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+75
	DD	00H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+130
	DD	01H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+149
	DD	02H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+160
	DD	03H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+196
	DD	04H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+282
	DD	01H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+331
	DD	09H
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+349
	DD	0aH
	DD	imagerel ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z+373
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA+13
	DD	05H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA+63
	DD	05H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z DD 04H
	DD	04H
	DD	08H
	DD	01H
	DD	imagerel $handlerMap$0$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	01H
	DD	imagerel ?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	05H
	DD	00H
	DD	05H
	DD	00H
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
	DD	09H
	DD	imagerel ?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z DD 019930522H
	DD	0bH
	DD	imagerel $stateUnwindMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
	DD	01H
	DD	imagerel $tryMap$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
	DD	0fH
	DD	imagerel $ip2state$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
	DD	060H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z DD 061d19H
	DD	016341dH
	DD	0e005f20cH
	DD	060027003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ+64
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z+57
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z+109
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z DD 051d19H
	DD	014010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z DD imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z+84
	DD	00H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z+503
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z DD 0b3319H
	DD	096825H
	DD	01a3421H
	DD	0140115H
	DD	0e008f00aH
	DD	060057006H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z
	DD	08aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z DD imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z+84
	DD	00H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z+499
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z DD 0b3319H
	DD	096825H
	DD	01a3421H
	DD	0140115H
	DD	0e008f00aH
	DD	060057006H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z
	DD	08aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z DD 051d19H
	DD	016010bH
	DD	060037004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z DD imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+133
	DD	00H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+144
	DD	01H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+179
	DD	0ffffffffH
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+199
	DD	02H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+220
	DD	03H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+285
	DD	02H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+295
	DD	04H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+360
	DD	02H
	DD	imagerel ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z+832
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA
	DD	02H
	DD	imagerel ?dtor$38@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA
	DD	02H
	DD	imagerel ?dtor$158@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z DD 019930522H
	DD	05H
	DD	imagerel $stateUnwindMap$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z
	DD	00H
	DD	00H
	DD	0aH
	DD	imagerel $ip2state$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z DD 0a2f19H
	DD	0150119H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z
	DD	09aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD 021H
	DD	imagerel $LN118
	DD	imagerel $LN118+27
	DD	imagerel $unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD 020521H
	DD	066405H
	DD	imagerel $LN118
	DD	imagerel $LN118+27
	DD	imagerel $unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z DD 040a01H
	DD	02740aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 020021H
	DD	066400H
	DD	imagerel $LN229
	DD	imagerel $LN229+46
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 021H
	DD	imagerel $LN229
	DD	imagerel $LN229+46
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 021H
	DD	imagerel $LN229+46
	DD	imagerel $LN229+170
	DD	imagerel $chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 020521H
	DD	077405H
	DD	imagerel $LN229+46
	DD	imagerel $LN229+170
	DD	imagerel $chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 020521H
	DD	066405H
	DD	imagerel $LN229
	DD	imagerel $LN229+46
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 061001H
	DD	095410H
	DD	083410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 020021H
	DD	067400H
	DD	imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 021H
	DD	imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 020521H
	DD	067405H
	DD	imagerel $LN267
	DD	imagerel $LN267+139
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020021H
	DD	067400H
	DD	imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 021H
	DD	imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020521H
	DD	067405H
	DD	imagerel $LN244
	DD	imagerel $LN244+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$numpunct@_W@std@@MEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z DD 021H
	DD	imagerel $LN41
	DD	imagerel $LN41+40
	DD	imagerel $unwind$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z DD 020521H
	DD	06e405H
	DD	imagerel $LN41
	DD	imagerel $LN41+40
	DD	imagerel $unwind$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z DD 021H
	DD	imagerel $LN41
	DD	imagerel $LN41+39
	DD	imagerel $unwind$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z DD 020521H
	DD	06e405H
	DD	imagerel $LN41
	DD	imagerel $LN41+39
	DD	imagerel $unwind$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z DD imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+177
	DD	00H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+188
	DD	01H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+223
	DD	0ffffffffH
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+257
	DD	02H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+300
	DD	03H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+311
	DD	04H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+346
	DD	02H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+359
	DD	05H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+1708
	DD	02H
	DD	imagerel ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z+1828
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$41@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z DD 0b3619H
	DD	01c3428H
	DD	0140118H
	DD	0e00af00cH
	DD	0c006d008H
	DD	060037004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z
	DD	09aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z DD imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+239
	DD	00H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+250
	DD	01H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+284
	DD	0ffffffffH
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+318
	DD	02H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+362
	DD	03H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+373
	DD	04H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+407
	DD	02H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+420
	DD	05H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+1825
	DD	02H
	DD	imagerel ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z+1945
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$41@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z
	DD	058H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z DD 0b3619H
	DD	01e3428H
	DD	0160118H
	DD	0e00af00cH
	DD	0c006d008H
	DD	060037004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z
	DD	0a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 020021H
	DD	086400H
	DD	imagerel $LN219
	DD	imagerel $LN219+54
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 021H
	DD	imagerel $LN219
	DD	imagerel $LN219+54
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 020021H
	DD	086400H
	DD	imagerel $LN219
	DD	imagerel $LN219+54
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 020021H
	DD	086400H
	DD	imagerel $LN219
	DD	imagerel $LN219+54
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 021H
	DD	imagerel $LN219
	DD	imagerel $LN219+54
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 020521H
	DD	086405H
	DD	imagerel $LN219
	DD	imagerel $LN219+54
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 081501H
	DD	0b7415H
	DD	0a5415H
	DD	093415H
	DD	0e0115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD 021H
	DD	imagerel $LN105
	DD	imagerel $LN105+24
	DD	imagerel $unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD 020021H
	DD	067400H
	DD	imagerel $LN105
	DD	imagerel $LN105+24
	DD	imagerel $unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD 020021H
	DD	067400H
	DD	imagerel $LN105
	DD	imagerel $LN105+24
	DD	imagerel $unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD 020521H
	DD	067405H
	DD	imagerel $LN105
	DD	imagerel $LN105+24
	DD	imagerel $unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0_W@Z DD 032701H
	DD	07427H
	DD	0204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD 020021H
	DD	067400H
	DD	imagerel $LN269
	DD	imagerel $LN269+145
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD 021H
	DD	imagerel $LN269
	DD	imagerel $LN269+145
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD 020521H
	DD	067405H
	DD	imagerel $LN269
	DD	imagerel $LN269+145
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020021H
	DD	067400H
	DD	imagerel $LN246
	DD	imagerel $LN246+76
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 021H
	DD	imagerel $LN246
	DD	imagerel $LN246+76
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 020521H
	DD	067405H
	DD	imagerel $LN246
	DD	imagerel $LN246+76
	DD	imagerel $unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 081501H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD imagerel ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 021H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020021H
	DD	067400H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020021H
	DD	067400H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020521H
	DD	067405H
	DD	imagerel $LN105
	DD	imagerel $LN105+15
	DD	imagerel $unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 020021H
	DD	067400H
	DD	imagerel $LN220
	DD	imagerel $LN220+45
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 021H
	DD	imagerel $LN220
	DD	imagerel $LN220+45
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 020521H
	DD	067405H
	DD	imagerel $LN220
	DD	imagerel $LN220+45
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ DD imagerel ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ
	DD	0ffffffffH
	DD	imagerel ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ+51
	DD	00H
	DD	imagerel ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ+116
	DD	01H
	DD	imagerel ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ+136
	DD	02H
	DD	imagerel ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ+165
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ DD 020f11H
	DD	030027206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ DD imagerel ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ+18
	DD	00H
	DD	imagerel ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ+90
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
	DD	01H
	DD	imagerel $tryMap$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
	DD	04H
	DD	imagerel $ip2state$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$numpunct@_W@std@@MEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$numpunct@_W@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?thousands_sep@?$numpunct@_W@std@@QEBA_WXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decimal_point@?$numpunct@_W@std@@QEBA_WXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_W@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z+117
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z+235
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+21
	DD	02H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+37
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+14
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	08H
	DD	imagerel $ip2state$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 062319H
	DD	0f016521aH
	DD	07012e014H
	DD	030106011H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD 020021H
	DD	066400H
	DD	imagerel $LN287
	DD	imagerel $LN287+63
	DD	imagerel $unwind$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD 021H
	DD	imagerel $LN287
	DD	imagerel $LN287+63
	DD	imagerel $unwind$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD 020521H
	DD	066405H
	DD	imagerel $LN287
	DD	imagerel $LN287+63
	DD	imagerel $unwind$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z DD 081501H
	DD	097415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@_K_W@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 030b19H
	DD	05007420bH
	DD	03006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+110
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z+209
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+21
	DD	02H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+37
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA+14
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	08H
	DD	imagerel $ip2state$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z DD 052119H
	DD	0e0146218H
	DD	060117012H
	DD	03010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 021H
	DD	imagerel $LN199
	DD	imagerel $LN199+155
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 020521H
	DD	067405H
	DD	imagerel $LN199
	DD	imagerel $LN199+155
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$any_of@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z DD imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z+128
	DD	00H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z+181
	DD	01H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z+195
	DD	02H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z+477
	DD	01H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z+531
	DD	07H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z+549
	DD	08H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z+574
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA+63
	DD	03H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z DD 02H
	DD	02H
	DD	06H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$220@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
	DD	07H
	DD	imagerel ?dtor$221@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
	DD	01H
	DD	imagerel $tryMap$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
	DD	0dH
	DD	imagerel $ip2state$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z DD 0a2019H
	DD	0136420H
	DD	012341cH
	DD	0f00c9210H
	DD	0d008e00aH
	DD	07004c006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z+107
	DD	00H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z+160
	DD	01H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z+174
	DD	02H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z+469
	DD	01H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z+523
	DD	07H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z+541
	DD	08H
	DD	imagerel ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z+566
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA+63
	DD	03H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 02H
	DD	02H
	DD	06H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$5@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$229@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	07H
	DD	imagerel ?dtor$230@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	0dH
	DD	imagerel $ip2state$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 0a2019H
	DD	0136420H
	DD	012341cH
	DD	0f00c9210H
	DD	0d008e00aH
	DD	07004c006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEA_WX@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@PEAPEA_W0@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z DD imagerel ??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z
	DD	0ffffffffH
	DD	imagerel ??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z+217
	DD	00H
	DD	imagerel ??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z+274
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z DD 082f19H
	DD	0183420H
	DD	0f008f20fH
	DD	07004e006H
	DD	050026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z+34
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z+90
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z+34
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z+90
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z+38
	DD	00H
	DD	imagerel ??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z+325
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z DD 061611H
	DD	0f3416H
	DD	070047208H
	DD	050026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z+38
	DD	00H
	DD	imagerel ??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z+325
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z DD 061611H
	DD	0f3416H
	DD	070047208H
	DD	050026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DD imagerel ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z+38
	DD	00H
	DD	imagerel ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z+325
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z DD 061611H
	DD	0f3416H
	DD	070047208H
	DD	050026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 060021H
	DD	086400H
	DD	075400H
	DD	063400H
	DD	imagerel $LN178
	DD	imagerel $LN178+14
	DD	imagerel $unwind$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 021H
	DD	imagerel $LN178
	DD	imagerel $LN178+14
	DD	imagerel $unwind$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 061621H
	DD	086416H
	DD	07540dH
	DD	063405H
	DD	imagerel $LN178
	DD	imagerel $LN178+14
	DD	imagerel $unwind$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+72
	DD	00H
	DD	imagerel ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+114
	DD	01H
	DD	imagerel ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+132
	DD	02H
	DD	imagerel ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+157
	DD	03H
	DD	imagerel ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+160
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 071b11H
	DD	017641bH
	DD	0153417H
	DD	012010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel ?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	0ffffffffH
	DD	imagerel ?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+76
	DD	00H
	DD	imagerel ?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z+134
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 071b11H
	DD	016641bH
	DD	0153417H
	DD	012010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z DD imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
	DD	0ffffffffH
	DD	imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z+71
	DD	00H
	DD	imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z+124
	DD	01H
	DD	imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z+135
	DD	02H
	DD	imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z+217
	DD	01H
	DD	imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z+270
	DD	07H
	DD	imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z+288
	DD	08H
	DD	imagerel ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z+312
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA+54
	DD	00H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA+63
	DD	03H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z DD 02H
	DD	02H
	DD	06H
	DD	01H
	DD	imagerel $handlerMap$0$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$216@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
	DD	07H
	DD	imagerel ?dtor$217@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
	DD	01H
	DD	imagerel $tryMap$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
	DD	0dH
	DD	imagerel $ip2state$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z DD 061919H
	DD	0f6419H
	DD	0e3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z DD imagerel ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z
	DD	0ffffffffH
	DD	imagerel ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z+34
	DD	00H
	DD	imagerel ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z+45
	DD	01H
	DD	imagerel ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z+81
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z DD 041411H
	DD	0c3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD imagerel ??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	0ffffffffH
	DD	imagerel ??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z+26
	DD	00H
	DD	imagerel ??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z+46
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z DD imagerel ?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	0ffffffffH
	DD	imagerel ?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z+147
	DD	00H
	DD	imagerel ?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z+312
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	01H
	DD	imagerel $tryMap$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	05H
	DD	imagerel $ip2state$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z DD 0b3719H
	DD	01f7425H
	DD	01e6421H
	DD	01d341dH
	DD	0180110H
	DD	0e007f009H
	DD	0c005H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
	DD	0b3H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z+34
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z+90
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z+34
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z+90
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z DD imagerel ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z+126
	DD	00H
	DD	imagerel ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z+144
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z DD 082319H
	DD	0d7423H
	DD	0c641eH
	DD	0b3419H
	DD	0e007720bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAA_N_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA DD 020a19H
	DD	05006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z DD imagerel ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z+126
	DD	00H
	DD	imagerel ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z+144
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA+13
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
	DD	05H
	DD	imagerel $ip2state$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z DD 082319H
	DD	0d7423H
	DD	0c641eH
	DD	0b3419H
	DD	0e007720bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z+34
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z+90
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z+34
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z+90
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBV21@0PEAV21@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAPEA_W0PEAV21@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 021H
	DD	imagerel $LN480
	DD	imagerel $LN480+26
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 040e21H
	DD	07540eH
	DD	063405H
	DD	imagerel $LN480
	DD	imagerel $LN480+26
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 040b01H
	DD	08640bH
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD 040c19H
	DD	07008320cH
	DD	030065007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+46
	DD	00H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+59
	DD	01H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+114
	DD	00H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+129
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+15
	DD	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	imagerel ?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	07H
	DD	imagerel $ip2state$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 062019H
	DD	0b3420H
	DD	0e00e5212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD 040c19H
	DD	07008320cH
	DD	030065007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD imagerel ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+46
	DD	00H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+59
	DD	01H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+133
	DD	00H
	DD	imagerel ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z+148
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA+15
	DD	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	imagerel ?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	07H
	DD	imagerel $ip2state$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z DD 062019H
	DD	0b3420H
	DD	0e00e5212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z+31
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z+103
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z+31
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z+103
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z+31
	DD	00H
	DD	imagerel ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z+103
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
;	COMDAT fabsl
_TEXT	SEGMENT
_X$ = 8
fabsl	PROC						; COMDAT

; 842  :     return fabs((double)_X);

  00000	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff

; 843  : }

  00007	c3		 ret	 0
fabsl	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
;	COMDAT frexpl
_TEXT	SEGMENT
_X$ = 8
_Y$ = 16
frexpl	PROC						; COMDAT

; 863  :     return frexp((double)_X, _Y);

  00000	e9 00 00 00 00	 jmp	 frexp
frexpl	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 81   :     static unsigned __int64 _OptionsStorage;
; 82   :     return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 83   : }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemcmp
_TEXT	SEGMENT
_S1$ = 8
_S2$ = 16
_N$ = 24
wmemcmp	PROC						; COMDAT

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  00000	4d 85 c0	 test	 r8, r8
  00003	74 16		 je	 SHORT $LN3@wmemcmp
$LL4@wmemcmp:

; 217  :             if (*_S1 != *_S2)

  00005	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00008	66 39 01	 cmp	 WORD PTR [rcx], ax
  0000b	75 11		 jne	 SHORT $LN8@wmemcmp

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  0000d	48 83 c1 02	 add	 rcx, 2
  00011	48 83 c2 02	 add	 rdx, 2
  00015	49 83 e8 01	 sub	 r8, 1
  00019	75 ea		 jne	 SHORT $LL4@wmemcmp
$LN3@wmemcmp:

; 219  : 
; 220  :         return 0;

  0001b	33 c0		 xor	 eax, eax

; 221  :     }

  0001d	c3		 ret	 0
$LN8@wmemcmp:

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

  0001e	0f b7 12	 movzx	 edx, WORD PTR [rdx]
  00021	41 83 c8 ff	 or	 r8d, -1
  00025	66 39 11	 cmp	 WORD PTR [rcx], dx
  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	41 0f 42 c0	 cmovb	 eax, r8d

; 221  :     }

  00031	c3		 ret	 0
wmemcmp	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemcpy	PROC						; COMDAT

; 231  :     {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00006	4d 03 c0	 add	 r8, r8
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	e8 00 00 00 00	 call	 memcpy
  00011	48 8b c3	 mov	 rax, rbx

; 235  :         #pragma warning(pop)
; 236  :     }

  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5b		 pop	 rbx
  00019	c3		 ret	 0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemmove
_TEXT	SEGMENT
_S1$ = 8
_S2$ = 16
_N$ = 24
wmemmove PROC						; COMDAT

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00000	4d 03 c0	 add	 r8, r8
  00003	e9 00 00 00 00	 jmp	 memmove
wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemset
_TEXT	SEGMENT
_S$ = 16
_C$ = 24
_N$ = 32
wmemset	PROC						; COMDAT

; 258  :     {

$LN12:
  00000	48 83 ec 08	 sub	 rsp, 8
  00004	4c 8b c9	 mov	 r9, rcx

; 260  :         for (; 0 < _N; ++_Su, --_N)

  00007	4d 85 c0	 test	 r8, r8
  0000a	74 14		 je	 SHORT $LN10@wmemset

; 259  :         wchar_t *_Su = _S;

  0000c	48 89 3c 24	 mov	 QWORD PTR [rsp], rdi
  00010	48 8b f9	 mov	 rdi, rcx
  00013	49 8b c8	 mov	 rcx, r8
  00016	0f b7 c2	 movzx	 eax, dx
  00019	66 f3 ab	 rep stosw
  0001c	48 8b 3c 24	 mov	 rdi, QWORD PTR [rsp]
$LN10@wmemset:

; 261  :         {
; 262  :             *_Su = _C;
; 263  :         }
; 264  :         return _S;

  00020	49 8b c1	 mov	 rax, r9

; 265  :     }

  00023	48 83 c4 08	 add	 rsp, 8
  00027	c3		 ret	 0
wmemset	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 32
this$ = 64
_Message$ = 72
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 53   :     {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 54   :         __std_exception_data _InitData = { _Message, true };

  00009	c6 44 24 28 01	 mov	 BYTE PTR _InitData$[rsp+8], 1
  0000e	48 8b c2	 mov	 rax, rdx
  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  0001c	48 89 44 24 20	 mov	 QWORD PTR _InitData$[rsp], rax
  00021	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  00024	33 c9		 xor	 ecx, ecx
  00026	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00029	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  0002d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$[rsp]
  00032	e8 00 00 00 00	 call	 __std_exception_copy

; 56   :     }

  00037	48 8b c3	 mov	 rax, rbx
  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5b		 pop	 rbx
  0003f	c3		 ret	 0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Message$ = 16
__formal$ = 24
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 60   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	33 c0		 xor	 eax, eax
  0000c	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 61   :         _Data._What = _Message;
; 62   :     }

  00010	48 8b c1	 mov	 rax, rcx
  00013	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  00017	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx
  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy

; 68   :     }

  0002c	48 8b c3	 mov	 rax, rbx
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5b		 pop	 rbx
  00034	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 89   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception?$AA@
  0000b	48 85 d2	 test	 rdx, rdx
  0000e	48 0f 45 c2	 cmovne	 rax, rdx

; 90   :     }

  00012	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN8:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN6@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN6@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 88   :         (void)_Size;
; 89   :         return _Where;

  00000	48 8b c2	 mov	 rax, rdx

; 90   :     }

  00003	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??3@YAXPEAX0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
??3@YAXPEAX0@Z PROC					; operator delete, COMDAT

; 94   :         return;
; 95   :     }

  00000	c2 00 00	 ret	 0
??3@YAXPEAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vsprintf_s_l PROC					; COMDAT

; 1493 : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	49 8b d9	 mov	 rbx, r9
  00017	49 8b f8	 mov	 rdi, r8
  0001a	48 8b f2	 mov	 rsi, rdx
  0001d	48 8b e9	 mov	 rbp, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

  00020	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00025	4c 8b 54 24 60	 mov	 r10, QWORD PTR _ArgList$[rsp]
  0002a	4c 8b cf	 mov	 r9, rdi
  0002d	4c 89 54 24 28	 mov	 QWORD PTR [rsp+40], r10
  00032	4c 8b c6	 mov	 r8, rsi
  00035	48 8b d5	 mov	 rdx, rbp
  00038	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  0003d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00040	e8 00 00 00 00	 call	 __stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;
; 1499 : }

  00045	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0004a	83 c9 ff	 or	 ecx, -1
  0004d	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00052	85 c0		 test	 eax, eax
  00054	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00059	0f 48 c1	 cmovs	 eax, ecx
  0005c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Buffer$ = 96
_BufferCount$ = 104
_Format$ = 112
sprintf_s PROC						; COMDAT

; 1834 :     {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  0000a	53		 push	 rbx
  0000b	55		 push	 rbp
  0000c	56		 push	 rsi
  0000d	57		 push	 rdi
  0000e	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00012	49 8b f0	 mov	 rsi, r8

; 1835 :         int _Result;
; 1836 :         va_list _ArgList;
; 1837 :         __crt_va_start(_ArgList, _Format);

  00015	48 8d 6c 24 78	 lea	 rbp, QWORD PTR _Format$[rsp+8]
  0001a	48 8b da	 mov	 rbx, rdx
  0001d	48 8b f9	 mov	 rdi, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

  00020	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00025	48 89 6c 24 28	 mov	 QWORD PTR [rsp+40], rbp
  0002a	4c 8b ce	 mov	 r9, rsi
  0002d	4c 8b c3	 mov	 r8, rbx
  00030	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00039	48 8b d7	 mov	 rdx, rdi
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	e8 00 00 00 00	 call	 __stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;

  00044	83 c9 ff	 or	 ecx, -1
  00047	85 c0		 test	 eax, eax
  00049	0f 48 c1	 cmovs	 eax, ecx

; 1838 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1839 :         __crt_va_end(_ArgList);
; 1840 :         return _Result;
; 1841 :     }

  0004c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00050	5f		 pop	 rdi
  00051	5e		 pop	 rsi
  00052	5d		 pop	 rbp
  00053	5b		 pop	 rbx
  00054	c3		 ret	 0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?compare@?$char_traits@_W@std@@SAHPEB_W0_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?compare@?$char_traits@_W@std@@SAHPEB_W0_K@Z PROC	; std::char_traits<wchar_t>::compare, COMDAT

; 296  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

  00000	4c 8b c9	 mov	 r9, rcx

; 297  : 		return (_Count == 0 ? 0

  00003	4d 85 c0	 test	 r8, r8
$LN17@compare:
  00006	75 08		 jne	 SHORT $LL8@compare
  00008	33 c0		 xor	 eax, eax

; 299  : 		}

  0000a	c3		 ret	 0
  0000b	0f 1f 44 00 00	 npad	 5
$LL8@compare:
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 217  :             if (*_S1 != *_S2)

  00010	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00013	66 41 39 01	 cmp	 WORD PTR [r9], ax
  00017	75 0e		 jne	 SHORT $LN12@compare

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  00019	49 83 c1 02	 add	 r9, 2
  0001d	48 83 c2 02	 add	 rdx, 2
  00021	49 83 e8 01	 sub	 r8, 1

; 217  :             if (*_S1 != *_S2)

  00025	eb df		 jmp	 SHORT $LN17@compare
$LN12@compare:

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

  00027	0f b7 0a	 movzx	 ecx, WORD PTR [rdx]
  0002a	41 83 c8 ff	 or	 r8d, -1
  0002e	66 41 39 09	 cmp	 WORD PTR [r9], cx
  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	41 0f 42 c0	 cmovb	 eax, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 299  : 		}

  0003b	c3		 ret	 0
?compare@?$char_traits@_W@std@@SAHPEB_W0_K@Z ENDP	; std::char_traits<wchar_t>::compare
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SA_KPEB_W@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$char_traits@_W@std@@SA_KPEB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 303  : 		return (*_First == 0 ? 0

  00000	66 83 39 00	 cmp	 WORD PTR [rcx], 0
  00004	75 03		 jne	 SHORT $LN3@length
  00006	33 c0		 xor	 eax, eax

; 304  : 			: _CSTD wcslen(_First));
; 305  : 		}

  00008	c3		 ret	 0
$LN3@length:

; 303  : 		return (*_First == 0 ? 0

  00009	48 83 c8 ff	 or	 rax, -1
  0000d	0f 1f 00	 npad	 3
$LL5@length:
  00010	48 ff c0	 inc	 rax
  00013	66 83 3c 41 00	 cmp	 WORD PTR [rcx+rax*2], 0
  00018	75 f6		 jne	 SHORT $LL5@length

; 304  : 			: _CSTD wcslen(_First));
; 305  : 		}

  0001a	c3		 ret	 0
?length@?$char_traits@_W@std@@SA_KPEB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 309  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN9:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 310  : 		return (_Count == 0 ? _First1

  00009	4d 85 c0	 test	 r8, r8
  0000c	74 08		 je	 SHORT $LN7@copy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  0000e	4d 03 c0	 add	 r8, r8
  00011	e8 00 00 00 00	 call	 memcpy
$LN7@copy:
  00016	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 312  : 		}

  00019	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001d	5b		 pop	 rbx
  0001e	c3		 ret	 0
?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 333  : 		return (_Count == 0 ? _First1

  00000	4d 85 c0	 test	 r8, r8
  00003	75 04		 jne	 SHORT $LN3@move
  00005	48 8b c1	 mov	 rax, rcx

; 335  : 		}

  00008	c3		 ret	 0
$LN3@move:
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00009	4d 03 c0	 add	 r8, r8
  0000c	e9 00 00 00 00	 jmp	 memmove
?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z
_TEXT	SEGMENT
_First$ = 16
_Count$ = 24
_Ch$ = 32
?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 339  : 		{	// assign _Count * _Ch to [_First, ...)

$LN14:
  00000	48 83 ec 08	 sub	 rsp, 8
  00004	4c 8b c9	 mov	 r9, rcx
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 260  :         for (; 0 < _N; ++_Su, --_N)

  00007	48 85 d2	 test	 rdx, rdx
  0000a	74 15		 je	 SHORT $LN12@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 340  : 		return ((_Elem *)_CSTD wmemset(_First, _Ch, _Count));

  0000c	48 89 3c 24	 mov	 QWORD PTR [rsp], rdi
  00010	48 8b f9	 mov	 rdi, rcx
  00013	48 8b ca	 mov	 rcx, rdx
  00016	41 0f b7 c0	 movzx	 eax, r8w
  0001a	66 f3 ab	 rep stosw
  0001d	48 8b 3c 24	 mov	 rdi, QWORD PTR [rsp]
$LN12@assign:
  00021	49 8b c1	 mov	 rax, r9

; 341  : 		}

  00024	48 83 c4 08	 add	 rsp, 8
  00028	c3		 ret	 0
?assign@?$char_traits@_W@std@@SAPEA_WPEA_W_K_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 345  : 		_Left = _Right;

  00000	0f b7 02	 movzx	 eax, WORD PTR [rdx]
  00003	66 89 01	 mov	 WORD PTR [rcx], ax

; 346  : 		}

  00006	c3		 ret	 0
?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z PROC	; std::char_traits<wchar_t>::to_int_type, COMDAT

; 369  : 		return (_Ch);

  00000	0f b7 01	 movzx	 eax, WORD PTR [rcx]

; 370  : 		}

  00003	c3		 ret	 0
?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z ENDP	; std::char_traits<wchar_t>::to_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z PROC	; std::char_traits<wchar_t>::eq_int_type, COMDAT

; 375  : 		return (_Left == _Right);

  00000	0f b7 12	 movzx	 edx, WORD PTR [rdx]
  00003	66 39 11	 cmp	 WORD PTR [rcx], dx
  00006	0f 94 c0	 sete	 al

; 376  : 		}

  00009	c3		 ret	 0
?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z ENDP	; std::char_traits<wchar_t>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eof@?$char_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$char_traits@_W@std@@SAGXZ PROC			; std::char_traits<wchar_t>::eof, COMDAT

; 386  : 		return (WEOF);

  00000	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH

; 387  : 		}

  00005	c3		 ret	 0
?eof@?$char_traits@_W@std@@SAGXZ ENDP			; std::char_traits<wchar_t>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SA_KPEBD@Z
_TEXT	SEGMENT
_First$ = 8
?length@?$char_traits@D@std@@SA_KPEBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 523  : 		return (*_First == 0 ? 0

  00000	80 39 00	 cmp	 BYTE PTR [rcx], 0
  00003	75 03		 jne	 SHORT $LN3@length
  00005	33 c0		 xor	 eax, eax

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00007	c3		 ret	 0
$LN3@length:

; 523  : 		return (*_First == 0 ? 0

  00008	48 83 c8 ff	 or	 rax, -1
  0000c	0f 1f 40 00	 npad	 4
$LL5@length:
  00010	48 ff c0	 inc	 rax
  00013	80 3c 01 00	 cmp	 BYTE PTR [rcx+rax], 0
  00017	75 f7		 jne	 SHORT $LL5@length

; 524  : 			: _CSTD strlen(_First));
; 525  : 		}

  00019	c3		 ret	 0
?length@?$char_traits@D@std@@SA_KPEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::copy, COMDAT

; 529  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 530  : 		return (_Count == 0 ? _First1

  00009	4d 85 c0	 test	 r8, r8
  0000c	74 05		 je	 SHORT $LN5@copy
  0000e	e8 00 00 00 00	 call	 memcpy
$LN5@copy:
  00013	48 8b c3	 mov	 rax, rbx

; 531  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));
; 532  : 		}

  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5b		 pop	 rbx
  0001b	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z PROC	; std::char_traits<char>::move, COMDAT

; 553  : 		return (_Count == 0 ? _First1

  00000	4d 85 c0	 test	 r8, r8
  00003	75 04		 jne	 SHORT $LN3@move
  00005	48 8b c1	 mov	 rax, rcx

; 554  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));
; 555  : 		}

  00008	c3		 ret	 0
$LN3@move:

; 553  : 		return (_Count == 0 ? _First1

  00009	e9 00 00 00 00	 jmp	 memmove
?move@?$char_traits@D@std@@SAPEADPEADPEBD_K@Z ENDP	; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z PROC	; std::char_traits<char>::assign, COMDAT

; 559  : 		{	// assign _Count * _Ch to [_First, ...)

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b c2	 mov	 rax, rdx
  00009	48 8b d9	 mov	 rbx, rcx

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  0000c	41 0f be d0	 movsx	 edx, r8b
  00010	4c 8b c0	 mov	 r8, rax
  00013	e8 00 00 00 00	 call	 memset
  00018	48 8b c3	 mov	 rax, rbx

; 561  : 		}

  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5b		 pop	 rbx
  00020	c3		 ret	 0
?assign@?$char_traits@D@std@@SAPEADPEAD_KD@Z ENDP	; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 565  : 		_Left = _Right;

  00000	0f b6 02	 movzx	 eax, BYTE PTR [rdx]
  00003	88 01		 mov	 BYTE PTR [rcx], al

; 566  : 		}

  00005	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAEADAEBD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT

; 44   : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z PROC	; std::_Container_base0::_Swap_all, COMDAT

; 48   : 		}

  00000	c2 00 00	 ret	 0
?_Swap_all@_Container_base0@std@@QEAAXAEAU12@@Z ENDP	; std::_Container_base0::_Swap_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT

; 55   : 		}

  00000	c2 00 00	 ret	 0
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Count$ = 48
_Sz$ = 56
_Try_aligned_allocation$ = 64
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b ca	 mov	 r9, rdx

; 49   : 	void *_Ptr = 0;
; 50   : 
; 51   : 	if (_Count == 0)

  00007	48 85 c9	 test	 rcx, rcx
  0000a	75 07		 jne	 SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

  0000c	33 c0		 xor	 eax, eax
$LN8@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}

  0000e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00012	c3		 ret	 0
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00013	33 d2		 xor	 edx, edx
  00015	48 83 c8 ff	 or	 rax, -1
  00019	49 f7 f1	 div	 r9
  0001c	48 3b c1	 cmp	 rax, rcx
  0001f	72 48		 jb	 SHORT $LN11@Allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  00021	49 0f af c9	 imul	 rcx, r9

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00025	45 84 c0	 test	 r8b, r8b
  00028	74 33		 je	 SHORT $LN4@Allocate
  0002a	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  00031	72 2a		 jb	 SHORT $LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  00033	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00037	48 3b c1	 cmp	 rax, rcx
  0003a	76 33		 jbe	 SHORT $LN13@Allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00044	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00047	48 85 c0	 test	 rax, rax
  0004a	74 29		 je	 SHORT $LN14@Allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  0004c	48 83 c0 27	 add	 rax, 39			; 00000027H
  00050	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  00054	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 85   : 		}
; 86   : 	return (_Ptr);
; 87   : 	}

  00058	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005c	c3		 ret	 0
$LN4@Allocate:

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else
; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  0005d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00062	48 85 c0	 test	 rax, rax
  00065	75 a7		 jne	 SHORT $LN8@Allocate
  00067	eb 12		 jmp	 SHORT $LN15@Allocate
$LN11@Allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00069	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006e	cc		 int	 3
$LN13@Allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0006f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00074	cc		 int	 3
$LN14@Allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00075	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007a	cc		 int	 3
$LN15@Allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0007b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00080	cc		 int	 3
$LN10@Allocate:
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Count$ = 56
_Sz$ = 64
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

$LN16:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b ca	 mov	 r9, rdx

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00007	48 83 c8 ff	 or	 rax, -1
  0000b	33 d2		 xor	 edx, edx
  0000d	49 f7 f0	 div	 r8
  00010	4c 3b c8	 cmp	 r9, rax
  00013	77 36		 ja	 SHORT $LN10@Deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00015	4d 0f af c8	 imul	 r9, r8

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00019	49 81 f9 00 10
	00 00		 cmp	 r9, 4096		; 00001000H
  00020	72 20		 jb	 SHORT $LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00022	f6 c1 1f	 test	 cl, 31
  00025	75 2a		 jne	 SHORT $LN12@Deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00027	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0002b	48 3b c1	 cmp	 rax, rcx
  0002e	73 27		 jae	 SHORT $LN13@Deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00030	48 2b c8	 sub	 rcx, rax
  00033	48 83 f9 08	 cmp	 rcx, 8
  00037	72 24		 jb	 SHORT $LN14@Deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00039	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0003d	77 24		 ja	 SHORT $LN15@Deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003f	48 8b c8	 mov	 rcx, rax
$LN3@Deallocate:

; 133  : 	}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN10@Deallocate:

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN12@Deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN13@Deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN14@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN15@Deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN9@Deallocate:
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
;	COMDAT ?_Init_atomic_counter@std@@YAXAEAKK@Z
_TEXT	SEGMENT
_Counter$ = 8
_Value$ = 16
?_Init_atomic_counter@std@@YAXAEAKK@Z PROC		; std::_Init_atomic_counter, COMDAT

; 63   : 	_Counter = _Value;

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 64   : 	}

  00002	c3		 ret	 0
?_Init_atomic_counter@std@@YAXAEAKK@Z ENDP		; std::_Init_atomic_counter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
this$ = 64
_Message$ = 72
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT

; 163  : 		{	// construct from message string

$LN27:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00006	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  0000b	48 8b c2	 mov	 rax, rdx
  0000e	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00011	72 03		 jb	 SHORT $LN16@runtime_er
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00013	48 8b 02	 mov	 rax, QWORD PTR [rdx]
$LN16@runtime_er:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 52   :         : _Data()

  00016	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 53   :     {
; 54   :         __std_exception_data _InitData = { _Message, true };

  0001a	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00026	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
  0002b	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0002e	33 c9		 xor	 ecx, ecx
  00030	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00033	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00037	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  0003c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00048	48 89 03	 mov	 QWORD PTR [rbx], rax

; 164  : 		}

  0004b	48 8b c3	 mov	 rax, rbx
  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5b		 pop	 rbx
  00053	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
_InitData$1 = 32
this$ = 64
_Message$ = 72
??0runtime_error@std@@QEAA@PEBD@Z PROC			; std::runtime_error::runtime_error, COMDAT

; 168  : 		{	// construct from message string

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 54   :         __std_exception_data _InitData = { _Message, true };

  00009	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

  0000e	48 8b c2	 mov	 rax, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 53   :     {

  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00018	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 54   :         __std_exception_data _InitData = { _Message, true };

  0001c	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  00021	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  00024	33 c9		 xor	 ecx, ecx
  00026	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00029	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  0002d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  00032	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  0003e	48 89 03	 mov	 QWORD PTR [rbx], rax

; 169  : 		}

  00041	48 8b c3	 mov	 rax, rbx
  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
??0runtime_error@std@@QEAA@PEBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN9@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN9@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 59   :         : _Data()

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  0000d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h

; 125  :     {

  00011	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 126  :     }

  0001b	48 8b c1	 mov	 rax, rcx
  0001e	c3		 ret	 0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN11:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN9@scalar
  00027	ba 18 00 00 00	 mov	 edx, 24
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN9@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ??0_Locinfo@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
??0_Locinfo@std@@QEAA@PEBD@Z PROC			; std::_Locinfo::_Locinfo, COMDAT

; 76   : 		{	// construct from NTBS

$LN28:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 68	 mov	 QWORD PTR [rsp+104], rbx
  00018	48 8b fa	 mov	 rdi, rdx
  0001b	48 8b d9	 mov	 rbx, rcx

; 73   : 		: _Lock(_LOCK_LOCALE)

  0001e	33 d2		 xor	 edx, edx
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 3612 : 		: _Myptr(0), _Nul(0)

  00026	33 c0		 xor	 eax, eax
  00028	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax
  0002c	88 43 10	 mov	 BYTE PTR [rbx+16], al
  0002f	48 89 43 18	 mov	 QWORD PTR [rbx+24], rax
  00033	88 43 20	 mov	 BYTE PTR [rbx+32], al
  00036	48 89 43 28	 mov	 QWORD PTR [rbx+40], rax
  0003a	66 89 43 30	 mov	 WORD PTR [rbx+48], ax
  0003e	48 89 43 38	 mov	 QWORD PTR [rbx+56], rax
  00042	66 89 43 40	 mov	 WORD PTR [rbx+64], ax
  00046	48 89 43 48	 mov	 QWORD PTR [rbx+72], rax
  0004a	88 43 50	 mov	 BYTE PTR [rbx+80], al
  0004d	48 89 43 58	 mov	 QWORD PTR [rbx+88], rax
  00051	88 43 60	 mov	 BYTE PTR [rbx+96], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 77   : 		if (_Pch == 0)

  00054	48 85 ff	 test	 rdi, rdi
  00057	75 56		 jne	 SHORT $LN2@Locinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 53   :     {

  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00060	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax

; 52   :         : _Data()

  00065	33 c0		 xor	 eax, eax
  00067	48 89 44 24 40	 mov	 QWORD PTR $T3[rsp+8], rax
  0006c	48 89 44 24 48	 mov	 QWORD PTR $T3[rsp+16], rax

; 54   :         __std_exception_data _InitData = { _Message, true };

  00071	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@
  00078	48 89 44 24 28	 mov	 QWORD PTR _InitData$2[rsp], rax
  0007d	c6 44 24 30 01	 mov	 BYTE PTR _InitData$2[rsp+8], 1

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00082	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T3[rsp+8]
  00087	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _InitData$2[rsp]
  0008c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 168  : 		{	// construct from message string

  00091	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00098	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 78   : 			_THROW_NCEE(runtime_error, "bad locale name");

  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
  000a4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T3[rsp]
  000a9	e8 00 00 00 00	 call	 _CxxThrowException
  000ae	cc		 int	 3
$LN2@Locinfo:

; 79   : 		_Locinfo_ctor(this, _Pch);

  000af	48 8b d7	 mov	 rdx, rdi
  000b2	48 8b cb	 mov	 rcx, rbx
  000b5	e8 00 00 00 00	 call	 ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
  000ba	90		 npad	 1

; 80   : 		}

  000bb	48 8b c3	 mov	 rax, rbx
  000be	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  000c3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c7	5f		 pop	 rdi
  000c8	c3		 ret	 0
$LN27@Locinfo:
??0_Locinfo@std@@QEAA@PEBD@Z ENDP			; std::_Locinfo::_Locinfo
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
  00000	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
  0000c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00013	48 83 c1 08	 add	 rcx, 8
  00017	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
  0001c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00023	48 83 c1 18	 add	 rcx, 24
  00027	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
  0002c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00033	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00037	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
  0003c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00043	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00047	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
  0004c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00053	48 83 c1 48	 add	 rcx, 72			; 00000048H
  00057	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
  0005c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00063	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00067	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
  00000	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
  0000c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00013	48 83 c1 08	 add	 rcx, 8
  00017	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
  0001c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00023	48 83 c1 18	 add	 rcx, 24
  00027	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
  0002c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00033	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00037	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
  0003c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00043	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00047	e9 00 00 00 00	 jmp	 ??1?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
  0004c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00053	48 83 c1 48	 add	 rcx, 72			; 00000048H
  00057	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_InitData$2 = 40
$T3 = 56
this$ = 96
_Pch$ = 104
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
  0005c	48 8b 8a 60 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00063	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00067	e9 00 00 00 00	 jmp	 ??1?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::~_Yarn<char>
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ??1_Locinfo@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Locinfo@std@@QEAA@XZ PROC				; std::_Locinfo::~_Locinfo, COMDAT

; 94   : 		{	// destroy the object

$LN39:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	48 8b d9	 mov	 rbx, rcx

; 95   : 		_Locinfo_dtor(this);

  00017	e8 00 00 00 00	 call	 ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor
  0001c	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 3689 : 		if (_Myptr != 0)

  0001d	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00021	48 85 c9	 test	 rcx, rcx
  00024	74 06		 je	 SHORT $LN7@Locinfo

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00026	e8 00 00 00 00	 call	 free
  0002b	90		 npad	 1
$LN7@Locinfo:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  0002c	33 ff		 xor	 edi, edi
  0002e	48 89 7b 58	 mov	 QWORD PTR [rbx+88], rdi

; 3689 : 		if (_Myptr != 0)

  00032	48 8b 4b 48	 mov	 rcx, QWORD PTR [rbx+72]
  00036	48 85 c9	 test	 rcx, rcx
  00039	74 06		 je	 SHORT $LN13@Locinfo

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  0003b	e8 00 00 00 00	 call	 free
  00040	90		 npad	 1
$LN13@Locinfo:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  00041	48 89 7b 48	 mov	 QWORD PTR [rbx+72], rdi

; 3689 : 		if (_Myptr != 0)

  00045	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
  00049	48 85 c9	 test	 rcx, rcx
  0004c	74 06		 je	 SHORT $LN19@Locinfo

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  0004e	e8 00 00 00 00	 call	 free
  00053	90		 npad	 1
$LN19@Locinfo:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  00054	48 89 7b 38	 mov	 QWORD PTR [rbx+56], rdi

; 3689 : 		if (_Myptr != 0)

  00058	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  0005c	48 85 c9	 test	 rcx, rcx
  0005f	74 06		 je	 SHORT $LN25@Locinfo

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00061	e8 00 00 00 00	 call	 free
  00066	90		 npad	 1
$LN25@Locinfo:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  00067	48 89 7b 28	 mov	 QWORD PTR [rbx+40], rdi

; 3689 : 		if (_Myptr != 0)

  0006b	48 8b 4b 18	 mov	 rcx, QWORD PTR [rbx+24]
  0006f	48 85 c9	 test	 rcx, rcx
  00072	74 06		 je	 SHORT $LN31@Locinfo

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00074	e8 00 00 00 00	 call	 free
  00079	90		 npad	 1
$LN31@Locinfo:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  0007a	48 89 7b 18	 mov	 QWORD PTR [rbx+24], rdi

; 3689 : 		if (_Myptr != 0)

  0007e	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00082	48 85 c9	 test	 rcx, rcx
  00085	74 06		 je	 SHORT $LN37@Locinfo

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00087	e8 00 00 00 00	 call	 free
  0008c	90		 npad	 1
$LN37@Locinfo:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  0008d	48 89 7b 08	 mov	 QWORD PTR [rbx+8], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 96   : 		}

  00091	48 8b cb	 mov	 rcx, rbx
  00094	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00099	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009d	5f		 pop	 rdi
  0009e	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
??1_Locinfo@std@@QEAA@XZ ENDP				; std::_Locinfo::~_Locinfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 80
__$ReturnUdt$ = 88
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT

; 116  : 		{	// return ctype stuff

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 117  : 		return (::_Getctype());

  00006	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0000b	48 8b da	 mov	 rbx, rdx
  0000e	e8 00 00 00 00	 call	 _Getctype
  00013	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00016	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  0001a	48 8b c3	 mov	 rax, rbx
  0001d	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  00020	0f 11 4b 10	 movups	 XMMWORD PTR [rbx+16], xmm1

; 118  : 		}

  00024	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 96
__$ReturnUdt$ = 104
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ PROC		; std::_Locinfo::_Getcvt, COMDAT

; 121  : 		{	// return codecvt stuff

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 122  : 		return (::_Getcvt());

  00006	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0000b	48 8b da	 mov	 rbx, rdx
  0000e	e8 00 00 00 00	 call	 _Getcvt
  00013	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00016	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  0001a	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  0001d	f2 0f 10 40 20	 movsd	 xmm0, QWORD PTR [rax+32]
  00022	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00025	0f 11 4b 10	 movups	 XMMWORD PTR [rbx+16], xmm1
  00029	f2 0f 11 43 20	 movsd	 QWORD PTR [rbx+32], xmm0
  0002e	89 43 28	 mov	 DWORD PTR [rbx+40], eax
  00031	48 8b c3	 mov	 rax, rbx

; 123  : 		}

  00034	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00038	5b		 pop	 rbx
  00039	c3		 ret	 0
?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ENDP		; std::_Locinfo::_Getcvt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ
_TEXT	SEGMENT
this$ = 8
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ PROC		; std::_Locinfo::_Getlconv, COMDAT

; 127  : 		return (localeconv());

  00000	e9 00 00 00 00	 jmp	 localeconv
?_Getlconv@_Locinfo@std@@QEBAPEBUlconv@@XZ ENDP		; std::_Locinfo::_Getlconv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Getfalse@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ PROC		; std::_Locinfo::_Getfalse, COMDAT

; 167  : 		return ("false");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_05LAPONLG@false?$AA@

; 168  : 		}

  00007	c3		 ret	 0
?_Getfalse@_Locinfo@std@@QEBAPEBDXZ ENDP		; std::_Locinfo::_Getfalse
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
;	COMDAT ?_Gettrue@_Locinfo@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ PROC			; std::_Locinfo::_Gettrue, COMDAT

; 172  : 		return ("true");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_04LOAJBDKD@true?$AA@

; 173  : 		}

  00007	c3		 ret	 0
?_Gettrue@_Locinfo@std@@QEBAPEBDXZ ENDP			; std::_Locinfo::_Gettrue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx

; 65   :         : _Data()

  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 66   :     {

  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  00033	48 89 03	 mov	 QWORD PTR [rbx], rax
  00036	48 8b c3	 mov	 rax, rbx
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??1_Facet_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Facet_base@std@@UEAA@XZ PROC			; std::_Facet_base::~_Facet_base, COMDAT

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 25   : 		}

  0000a	c3		 ret	 0
??1_Facet_base@std@@UEAA@XZ ENDP			; std::_Facet_base::~_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??_G_Facet_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Facet_base@std@@UEAAPEAXI@Z PROC			; std::_Facet_base::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN7@scalar
  00018	ba 08 00 00 00	 mov	 edx, 8
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN7@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Facet_base@std@@UEAAPEAXI@Z ENDP			; std::_Facet_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??0id@locale@std@@QEAA@_K@Z PROC			; std::locale::id::id, COMDAT

; 109  : 			: _Id(_Val)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 111  : 			}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0id@locale@std@@QEAA@_K@Z ENDP			; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??Bid@locale@std@@QEAA_KXZ
_TEXT	SEGMENT
_Lock$1 = 48
this$ = 48
??Bid@locale@std@@QEAA_KXZ PROC				; std::locale::id::operator unsigned __int64, COMDAT

; 114  : 			{	// get stamp, with lazy allocation

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 115  : 			if (_Id == 0)

  00006	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	75 38		 jne	 SHORT $LN6@operator

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0000f	33 d2		 xor	 edx, edx
  00011	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$1[rsp]
  00016	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0001b	48 83 3b 00	 cmp	 QWORD PTR [rbx], 0
  0001f	75 13		 jne	 SHORT $LN3@operator

; 119  : 						_Id = ++_Id_cnt;

  00021	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00027	ff c0		 inc	 eax
  00029	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  0002f	48 98		 cdqe
  00031	48 89 03	 mov	 QWORD PTR [rbx], rax
$LN3@operator:

; 120  : 				_END_LOCK()

  00034	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Lock$1[rsp]
  00039	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit

; 121  : 				}
; 122  : 			return (_Id);

  0003e	48 8b 03	 mov	 rax, QWORD PTR [rbx]

; 123  : 			}

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5b		 pop	 rbx
  00046	c3		 ret	 0
$LN6@operator:

; 121  : 				}
; 122  : 			return (_Id);

  00047	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 123  : 			}

  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5b		 pop	 rbx
  0004f	c3		 ret	 0
??Bid@locale@std@@QEAA_KXZ ENDP				; std::locale::id::operator unsigned __int64
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Incref@facet@locale@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Incref@facet@locale@std@@UEAAXXZ PROC			; std::locale::facet::_Incref, COMDAT

; 150  : 			_MT_INCR(_Myrefs);

  00000	f0 ff 41 08	 lock inc DWORD PTR [rcx+8]

; 151  : 			}

  00004	c3		 ret	 0
?_Incref@facet@locale@std@@UEAAXXZ ENDP			; std::locale::facet::_Incref
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
_TEXT	SEGMENT
this$ = 8
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ PROC ; std::locale::facet::_Decref, COMDAT

; 155  : 			if (_MT_DECR(_Myrefs) == 0)

  00000	f0 83 41 08 ff	 lock add DWORD PTR [rcx+8], -1
  00005	b8 00 00 00 00	 mov	 eax, 0
  0000a	48 0f 44 c1	 cmove	 rax, rcx

; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}

  0000e	c3		 ret	 0
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ENDP ; std::locale::facet::_Decref
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0facet@locale@std@@IEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Initrefs$ = 16
??0facet@locale@std@@IEAA@_K@Z PROC			; std::locale::facet::facet, COMDAT

; 166  : 			{	// construct with initial reference count

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7facet@locale@std@@6B@
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00007	89 51 08	 mov	 DWORD PTR [rcx+8], edx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 166  : 			{	// construct with initial reference count

  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0facet@locale@std@@IEAA@_K@Z ENDP			; std::locale::facet::facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1facet@locale@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1facet@locale@std@@MEAA@XZ PROC			; std::locale::facet::~facet, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 172  : 			}

  0000a	c3		 ret	 0
??1facet@locale@std@@MEAA@XZ ENDP			; std::locale::facet::~facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0locale@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??0locale@std@@QEAA@AEBV01@@Z PROC			; std::locale::locale, COMDAT

; 325  : 		{	// construct by copying

$LN3:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 324  : 		: _Ptr(_Right._Ptr)

  00012	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00016	48 89 4b 08	 mov	 QWORD PTR [rbx+8], rcx

; 326  : 		_Ptr->_Incref();

  0001a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0001d	ff 50 08	 call	 QWORD PTR [rax+8]
  00020	90		 npad	 1

; 327  : 		}

  00021	48 8b c3	 mov	 rax, rbx
  00024	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
??0locale@std@@QEAA@AEBV01@@Z ENDP			; std::locale::locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 430  : 		{	// destroy the object

$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 431  : 		if (_Ptr != 0)

  0000d	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00011	48 85 c9	 test	 rcx, rcx
  00014	74 1e		 je	 SHORT $LN4@locale

; 432  : 			delete _Ptr->_Decref();

  00016	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00019	ff 50 10	 call	 QWORD PTR [rax+16]
  0001c	90		 npad	 1
  0001d	48 85 c0	 test	 rax, rax
  00020	74 12		 je	 SHORT $LN4@locale
  00022	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b c8	 mov	 rcx, rax

; 433  : 		}

  0002d	48 83 c4 38	 add	 rsp, 56			; 00000038H

; 432  : 			delete _Ptr->_Decref();

  00031	49 ff 20	 rex_jmp QWORD PTR [r8]
$LN4@locale:

; 433  : 		}

  00034	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00038	c3		 ret	 0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?c_str@locale@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@locale@std@@QEBAPEBDXZ PROC			; std::locale::c_str, COMDAT

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 85 c0	 test	 rax, rax
  00007	75 08		 jne	 SHORT $LN3@c_str
  00009	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@

; 455  : 		}

  00010	c3		 ret	 0
$LN3@c_str:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 3673 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00011	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00015	48 85 c9	 test	 rcx, rcx
  00018	74 04		 je	 SHORT $LN7@c_str
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  0001a	48 8b c1	 mov	 rax, rcx

; 455  : 		}

  0001d	c3		 ret	 0
$LN7@c_str:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 3673 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  0001e	48 83 c0 30	 add	 rax, 48			; 00000030H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 455  : 		}

  00022	c3		 ret	 0
?c_str@locale@std@@QEBAPEBDXZ ENDP			; std::locale::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Id$ = 56
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 458  : 		{	// look up a facet in locale object

$LN12:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0000d	33 ff		 xor	 edi, edi
  0000f	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00013	48 3b 5a 18	 cmp	 rbx, QWORD PTR [rdx+24]
  00017	73 0f		 jae	 SHORT $LN6@Getfacet
  00019	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  0001d	48 8b 04 d8	 mov	 rax, QWORD PTR [rax+rbx*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  00021	48 85 c0	 test	 rax, rax
  00024	75 21		 jne	 SHORT $LN4@Getfacet
  00026	eb 03		 jmp	 SHORT $LN10@Getfacet
$LN6@Getfacet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00028	48 8b c7	 mov	 rax, rdi
$LN10@Getfacet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0002b	40 38 7a 24	 cmp	 BYTE PTR [rdx+36], dil
  0002f	74 16		 je	 SHORT $LN4@Getfacet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  00031	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  00036	48 3b 58 18	 cmp	 rbx, QWORD PTR [rax+24]
  0003a	73 08		 jae	 SHORT $LN8@Getfacet
  0003c	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00040	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]
$LN8@Getfacet:
  00044	48 8b c7	 mov	 rax, rdi
$LN4@Getfacet:

; 467  : 				? _Ptr0->_Facetvec[_Id]	// get from current locale
; 468  : 				: 0);	// no entry in current locale
; 469  : 			}
; 470  : 		}

  00047	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??_Gfacet@locale@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfacet@locale@std@@MEAAPEAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN10@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN10@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_Gfacet@locale@std@@MEAAPEAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Facet_base@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Facet_base@std@@QEAA@XZ PROC			; std::_Facet_base::_Facet_base, COMDAT
  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0_Facet_base@std@@QEAA@XZ ENDP			; std::_Facet_base::_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$_Maklocchr@_W@std@@YA_WDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Mbst1$ = 48
_Byte$ = 80
__formal$ = 88
_Cvt$ = 96
_Wc$ = 104
??$_Maklocchr@_W@std@@YA_WDPEA_WAEBU_Cvtvec@@@Z PROC	; std::_Maklocchr<wchar_t>, COMDAT

; 693  : 	{	// convert char to wchar_t using _Cvtvec

$LN4:
  00000	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00004	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 694  : 	wchar_t _Wc = L'\0';

  00008	33 c0		 xor	 eax, eax

; 695  : 	_Mbstinit(_Mbst1);
; 696  : 	_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst1, &_Cvt);

  0000a	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  0000f	4c 8d 4c 24 30	 lea	 r9, QWORD PTR _Mbst1$[rsp]
  00014	66 89 44 24 68	 mov	 WORD PTR _Wc$[rsp], ax
  00019	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Byte$[rsp]
  0001e	48 89 44 24 30	 mov	 QWORD PTR _Mbst1$[rsp], rax
  00023	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Wc$[rsp]
  00028	44 8d 40 01	 lea	 r8d, QWORD PTR [rax+1]
  0002c	e8 00 00 00 00	 call	 _Mbrtowc

; 697  : 	return (_Wc);

  00031	0f b7 44 24 68	 movzx	 eax, WORD PTR _Wc$[rsp]

; 698  : 	}

  00036	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0003a	c3		 ret	 0
??$_Maklocchr@_W@std@@YA_WDPEA_WAEBU_Cvtvec@@@Z ENDP	; std::_Maklocchr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Mbst2$ = 48
_Wc$ = 112
_Ptr$ = 112
__formal$ = 120
_Cvt$ = 128
_Mbst1$ = 136
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z PROC ; std::_Maklocstr<wchar_t>, COMDAT

; 740  : 	{	// convert C string to wchar_t sequence using _Cvtvec

$LN28:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 54		 push	 r12
  0000e	41 56		 push	 r14
  00010	41 57		 push	 r15
  00012	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 741  : 	size_t _Count, _Count1;
; 742  : 	size_t _Wchars;
; 743  : 	const char *_Ptr1;
; 744  : 	int _Bytes;
; 745  : 	wchar_t _Wc;
; 746  : 	_Mbstinit(_Mbst1);

  00016	33 c0		 xor	 eax, eax
  00018	4d 8b f8	 mov	 r15, r8
  0001b	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Mbst1$[rsp], rax

; 747  : 
; 748  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00023	48 83 cf ff	 or	 rdi, -1
  00027	48 8b f1	 mov	 rsi, rcx
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL22@Maklocstr:
  00030	48 ff c7	 inc	 rdi
  00033	38 04 39	 cmp	 BYTE PTR [rcx+rdi], al
  00036	75 f8		 jne	 SHORT $LL22@Maklocstr
  00038	48 83 c7 01	 add	 rdi, 1

; 749  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  0003c	4c 8b e0	 mov	 r12, rax
  0003f	48 8b ef	 mov	 rbp, rdi
  00042	48 8b d8	 mov	 rbx, rax
  00045	4c 8b f1	 mov	 r14, rcx
  00048	74 34		 je	 SHORT $LN23@Maklocstr
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Maklocstr:

; 751  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00050	4c 8d 8c 24 88
	00 00 00	 lea	 r9, QWORD PTR _Mbst1$[rsp]
  00058	4c 89 7c 24 20	 mov	 QWORD PTR [rsp+32], r15
  0005d	4c 8b c5	 mov	 r8, rbp
  00060	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Wc$[rsp]
  00065	49 8b d6	 mov	 rdx, r14
  00068	e8 00 00 00 00	 call	 _Mbrtowc
  0006d	85 c0		 test	 eax, eax
  0006f	7e 0d		 jle	 SHORT $LN23@Maklocstr

; 750  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00071	48 98		 cdqe
  00073	48 ff c3	 inc	 rbx
  00076	4c 03 f0	 add	 r14, rax
  00079	48 2b e8	 sub	 rbp, rax
  0007c	75 d2		 jne	 SHORT $LL4@Maklocstr
$LN23@Maklocstr:

; 752  : 			break;
; 753  : 	++_Wchars;	// count terminating nul

  0007e	48 ff c3	 inc	 rbx

; 754  : 
; 755  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  00081	ba 02 00 00 00	 mov	 edx, 2
  00086	48 8b cb	 mov	 rcx, rbx
  00089	e8 00 00 00 00	 call	 calloc
  0008e	48 8b e8	 mov	 rbp, rax

; 756  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 757  : 
; 758  : 	if (!_Ptrdest)

  00091	48 85 c0	 test	 rax, rax
  00094	74 66		 je	 SHORT $LN26@Maklocstr

; 760  : 	wchar_t *_Ptrnext = _Ptrdest;

  00096	4c 8b f0	 mov	 r14, rax

; 761  : 	_Mbstinit(_Mbst2);

  00099	33 c0		 xor	 eax, eax
  0009b	48 89 44 24 30	 mov	 QWORD PTR _Mbst2$[rsp], rax

; 762  : 
; 763  :  #pragma warning(push)
; 764  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 765  : 	for (; 0 < _Wchars;

  000a0	48 85 db	 test	 rbx, rbx
  000a3	74 36		 je	 SHORT $LN24@Maklocstr
  000a5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL7@Maklocstr:

; 767  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000b0	4c 8d 4c 24 30	 lea	 r9, QWORD PTR _Mbst2$[rsp]
  000b5	4c 89 7c 24 20	 mov	 QWORD PTR [rsp+32], r15
  000ba	4c 8b c7	 mov	 r8, rdi
  000bd	48 8b d6	 mov	 rdx, rsi
  000c0	49 8b ce	 mov	 rcx, r14
  000c3	e8 00 00 00 00	 call	 _Mbrtowc
  000c8	85 c0		 test	 eax, eax
  000ca	7e 0f		 jle	 SHORT $LN24@Maklocstr

; 766  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000cc	48 98		 cdqe
  000ce	49 83 c6 02	 add	 r14, 2
  000d2	48 03 f0	 add	 rsi, rax
  000d5	48 83 eb 01	 sub	 rbx, 1
  000d9	75 d5		 jne	 SHORT $LL7@Maklocstr
$LN24@Maklocstr:

; 768  : 			break;
; 769  : 	*_Ptrnext = L'\0';
; 770  :  #pragma warning(pop)
; 771  : 
; 772  : 	return (_Ptrdest);
; 773  : 	}

  000db	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  000e0	48 8b c5	 mov	 rax, rbp
  000e3	48 8b ac 24 80
	00 00 00	 mov	 rbp, QWORD PTR [rsp+128]
  000eb	66 45 89 26	 mov	 WORD PTR [r14], r12w
  000ef	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000f3	41 5f		 pop	 r15
  000f5	41 5e		 pop	 r14
  000f7	41 5c		 pop	 r12
  000f9	5f		 pop	 rdi
  000fa	5e		 pop	 rsi
  000fb	c3		 ret	 0
$LN26@Maklocstr:

; 759  : 		_Xbad_alloc();

  000fc	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00101	cc		 int	 3
$LN25@Maklocstr:
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ENDP ; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0ctype_base@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Refs$ = 16
??0ctype_base@std@@QEAA@_K@Z PROC			; std::ctype_base::ctype_base, COMDAT

; 2103 : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7ctype_base@std@@6B@
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00007	89 51 08	 mov	 DWORD PTR [rcx+8], edx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2103 : 		{	// default constructor

  0000a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2104 : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0ctype_base@std@@QEAA@_K@Z ENDP			; std::ctype_base::ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1ctype_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ctype_base@std@@UEAA@XZ PROC				; std::ctype_base::~ctype_base, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2108 : 		}

  0000a	c3		 ret	 0
??1ctype_base@std@@UEAA@XZ ENDP				; std::ctype_base::~ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??_Gctype_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gctype_base@std@@UEAAPEAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN13@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_Gctype_base@std@@UEAAPEAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?is@?$ctype@_W@std@@QEBA_NF_W@Z
_TEXT	SEGMENT
this$ = 48
_Maskval$ = 56
_Ch$ = 64
?is@?$ctype@_W@std@@QEBA_NF_W@Z PROC			; std::ctype<wchar_t>::is, COMDAT

; 2580 : 		{	// test if element fits any mask classifications

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	0f b7 da	 movzx	 ebx, dx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
  00013	48 3b c2	 cmp	 rax, rdx
  00016	75 1f		 jne	 SHORT $LN7@is

; 2686 : 		return ((_CSTD _Getwctype(_Ch, &_Ctype) & _Maskval) != 0);

  00018	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]
  0001c	41 0f b7 c8	 movzx	 ecx, r8w
  00020	e8 00 00 00 00	 call	 _Getwctype
  00025	66 85 c3	 test	 ax, bx
  00028	0f 95 c0	 setne	 al

; 2582 : 		}

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5b		 pop	 rbx
  00030	c3		 ret	 0
$LN3@is:
  00031	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00035	5b		 pop	 rbx
  00036	c3		 ret	 0
$LN7@is:
  00037	0f b7 d3	 movzx	 edx, bx

; 2581 : 		return (do_is(_Maskval, _Ch));

  0003a	ff 50 20	 call	 QWORD PTR [rax+32]
  0003d	eb f2		 jmp	 SHORT $LN3@is
?is@?$ctype@_W@std@@QEBA_NF_W@Z ENDP			; std::ctype<wchar_t>::is
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?widen@?$ctype@_W@std@@QEBA_WD@Z
_TEXT	SEGMENT
_Wc$1 = 64
this$ = 64
_Byte$ = 72
_Byte$ = 72
_Mbst$2 = 80
?widen@?$ctype@_W@std@@QEBA_WD@Z PROC			; std::ctype<wchar_t>::widen, COMDAT

; 2623 : 		{	// widen char

$LN10:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00007	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
  0000e	49 3b c0	 cmp	 rax, r8
  00011	75 4b		 jne	 SHORT $LN9@widen

; 2744 : 		_Mbstinit(_Mbst);

  00013	33 c0		 xor	 eax, eax

; 2752 : 		return (_Dowiden(_Byte));

  00015	88 54 24 48	 mov	 BYTE PTR _Byte$[rsp], dl

; 2744 : 		_Mbstinit(_Mbst);

  00019	48 89 44 24 50	 mov	 QWORD PTR _Mbst$2[rsp], rax

; 2745 : 		wchar_t _Wc;
; 2746 : 		return (_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst, &_Cvt) < 0

  0001e	4c 8d 4c 24 50	 lea	 r9, QWORD PTR _Mbst$2[rsp]
  00023	48 8d 41 30	 lea	 rax, QWORD PTR [rcx+48]
  00027	41 b8 01 00 00
	00		 mov	 r8d, 1
  0002d	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Wc$1[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00037	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Byte$[rsp]
  0003c	e8 00 00 00 00	 call	 _Mbrtowc
  00041	0f b7 4c 24 40	 movzx	 ecx, WORD PTR _Wc$1[rsp]
  00046	85 c0		 test	 eax, eax
  00048	ba ff ff 00 00	 mov	 edx, 65535		; 0000ffffH
  0004d	66 0f 48 ca	 cmovs	 cx, dx

; 2624 : 		return (do_widen(_Byte));

  00051	0f b7 c1	 movzx	 eax, cx

; 2625 : 		}

  00054	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00058	c3		 ret	 0
$LN3@widen:
  00059	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005d	c3		 ret	 0
$LN9@widen:

; 2624 : 		return (do_widen(_Byte));

  0005e	ff 50 60	 call	 QWORD PTR [rax+96]
  00061	eb f6		 jmp	 SHORT $LN3@widen
?widen@?$ctype@_W@std@@QEBA_WD@Z ENDP			; std::ctype<wchar_t>::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?widen@?$ctype@_W@std@@QEBAPEBDPEBD0PEA_W@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
_Dest$ = 32
?widen@?$ctype@_W@std@@QEBAPEBDPEBD0PEA_W@Z PROC	; std::ctype<wchar_t>::widen, COMDAT

; 2629 : 		{	// widen chars in [_First, _Last)

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 2630 : 		return (do_widen(_First, _Last, _Dest));

  00003	48 ff 60 58	 rex_jmp QWORD PTR [rax+88]
?widen@?$ctype@_W@std@@QEBAPEBDPEBD0PEA_W@Z ENDP	; std::ctype<wchar_t>::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??0?$ctype@_W@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
this$ = 96
_Lobj$ = 104
_Refs$ = 112
??0?$ctype@_W@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC	; std::ctype<wchar_t>::ctype<wchar_t>, COMDAT

; 2656 : 		{	// construct from specified locale

$LN19:
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  0000d	44 89 41 08	 mov	 DWORD PTR [rcx+8], r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2656 : 		{	// construct from specified locale

  00011	48 89 01	 mov	 QWORD PTR [rcx], rax
  00014	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 117  : 		return (::_Getctype());

  00017	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T2[rsp]
  0001c	e8 00 00 00 00	 call	 _Getctype

; 122  : 		return (::_Getcvt());

  00021	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2680 : 		_Ctype = _Lobj._Getctype();

  00026	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00029	0f 11 43 10	 movups	 XMMWORD PTR [rbx+16], xmm0
  0002d	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  00031	0f 11 4b 20	 movups	 XMMWORD PTR [rbx+32], xmm1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 122  : 		return (::_Getcvt());

  00035	e8 00 00 00 00	 call	 _Getcvt
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2681 : 		_Cvt = _Lobj._Getcvt();

  0003a	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0003d	0f 11 43 30	 movups	 XMMWORD PTR [rbx+48], xmm0
  00041	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  00045	0f 11 4b 40	 movups	 XMMWORD PTR [rbx+64], xmm1
  00049	f2 0f 10 40 20	 movsd	 xmm0, QWORD PTR [rax+32]
  0004e	f2 0f 11 43 50	 movsd	 QWORD PTR [rbx+80], xmm0
  00053	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00056	89 43 58	 mov	 DWORD PTR [rbx+88], eax

; 2657 : 		_Init(_Lobj);
; 2658 : 		}

  00059	48 8b c3	 mov	 rax, rbx
  0005c	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00060	5b		 pop	 rbx
  00061	c3		 ret	 0
??0?$ctype@_W@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP	; std::ctype<wchar_t>::ctype<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 72
$T4 = 120
$T5 = 240
$T6 = 240
_Ppf$ = 240
_Ploc$ = 248
?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::ctype<wchar_t>::_Getcat, COMDAT

; 2662 : 		{	// return locale category mask and construct standard facet

$LN37:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  0000b	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00014	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00018	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  0001c	48 8b f2	 mov	 rsi, rdx
  0001f	48 8b f9	 mov	 rdi, rcx
  00022	c7 84 24 f0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0

; 2663 : 		if (_Ppf != 0 && *_Ppf == 0)

  0002d	48 85 c9	 test	 rcx, rcx
  00030	0f 84 a8 00 00
	00		 je	 $LN35@Getcat
  00036	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  0003a	0f 85 9e 00 00
	00		 jne	 $LN35@Getcat

; 2664 : 			*_Ppf = new ctype<_Elem>(

  00040	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00045	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0004a	48 8b d8	 mov	 rbx, rax
  0004d	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR $T6[rsp], rax

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  00055	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00059	48 85 c9	 test	 rcx, rcx
  0005c	75 09		 jne	 SHORT $LN12@Getcat
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00065	eb 0d		 jmp	 SHORT $LN17@Getcat
$LN12@Getcat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 3673 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00067	48 8b 51 28	 mov	 rdx, QWORD PTR [rcx+40]
  0006b	48 85 d2	 test	 rdx, rdx
  0006e	75 04		 jne	 SHORT $LN17@Getcat
  00070	48 8d 51 30	 lea	 rdx, QWORD PTR [rcx+48]
$LN17@Getcat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2664 : 			*_Ppf = new ctype<_Elem>(

  00074	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T4[rsp]
  00079	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  0007e	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [rbx+8], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2656 : 		{	// construct from specified locale

  00085	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
  0008c	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 117  : 		return (::_Getctype());

  0008f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00094	e8 00 00 00 00	 call	 _Getctype
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2680 : 		_Ctype = _Lobj._Getctype();

  00099	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0009c	0f 11 43 10	 movups	 XMMWORD PTR [rbx+16], xmm0
  000a0	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  000a4	0f 11 4b 20	 movups	 XMMWORD PTR [rbx+32], xmm1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 122  : 		return (::_Getcvt());

  000a8	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T3[rsp]
  000ad	e8 00 00 00 00	 call	 _Getcvt
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2681 : 		_Cvt = _Lobj._Getcvt();

  000b2	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000b5	0f 11 43 30	 movups	 XMMWORD PTR [rbx+48], xmm0
  000b9	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  000bd	0f 11 4b 40	 movups	 XMMWORD PTR [rbx+64], xmm1
  000c1	f2 0f 10 40 20	 movsd	 xmm0, QWORD PTR [rax+32]
  000c6	f2 0f 11 43 50	 movsd	 QWORD PTR [rbx+80], xmm0
  000cb	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  000ce	89 43 58	 mov	 DWORD PTR [rbx+88], eax

; 2664 : 			*_Ppf = new ctype<_Elem>(

  000d1	48 89 1f	 mov	 QWORD PTR [rdi], rbx
  000d4	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T4[rsp]
  000d9	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN35@Getcat:

; 2665 : 				_Locinfo(_Ploc->c_str()));
; 2666 : 		return (_X_CTYPE);

  000de	b8 02 00 00 00	 mov	 eax, 2

; 2667 : 		}

  000e3	4c 8d 9c 24 e0
	00 00 00	 lea	 r11, QWORD PTR [rsp+224]
  000eb	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000ef	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  000f3	49 8b e3	 mov	 rsp, r11
  000f6	5f		 pop	 rdi
  000f7	c3		 ret	 0
?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::ctype<wchar_t>::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 72
$T4 = 120
$T5 = 240
$T6 = 240
_Ppf$ = 240
_Ploc$ = 248
?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<wchar_t>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  0000e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T6[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<wchar_t>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 72
$T4 = 120
$T5 = 240
$T6 = 240
_Ppf$ = 240
_Ploc$ = 248
?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<wchar_t>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  0000e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T6[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<wchar_t>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??1?$ctype@_W@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ctype@_W@std@@MEAA@XZ PROC				; std::ctype<wchar_t>::~ctype<wchar_t>, COMDAT

; 2671 : 		{	// destroy the object

$LN14:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2672 : 		if (_Ctype._Delfl)

  00006	83 79 20 00	 cmp	 DWORD PTR [rcx+32], 0
  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
  00011	48 89 01	 mov	 QWORD PTR [rcx], rax
  00014	48 8b d9	 mov	 rbx, rcx
  00017	74 09		 je	 SHORT $LN2@ctype

; 2673 : 			_CSTD free((void *)_Ctype._Table);

  00019	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0001d	e8 00 00 00 00	 call	 free
$LN2@ctype:

; 2674 : 
; 2675 : 		_CSTD free(_Ctype._LocaleName);

  00022	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  00026	e8 00 00 00 00	 call	 free
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  0002b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00032	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2676 : 		}

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5b		 pop	 rbx
  0003a	c3		 ret	 0
??1?$ctype@_W@std@@MEAA@XZ ENDP				; std::ctype<wchar_t>::~ctype<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Init@?$ctype@_W@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
this$ = 96
_Lobj$ = 104
?_Init@?$ctype@_W@std@@IEAAXAEBV_Locinfo@2@@Z PROC	; std::ctype<wchar_t>::_Init, COMDAT

; 2679 : 		{	// initialize from _Lobj

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 117  : 		return (::_Getctype());

  00009	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T2[rsp]
  0000e	e8 00 00 00 00	 call	 _Getctype

; 122  : 		return (::_Getcvt());

  00013	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2680 : 		_Ctype = _Lobj._Getctype();

  00018	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0001b	0f 11 43 10	 movups	 XMMWORD PTR [rbx+16], xmm0
  0001f	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  00023	0f 11 4b 20	 movups	 XMMWORD PTR [rbx+32], xmm1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 122  : 		return (::_Getcvt());

  00027	e8 00 00 00 00	 call	 _Getcvt
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2681 : 		_Cvt = _Lobj._Getcvt();

  0002c	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0002f	0f 11 43 30	 movups	 XMMWORD PTR [rbx+48], xmm0
  00033	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  00037	0f 11 4b 40	 movups	 XMMWORD PTR [rbx+64], xmm1
  0003b	f2 0f 10 40 20	 movsd	 xmm0, QWORD PTR [rax+32]
  00040	f2 0f 11 43 50	 movsd	 QWORD PTR [rbx+80], xmm0
  00045	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00048	89 43 58	 mov	 DWORD PTR [rbx+88], eax

; 2682 : 		}

  0004b	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0004f	5b		 pop	 rbx
  00050	c3		 ret	 0
?_Init@?$ctype@_W@std@@IEAAXAEBV_Locinfo@2@@Z ENDP	; std::ctype<wchar_t>::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_is@?$ctype@_W@std@@MEBA_NF_W@Z
_TEXT	SEGMENT
this$ = 48
_Maskval$ = 56
_Ch$ = 64
?do_is@?$ctype@_W@std@@MEBA_NF_W@Z PROC			; std::ctype<wchar_t>::do_is, COMDAT

; 2685 : 		{	// test if element fits any mask classifications

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	0f b7 da	 movzx	 ebx, dx

; 2686 : 		return ((_CSTD _Getwctype(_Ch, &_Ctype) & _Maskval) != 0);

  00009	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]
  0000d	41 0f b7 c8	 movzx	 ecx, r8w
  00011	e8 00 00 00 00	 call	 _Getwctype
  00016	66 85 c3	 test	 ax, bx
  00019	0f 95 c0	 setne	 al

; 2687 : 		}

  0001c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00020	5b		 pop	 rbx
  00021	c3		 ret	 0
?do_is@?$ctype@_W@std@@MEBA_NF_W@Z ENDP			; std::ctype<wchar_t>::do_is
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_is@?$ctype@_W@std@@MEBAPEB_WPEB_W0PEAF@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
_Dest$ = 32
?do_is@?$ctype@_W@std@@MEBAPEB_WPEB_W0PEAF@Z PROC	; std::ctype<wchar_t>::do_is, COMDAT

; 2691 : 		{	// get mask sequence for elements in [_First, _Last)

  00000	49 8b c1	 mov	 rax, r9
  00003	4d 8b d0	 mov	 r10, r8
  00006	4c 8b da	 mov	 r11, rdx

; 2692 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2693 : 		return (_CSTD _Getwctypes(_First, _Last, _Dest, &_Ctype));

  00009	4c 8d 49 10	 lea	 r9, QWORD PTR [rcx+16]
  0000d	4c 8b c0	 mov	 r8, rax
  00010	49 8b d2	 mov	 rdx, r10
  00013	49 8b cb	 mov	 rcx, r11
  00016	e9 00 00 00 00	 jmp	 _Getwctypes
?do_is@?$ctype@_W@std@@MEBAPEB_WPEB_W0PEAF@Z ENDP	; std::ctype<wchar_t>::do_is
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
_TEXT	SEGMENT
this$ = 48
_Maskval$ = 56
_First$ = 64
_Last$ = 72
?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z PROC	; std::ctype<wchar_t>::do_scan_is, COMDAT

; 2698 : 		{	// find first in [_First, _Last) that fits mask classification

$LN20:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	49 8b f1	 mov	 rsi, r9
  00017	49 8b d8	 mov	 rbx, r8
  0001a	0f b7 ea	 movzx	 ebp, dx
  0001d	48 8b f9	 mov	 rdi, rcx

; 2699 : 		_DEBUG_RANGE(_First, _Last);
; 2700 : 		for (; _First != _Last && !is(_Maskval, *_First); ++_First)

  00020	4d 3b c1	 cmp	 r8, r9
  00023	74 55		 je	 SHORT $LN16@do_scan_is
  00025	4c 89 74 24 30	 mov	 QWORD PTR [rsp+48], r14
  0002a	4c 8d 35 00 00
	00 00		 lea	 r14, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
$LL4@do_scan_is:
  00031	48 8b 07	 mov	 rax, QWORD PTR [rdi]

; 2581 : 		return (do_is(_Maskval, _Ch));

  00034	44 0f b7 03	 movzx	 r8d, WORD PTR [rbx]
  00038	49 3b c6	 cmp	 rax, r14
  0003b	75 42		 jne	 SHORT $LN19@do_scan_is

; 2686 : 		return ((_CSTD _Getwctype(_Ch, &_Ctype) & _Maskval) != 0);

  0003d	48 8d 57 10	 lea	 rdx, QWORD PTR [rdi+16]
  00041	41 0f b7 c8	 movzx	 ecx, r8w
  00045	e8 00 00 00 00	 call	 _Getwctype
  0004a	66 85 c5	 test	 ax, bp
  0004d	0f 95 c0	 setne	 al
$LN8@do_scan_is:

; 2699 : 		_DEBUG_RANGE(_First, _Last);
; 2700 : 		for (; _First != _Last && !is(_Maskval, *_First); ++_First)

  00050	84 c0		 test	 al, al
  00052	75 09		 jne	 SHORT $LN17@do_scan_is
  00054	48 83 c3 02	 add	 rbx, 2
  00058	48 3b de	 cmp	 rbx, rsi
  0005b	75 d4		 jne	 SHORT $LL4@do_scan_is
$LN17@do_scan_is:
  0005d	4c 8b 74 24 30	 mov	 r14, QWORD PTR [rsp+48]

; 2701 : 			;
; 2702 : 		return (_First);

  00062	48 8b c3	 mov	 rax, rbx
$LN3@do_scan_is:

; 2703 : 		}

  00065	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0006a	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0006f	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00074	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00078	5f		 pop	 rdi
  00079	c3		 ret	 0
$LN16@do_scan_is:

; 2701 : 			;
; 2702 : 		return (_First);

  0007a	48 8b c3	 mov	 rax, rbx
  0007d	eb e6		 jmp	 SHORT $LN3@do_scan_is
$LN19@do_scan_is:
  0007f	0f b7 d5	 movzx	 edx, bp
  00082	48 8b cf	 mov	 rcx, rdi

; 2581 : 		return (do_is(_Maskval, _Ch));

  00085	ff 50 20	 call	 QWORD PTR [rax+32]
  00088	eb c6		 jmp	 SHORT $LN8@do_scan_is
?do_scan_is@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z ENDP	; std::ctype<wchar_t>::do_scan_is
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z
_TEXT	SEGMENT
this$ = 48
_Maskval$ = 56
_First$ = 64
_Last$ = 72
?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z PROC	; std::ctype<wchar_t>::do_scan_not, COMDAT

; 2707 : 		{	// find first in [_First, _Last) not fitting mask classification

$LN20:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	49 8b f1	 mov	 rsi, r9
  00017	49 8b d8	 mov	 rbx, r8
  0001a	0f b7 ea	 movzx	 ebp, dx
  0001d	48 8b f9	 mov	 rdi, rcx

; 2708 : 		_DEBUG_RANGE(_First, _Last);
; 2709 : 		for (; _First != _Last && is(_Maskval, *_First); ++_First)

  00020	4d 3b c1	 cmp	 r8, r9
  00023	74 55		 je	 SHORT $LN16@do_scan_no
  00025	4c 89 74 24 30	 mov	 QWORD PTR [rsp+48], r14
  0002a	4c 8d 35 00 00
	00 00		 lea	 r14, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
$LL4@do_scan_no:
  00031	48 8b 07	 mov	 rax, QWORD PTR [rdi]

; 2581 : 		return (do_is(_Maskval, _Ch));

  00034	44 0f b7 03	 movzx	 r8d, WORD PTR [rbx]
  00038	49 3b c6	 cmp	 rax, r14
  0003b	75 42		 jne	 SHORT $LN19@do_scan_no

; 2686 : 		return ((_CSTD _Getwctype(_Ch, &_Ctype) & _Maskval) != 0);

  0003d	48 8d 57 10	 lea	 rdx, QWORD PTR [rdi+16]
  00041	41 0f b7 c8	 movzx	 ecx, r8w
  00045	e8 00 00 00 00	 call	 _Getwctype
  0004a	66 85 c5	 test	 ax, bp
  0004d	0f 95 c0	 setne	 al
$LN8@do_scan_no:

; 2708 : 		_DEBUG_RANGE(_First, _Last);
; 2709 : 		for (; _First != _Last && is(_Maskval, *_First); ++_First)

  00050	84 c0		 test	 al, al
  00052	74 09		 je	 SHORT $LN17@do_scan_no
  00054	48 83 c3 02	 add	 rbx, 2
  00058	48 3b de	 cmp	 rbx, rsi
  0005b	75 d4		 jne	 SHORT $LL4@do_scan_no
$LN17@do_scan_no:
  0005d	4c 8b 74 24 30	 mov	 r14, QWORD PTR [rsp+48]

; 2710 : 			;
; 2711 : 		return (_First);

  00062	48 8b c3	 mov	 rax, rbx
$LN3@do_scan_no:

; 2712 : 		}

  00065	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0006a	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0006f	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00074	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00078	5f		 pop	 rdi
  00079	c3		 ret	 0
$LN16@do_scan_no:

; 2710 : 			;
; 2711 : 		return (_First);

  0007a	48 8b c3	 mov	 rax, rbx
  0007d	eb e6		 jmp	 SHORT $LN3@do_scan_no
$LN19@do_scan_no:
  0007f	0f b7 d5	 movzx	 edx, bp
  00082	48 8b cf	 mov	 rcx, rdi

; 2581 : 		return (do_is(_Maskval, _Ch));

  00085	ff 50 20	 call	 QWORD PTR [rax+32]
  00088	eb c6		 jmp	 SHORT $LN8@do_scan_no
?do_scan_not@?$ctype@_W@std@@MEBAPEB_WFPEB_W0@Z ENDP	; std::ctype<wchar_t>::do_scan_not
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_tolower@?$ctype@_W@std@@MEBA_W_W@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_tolower@?$ctype@_W@std@@MEBA_W_W@Z PROC		; std::ctype<wchar_t>::do_tolower, COMDAT

; 2715 : 		{	// convert element to lower case

  00000	0f b7 c2	 movzx	 eax, dx

; 2716 : 		return (_Towlower(_Ch, &_Ctype));

  00003	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]
  00007	0f b7 c8	 movzx	 ecx, ax
  0000a	e9 00 00 00 00	 jmp	 _Towlower
?do_tolower@?$ctype@_W@std@@MEBA_W_W@Z ENDP		; std::ctype<wchar_t>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z PROC	; std::ctype<wchar_t>::do_tolower, COMDAT

; 2721 : 		{	// convert [_First, _Last) in place to lower case

$LN12:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	33 ff		 xor	 edi, edi
  00011	49 8b f0	 mov	 rsi, r8
  00014	48 2b f2	 sub	 rsi, rdx
  00017	48 8b da	 mov	 rbx, rdx
  0001a	48 ff c6	 inc	 rsi
  0001d	48 d1 ee	 shr	 rsi, 1
  00020	49 3b d0	 cmp	 rdx, r8
  00023	48 0f 47 f7	 cmova	 rsi, rdi

; 2722 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 2723 : 		for (; _First != _Last; ++_First)

  00027	48 85 f6	 test	 rsi, rsi
  0002a	74 28		 je	 SHORT $LN10@do_tolower
  0002c	48 89 6c 24 30	 mov	 QWORD PTR [rsp+48], rbp
  00031	48 8d 69 10	 lea	 rbp, QWORD PTR [rcx+16]
$LL4@do_tolower:

; 2724 : 			*_First = _Towlower(*_First, &_Ctype);

  00035	0f b7 0b	 movzx	 ecx, WORD PTR [rbx]
  00038	48 8b d5	 mov	 rdx, rbp
  0003b	e8 00 00 00 00	 call	 _Towlower
  00040	66 89 03	 mov	 WORD PTR [rbx], ax
  00043	48 ff c7	 inc	 rdi
  00046	48 83 c3 02	 add	 rbx, 2
  0004a	48 3b fe	 cmp	 rdi, rsi
  0004d	75 e6		 jne	 SHORT $LL4@do_tolower
  0004f	48 8b 6c 24 30	 mov	 rbp, QWORD PTR [rsp+48]
$LN10@do_tolower:

; 2725 : 		return ((const _Elem *)_First);
; 2726 : 		}

  00054	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00059	48 8b c3	 mov	 rax, rbx
  0005c	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5f		 pop	 rdi
  00066	c3		 ret	 0
?do_tolower@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z ENDP	; std::ctype<wchar_t>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_toupper@?$ctype@_W@std@@MEBA_W_W@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_toupper@?$ctype@_W@std@@MEBA_W_W@Z PROC		; std::ctype<wchar_t>::do_toupper, COMDAT

; 2729 : 		{	// convert element to upper case

  00000	0f b7 c2	 movzx	 eax, dx

; 2730 : 		return (_Towupper(_Ch, &_Ctype));

  00003	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]
  00007	0f b7 c8	 movzx	 ecx, ax
  0000a	e9 00 00 00 00	 jmp	 _Towupper
?do_toupper@?$ctype@_W@std@@MEBA_W_W@Z ENDP		; std::ctype<wchar_t>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z PROC	; std::ctype<wchar_t>::do_toupper, COMDAT

; 2735 : 		{	// convert [_First, _Last) in place to upper case

$LN12:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	33 ff		 xor	 edi, edi
  00011	49 8b f0	 mov	 rsi, r8
  00014	48 2b f2	 sub	 rsi, rdx
  00017	48 8b da	 mov	 rbx, rdx
  0001a	48 ff c6	 inc	 rsi
  0001d	48 d1 ee	 shr	 rsi, 1
  00020	49 3b d0	 cmp	 rdx, r8
  00023	48 0f 47 f7	 cmova	 rsi, rdi

; 2736 : 		_DEBUG_RANGE((const _Elem *)_First, _Last);
; 2737 : 		for (; _First != _Last; ++_First)

  00027	48 85 f6	 test	 rsi, rsi
  0002a	74 28		 je	 SHORT $LN10@do_toupper
  0002c	48 89 6c 24 30	 mov	 QWORD PTR [rsp+48], rbp
  00031	48 8d 69 10	 lea	 rbp, QWORD PTR [rcx+16]
$LL4@do_toupper:

; 2738 : 			*_First = _Towupper(*_First, &_Ctype);

  00035	0f b7 0b	 movzx	 ecx, WORD PTR [rbx]
  00038	48 8b d5	 mov	 rdx, rbp
  0003b	e8 00 00 00 00	 call	 _Towupper
  00040	66 89 03	 mov	 WORD PTR [rbx], ax
  00043	48 ff c7	 inc	 rdi
  00046	48 83 c3 02	 add	 rbx, 2
  0004a	48 3b fe	 cmp	 rdi, rsi
  0004d	75 e6		 jne	 SHORT $LL4@do_toupper
  0004f	48 8b 6c 24 30	 mov	 rbp, QWORD PTR [rsp+48]
$LN10@do_toupper:

; 2739 : 		return ((const _Elem *)_First);
; 2740 : 		}

  00054	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00059	48 8b c3	 mov	 rax, rbx
  0005c	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5f		 pop	 rdi
  00066	c3		 ret	 0
?do_toupper@?$ctype@_W@std@@MEBAPEB_WPEA_WPEB_W@Z ENDP	; std::ctype<wchar_t>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Dowiden@?$ctype@_W@std@@IEBA_WD@Z
_TEXT	SEGMENT
_Wc$ = 64
this$ = 64
_Byte$ = 72
_Mbst$ = 80
?_Dowiden@?$ctype@_W@std@@IEBA_WD@Z PROC		; std::ctype<wchar_t>::_Dowiden, COMDAT

; 2743 : 		{	// widen char

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2744 : 		_Mbstinit(_Mbst);

  00008	33 c0		 xor	 eax, eax

; 2745 : 		wchar_t _Wc;
; 2746 : 		return (_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst, &_Cvt) < 0

  0000a	4c 8d 4c 24 50	 lea	 r9, QWORD PTR _Mbst$[rsp]
  0000f	48 89 44 24 50	 mov	 QWORD PTR _Mbst$[rsp], rax
  00014	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Byte$[rsp]
  00019	48 8d 41 30	 lea	 rax, QWORD PTR [rcx+48]
  0001d	41 b8 01 00 00
	00		 mov	 r8d, 1
  00023	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Wc$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0002d	e8 00 00 00 00	 call	 _Mbrtowc
  00032	0f b7 4c 24 40	 movzx	 ecx, WORD PTR _Wc$[rsp]
  00037	85 c0		 test	 eax, eax
  00039	ba ff ff 00 00	 mov	 edx, 65535		; 0000ffffH
  0003e	66 0f 48 ca	 cmovs	 cx, dx
  00042	0f b7 c1	 movzx	 eax, cx

; 2747 : 			? (wchar_t)WEOF : _Wc);
; 2748 : 		}

  00045	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00049	c3		 ret	 0
?_Dowiden@?$ctype@_W@std@@IEBA_WD@Z ENDP		; std::ctype<wchar_t>::_Dowiden
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_widen@?$ctype@_W@std@@MEBA_WD@Z
_TEXT	SEGMENT
_Wc$1 = 64
this$ = 64
_Byte$ = 72
_Byte$ = 72
_Mbst$2 = 80
?do_widen@?$ctype@_W@std@@MEBA_WD@Z PROC		; std::ctype<wchar_t>::do_widen, COMDAT

; 2751 : 		{	// widen char

$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2744 : 		_Mbstinit(_Mbst);

  00004	33 c0		 xor	 eax, eax

; 2752 : 		return (_Dowiden(_Byte));

  00006	88 54 24 48	 mov	 BYTE PTR _Byte$[rsp], dl

; 2744 : 		_Mbstinit(_Mbst);

  0000a	48 89 44 24 50	 mov	 QWORD PTR _Mbst$2[rsp], rax

; 2745 : 		wchar_t _Wc;
; 2746 : 		return (_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst, &_Cvt) < 0

  0000f	4c 8d 4c 24 50	 lea	 r9, QWORD PTR _Mbst$2[rsp]
  00014	48 8d 41 30	 lea	 rax, QWORD PTR [rcx+48]
  00018	41 b8 01 00 00
	00		 mov	 r8d, 1
  0001e	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Wc$1[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Byte$[rsp]
  0002d	e8 00 00 00 00	 call	 _Mbrtowc
  00032	0f b7 4c 24 40	 movzx	 ecx, WORD PTR _Wc$1[rsp]
  00037	85 c0		 test	 eax, eax
  00039	ba ff ff 00 00	 mov	 edx, 65535		; 0000ffffH
  0003e	66 0f 48 ca	 cmovs	 cx, dx

; 2752 : 		return (_Dowiden(_Byte));

  00042	0f b7 c1	 movzx	 eax, cx

; 2753 : 		}

  00045	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00049	c3		 ret	 0
?do_widen@?$ctype@_W@std@@MEBA_WD@Z ENDP		; std::ctype<wchar_t>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z
_TEXT	SEGMENT
_Mbst$1 = 48
this$ = 112
_Byte$ = 120
_First$ = 120
_Wc$2 = 128
_Last$ = 128
_Dest$ = 136
?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z PROC	; std::ctype<wchar_t>::do_widen, COMDAT

; 2757 : 		{	// widen chars in [_First, _Last)

$LN14:
  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00009	33 ff		 xor	 edi, edi
  0000b	49 8b e8	 mov	 rbp, r8
  0000e	48 2b ea	 sub	 rbp, rdx
  00011	49 8b f1	 mov	 rsi, r9
  00014	49 3b d0	 cmp	 rdx, r8
  00017	48 8b da	 mov	 rbx, rdx
  0001a	48 0f 47 ef	 cmova	 rbp, rdi

; 2758 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2759 : 		for (; _First != _Last; ++_First, ++_Dest)

  0001e	48 85 ed	 test	 rbp, rbp
  00021	74 77		 je	 SHORT $LN12@do_widen
  00023	4c 89 74 24 70	 mov	 QWORD PTR [rsp+112], r14
  00028	4c 8d 71 30	 lea	 r14, QWORD PTR [rcx+48]
  0002c	4c 89 7c 24 40	 mov	 QWORD PTR [rsp+64], r15
  00031	41 bf ff ff 00
	00		 mov	 r15d, 65535		; 0000ffffH
  00037	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@do_widen:

; 2760 : 			*_Dest = _Dowiden(*_First);

  00040	0f b6 03	 movzx	 eax, BYTE PTR [rbx]

; 2746 : 		return (_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst, &_Cvt) < 0

  00043	4c 8d 4c 24 30	 lea	 r9, QWORD PTR _Mbst$1[rsp]

; 2760 : 			*_Dest = _Dowiden(*_First);

  00048	88 44 24 78	 mov	 BYTE PTR _Byte$[rsp], al

; 2746 : 		return (_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst, &_Cvt) < 0

  0004c	48 8d 54 24 78	 lea	 rdx, QWORD PTR _Byte$[rsp]
  00051	33 c0		 xor	 eax, eax
  00053	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00058	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Wc$2[rsp]
  00060	48 89 44 24 30	 mov	 QWORD PTR _Mbst$1[rsp], rax
  00065	44 8d 40 01	 lea	 r8d, QWORD PTR [rax+1]
  00069	e8 00 00 00 00	 call	 _Mbrtowc
  0006e	0f b7 8c 24 80
	00 00 00	 movzx	 ecx, WORD PTR _Wc$2[rsp]

; 2758 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2759 : 		for (; _First != _Last; ++_First, ++_Dest)

  00076	48 8d 76 02	 lea	 rsi, QWORD PTR [rsi+2]

; 2746 : 		return (_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst, &_Cvt) < 0

  0007a	85 c0		 test	 eax, eax
  0007c	66 41 0f 48 cf	 cmovs	 cx, r15w
  00081	48 ff c3	 inc	 rbx

; 2758 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2759 : 		for (; _First != _Last; ++_First, ++_Dest)

  00084	48 ff c7	 inc	 rdi

; 2760 : 			*_Dest = _Dowiden(*_First);

  00087	66 89 4e fe	 mov	 WORD PTR [rsi-2], cx
  0008b	48 3b fd	 cmp	 rdi, rbp
  0008e	75 b0		 jne	 SHORT $LL4@do_widen
  00090	4c 8b 7c 24 40	 mov	 r15, QWORD PTR [rsp+64]
  00095	4c 8b 74 24 70	 mov	 r14, QWORD PTR [rsp+112]
$LN12@do_widen:

; 2761 : 		return (_First);

  0009a	48 8b c3	 mov	 rax, rbx

; 2762 : 		}

  0009d	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000a1	5f		 pop	 rdi
  000a2	5e		 pop	 rsi
  000a3	5d		 pop	 rbp
  000a4	5b		 pop	 rbx
  000a5	c3		 ret	 0
?do_widen@?$ctype@_W@std@@MEBAPEBDPEBD0PEA_W@Z ENDP	; std::ctype<wchar_t>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?_Donarrow@?$ctype@_W@std@@IEBAD_WD@Z
_TEXT	SEGMENT
_Mbst$ = 32
_Buf$ = 40
__$ArrayPad$ = 48
this$ = 80
_Ch$ = 88
_Dflt$ = 96
?_Donarrow@?$ctype@_W@std@@IEBAD_WD@Z PROC		; std::ctype<wchar_t>::_Donarrow, COMDAT

; 2765 : 		{	// narrow element to char

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000d	48 33 c4	 xor	 rax, rsp
  00010	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00015	41 0f b6 d8	 movzx	 ebx, r8b

; 2766 : 		char _Buf[MB_LEN_MAX];
; 2767 : 		_Mbstinit(_Mbst);
; 2768 : 		return (_Wcrtomb(_Buf, _Ch, &_Mbst, &_Cvt) != 1

  00019	4c 8d 49 30	 lea	 r9, QWORD PTR [rcx+48]
  0001d	33 c0		 xor	 eax, eax
  0001f	4c 8d 44 24 20	 lea	 r8, QWORD PTR _Mbst$[rsp]
  00024	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00029	48 89 44 24 20	 mov	 QWORD PTR _Mbst$[rsp], rax
  0002e	e8 00 00 00 00	 call	 _Wcrtomb
  00033	0f b6 54 24 28	 movzx	 edx, BYTE PTR _Buf$[rsp]
  00038	83 f8 01	 cmp	 eax, 1
  0003b	0f 45 d3	 cmovne	 edx, ebx
  0003e	0f b6 c2	 movzx	 eax, dl

; 2769 : 			? _Dflt : _Buf[0]);
; 2770 : 		}

  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00046	48 33 cc	 xor	 rcx, rsp
  00049	e8 00 00 00 00	 call	 __security_check_cookie
  0004e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00052	5b		 pop	 rbx
  00053	c3		 ret	 0
?_Donarrow@?$ctype@_W@std@@IEBAD_WD@Z ENDP		; std::ctype<wchar_t>::_Donarrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z
_TEXT	SEGMENT
_Mbst$1 = 32
_Buf$2 = 40
__$ArrayPad$ = 48
this$ = 80
_Ch$ = 88
_Dflt$ = 96
?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z PROC		; std::ctype<wchar_t>::do_narrow, COMDAT

; 2773 : 		{	// narrow element to char

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000d	48 33 c4	 xor	 rax, rsp
  00010	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00015	41 0f b6 d8	 movzx	 ebx, r8b

; 2768 : 		return (_Wcrtomb(_Buf, _Ch, &_Mbst, &_Cvt) != 1

  00019	4c 8d 49 30	 lea	 r9, QWORD PTR [rcx+48]
  0001d	33 c0		 xor	 eax, eax
  0001f	4c 8d 44 24 20	 lea	 r8, QWORD PTR _Mbst$1[rsp]
  00024	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Buf$2[rsp]
  00029	48 89 44 24 20	 mov	 QWORD PTR _Mbst$1[rsp], rax
  0002e	e8 00 00 00 00	 call	 _Wcrtomb
  00033	0f b6 54 24 28	 movzx	 edx, BYTE PTR _Buf$2[rsp]
  00038	83 f8 01	 cmp	 eax, 1
  0003b	0f 45 d3	 cmovne	 edx, ebx

; 2774 : 		return (_Donarrow(_Ch, _Dflt));

  0003e	0f b6 c2	 movzx	 eax, dl

; 2775 : 		}

  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00046	48 33 cc	 xor	 rcx, rsp
  00049	e8 00 00 00 00	 call	 __security_check_cookie
  0004e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00052	5b		 pop	 rbx
  00053	c3		 ret	 0
?do_narrow@?$ctype@_W@std@@MEBAD_WD@Z ENDP		; std::ctype<wchar_t>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z
_TEXT	SEGMENT
_Mbst$1 = 32
_Buf$2 = 40
__$ArrayPad$ = 48
this$ = 112
_First$ = 120
_Last$ = 128
_Dflt$ = 136
_Dest$ = 144
?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z PROC	; std::ctype<wchar_t>::do_narrow, COMDAT

; 2779 : 		{	// narrow elements in [_First, _Last) to chars

$LN16:
  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 57		 push	 r15
  00007	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0001a	48 8b b4 24 90
	00 00 00	 mov	 rsi, QWORD PTR _Dest$[rsp]
  00022	33 ff		 xor	 edi, edi
  00024	49 8b e8	 mov	 rbp, r8
  00027	45 0f b6 f9	 movzx	 r15d, r9b
  0002b	48 2b ea	 sub	 rbp, rdx
  0002e	48 8b da	 mov	 rbx, rdx
  00031	48 ff c5	 inc	 rbp
  00034	48 d1 ed	 shr	 rbp, 1
  00037	49 3b d0	 cmp	 rdx, r8
  0003a	48 0f 47 ef	 cmova	 rbp, rdi

; 2780 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2781 : 		for (; _First != _Last; ++_First, ++_Dest)

  0003e	48 85 ed	 test	 rbp, rbp
  00041	74 53		 je	 SHORT $LN14@do_narrow
  00043	4c 89 b4 24 80
	00 00 00	 mov	 QWORD PTR [rsp+128], r14
  0004b	4c 8d 71 30	 lea	 r14, QWORD PTR [rcx+48]
  0004f	90		 npad	 1
$LL4@do_narrow:

; 2768 : 		return (_Wcrtomb(_Buf, _Ch, &_Mbst, &_Cvt) != 1

  00050	0f b7 13	 movzx	 edx, WORD PTR [rbx]
  00053	4c 8d 44 24 20	 lea	 r8, QWORD PTR _Mbst$1[rsp]
  00058	33 c0		 xor	 eax, eax
  0005a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Buf$2[rsp]
  0005f	4d 8b ce	 mov	 r9, r14
  00062	48 89 44 24 20	 mov	 QWORD PTR _Mbst$1[rsp], rax
  00067	e8 00 00 00 00	 call	 _Wcrtomb
  0006c	0f b6 54 24 28	 movzx	 edx, BYTE PTR _Buf$2[rsp]

; 2780 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2781 : 		for (; _First != _Last; ++_First, ++_Dest)

  00071	48 8d 76 01	 lea	 rsi, QWORD PTR [rsi+1]

; 2768 : 		return (_Wcrtomb(_Buf, _Ch, &_Mbst, &_Cvt) != 1

  00075	83 f8 01	 cmp	 eax, 1
  00078	41 0f b6 cf	 movzx	 ecx, r15b
  0007c	0f 45 d1	 cmovne	 edx, ecx
  0007f	48 83 c3 02	 add	 rbx, 2

; 2780 : 		_DEBUG_RANGE_PTR(_First, _Last, _Dest);
; 2781 : 		for (; _First != _Last; ++_First, ++_Dest)

  00083	48 ff c7	 inc	 rdi

; 2782 : 			*_Dest = _Donarrow(*_First, _Dflt);

  00086	88 56 ff	 mov	 BYTE PTR [rsi-1], dl
  00089	48 3b fd	 cmp	 rdi, rbp
  0008c	75 c2		 jne	 SHORT $LL4@do_narrow
  0008e	4c 8b b4 24 80
	00 00 00	 mov	 r14, QWORD PTR [rsp+128]
$LN14@do_narrow:

; 2783 : 		return (_First);

  00096	48 8b c3	 mov	 rax, rbx

; 2784 : 		}

  00099	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0009e	48 33 cc	 xor	 rcx, rsp
  000a1	e8 00 00 00 00	 call	 __security_check_cookie
  000a6	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000aa	41 5f		 pop	 r15
  000ac	5f		 pop	 rdi
  000ad	5e		 pop	 rsi
  000ae	5d		 pop	 rbp
  000af	5b		 pop	 rbx
  000b0	c3		 ret	 0
?do_narrow@?$ctype@_W@std@@MEBAPEB_WPEB_W0DPEAD@Z ENDP	; std::ctype<wchar_t>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??_G?$ctype@_W@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$ctype@_W@std@@MEAAPEAXI@Z PROC			; std::ctype<wchar_t>::`scalar deleting destructor', COMDAT
$LN19:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2672 : 		if (_Ctype._Delfl)

  0000a	83 79 20 00	 cmp	 DWORD PTR [rcx+32], 0
  0000e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
  00015	48 89 01	 mov	 QWORD PTR [rcx], rax
  00018	8b fa		 mov	 edi, edx
  0001a	48 8b d9	 mov	 rbx, rcx
  0001d	74 09		 je	 SHORT $LN5@scalar

; 2673 : 			_CSTD free((void *)_Ctype._Table);

  0001f	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00023	e8 00 00 00 00	 call	 free
$LN5@scalar:

; 2674 : 
; 2675 : 		_CSTD free(_Ctype._LocaleName);

  00028	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  0002c	e8 00 00 00 00	 call	 free
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00038	48 89 03	 mov	 QWORD PTR [rbx], rax
  0003b	40 f6 c7 01	 test	 dil, 1
  0003f	74 0d		 je	 SHORT $LN17@scalar
  00041	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  00046	48 8b cb	 mov	 rcx, rbx
  00049	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN17@scalar:
  0004e	48 8b c3	 mov	 rax, rbx
  00051	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??_G?$ctype@_W@std@@MEAAPEAXI@Z ENDP			; std::ctype<wchar_t>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0error_category@std@@QEAA@XZ PROC			; std::error_category::error_category, COMDAT

; 169  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@

; 170  : 		_Addr = reinterpret_cast<uintptr_t>(this);

  00007	48 89 49 08	 mov	 QWORD PTR [rcx+8], rcx
  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 171  : 		}

  0000e	48 8b c1	 mov	 rax, rcx
  00011	c3		 ret	 0
??0error_category@std@@QEAA@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1error_category@std@@UEAA@XZ PROC			; std::error_category::~error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 175  : 		}

  0000a	c3		 ret	 0
??1error_category@std@@UEAA@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8error_category@std@@QEBA_NAEBV01@@Z PROC		; std::error_category::operator==, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  00004	48 39 51 08	 cmp	 QWORD PTR [rcx+8], rdx
  00008	0f 94 c0	 sete	 al

; 193  : 		}

  0000b	c3		 ret	 0
??8error_category@std@@QEBA_NAEBV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??_Gerror_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gerror_category@std@@UEAAPEAXI@Z PROC		; std::error_category::`scalar deleting destructor', COMDAT
$LN9:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN7@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN7@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_Gerror_category@std@@UEAAPEAXI@Z ENDP		; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 235  : 		}

  00002	48 8b c1	 mov	 rax, rcx
  00005	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  00009	c3		 ret	 0
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_code@std@@QEBAHXZ PROC			; std::error_code::value, COMDAT

; 268  : 		return (_Myval);

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 269  : 		}

  00002	c3		 ret	 0
?value@error_code@std@@QEBAHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_code@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_code::category, COMDAT

; 273  : 		return (*_Mycat);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 274  : 		}

  00004	c3		 ret	 0
?category@error_code@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT

; 279  : 		{	// get name of error code

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 280  : 		return (category().message(value()));

  00006	44 8b 01	 mov	 r8d, DWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx

; 273  : 		return (*_Mycat);

  0000c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00010	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 280  : 		return (category().message(value()));

  00018	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0001b	ff 50 10	 call	 QWORD PTR [rax+16]
  0001e	48 8b c3	 mov	 rax, rbx

; 281  : 		}

  00021	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00025	5b		 pop	 rbx
  00026	c3		 ret	 0
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	89 11		 mov	 DWORD PTR [rcx], edx

; 308  : 		}

  00002	48 8b c1	 mov	 rax, rcx
  00005	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  00009	c3		 ret	 0
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_condition@std@@QEBAHXZ PROC		; std::error_condition::value, COMDAT

; 341  : 		return (_Myval);

  00000	8b 01		 mov	 eax, DWORD PTR [rcx]

; 342  : 		}

  00002	c3		 ret	 0
?value@error_condition@std@@QEBAHXZ ENDP		; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT

; 346  : 		return (*_Mycat);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 347  : 		}

  00004	c3		 ret	 0
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??8std@@YA_NAEBVerror_condition@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??8std@@YA_NAEBVerror_condition@0@0@Z PROC		; std::operator==, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	4c 8b 49 08	 mov	 r9, QWORD PTR [rcx+8]
  00008	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0000c	4d 39 41 08	 cmp	 QWORD PTR [r9+8], r8

; 393  : 	return (_Left.category() == _Right.category()

  00010	75 09		 jne	 SHORT $LN3@operator
  00012	8b 02		 mov	 eax, DWORD PTR [rdx]
  00014	39 01		 cmp	 DWORD PTR [rcx], eax
  00016	75 03		 jne	 SHORT $LN3@operator
  00018	b0 01		 mov	 al, 1

; 394  : 		&& _Left.value() == _Right.value());
; 395  : 	}

  0001a	c3		 ret	 0
$LN3@operator:

; 393  : 	return (_Left.category() == _Right.category()

  0001b	32 c0		 xor	 al, al

; 394  : 		&& _Left.value() == _Right.value());
; 395  : 	}

  0001d	c3		 ret	 0
??8std@@YA_NAEBVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Errval$ = 24
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00000	44 89 02	 mov	 DWORD PTR [rdx], r8d

; 449  : 	return (error_condition(_Errval, *this));

  00003	48 8b c2	 mov	 rax, rdx

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00006	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 450  : 	}

  0000a	c3		 ret	 0
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Errval$ = 72
_Cond$ = 80
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT

; 455  : 	{	// test if error code same condition

$LN32:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	49 8b d8	 mov	 rbx, r8
  0000c	4c 8b 48 18	 mov	 r9, QWORD PTR [rax+24]
  00010	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
  00017	4c 3b c8	 cmp	 r9, rax
  0001a	75 36		 jne	 SHORT $LN31@equivalent

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  0001c	89 54 24 20	 mov	 DWORD PTR $T1[rsp], edx

; 449  : 	return (error_condition(_Errval, *this));

  00020	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]

; 306  : 		: _Myval(_Val), _Mycat(&_Cat)

  00025	48 89 4c 24 28	 mov	 QWORD PTR $T1[rsp+8], rcx
$LN3@equivalent:

; 192  : 		return (_Addr == _Right._Addr);

  0002a	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  0002e	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  00032	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00036	49 39 50 08	 cmp	 QWORD PTR [r8+8], rdx

; 393  : 	return (_Left.category() == _Right.category()

  0003a	75 0e		 jne	 SHORT $LN13@equivalent
  0003c	8b 0b		 mov	 ecx, DWORD PTR [rbx]
  0003e	39 08		 cmp	 DWORD PTR [rax], ecx
  00040	75 08		 jne	 SHORT $LN13@equivalent

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  00042	b0 01		 mov	 al, 1

; 457  : 	}

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
$LN13@equivalent:

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  0004a	32 c0		 xor	 al, al

; 457  : 	}

  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5b		 pop	 rbx
  00051	c3		 ret	 0
$LN31@equivalent:
  00052	44 8b c2	 mov	 r8d, edx
  00055	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]

; 456  : 	return (default_error_condition(_Errval) == _Cond);

  0005a	41 ff d1	 call	 r9
  0005d	eb cb		 jmp	 SHORT $LN3@equivalent
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
_TEXT	SEGMENT
this$ = 8
_Code$ = 16
_Errval$ = 24
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT

; 192  : 		return (_Addr == _Right._Addr);

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  00008	4c 39 49 08	 cmp	 QWORD PTR [rcx+8], r9

; 463  : 	return (*this == _Code.category() && _Code.value() == _Errval);

  0000c	75 08		 jne	 SHORT $LN3@equivalent
  0000e	44 39 02	 cmp	 DWORD PTR [rdx], r8d
  00011	75 03		 jne	 SHORT $LN3@equivalent
  00013	b0 01		 mov	 al, 1

; 464  : 	}

  00015	c3		 ret	 0
$LN3@equivalent:

; 463  : 	return (*this == _Code.category() && _Code.value() == _Errval);

  00016	32 c0		 xor	 al, al

; 464  : 	}

  00018	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Errno$ = 56
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z PROC ; std::make_error_code, COMDAT

; 479  : 	{	// make an error_code

$LN29:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 698  : 	static _Immortalizer<_Ty> _Static;

  0000a	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88

; 479  : 	{	// make an error_code

  00013	48 8b d9	 mov	 rbx, rcx

; 698  : 	static _Immortalizer<_Ty> _Static;

  00016	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:_Init_thread_epoch

; 479  : 	{	// make an error_code

  0001b	8b fa		 mov	 edi, edx

; 698  : 	static _Immortalizer<_Ty> _Static;

  0001d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00020	42 8b 04 01	 mov	 eax, DWORD PTR [rcx+r8]
  00024	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, eax ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0002a	7f 1b		 jg	 SHORT $LN27@make_error
$LN7@make_error:

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
  00033	89 3b		 mov	 DWORD PTR [rbx], edi
  00035	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 480  : 	return (error_code((int)_Errno, iostream_category()));

  00039	48 8b c3	 mov	 rax, rbx

; 481  : 	}

  0003c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
$LN27@make_error:

; 698  : 	static _Immortalizer<_Ty> _Static;

  00047	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0004e	e8 00 00 00 00	 call	 _Init_thread_header
  00053	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, -1 ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0005a	75 d0		 jne	 SHORT $LN7@make_error

; 616  : 		{	// default constructor

  0005c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  00063	48 c7 05 08 00
	00 00 05 00 00
	00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A+8, 5

; 698  : 	static _Immortalizer<_Ty> _Static;

  0006e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''

; 616  : 		{	// default constructor

  00075	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A, rax

; 698  : 	static _Immortalizer<_Ty> _Static;

  0007c	e8 00 00 00 00	 call	 atexit
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00088	e8 00 00 00 00	 call	 _Init_thread_footer
  0008d	eb 9d		 jmp	 SHORT $LN7@make_error
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT

; 513  : 		{	// compose error message

$LN163:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00008	48 c7 44 24 28
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  00011	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00018	48 33 c4	 xor	 rax, rsp
  0001b	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00020	49 8b d8	 mov	 rbx, r8
  00023	48 8b f2	 mov	 rsi, rdx
  00026	48 8b f9	 mov	 rdi, rcx
  00029	48 89 5c 24 30	 mov	 QWORD PTR _Message$GSCopy$[rsp], rbx
  0002e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1781 : 		return (this->_Mysize() == 0);

  00036	49 83 78 10 00	 cmp	 QWORD PTR [r8+16], 0
  0003b	0f 94 c0	 sete	 al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 514  : 		if (!_Message.empty())

  0003e	84 c0		 test	 al, al
  00040	75 15		 jne	 SHORT $LN2@Makestr
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00042	41 b8 02 00 00
	00		 mov	 r8d, 2
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5?$AA@
  0004f	48 8b cb	 mov	 rcx, rbx
  00052	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@Makestr:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 516  : 		_Message.append(_Errcode.message());

  00057	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  0005c	48 8b ce	 mov	 rcx, rsi
  0005f	e8 00 00 00 00	 call	 ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
  00064	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1060 : 		return (append(_Right, 0, npos));

  00065	49 83 c9 ff	 or	 r9, -1
  00069	45 33 c0	 xor	 r8d, r8d
  0006c	48 8b d0	 mov	 rdx, rax
  0006f	48 8b cb	 mov	 rcx, rbx
  00072	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  00077	90		 npad	 1

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00078	48 8b 44 24 50	 mov	 rax, QWORD PTR $T3[rsp+24]
  0007d	48 83 f8 10	 cmp	 rax, 16
  00081	72 59		 jb	 SHORT $LN115@Makestr

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00083	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00086	48 8b 4c 24 38	 mov	 rcx, QWORD PTR $T3[rsp]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0008b	48 83 f8 ff	 cmp	 rax, -1
  0008f	76 06		 jbe	 SHORT $LN109@Makestr
  00091	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00096	cc		 int	 3
$LN109@Makestr:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00097	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0009d	72 38		 jb	 SHORT $LN110@Makestr

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0009f	f6 c1 1f	 test	 cl, 31
  000a2	74 06		 je	 SHORT $LN111@Makestr
  000a4	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a9	cc		 int	 3
$LN111@Makestr:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000aa	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000ae	48 3b c1	 cmp	 rax, rcx
  000b1	72 06		 jb	 SHORT $LN112@Makestr
  000b3	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000b8	cc		 int	 3
$LN112@Makestr:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000b9	48 2b c8	 sub	 rcx, rax
  000bc	48 83 f9 08	 cmp	 rcx, 8
  000c0	73 06		 jae	 SHORT $LN113@Makestr
  000c2	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c7	cc		 int	 3
$LN113@Makestr:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000c8	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000cc	76 06		 jbe	 SHORT $LN114@Makestr
  000ce	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d3	cc		 int	 3
$LN114@Makestr:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000d4	48 8b c8	 mov	 rcx, rax
$LN110@Makestr:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000d7	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN115@Makestr:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 517  : 		return (_Message);

  000dc	48 8b d3	 mov	 rdx, rbx
  000df	48 8b cf	 mov	 rcx, rdi
  000e2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e7	90		 npad	 1
  000e8	48 8b cb	 mov	 rcx, rbx
  000eb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000f0	48 8b c7	 mov	 rax, rdi

; 518  : 		}

  000f3	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	5b		 pop	 rbx
  00107	c3		 ret	 0
$LN162@Makestr:
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _Message$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 8b 8a 30 00
	00 00		 mov	 rcx, QWORD PTR _Message$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Message$GSCopy$ = 48
$T3 = 56
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T3[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
$T2 = 32
$T3 = 48
$T4 = 80
__$ArrayPad$ = 112
this$ = 144
_Errcode$ = 152
_Message$ = 160
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT

; 523  : 		{	// construct from error code and message string

$LN329:
  00000	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00014	48 33 c4	 xor	 rax, rsp
  00017	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0001c	49 8b c0	 mov	 rax, r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001f	48 c7 44 24 48
	0f 00 00 00	 mov	 QWORD PTR $T3[rsp+24], 15
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  00028	48 8b fa	 mov	 rdi, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002b	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR $T3[rsp+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  00034	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00037	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  00044	49 83 c9 ff	 or	 r9, -1
  00048	45 33 c0	 xor	 r8d, r8d
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 522  : 		: runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode)

  00050	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  00053	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T3[rsp]
  00058	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T2[rsp]
  0005d	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp]
  00062	0f 29 44 24 20	 movaps	 XMMWORD PTR $T2[rsp], xmm0
  00067	e8 00 00 00 00	 call	 ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0006c	48 83 78 18 10	 cmp	 QWORD PTR [rax+24], 16
  00071	72 03		 jb	 SHORT $LN179@System_err
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN179@System_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 52   :         : _Data()

  00076	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 53   :     {
; 54   :         __std_exception_data _InitData = { _Message, true };

  0007a	48 89 44 24 20	 mov	 QWORD PTR _InitData$1[rsp], rax
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00086	c6 44 24 28 01	 mov	 BYTE PTR _InitData$1[rsp+8], 1
  0008b	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0008e	33 c9		 xor	 ecx, ecx
  00090	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  00093	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 55   :         __std_exception_copy(&_InitData, &_Data);

  00097	48 8d 4c 24 20	 lea	 rcx, QWORD PTR _InitData$1[rsp]
  0009c	e8 00 00 00 00	 call	 __std_exception_copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\stdexcept

; 163  : 		{	// construct from message string

  000a1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7runtime_error@std@@6B@
  000a8	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000ab	48 8b 44 24 68	 mov	 rax, QWORD PTR $T4[rsp+24]
  000b0	48 83 f8 10	 cmp	 rax, 16
  000b4	72 3b		 jb	 SHORT $LN276@System_err
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  000b6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T4[rsp]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000bb	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  000be	48 83 f8 ff	 cmp	 rax, -1
  000c2	77 5f		 ja	 SHORT $LN323@System_err

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000c4	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000ca	72 20		 jb	 SHORT $LN271@System_err

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000cc	f6 c1 1f	 test	 cl, 31
  000cf	75 58		 jne	 SHORT $LN325@System_err

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000d1	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000d5	48 3b c1	 cmp	 rax, rcx
  000d8	73 55		 jae	 SHORT $LN326@System_err

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000da	48 2b c8	 sub	 rcx, rax
  000dd	48 83 f9 08	 cmp	 rcx, 8
  000e1	72 52		 jb	 SHORT $LN327@System_err

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000e3	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000e7	77 52		 ja	 SHORT $LN328@System_err

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000e9	48 8b c8	 mov	 rcx, rax
$LN271@System_err:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000ec	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN276@System_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 523  : 		{	// construct from error code and message string

  000f1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  000f8	48 89 03	 mov	 QWORD PTR [rbx], rax

; 524  : 		}

  000fb	48 8b c3	 mov	 rax, rbx
  000fe	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  00101	0f 11 43 18	 movups	 XMMWORD PTR [rbx+24], xmm0
  00105	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0010a	48 33 cc	 xor	 rcx, rsp
  0010d	e8 00 00 00 00	 call	 __security_check_cookie
  00112	48 8b 9c 24 a8
	00 00 00	 mov	 rbx, QWORD PTR [rsp+168]
  0011a	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00121	5f		 pop	 rdi
  00122	c3		 ret	 0
$LN323@System_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00123	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00128	cc		 int	 3
$LN325@System_err:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00129	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0012e	cc		 int	 3
$LN326@System_err:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0012f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00134	cc		 int	 3
$LN327@System_err:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00135	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0013a	cc		 int	 3
$LN328@System_err:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0013b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00140	cc		 int	 3
$LN322@System_err:
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_G_System_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_System_error@std@@UEAAPEAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN12@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN12@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_G_System_error@std@@UEAAPEAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1_System_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_System_error@std@@UEAA@XZ PROC			; std::_System_error::~_System_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1_System_error@std@@UEAA@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z PROC	; std::system_error::system_error, COMDAT

; 548  : 		{	// construct from error code and message string

$LN285:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	57		 push	 rdi
  00004	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00008	49 c7 43 a8 fe
	ff ff ff	 mov	 QWORD PTR [r11-88], -2
  00010	49 89 5b 20	 mov	 QWORD PTR [r11+32], rbx
  00014	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001b	48 33 c4	 xor	 rax, rsp
  0001e	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00023	49 8b c0	 mov	 rax, r8
  00026	48 8b fa	 mov	 rdi, rdx
  00029	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0002c	49 c7 43 e0 0f
	00 00 00	 mov	 QWORD PTR [r11-32], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00034	45 33 c0	 xor	 r8d, r8d
  00037	4d 89 43 d8	 mov	 QWORD PTR [r11-40], r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0003b	45 88 43 c8	 mov	 BYTE PTR [r11-56], r8b

; 523  : 		return (*_First == 0 ? 0

  0003f	44 38 00	 cmp	 BYTE PTR [rax], r8b
  00042	74 16		 je	 SHORT $LN148@system_err
  00044	49 83 c8 ff	 or	 r8, -1
  00048	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL283@system_err:
  00050	49 ff c0	 inc	 r8
  00053	42 80 3c 00 00	 cmp	 BYTE PTR [rax+r8], 0
  00058	75 f6		 jne	 SHORT $LL283@system_err
$LN148@system_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0005a	48 8b d0	 mov	 rdx, rax
  0005d	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T2[rsp]
  00062	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00067	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  00068	0f 10 07	 movups	 xmm0, XMMWORD PTR [rdi]
  0006b	0f 29 44 24 30	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00070	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T2[rsp]
  00075	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T1[rsp]
  0007a	48 8b cb	 mov	 rcx, rbx
  0007d	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  00082	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00083	48 8b 44 24 58	 mov	 rax, QWORD PTR $T2[rsp+24]
  00088	48 83 f8 10	 cmp	 rax, 16
  0008c	72 5b		 jb	 SHORT $LN237@system_err

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0008e	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00091	48 8b 4c 24 40	 mov	 rcx, QWORD PTR $T2[rsp]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00096	48 83 f8 ff	 cmp	 rax, -1
  0009a	76 06		 jbe	 SHORT $LN231@system_err
  0009c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a1	cc		 int	 3
$LN231@system_err:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000a2	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000a8	72 3a		 jb	 SHORT $LN232@system_err

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000aa	f6 44 24 40 1f	 test	 BYTE PTR $T2[rsp], 31
  000af	74 06		 je	 SHORT $LN233@system_err
  000b1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000b6	cc		 int	 3
$LN233@system_err:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000b7	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000bb	48 3b c1	 cmp	 rax, rcx
  000be	72 06		 jb	 SHORT $LN234@system_err
  000c0	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c5	cc		 int	 3
$LN234@system_err:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000c6	48 2b c8	 sub	 rcx, rax
  000c9	48 83 f9 08	 cmp	 rcx, 8
  000cd	73 06		 jae	 SHORT $LN235@system_err
  000cf	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d4	cc		 int	 3
$LN235@system_err:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000d5	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000d9	76 06		 jbe	 SHORT $LN236@system_err
  000db	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000e0	cc		 int	 3
$LN236@system_err:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000e1	48 8b c8	 mov	 rcx, rax
$LN232@system_err:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000e4	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN237@system_err:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 548  : 		{	// construct from error code and message string

  000e9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7system_error@std@@6B@
  000f0	48 89 03	 mov	 QWORD PTR [rbx], rax

; 549  : 		}

  000f3	48 8b c3	 mov	 rax, rbx
  000f6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000fb	48 33 cc	 xor	 rcx, rsp
  000fe	e8 00 00 00 00	 call	 __security_check_cookie
  00103	48 8b 9c 24 98
	00 00 00	 mov	 rbx, QWORD PTR [rsp+152]
  0010b	48 83 c4 70	 add	 rsp, 112		; 00000070H
  0010f	5f		 pop	 rdi
  00110	c3		 ret	 0
$LN284@system_err:
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ENDP	; std::system_error::system_error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 96
this$ = 128
_Errcode$ = 136
_Message$ = 144
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gsystem_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gsystem_error@std@@UEAAPEAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
$LN17:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN15@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN15@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gsystem_error@std@@UEAAPEAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1system_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1system_error@std@@UEAA@XZ PROC			; std::system_error::~system_error, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1system_error@std@@UEAA@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Generic_error_category@std@@QEAA@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT

; 595  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Generic_error_category@std@@6B@

; 596  : 		_Addr = _Generic_addr;

  00007	48 c7 41 08 03
	00 00 00	 mov	 QWORD PTR [rcx+8], 3
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 597  : 		}

  00012	48 8b c1	 mov	 rax, rcx
  00015	c3		 ret	 0
??0_Generic_error_category@std@@QEAA@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Generic_error_category@std@@UEBAPEBDXZ PROC	; std::_Generic_error_category::name, COMDAT

; 601  : 		return ("generic");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_07DCLBNMLN@generic?$AA@

; 602  : 		}

  00007	c3		 ret	 0
?name@_Generic_error_category@std@@UEBAPEBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT

; 605  : 		{	// convert to name of error

$LN152:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	33 db		 xor	 ebx, ebx

; 606  : 		return (_Syserror_map(_Errcode));

  0000c	41 8b c8	 mov	 ecx, r8d
  0000f	89 5c 24 20	 mov	 DWORD PTR $T1[rsp], ebx
  00013	48 8b fa	 mov	 rdi, rdx
  00016	e8 00 00 00 00	 call	 ?_Syserror_map@std@@YAPEBDH@Z ; std::_Syserror_map
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001b	48 c7 47 18 0f
	00 00 00	 mov	 QWORD PTR [rdi+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00023	48 89 5f 10	 mov	 QWORD PTR [rdi+16], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00027	88 1f		 mov	 BYTE PTR [rdi], bl

; 523  : 		return (*_First == 0 ? 0

  00029	38 18		 cmp	 BYTE PTR [rax], bl
  0002b	74 0d		 je	 SHORT $LN148@message
  0002d	48 83 cb ff	 or	 rbx, -1
$LL150@message:
  00031	48 ff c3	 inc	 rbx
  00034	80 3c 18 00	 cmp	 BYTE PTR [rax+rbx], 0
  00038	75 f7		 jne	 SHORT $LL150@message
$LN148@message:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003a	4c 8b c3	 mov	 r8, rbx
  0003d	48 8b d0	 mov	 rdx, rax
  00040	48 8b cf	 mov	 rcx, rdi
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 607  : 		}

  00048	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0004d	48 8b c7	 mov	 rax, rdi
  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??_G_Generic_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Generic_error_category@std@@UEAAPEAXI@Z PROC	; std::_Generic_error_category::`scalar deleting destructor', COMDAT
$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN10@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN10@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Generic_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1_Generic_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Generic_error_category@std@@UEAA@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	c3		 ret	 0
??1_Generic_error_category@std@@UEAA@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Iostream_error_category@std@@QEAA@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT

; 616  : 		{	// default constructor

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  00007	48 c7 41 08 05
	00 00 00	 mov	 QWORD PTR [rcx+8], 5
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 618  : 		}

  00012	48 8b c1	 mov	 rax, rcx
  00015	c3		 ret	 0
??0_Iostream_error_category@std@@QEAA@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Iostream_error_category@std@@UEBAPEBDXZ PROC	; std::_Iostream_error_category::name, COMDAT

; 622  : 		return ("iostream");

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08LLGCOLLL@iostream?$AA@

; 623  : 		}

  00007	c3		 ret	 0
?name@_Iostream_error_category@std@@UEBAPEBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT

; 626  : 		{	// convert to name of error

$LN154:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	33 c0		 xor	 eax, eax
  00008	48 8b da	 mov	 rbx, rdx
  0000b	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax

; 627  : 		if (_Errcode == (int)io_errc::stream)

  0000f	41 83 f8 01	 cmp	 r8d, 1
  00013	75 2a		 jne	 SHORT $LN2@message
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 42 18 0f
	00 00 00	 mov	 QWORD PTR [rdx+24], 15

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0001d	44 8d 40 15	 lea	 r8d, QWORD PTR [rax+21]

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00021	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00025	48 8b cb	 mov	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00028	88 02		 mov	 BYTE PTR [rdx], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0002a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
  00031	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 630  : 			return (_Generic_error_category::message(_Errcode));

  00036	48 8b c3	 mov	 rax, rbx

; 631  : 		}

  00039	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
$LN2@message:

; 630  : 			return (_Generic_error_category::message(_Errcode));

  0003f	e8 00 00 00 00	 call	 ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
  00044	48 8b c3	 mov	 rax, rbx

; 631  : 		}

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5b		 pop	 rbx
  0004c	c3		 ret	 0
?message@_Iostream_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??_G_Iostream_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Iostream_error_category@std@@UEAAPEAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 174  : 		{	// destroy the object

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN13@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G_Iostream_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1_Iostream_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Iostream_error_category@std@@UEAA@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT

; 174  : 		{	// destroy the object

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7error_category@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
  0000a	c3		 ret	 0
??1_Iostream_error_category@std@@UEAA@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ?iostream_category@std@@YAAEBVerror_category@1@XZ
_TEXT	SEGMENT
?iostream_category@std@@YAAEBVerror_category@1@XZ PROC	; std::iostream_category, COMDAT

; 708  : 	{	// get iostream_category

$LN25:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 698  : 	static _Immortalizer<_Ty> _Static;

  00004	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  0000d	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  00012	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00015	8b 04 0a	 mov	 eax, DWORD PTR [rdx+rcx]
  00018	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, eax ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0001e	7f 0c		 jg	 SHORT $LN23@iostream_c
$LN21@iostream_c:

; 709  : 	return (_Immortalize<_Iostream_error_category>());

  00020	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static

; 710  : 	}

  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	c3		 ret	 0
$LN23@iostream_c:

; 698  : 	static _Immortalizer<_Ty> _Static;

  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00033	e8 00 00 00 00	 call	 _Init_thread_header
  00038	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, -1 ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0003f	75 df		 jne	 SHORT $LN21@iostream_c

; 616  : 		{	// default constructor

  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  00048	48 c7 05 08 00
	00 00 05 00 00
	00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A+8, 5

; 698  : 	static _Immortalizer<_Ty> _Static;

  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''

; 616  : 		{	// default constructor

  0005a	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A, rax

; 698  : 	static _Immortalizer<_Ty> _Static;

  00061	e8 00 00 00 00	 call	 atexit
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0006d	e8 00 00 00 00	 call	 _Init_thread_footer
  00072	eb ac		 jmp	 SHORT $LN21@iostream_c
?iostream_category@std@@YAAEBVerror_category@1@XZ ENDP	; std::iostream_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Message$ = 72
_Errcode$ = 80
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z PROC ; std::ios_base::failure::failure, COMDAT

; 238  : 			{	// construct with message

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 237  : 			: system_error(_Errcode, _Message)

  00006	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  0000a	4c 8b c2	 mov	 r8, rdx

; 238  : 			{	// construct with message

  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00015	0f 29 44 24 20	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  0001a	e8 00 00 00 00	 call	 ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ; std::system_error::system_error
  0001f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00026	48 89 03	 mov	 QWORD PTR [rbx], rax

; 239  : 			}

  00029	48 8b c3	 mov	 rax, rbx
  0002c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00030	5b		 pop	 rbx
  00031	c3		 ret	 0
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ENDP ; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?clear@ios_base@std@@QEAAXH_N@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 48
$T6 = 48
$T7 = 88
$T8 = 96
$T9 = 96
$T10 = 96
$T11 = 136
$T12 = 136
__$ArrayPad$ = 168
this$ = 208
_State$ = 216
_Reraise$ = 224
?clear@ios_base@std@@QEAAXH_N@Z PROC			; std::ios_base::clear, COMDAT

; 287  : 		{	// set state, possibly reraise exception

$LN898:
  00000	40 55		 push	 rbp
  00002	48 8d 6c 24 a9	 lea	 rbp, QWORD PTR [rsp-87]
  00007	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  0000e	48 c7 45 ef fe
	ff ff ff	 mov	 QWORD PTR $T7[rbp-105], -2
  00016	0f 29 b4 24 b0
	00 00 00	 movaps	 XMMWORD PTR [rsp+176], xmm6
  0001e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00025	48 33 c4	 xor	 rax, rsp
  00028	48 89 45 3f	 mov	 QWORD PTR __$ArrayPad$[rbp-105], rax

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  0002c	83 e2 17	 and	 edx, 23
  0002f	89 51 10	 mov	 DWORD PTR [rcx+16], edx

; 289  : 		if ((_Mystate & _Except) == 0)

  00032	8b 41 14	 mov	 eax, DWORD PTR [rcx+20]
  00035	23 c2		 and	 eax, edx
  00037	0f 84 f3 02 00
	00		 je	 $LN9@clear

; 290  : 			;
; 291  : 		else if (_Reraise)

  0003d	45 84 c0	 test	 r8b, r8b
  00040	74 0a		 je	 SHORT $LN4@clear

; 292  : 			_RERAISE;

  00042	33 d2		 xor	 edx, edx
  00044	33 c9		 xor	 ecx, ecx
  00046	e8 00 00 00 00	 call	 _CxxThrowException
  0004b	cc		 int	 3
$LN4@clear:

; 293  : 		else if (_Mystate & _Except & badbit)

  0004c	a8 04		 test	 al, 4
  0004e	0f 84 39 01 00
	00		 je	 $LN6@clear
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 698  : 	static _Immortalizer<_Ty> _Static;

  00054	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  00059	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  00062	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00065	8b 04 0a	 mov	 eax, DWORD PTR [rdx+rcx]
  00068	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, eax ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0006e	7e 46		 jle	 SHORT $LN18@clear
  00070	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00077	e8 00 00 00 00	 call	 _Init_thread_header
  0007c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, -1 ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00083	75 31		 jne	 SHORT $LN18@clear

; 616  : 		{	// default constructor

  00085	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@
  0008c	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A, rax

; 617  : 		_Addr = _Iostream_addr;

  00093	48 c7 05 08 00
	00 00 05 00 00
	00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A+8, 5

; 698  : 	static _Immortalizer<_Ty> _Static;

  0009e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
  000a5	e8 00 00 00 00	 call	 atexit
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  000b1	e8 00 00 00 00	 call	 _Init_thread_footer
$LN18@clear:

; 233  : 		: _Myval(_Val), _Mycat(&_Cat)

  000b6	c7 45 b7 01 00
	00 00		 mov	 DWORD PTR $T4[rbp-105], 1
  000bd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static
  000c4	48 89 45 bf	 mov	 QWORD PTR $T4[rbp-97], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000c8	48 c7 45 37 0f
	00 00 00	 mov	 QWORD PTR $T11[rbp-81], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d0	48 c7 45 2f 00
	00 00 00	 mov	 QWORD PTR $T11[rbp-89], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000d8	c6 45 1f 00	 mov	 BYTE PTR $T11[rbp-105], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  000dc	41 b8 14 00 00
	00		 mov	 r8d, 20
  000e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@
  000e9	48 8d 4d 1f	 lea	 rcx, QWORD PTR $T11[rbp-105]
  000ed	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000f2	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  000f3	0f 28 45 b7	 movaps	 xmm0, XMMWORD PTR $T4[rbp-105]
  000f7	66 0f 7f 45 b7	 movdqa	 XMMWORD PTR $T3[rbp-105], xmm0
  000fc	4c 8d 45 1f	 lea	 r8, QWORD PTR $T11[rbp-105]
  00100	48 8d 55 b7	 lea	 rdx, QWORD PTR $T3[rbp-105]
  00104	48 8d 4d f7	 lea	 rcx, QWORD PTR $T10[rbp-105]
  00108	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  0010d	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0010e	48 8b 45 37	 mov	 rax, QWORD PTR $T11[rbp-81]
  00112	48 83 f8 10	 cmp	 rax, 16
  00116	72 59		 jb	 SHORT $LN277@clear

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00118	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0011b	48 8b 4d 1f	 mov	 rcx, QWORD PTR $T11[rbp-105]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0011f	48 83 f8 ff	 cmp	 rax, -1
  00123	76 06		 jbe	 SHORT $LN271@clear
  00125	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0012a	cc		 int	 3
$LN271@clear:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0012b	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00131	72 39		 jb	 SHORT $LN272@clear

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00133	f6 45 1f 1f	 test	 BYTE PTR $T11[rbp-105], 31
  00137	74 06		 je	 SHORT $LN273@clear
  00139	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0013e	cc		 int	 3
$LN273@clear:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0013f	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00143	48 3b c1	 cmp	 rax, rcx
  00146	72 06		 jb	 SHORT $LN274@clear
  00148	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0014d	cc		 int	 3
$LN274@clear:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0014e	48 2b c8	 sub	 rcx, rax
  00151	48 83 f9 08	 cmp	 rcx, 8
  00155	73 06		 jae	 SHORT $LN275@clear
  00157	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0015c	cc		 int	 3
$LN275@clear:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0015d	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00161	76 06		 jbe	 SHORT $LN276@clear
  00163	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00168	cc		 int	 3
$LN276@clear:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00169	48 8b c8	 mov	 rcx, rax
$LN272@clear:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0016c	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN277@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 238  : 			{	// construct with message

  00171	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00178	48 89 45 f7	 mov	 QWORD PTR $T10[rbp-105], rax

; 294  : 			_THROW_NCEE(failure, "ios_base::badbit set");

  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  00183	48 8d 4d f7	 lea	 rcx, QWORD PTR $T10[rbp-105]
  00187	e8 00 00 00 00	 call	 _CxxThrowException
  0018c	cc		 int	 3
$LN6@clear:

; 296  : 			_THROW_NCEE(failure, "ios_base::failbit set");

  0018d	ba 01 00 00 00	 mov	 edx, 1
  00192	48 8d 4d 1f	 lea	 rcx, QWORD PTR $T12[rbp-105]

; 295  : 		else if (_Mystate & _Except & failbit)

  00196	a8 02		 test	 al, 2
  00198	0f 84 c9 00 00
	00		 je	 $LN8@clear

; 296  : 			_THROW_NCEE(failure, "ios_base::failbit set");

  0019e	e8 00 00 00 00	 call	 ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code

; 237  : 			: system_error(_Errcode, _Message)

  001a3	0f 10 30	 movups	 xmm6, XMMWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  001a6	48 c7 45 0f 0f
	00 00 00	 mov	 QWORD PTR $T9[rbp-81], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  001ae	48 c7 45 07 00
	00 00 00	 mov	 QWORD PTR $T9[rbp-89], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  001b6	c6 45 f7 00	 mov	 BYTE PTR $T9[rbp-105], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  001ba	41 b8 15 00 00
	00		 mov	 r8d, 21
  001c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@
  001c7	48 8d 4d f7	 lea	 rcx, QWORD PTR $T9[rbp-105]
  001cb	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  001d0	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  001d1	66 0f 7f 75 b7	 movdqa	 XMMWORD PTR $T2[rbp-105], xmm6
  001d6	4c 8d 45 f7	 lea	 r8, QWORD PTR $T9[rbp-105]
  001da	48 8d 55 b7	 lea	 rdx, QWORD PTR $T2[rbp-105]
  001de	48 8d 4d c7	 lea	 rcx, QWORD PTR $T6[rbp-105]
  001e2	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  001e7	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  001e8	48 8b 45 0f	 mov	 rax, QWORD PTR $T9[rbp-81]
  001ec	48 83 f8 10	 cmp	 rax, 16
  001f0	72 59		 jb	 SHORT $LN564@clear

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  001f2	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  001f5	48 8b 4d f7	 mov	 rcx, QWORD PTR $T9[rbp-105]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  001f9	48 83 f8 ff	 cmp	 rax, -1
  001fd	76 06		 jbe	 SHORT $LN558@clear
  001ff	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00204	cc		 int	 3
$LN558@clear:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00205	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0020b	72 39		 jb	 SHORT $LN559@clear

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0020d	f6 45 f7 1f	 test	 BYTE PTR $T9[rbp-105], 31
  00211	74 06		 je	 SHORT $LN560@clear
  00213	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00218	cc		 int	 3
$LN560@clear:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00219	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0021d	48 3b c1	 cmp	 rax, rcx
  00220	72 06		 jb	 SHORT $LN561@clear
  00222	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00227	cc		 int	 3
$LN561@clear:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00228	48 2b c8	 sub	 rcx, rax
  0022b	48 83 f9 08	 cmp	 rcx, 8
  0022f	73 06		 jae	 SHORT $LN562@clear
  00231	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00236	cc		 int	 3
$LN562@clear:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00237	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0023b	76 06		 jbe	 SHORT $LN563@clear
  0023d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00242	cc		 int	 3
$LN563@clear:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00243	48 8b c8	 mov	 rcx, rax
$LN559@clear:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00246	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN564@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 238  : 			{	// construct with message

  0024b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00252	48 89 45 c7	 mov	 QWORD PTR $T6[rbp-105], rax

; 296  : 			_THROW_NCEE(failure, "ios_base::failbit set");

  00256	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  0025d	48 8d 4d c7	 lea	 rcx, QWORD PTR $T6[rbp-105]
  00261	e8 00 00 00 00	 call	 _CxxThrowException
  00266	cc		 int	 3
$LN8@clear:

; 297  : 		else
; 298  : 			_THROW_NCEE(failure, "ios_base::eofbit set");

  00267	e8 00 00 00 00	 call	 ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code

; 237  : 			: system_error(_Errcode, _Message)

  0026c	0f 10 30	 movups	 xmm6, XMMWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0026f	48 c7 45 0f 0f
	00 00 00	 mov	 QWORD PTR $T8[rbp-81], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00277	48 c7 45 07 00
	00 00 00	 mov	 QWORD PTR $T8[rbp-89], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0027f	c6 45 f7 00	 mov	 BYTE PTR $T8[rbp-105], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00283	41 b8 14 00 00
	00		 mov	 r8d, 20
  00289	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@
  00290	48 8d 4d f7	 lea	 rcx, QWORD PTR $T8[rbp-105]
  00294	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00299	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error

; 547  : 		: _Mybase(_Errcode, _Message)

  0029a	66 0f 7f 75 b7	 movdqa	 XMMWORD PTR $T1[rbp-105], xmm6
  0029f	4c 8d 45 f7	 lea	 r8, QWORD PTR $T8[rbp-105]
  002a3	48 8d 55 b7	 lea	 rdx, QWORD PTR $T1[rbp-105]
  002a7	48 8d 4d c7	 lea	 rcx, QWORD PTR $T5[rbp-105]
  002ab	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  002b0	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  002b1	48 8b 45 0f	 mov	 rax, QWORD PTR $T8[rbp-81]
  002b5	48 83 f8 10	 cmp	 rax, 16
  002b9	72 59		 jb	 SHORT $LN850@clear

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  002bb	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  002be	48 8b 4d f7	 mov	 rcx, QWORD PTR $T8[rbp-105]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  002c2	48 83 f8 ff	 cmp	 rax, -1
  002c6	76 06		 jbe	 SHORT $LN844@clear
  002c8	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  002cd	cc		 int	 3
$LN844@clear:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  002ce	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  002d4	72 39		 jb	 SHORT $LN845@clear

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  002d6	f6 45 f7 1f	 test	 BYTE PTR $T8[rbp-105], 31
  002da	74 06		 je	 SHORT $LN846@clear
  002dc	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  002e1	cc		 int	 3
$LN846@clear:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  002e2	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  002e6	48 3b c1	 cmp	 rax, rcx
  002e9	72 06		 jb	 SHORT $LN847@clear
  002eb	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  002f0	cc		 int	 3
$LN847@clear:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  002f1	48 2b c8	 sub	 rcx, rax
  002f4	48 83 f9 08	 cmp	 rcx, 8
  002f8	73 06		 jae	 SHORT $LN848@clear
  002fa	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  002ff	cc		 int	 3
$LN848@clear:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00300	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00304	76 06		 jbe	 SHORT $LN849@clear
  00306	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0030b	cc		 int	 3
$LN849@clear:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0030c	48 8b c8	 mov	 rcx, rax
$LN845@clear:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0030f	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN850@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 238  : 			{	// construct with message

  00314	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  0031b	48 89 45 c7	 mov	 QWORD PTR $T5[rbp-105], rax

; 297  : 		else
; 298  : 			_THROW_NCEE(failure, "ios_base::eofbit set");

  0031f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
  00326	48 8d 4d c7	 lea	 rcx, QWORD PTR $T5[rbp-105]
  0032a	e8 00 00 00 00	 call	 _CxxThrowException
  0032f	cc		 int	 3
$LN9@clear:

; 299  : 		}

  00330	48 8b 4d 3f	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-105]
  00334	48 33 cc	 xor	 rcx, rsp
  00337	e8 00 00 00 00	 call	 __security_check_cookie
  0033c	0f 28 b4 24 b0
	00 00 00	 movaps	 xmm6, XMMWORD PTR [rsp+176]
  00344	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  0034b	5d		 pop	 rbp
  0034c	c3		 ret	 0
$LN897@clear:
?clear@ios_base@std@@QEAAXH_N@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 48
$T6 = 48
$T7 = 88
$T8 = 96
$T9 = 96
$T10 = 96
$T11 = 136
$T12 = 136
__$ArrayPad$ = 168
this$ = 208
_State$ = 216
_Reraise$ = 224
?dtor$7@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$7
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR $T11[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$7
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 48
$T6 = 48
$T7 = 88
$T8 = 96
$T9 = 96
$T10 = 96
$T11 = 136
$T12 = 136
__$ArrayPad$ = 168
this$ = 208
_State$ = 216
_Reraise$ = 224
?dtor$75@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$75
  0000c	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$75@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$75
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 48
$T6 = 48
$T7 = 88
$T8 = 96
$T9 = 96
$T10 = 96
$T11 = 136
$T12 = 136
__$ArrayPad$ = 168
this$ = 208
_State$ = 216
_Reraise$ = 224
?dtor$143@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$143
  00018	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$143@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$143
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 48
$T6 = 48
$T7 = 88
$T8 = 96
$T9 = 96
$T10 = 96
$T11 = 136
$T12 = 136
__$ArrayPad$ = 168
this$ = 208
_State$ = 216
_Reraise$ = 224
?dtor$7@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$7
  00000	48 8d 8a 88 00
	00 00		 lea	 rcx, QWORD PTR $T11[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 48
$T6 = 48
$T7 = 88
$T8 = 96
$T9 = 96
$T10 = 96
$T11 = 136
$T12 = 136
__$ArrayPad$ = 168
this$ = 208
_State$ = 216
_Reraise$ = 224
?dtor$75@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$75
  0000c	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$75@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$75
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 48
$T6 = 48
$T7 = 88
$T8 = 96
$T9 = 96
$T10 = 96
$T11 = 136
$T12 = 136
__$ArrayPad$ = 168
this$ = 208
_State$ = 216
_Reraise$ = 224
?dtor$143@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA PROC	; `std::ios_base::clear'::`1'::dtor$143
  00018	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$143@?0??clear@ios_base@std@@QEAAXH_N@Z@4HA ENDP	; `std::ios_base::clear'::`1'::dtor$143
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?rdstate@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?rdstate@ios_base@std@@QEBAHXZ PROC			; std::ios_base::rdstate, COMDAT

; 315  : 		return (_Mystate);

  00000	8b 41 10	 mov	 eax, DWORD PTR [rcx+16]

; 316  : 		}

  00003	c3		 ret	 0
?rdstate@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::rdstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?good@ios_base@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?good@ios_base@std@@QEBA_NXZ PROC			; std::ios_base::good, COMDAT

; 339  : 		return (rdstate() == goodbit);

  00000	33 c0		 xor	 eax, eax
  00002	39 41 10	 cmp	 DWORD PTR [rcx+16], eax
  00005	0f 94 c0	 sete	 al

; 340  : 		}

  00008	c3		 ret	 0
?good@ios_base@std@@QEBA_NXZ ENDP			; std::ios_base::good
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?flags@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?flags@ios_base@std@@QEBAHXZ PROC			; std::ios_base::flags, COMDAT

; 378  : 		return (_Fmtfl);

  00000	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]

; 379  : 		}

  00003	c3		 ret	 0
?flags@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::flags
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?setf@ios_base@std@@QEAAHHH@Z
_TEXT	SEGMENT
this$ = 8
_Newfmtflags$ = 16
_Mask$dead$ = 24
?setf@ios_base@std@@QEAAHHH@Z PROC			; std::ios_base::setf, COMDAT

; 398  : 		ios_base::fmtflags _Oldfmtflags = _Fmtfl;

  00000	8b 41 18	 mov	 eax, DWORD PTR [rcx+24]

; 399  : 		_Fmtfl = (fmtflags)(((int)_Fmtfl & (int)~_Mask)

  00003	44 8b c0	 mov	 r8d, eax
  00006	44 33 c2	 xor	 r8d, edx
  00009	41 81 e0 00 0e
	00 00		 and	 r8d, 3584		; 00000e00H
  00010	44 33 c0	 xor	 r8d, eax
  00013	44 89 41 18	 mov	 DWORD PTR [rcx+24], r8d

; 400  : 			| ((int)_Newfmtflags & (int)_Mask & (int)_Fmtmask));
; 401  : 		return (_Oldfmtflags);
; 402  : 		}

  00017	c3		 ret	 0
?setf@ios_base@std@@QEAAHHH@Z ENDP			; std::ios_base::setf
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?precision@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?precision@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::precision, COMDAT

; 411  : 		return (_Prec);

  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]

; 412  : 		}

  00004	c3		 ret	 0
?precision@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::precision
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?width@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::width, COMDAT

; 423  : 		return (_Wide);

  00000	48 8b 41 28	 mov	 rax, QWORD PTR [rcx+40]

; 424  : 		}

  00004	c3		 ret	 0
?width@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEAA_J_J@Z
_TEXT	SEGMENT
this$ = 8
_Newwidth$ = 16
?width@ios_base@std@@QEAA_J_J@Z PROC			; std::ios_base::width, COMDAT

; 428  : 		streamsize _Oldwidth = _Wide;

  00000	48 8b 41 28	 mov	 rax, QWORD PTR [rcx+40]

; 429  : 		_Wide = _Newwidth;

  00004	48 89 51 28	 mov	 QWORD PTR [rcx+40], rdx

; 430  : 		return (_Oldwidth);
; 431  : 		}

  00008	c3		 ret	 0
?width@ios_base@std@@QEAA_J_J@Z ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ PROC		; std::ios_base::getloc, COMDAT

; 434  : 		{	// get locale

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b da	 mov	 rbx, rdx

; 435  : 		return (*_Ploc);

  00012	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 324  : 		: _Ptr(_Right._Ptr)

  00016	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0001a	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();

  0001e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00021	ff 50 08	 call	 QWORD PTR [rax+8]
  00024	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 435  : 		return (*_Ploc);

  00025	48 8b c3	 mov	 rax, rbx

; 436  : 		}

  00028	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0002c	5b		 pop	 rbx
  0002d	c3		 ret	 0
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ENDP		; std::ios_base::getloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA PROC ; `std::ios_base::getloc'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA ENDP ; `std::ios_base::getloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA PROC ; `std::ios_base::getloc'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0??getloc@ios_base@std@@QEBA?AVlocale@2@XZ@4HA ENDP ; `std::ios_base::getloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??_Gfailure@ios_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfailure@ios_base@std@@UEAAPEAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
$LN20:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 83   :     {

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 84   :         __std_exception_destroy(&_Data);

  00019	48 83 c1 08	 add	 rcx, 8
  0001d	e8 00 00 00 00	 call	 __std_exception_destroy
  00022	f6 c3 01	 test	 bl, 1
  00025	74 0d		 je	 SHORT $LN18@scalar
  00027	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0002c	48 8b cf	 mov	 rcx, rdi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN18@scalar:
  00034	48 8b c7	 mov	 rax, rdi
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??_Gfailure@ios_base@std@@UEAAPEAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??1failure@ios_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1failure@ios_base@std@@UEAA@XZ PROC			; std::ios_base::failure::~failure, COMDAT

; 83   :     {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax

; 84   :         __std_exception_destroy(&_Data);

  0000a	48 83 c1 08	 add	 rcx, 8
  0000e	e9 00 00 00 00	 jmp	 __std_exception_destroy
??1failure@ios_base@std@@UEAA@XZ ENDP			; std::ios_base::failure::~failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0failure@ios_base@std@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0failure@ios_base@std@@QEAA@AEBV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
$LN15:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
  00041	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 89 07	 mov	 QWORD PTR [rdi], rax
  0004d	48 8b c7	 mov	 rax, rdi
  00050	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0failure@ios_base@std@@QEAA@AEBV012@@Z ENDP		; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0system_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0system_error@std@@QEAA@AEBV01@@Z PROC		; std::system_error::system_error, COMDAT
$LN12:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7system_error@std@@6B@
  00041	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 89 07	 mov	 QWORD PTR [rdi], rax
  0004d	48 8b c7	 mov	 rax, rdi
  00050	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0system_error@std@@QEAA@AEBV01@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0_System_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0_System_error@std@@QEAA@AEBV01@@Z PROC		; std::_System_error::_System_error, COMDAT
$LN9:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx

; 66   :     {

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7exception@std@@6B@
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	48 8d 51 08	 lea	 rdx, QWORD PTR [rcx+8]
  0001b	33 c0		 xor	 eax, eax
  0001d	48 8b f9	 mov	 rdi, rcx

; 65   :         : _Data()

  00020	48 89 02	 mov	 QWORD PTR [rdx], rax

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 4b 08	 lea	 rcx, QWORD PTR [rbx+8]
  00027	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax
  0002b	e8 00 00 00 00	 call	 __std_exception_copy
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_System_error@std@@6B@
  00037	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003a	48 8b c7	 mov	 rax, rdi
  0003d	0f 10 43 18	 movups	 xmm0, XMMWORD PTR [rbx+24]
  00041	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00046	0f 11 47 18	 movups	 XMMWORD PTR [rdi+24], xmm0
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0_System_error@std@@QEAA@AEBV01@@Z ENDP		; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?dec@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?dec@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::dec, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 399  : 		_Fmtfl = (fmtflags)(((int)_Fmtfl & (int)~_Mask)

  00000	81 61 18 ff f3
	ff ff		 and	 DWORD PTR [rcx+24], -3073 ; fffffffffffff3ffH
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 222  : 	return (_Iosbase);

  00007	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 399  : 		_Fmtfl = (fmtflags)(((int)_Fmtfl & (int)~_Mask)

  0000a	81 49 18 00 02
	00 00		 or	 DWORD PTR [rcx+24], 512	; 00000200H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 223  : 	}

  00011	c3		 ret	 0
?dec@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::dec
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?hex@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?hex@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::hex, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 399  : 		_Fmtfl = (fmtflags)(((int)_Fmtfl & (int)~_Mask)

  00000	81 61 18 ff f9
	ff ff		 and	 DWORD PTR [rcx+24], -1537 ; fffffffffffff9ffH
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 240  : 	return (_Iosbase);

  00007	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 399  : 		_Fmtfl = (fmtflags)(((int)_Fmtfl & (int)~_Mask)

  0000a	81 49 18 00 08
	00 00		 or	 DWORD PTR [rcx+24], 2048 ; 00000800H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 241  : 	}

  00011	c3		 ret	 0
?hex@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::hex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ??0Win32Error@wwatch@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Win32Error@wwatch@@QEAA@XZ PROC			; wwatch::Win32Error::Win32Error, COMDAT

; 16   :   Win32Error() : code_(0) {}

  00000	33 c0		 xor	 eax, eax
  00002	89 01		 mov	 DWORD PTR [rcx], eax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00004	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00008	48 c7 41 20 07
	00 00 00	 mov	 QWORD PTR [rcx+32], 7
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00010	66 89 41 08	 mov	 WORD PTR [rcx+8], ax
; File c:\users\alist_000\cppmisc\wwatch.cc

; 16   :   Win32Error() : code_(0) {}

  00014	48 8b c1	 mov	 rax, rcx
  00017	c3		 ret	 0
??0Win32Error@wwatch@@QEAA@XZ ENDP			; wwatch::Win32Error::Win32Error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ?message@Win32Error@wwatch@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ
_TEXT	SEGMENT
this$ = 8
?message@Win32Error@wwatch@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ PROC ; wwatch::Win32Error::message, COMDAT

; 19   :   const std::wstring &message() const { return message_; }

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]
  00004	c3		 ret	 0
?message@Win32Error@wwatch@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ ENDP ; wwatch::Win32Error::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ?code@Win32Error@wwatch@@QEBAAEBIXZ
_TEXT	SEGMENT
this$ = 8
?code@Win32Error@wwatch@@QEBAAEBIXZ PROC		; wwatch::Win32Error::code, COMDAT

; 20   :   const unsigned &code() const { return code_; }

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
?code@Win32Error@wwatch@@QEBAAEBIXZ ENDP		; wwatch::Win32Error::code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
__$ReturnUdt$ = 96
?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ PROC	; wwatch::Win32Error::GetLastWin32Error, COMDAT

; 21   :   static Win32Error GetLastWin32Error() {

$LN269:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 c7 44 24 48
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  00013	48 89 5c 24 68	 mov	 QWORD PTR [rsp+104], rbx
  00018	48 89 74 24 70	 mov	 QWORD PTR [rsp+112], rsi
  0001d	48 8b f9	 mov	 rdi, rcx
  00020	33 f6		 xor	 esi, esi
  00022	89 74 24 40	 mov	 DWORD PTR $T1[rsp], esi

; 16   :   Win32Error() : code_(0) {}

  00026	89 31		 mov	 DWORD PTR [rcx], esi
  00028	48 8d 59 08	 lea	 rbx, QWORD PTR [rcx+8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0002c	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00034	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00038	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0003d	72 05		 jb	 SHORT $LN121@GetLastWin
  0003f	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00042	eb 03		 jmp	 SHORT $LN122@GetLastWin
$LN121@GetLastWin:
  00044	48 8b c3	 mov	 rax, rbx
$LN122@GetLastWin:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00047	66 89 30	 mov	 WORD PTR [rax], si
  0004a	c7 44 24 40 01
	00 00 00	 mov	 DWORD PTR $T1[rsp], 1
; File c:\users\alist_000\cppmisc\wwatch.cc

; 24   :     error.code_ = ::GetLastError();

  00052	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00058	89 07		 mov	 DWORD PTR [rdi], eax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1758 : 		if (_Newsize <= this->_Mysize())

  0005a	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  0005e	48 3d 00 02 00
	00		 cmp	 rax, 512		; 00000200H
  00064	72 20		 jb	 SHORT $LN135@GetLastWin

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00066	48 c7 43 10 00
	02 00 00	 mov	 QWORD PTR [rbx+16], 512	; 00000200H

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006e	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00073	72 05		 jb	 SHORT $LN168@GetLastWin
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00075	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00078	eb 03		 jmp	 SHORT $LN169@GetLastWin
$LN168@GetLastWin:
  0007a	48 8b c3	 mov	 rax, rbx
$LN169@GetLastWin:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0007d	66 89 b0 00 04
	00 00		 mov	 WORD PTR [rax+1024], si
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1760 : 		else

  00084	eb 13		 jmp	 SHORT $LN136@GetLastWin
$LN135@GetLastWin:

; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  00086	45 33 c0	 xor	 r8d, r8d
  00089	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  0008e	48 2b d0	 sub	 rdx, rax
  00091	48 8b cb	 mov	 rcx, rbx
  00094	e8 00 00 00 00	 call	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
$LN136@GetLastWin:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00099	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0009e	72 05		 jb	 SHORT $LN204@GetLastWin
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000a0	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  000a3	eb 03		 jmp	 SHORT $LN205@GetLastWin
$LN204@GetLastWin:
  000a5	48 8b c3	 mov	 rax, rbx
$LN205@GetLastWin:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 27   :         ::FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM, NULL, error.code_,

  000a8	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  000ad	c7 44 24 28 00
	02 00 00	 mov	 DWORD PTR [rsp+40], 512	; 00000200H
  000b5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ba	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  000c0	44 8b 07	 mov	 r8d, DWORD PTR [rdi]
  000c3	33 d2		 xor	 edx, edx
  000c5	b9 00 10 00 00	 mov	 ecx, 4096		; 00001000H
  000ca	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FormatMessageW
  000d0	8b d0		 mov	 edx, eax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1758 : 		if (_Newsize <= this->_Mysize())

  000d2	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  000d6	48 3b d0	 cmp	 rdx, rax
  000d9	77 14		 ja	 SHORT $LN215@GetLastWin

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000db	48 89 53 10	 mov	 QWORD PTR [rbx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000df	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000e4	72 03		 jb	 SHORT $LN249@GetLastWin
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000e6	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN249@GetLastWin:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000e9	66 89 34 53	 mov	 WORD PTR [rbx+rdx*2], si
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1760 : 		else

  000ed	eb 0e		 jmp	 SHORT $LN268@GetLastWin
$LN215@GetLastWin:

; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  000ef	45 33 c0	 xor	 r8d, r8d
  000f2	48 2b d0	 sub	 rdx, rax
  000f5	48 8b cb	 mov	 rcx, rbx
  000f8	e8 00 00 00 00	 call	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
$LN268@GetLastWin:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 31   :     return error;

  000fd	48 8b c7	 mov	 rax, rdi

; 32   :   }

  00100	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  00105	48 8b 74 24 70	 mov	 rsi, QWORD PTR [rsp+112]
  0010a	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010e	5f		 pop	 rdi
  0010f	c3		 ret	 0
  00110	cc		 int	 3
?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ ENDP	; wwatch::Win32Error::GetLastWin32Error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
__$ReturnUdt$ = 96
?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA PROC ; `wwatch::Win32Error::GetLastWin32Error'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 40	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN4@dtor$0
  00013	83 65 40 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Win32Error@wwatch@@QEAA@XZ
$LN4@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA ENDP ; `wwatch::Win32Error::GetLastWin32Error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
__$ReturnUdt$ = 96
?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA PROC ; `wwatch::Win32Error::GetLastWin32Error'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 40	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN4@dtor$0
  00013	83 65 40 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1Win32Error@wwatch@@QEAA@XZ
$LN4@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ@4HA ENDP ; `wwatch::Win32Error::GetLastWin32Error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??1Win32Error@wwatch@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Win32Error@wwatch@@QEAA@XZ PROC			; wwatch::Win32Error::~Win32Error, COMDAT
$LN123:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000a	48 8d 59 08	 lea	 rbx, QWORD PTR [rcx+8]
  0000e	49 83 f8 08	 cmp	 r8, 8
  00012	72 0e		 jb	 SHORT $LN9@Win32Error

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00014	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00017	49 ff c0	 inc	 r8
  0001a	48 8b cb	 mov	 rcx, rbx
  0001d	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN9@Win32Error:

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00022	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00024	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002c	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00030	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00035	72 0c		 jb	 SHORT $LN111@Win32Error
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00037	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0003a	66 89 08	 mov	 WORD PTR [rax], cx
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5b		 pop	 rbx
  00042	c3		 ret	 0
$LN111@Win32Error:
  00043	66 89 0b	 mov	 WORD PTR [rbx], cx
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5b		 pop	 rbx
  0004b	c3		 ret	 0
??1Win32Error@wwatch@@QEAA@XZ ENDP			; wwatch::Win32Error::~Win32Error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0Win32Error@wwatch@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0Win32Error@wwatch@@QEAA@$$QEAV01@@Z PROC		; wwatch::Win32Error::Win32Error, COMDAT
$LN147:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	8b 02		 mov	 eax, DWORD PTR [rdx]
  00008	48 8b d9	 mov	 rbx, rcx
  0000b	89 01		 mov	 DWORD PTR [rcx], eax
  0000d	48 83 c2 08	 add	 rdx, 8
  00011	48 83 c1 08	 add	 rcx, 8

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00015	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00017	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001f	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00023	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  00026	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
  0002b	48 8b c3	 mov	 rax, rbx
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5b		 pop	 rbx
  00033	c3		 ret	 0
??0Win32Error@wwatch@@QEAA@$$QEAV01@@Z ENDP		; wwatch::Win32Error::Win32Error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z
_TEXT	SEGMENT
this$GSCopy$ = 72
$T1 = 80
$T2 = 88
__$ArrayPad$ = 128
this$ = 160
path$ = 168
bufferSize$dead$ = 176
??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z PROC ; wwatch::FileWatcher::FileWatcher, COMDAT

; 42   :   FileWatcher(const std::wstring &path, unsigned bufferSize = 4096)

$LN142:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000b	49 c7 43 a8 fe
	ff ff ff	 mov	 QWORD PTR [r11-88], -2
  00013	49 89 5b 18	 mov	 QWORD PTR [r11+24], rbx
  00017	49 89 73 20	 mov	 QWORD PTR [r11+32], rsi
  0001b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00022	48 33 c4	 xor	 rax, rsp
  00025	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002d	48 8b da	 mov	 rbx, rdx
  00030	48 8b f9	 mov	 rdi, rcx
  00033	49 89 4b b0	 mov	 QWORD PTR [r11-80], rcx

; 43   :       : bufferSize_(bufferSize), iterations_(0) {

  00037	48 8d 71 08	 lea	 rsi, QWORD PTR [rcx+8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  0003b	48 c7 06 00 00
	00 00		 mov	 QWORD PTR [rsi], 0
; File c:\users\alist_000\cppmisc\wwatch.cc

; 43   :       : bufferSize_(bufferSize), iterations_(0) {

  00042	c7 41 10 00 10
	00 00		 mov	 DWORD PTR [rcx+16], 4096 ; 00001000H
  00049	48 c7 41 18 00
	00 00 00	 mov	 QWORD PTR [rcx+24], 0

; 44   :     buffer_ = std::unique_ptr<char>(new char[bufferSize_]);

  00051	b9 00 10 00 00	 mov	 ecx, 4096		; 00001000H
  00056	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1379 : 		if (this != &_Right)

  0005b	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T1[rsp]
  00060	48 3b f1	 cmp	 rsi, rcx
  00063	74 0d		 je	 SHORT $LN74@FileWatche

; 1412 : 		return (this->_Myptr());

  00065	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]

; 1430 : 		this->_Myptr() = _Ptr;

  00068	48 89 06	 mov	 QWORD PTR [rsi], rax

; 1431 : 		if (_Old != pointer())

  0006b	48 85 c9	 test	 rcx, rcx
  0006e	74 14		 je	 SHORT $LN114@FileWatche

; 1396 : 		if (get() != pointer())

  00070	eb 08		 jmp	 SHORT $LN141@FileWatche
$LN74@FileWatche:
  00072	48 85 c0	 test	 rax, rax
  00075	74 0d		 je	 SHORT $LN114@FileWatche

; 1195 : 		delete _Ptr;

  00077	48 8b c8	 mov	 rcx, rax
$LN141@FileWatche:
  0007a	ba 01 00 00 00	 mov	 edx, 1
  0007f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN114@FileWatche:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00084	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00089	72 03		 jb	 SHORT $LN133@FileWatche
  0008b	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN133@FileWatche:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 45   :     directory_ =

  0008e	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00097	c7 44 24 28 00
	00 00 02	 mov	 DWORD PTR [rsp+40], 33554432 ; 02000000H
  0009f	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR [rsp+32], 3
  000a7	45 33 c9	 xor	 r9d, r9d
  000aa	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  000ae	45 8d 41 07	 lea	 r8d, QWORD PTR [r9+7]
  000b2	48 8b cb	 mov	 rcx, rbx
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateFileW
  000bb	48 89 07	 mov	 QWORD PTR [rdi], rax

; 46   :         ::CreateFileW(path.data(), FILE_LIST_DIRECTORY,
; 47   :                       FILE_SHARE_WRITE | FILE_SHARE_READ | FILE_SHARE_DELETE,
; 48   :                       NULL, OPEN_EXISTING, FILE_FLAG_BACKUP_SEMANTICS, NULL);
; 49   :     if (directory_ == INVALID_HANDLE_VALUE) {

  000be	48 83 f8 ff	 cmp	 rax, -1
  000c2	75 1c		 jne	 SHORT $LN2@FileWatche

; 50   :       throw Win32Error::GetLastWin32Error();

  000c4	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T2[rsp]
  000c9	e8 00 00 00 00	 call	 ?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ ; wwatch::Win32Error::GetLastWin32Error
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI1?AVWin32Error@wwatch@@
  000d5	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T2[rsp]
  000da	e8 00 00 00 00	 call	 _CxxThrowException
  000df	90		 npad	 1
$LN2@FileWatche:

; 51   :     }
; 52   :   }

  000e0	48 8b c7	 mov	 rax, rdi
  000e3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000eb	48 33 cc	 xor	 rcx, rsp
  000ee	e8 00 00 00 00	 call	 __security_check_cookie
  000f3	4c 8d 9c 24 90
	00 00 00	 lea	 r11, QWORD PTR [rsp+144]
  000fb	49 8b 5b 20	 mov	 rbx, QWORD PTR [r11+32]
  000ff	49 8b 73 28	 mov	 rsi, QWORD PTR [r11+40]
  00103	49 8b e3	 mov	 rsp, r11
  00106	5f		 pop	 rdi
  00107	c3		 ret	 0
$LN140@FileWatche:
??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z ENDP ; wwatch::FileWatcher::FileWatcher
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 72
$T1 = 80
$T2 = 88
__$ArrayPad$ = 128
this$ = 160
path$ = 168
bufferSize$dead$ = 176
?dtor$0@?0???0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z@4HA PROC ; `wwatch::FileWatcher::FileWatcher'::`1'::dtor$0
  00000	48 8b 8a 48 00
	00 00		 mov	 rcx, QWORD PTR this$GSCopy$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ ; std::unique_ptr<char,std::default_delete<char> >::~unique_ptr<char,std::default_delete<char> >
?dtor$0@?0???0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z@4HA ENDP ; `wwatch::FileWatcher::FileWatcher'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 72
$T1 = 80
$T2 = 88
__$ArrayPad$ = 128
this$ = 160
path$ = 168
bufferSize$dead$ = 176
?dtor$0@?0???0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z@4HA PROC ; `wwatch::FileWatcher::FileWatcher'::`1'::dtor$0
  00000	48 8b 8a 48 00
	00 00		 mov	 rcx, QWORD PTR this$GSCopy$[rdx]
  00007	48 83 c1 08	 add	 rcx, 8
  0000b	e9 00 00 00 00	 jmp	 ??1?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ ; std::unique_ptr<char,std::default_delete<char> >::~unique_ptr<char,std::default_delete<char> >
?dtor$0@?0???0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z@4HA ENDP ; `wwatch::FileWatcher::FileWatcher'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0Win32Error@wwatch@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0Win32Error@wwatch@@QEAA@AEBV01@@Z PROC		; wwatch::Win32Error::Win32Error, COMDAT
$LN148:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	8b 02		 mov	 eax, DWORD PTR [rdx]
  00008	48 8b d9	 mov	 rbx, rcx
  0000b	89 01		 mov	 DWORD PTR [rcx], eax
  0000d	48 83 c2 08	 add	 rdx, 8
  00011	48 83 c1 08	 add	 rcx, 8

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00015	33 c0		 xor	 eax, eax

; 776  : 		assign(_Right, 0, npos);

  00017	49 83 c9 ff	 or	 r9, -1
  0001b	45 33 c0	 xor	 r8d, r8d

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0001e	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00026	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0002a	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00032	48 8b c3	 mov	 rax, rbx
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5b		 pop	 rbx
  0003a	c3		 ret	 0
??0Win32Error@wwatch@@QEAA@AEBV01@@Z ENDP		; wwatch::Win32Error::Win32Error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\wwatch.cc
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
args$ = 72
?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z PROC ; wwatch::concat

; 76   : std::wstring concat(const std::vector<std::wstring> &args) {

$LN204:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 28
	fe ff ff ff	 mov	 QWORD PTR $T2[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	48 89 74 24 50	 mov	 QWORD PTR [rsp+80], rsi
  0001d	48 8b f1	 mov	 rsi, rcx
  00020	33 c9		 xor	 ecx, ecx
  00022	89 4c 24 20	 mov	 DWORD PTR $T1[rsp], ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00026	48 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [rsi+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002e	48 89 4e 10	 mov	 QWORD PTR [rsi+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00032	48 83 7e 18 08	 cmp	 QWORD PTR [rsi+24], 8
  00037	72 05		 jb	 SHORT $LN122@concat
  00039	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  0003c	eb 03		 jmp	 SHORT $LN123@concat
$LN122@concat:
  0003e	48 8b c6	 mov	 rax, rsi
$LN123@concat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00041	66 89 08	 mov	 WORD PTR [rax], cx
  00044	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR $T1[rsp], 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 46   : 		: _Ptr(_Parg)

  0004c	48 8b 7a 08	 mov	 rdi, QWORD PTR [rdx+8]
; File c:\users\alist_000\cppmisc\wwatch.cc

; 78   :   for (const auto &arg : args) {

  00050	48 8b 1a	 mov	 rbx, QWORD PTR [rdx]
  00053	48 3b df	 cmp	 rbx, rdi
  00056	74 31		 je	 SHORT $LN203@concat
  00058	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@concat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00060	41 b8 01 00 00
	00		 mov	 r8d, 1
  00066	48 8b ce	 mov	 rcx, rsi
  00069	e8 00 00 00 00	 call	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append

; 1060 : 		return (append(_Right, 0, npos));

  0006e	49 83 c9 ff	 or	 r9, -1
  00072	45 33 c0	 xor	 r8d, r8d
  00075	48 8b d3	 mov	 rdx, rbx
  00078	48 8b ce	 mov	 rcx, rsi
  0007b	e8 00 00 00 00	 call	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 112  : 		++_Ptr;

  00080	48 83 c3 20	 add	 rbx, 32			; 00000020H
; File c:\users\alist_000\cppmisc\wwatch.cc

; 78   :   for (const auto &arg : args) {

  00084	48 3b df	 cmp	 rbx, rdi
  00087	75 d7		 jne	 SHORT $LL4@concat
$LN203@concat:

; 79   :     result += L" ";
; 80   :     result += arg;
; 81   :   }
; 82   :   return result;

  00089	48 8b c6	 mov	 rax, rsi

; 83   : }

  0008c	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00091	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00096	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009a	5f		 pop	 rdi
  0009b	c3		 ret	 0
  0009c	cc		 int	 3
?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z ENDP ; wwatch::concat
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
args$ = 72
?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA PROC ; `wwatch::concat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN7@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA ENDP ; `wwatch::concat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
args$ = 72
?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA PROC ; `wwatch::concat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN7@dtor$0
  00013	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00017	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$0:
  00020	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z@4HA ENDP ; `wwatch::concat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
_TEXT	SEGMENT
str$ = 48
suffix$ = 56
?endsWith@wwatch@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@0@Z PROC ; wwatch::endsWith

; 85   : bool endsWith(const std::wstring &str, const std::wstring &suffix) {

$LN145:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b c2	 mov	 r8, rdx

; 86   :   return str.size() >= suffix.size() &&

  00007	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  0000b	4d 8b 48 10	 mov	 r9, QWORD PTR [r8+16]
  0000f	49 3b d1	 cmp	 rdx, r9
  00012	72 40		 jb	 SHORT $LN3@endsWith
  00014	48 8b c2	 mov	 rax, rdx
  00017	49 2b c1	 sub	 rax, r9
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2266 : 		if (this->_Mysize() < _Off)

  0001a	48 3b d0	 cmp	 rdx, rax
  0001d	72 3c		 jb	 SHORT $LN143@endsWith

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0001f	49 83 78 18 08	 cmp	 QWORD PTR [r8+24], 8
  00024	72 03		 jb	 SHORT $LN103@endsWith
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00026	4d 8b 00	 mov	 r8, QWORD PTR [r8]
$LN103@endsWith:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00029	48 2b d0	 sub	 rdx, rax

; 2110 : 		if (_Size <= _Max_effective_size)

  0002c	4c 3b ca	 cmp	 r9, rdx
  0002f	49 0f 46 d1	 cmovbe	 rdx, r9

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00033	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00038	72 03		 jb	 SHORT $LN134@endsWith
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN134@endsWith:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),

  0003d	48 8d 0c 41	 lea	 rcx, QWORD PTR [rcx+rax*2]
  00041	e8 00 00 00 00	 call	 ?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare
; File c:\users\alist_000\cppmisc\wwatch.cc

; 86   :   return str.size() >= suffix.size() &&

  00046	85 c0		 test	 eax, eax
  00048	75 0a		 jne	 SHORT $LN3@endsWith
  0004a	b8 01 00 00 00	 mov	 eax, 1

; 88   : }

  0004f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00053	c3		 ret	 0
$LN3@endsWith:

; 86   :   return str.size() >= suffix.size() &&

  00054	33 c0		 xor	 eax, eax

; 88   : }

  00056	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005a	c3		 ret	 0
$LN143@endsWith:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2278 : 		_Xout_of_range("invalid string position");

  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00062	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00067	cc		 int	 3
$LN142@endsWith:
?endsWith@wwatch@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@0@Z ENDP ; wwatch::endsWith
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\users\alist_000\cppmisc\wwatch.cc
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
str$GSCopy$ = 56
current$ = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 176
str$ = 184
delimiter$dead$ = 192
?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z PROC ; wwatch::split

; 90   : std::vector<std::wstring> split(std::wstring str, wchar_t delimiter) {

$LN948:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 8b ec	 mov	 rbp, rsp
  0000f	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00013	48 c7 45 b8 fe
	ff ff ff	 mov	 QWORD PTR $T2[rbp-112], -2
  0001b	48 89 9c 24 c0
	00 00 00	 mov	 QWORD PTR [rsp+192], rbx
  00023	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002a	48 33 c4	 xor	 rax, rsp
  0002d	48 89 45 f0	 mov	 QWORD PTR __$ArrayPad$[rbp-112], rax
  00031	4c 8b f2	 mov	 r14, rdx
  00034	4c 8b e1	 mov	 r12, rcx
  00037	48 89 4d c0	 mov	 QWORD PTR __$ReturnUdt$GSCopy$[rbp-112], rcx
  0003b	48 89 55 c8	 mov	 QWORD PTR str$GSCopy$[rbp-112], rdx
  0003f	45 33 ed	 xor	 r13d, r13d
  00042	44 89 6d b0	 mov	 DWORD PTR $T1[rbp-112], r13d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 480  : 		_Myfirst = pointer();

  00046	4c 89 29	 mov	 QWORD PTR [rcx], r13

; 481  : 		_Mylast = pointer();

  00049	4c 89 69 08	 mov	 QWORD PTR [rcx+8], r13

; 482  : 		_Myend = pointer();

  0004d	4c 89 69 10	 mov	 QWORD PTR [rcx+16], r13
  00051	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR $T1[rbp-112], 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00058	48 c7 45 e8 07
	00 00 00	 mov	 QWORD PTR current$[rbp-88], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00060	41 8b cd	 mov	 ecx, r13d
  00063	48 89 4d e0	 mov	 QWORD PTR current$[rbp-96], rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00067	66 44 89 6d d0	 mov	 WORD PTR current$[rbp-112], r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006c	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
  00070	48 83 f8 08	 cmp	 rax, 8
  00074	72 05		 jb	 SHORT $LN165@split
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00076	48 8b 1a	 mov	 rbx, QWORD PTR [rdx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00079	eb 03		 jmp	 SHORT $LN166@split
$LN165@split:
  0007b	48 8b da	 mov	 rbx, rdx
$LN166@split:
  0007e	48 83 f8 08	 cmp	 rax, 8
  00082	72 03		 jb	 SHORT $LN199@split
  00084	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
$LN199@split:

; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));

  00087	49 8b 46 10	 mov	 rax, QWORD PTR [r14+16]
  0008b	48 8d 3c 42	 lea	 rdi, QWORD PTR [rdx+rax*2]

; 214  : 		return (_Ptr == _Right._Ptr);

  0008f	48 3b df	 cmp	 rbx, rdi
; File c:\users\alist_000\cppmisc\wwatch.cc

; 93   :   for (auto const &c : str) {

  00092	0f 84 f6 00 00
	00		 je	 $LN940@split
  00098	48 ba fe ff ff
	ff ff ff ff 7f	 mov	 rdx, 9223372036854775806 ; 7ffffffffffffffeH
$LL4@split:

; 94   :     if (c == delimiter) {

  000a2	44 0f b7 3b	 movzx	 r15d, WORD PTR [rbx]
  000a6	66 41 83 ff 2c	 cmp	 r15w, 44		; 0000002cH
  000ab	75 27		 jne	 SHORT $LN5@split

; 95   :       result.push_back(current);

  000ad	48 8d 55 d0	 lea	 rdx, QWORD PTR current$[rbp-112]
  000b1	49 8b cc	 mov	 rcx, r12
  000b4	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000b9	4c 89 6d e0	 mov	 QWORD PTR current$[rbp-96], r13

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000bd	48 8d 45 d0	 lea	 rax, QWORD PTR current$[rbp-112]
  000c1	48 83 7d e8 08	 cmp	 QWORD PTR current$[rbp-88], 8
  000c6	48 0f 43 45 d0	 cmovae	 rax, QWORD PTR current$[rbp-112]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000cb	66 44 89 28	 mov	 WORD PTR [rax], r13w
; File c:\users\alist_000\cppmisc\wwatch.cc

; 97   :       continue;

  000cf	e9 83 00 00 00	 jmp	 $LN944@split
$LN5@split:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1107 : 		if (npos - this->_Mysize() <= _Count)

  000d4	48 83 c8 ff	 or	 rax, -1
  000d8	48 2b c1	 sub	 rax, rcx
  000db	48 83 f8 01	 cmp	 rax, 1
  000df	0f 86 9c 00 00
	00		 jbe	 $LN931@split

; 1108 : 			_Xlen();	// result too long
; 1109 : 
; 1110 : 		const size_type _Num = this->_Mysize() + _Count;

  000e5	48 8d 71 01	 lea	 rsi, QWORD PTR [rcx+1]

; 2220 : 		if (max_size() < _Newsize)

  000e9	48 3b f2	 cmp	 rsi, rdx
  000ec	0f 87 82 00 00
	00		 ja	 $LN932@split

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  000f2	48 39 75 e8	 cmp	 QWORD PTR current$[rbp-88], rsi
  000f6	73 11		 jae	 SHORT $LN299@split

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  000f8	4c 8b c1	 mov	 r8, rcx
  000fb	48 8b d6	 mov	 rdx, rsi
  000fe	48 8d 4d d0	 lea	 rcx, QWORD PTR current$[rbp-112]
  00102	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
  00107	eb 1b		 jmp	 SHORT $LN945@split
$LN299@split:

; 2224 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)
; 2225 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2226 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2227 : 		else if (_Newsize == 0)

  00109	48 85 f6	 test	 rsi, rsi
  0010c	75 1f		 jne	 SHORT $LN947@split

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0010e	4c 89 6d e0	 mov	 QWORD PTR current$[rbp-96], r13

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00112	48 8d 45 d0	 lea	 rax, QWORD PTR current$[rbp-112]
  00116	48 83 7d e8 08	 cmp	 QWORD PTR current$[rbp-88], 8
  0011b	48 0f 43 45 d0	 cmovae	 rax, QWORD PTR current$[rbp-112]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00120	66 44 89 28	 mov	 WORD PTR [rax], r13w
$LN945@split:
  00124	48 8b 4d e0	 mov	 rcx, QWORD PTR current$[rbp-96]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00128	48 85 f6	 test	 rsi, rsi

; 1111 : 		if (0 < _Count && _Grow(_Num))

  0012b	74 2e		 je	 SHORT $LN2@split
$LN947@split:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0012d	48 8d 45 d0	 lea	 rax, QWORD PTR current$[rbp-112]
  00131	48 83 7d e8 08	 cmp	 QWORD PTR current$[rbp-88], 8
  00136	48 0f 43 45 d0	 cmovae	 rax, QWORD PTR current$[rbp-112]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0013b	66 44 89 3c 48	 mov	 WORD PTR [rax+rcx*2], r15w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00140	48 89 75 e0	 mov	 QWORD PTR current$[rbp-96], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00144	48 8d 45 d0	 lea	 rax, QWORD PTR current$[rbp-112]
  00148	48 83 7d e8 08	 cmp	 QWORD PTR current$[rbp-88], 8
  0014d	48 0f 43 45 d0	 cmovae	 rax, QWORD PTR current$[rbp-112]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00152	66 44 89 2c 70	 mov	 WORD PTR [rax+rsi*2], r13w
$LN944@split:
  00157	48 8b 4d e0	 mov	 rcx, QWORD PTR current$[rbp-96]
$LN2@split:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 116  : 		++_Ptr;

  0015b	48 83 c3 02	 add	 rbx, 2

; 214  : 		return (_Ptr == _Right._Ptr);

  0015f	48 3b df	 cmp	 rbx, rdi
; File c:\users\alist_000\cppmisc\wwatch.cc

; 93   :   for (auto const &c : str) {

  00162	48 ba fe ff ff
	ff ff ff ff 7f	 mov	 rdx, 9223372036854775806 ; 7ffffffffffffffeH
  0016c	0f 85 30 ff ff
	ff		 jne	 $LL4@split
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 217  :             if (*_S1 != *_S2)

  00172	eb 1a		 jmp	 SHORT $LN940@split
$LN932@split:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2261 : 		_Xlength_error("string too long");

  00174	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0017b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00180	cc		 int	 3
$LN931@split:
  00181	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00188	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0018d	cc		 int	 3
$LN940@split:

; 2101 : 		if (_Left_size > _Right_size)

  0018e	48 85 c9	 test	 rcx, rcx
  00191	74 0d		 je	 SHORT $LN6@split
; File c:\users\alist_000\cppmisc\wwatch.cc

; 102  :     result.push_back(current);

  00193	48 8d 55 d0	 lea	 rdx, QWORD PTR current$[rbp-112]
  00197	49 8b cc	 mov	 rcx, r12
  0019a	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
  0019f	90		 npad	 1
$LN6@split:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  001a0	48 bb ff ff ff
	ff ff ff ff 7f	 mov	 rbx, 9223372036854775807 ; 7fffffffffffffffH
  001aa	48 8b 45 e8	 mov	 rax, QWORD PTR current$[rbp-88]
  001ae	48 83 f8 08	 cmp	 rax, 8
  001b2	72 5c		 jb	 SHORT $LN748@split

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  001b4	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  001b7	48 8b 4d d0	 mov	 rcx, QWORD PTR current$[rbp-112]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  001bb	48 3b c3	 cmp	 rax, rbx
  001be	76 06		 jbe	 SHORT $LN742@split
  001c0	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001c5	cc		 int	 3
$LN742@split:

; 95   : 	const size_t _User_size = _Count * _Sz;

  001c6	48 03 c0	 add	 rax, rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  001c9	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  001cf	72 39		 jb	 SHORT $LN743@split

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  001d1	f6 45 d0 1f	 test	 BYTE PTR current$[rbp-112], 31
  001d5	74 06		 je	 SHORT $LN744@split
  001d7	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001dc	cc		 int	 3
$LN744@split:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  001dd	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  001e1	48 3b c1	 cmp	 rax, rcx
  001e4	72 06		 jb	 SHORT $LN745@split
  001e6	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001eb	cc		 int	 3
$LN745@split:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  001ec	48 2b c8	 sub	 rcx, rax
  001ef	48 83 f9 08	 cmp	 rcx, 8
  001f3	73 06		 jae	 SHORT $LN746@split
  001f5	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  001fa	cc		 int	 3
$LN746@split:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  001fb	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  001ff	76 06		 jbe	 SHORT $LN747@split
  00201	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00206	cc		 int	 3
$LN747@split:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00207	48 8b c8	 mov	 rcx, rax
$LN743@split:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0020a	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  0020f	90		 npad	 1
$LN748@split:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00210	49 8b 46 18	 mov	 rax, QWORD PTR [r14+24]
  00214	48 83 f8 08	 cmp	 rax, 8
  00218	72 59		 jb	 SHORT $LN883@split

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0021a	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0021d	49 8b 0e	 mov	 rcx, QWORD PTR [r14]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00220	48 3b c3	 cmp	 rax, rbx
  00223	76 06		 jbe	 SHORT $LN877@split
  00225	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0022a	cc		 int	 3
$LN877@split:

; 95   : 	const size_t _User_size = _Count * _Sz;

  0022b	48 03 c0	 add	 rax, rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0022e	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00234	72 38		 jb	 SHORT $LN878@split

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00236	f6 c1 1f	 test	 cl, 31
  00239	74 06		 je	 SHORT $LN879@split
  0023b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00240	cc		 int	 3
$LN879@split:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00241	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00245	48 3b c1	 cmp	 rax, rcx
  00248	72 06		 jb	 SHORT $LN880@split
  0024a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0024f	cc		 int	 3
$LN880@split:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00250	48 2b c8	 sub	 rcx, rax
  00253	48 83 f9 08	 cmp	 rcx, 8
  00257	73 06		 jae	 SHORT $LN881@split
  00259	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0025e	cc		 int	 3
$LN881@split:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0025f	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00263	76 06		 jbe	 SHORT $LN882@split
  00265	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0026a	cc		 int	 3
$LN882@split:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0026b	48 8b c8	 mov	 rcx, rax
$LN878@split:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0026e	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN883@split:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00273	49 c7 46 18 07
	00 00 00	 mov	 QWORD PTR [r14+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0027b	4d 89 6e 10	 mov	 QWORD PTR [r14+16], r13

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0027f	49 83 7e 18 08	 cmp	 QWORD PTR [r14+24], 8
  00284	72 03		 jb	 SHORT $LN918@split
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00286	4d 8b 36	 mov	 r14, QWORD PTR [r14]
$LN918@split:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00289	66 45 89 2e	 mov	 WORD PTR [r14], r13w
; File c:\users\alist_000\cppmisc\wwatch.cc

; 103  :   return result;

  0028d	49 8b c4	 mov	 rax, r12

; 104  : }

  00290	48 8b 4d f0	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-112]
  00294	48 33 cc	 xor	 rcx, rsp
  00297	e8 00 00 00 00	 call	 __security_check_cookie
  0029c	48 8b 9c 24 c0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+192]
  002a4	48 83 c4 70	 add	 rsp, 112		; 00000070H
  002a8	41 5f		 pop	 r15
  002aa	41 5e		 pop	 r14
  002ac	41 5d		 pop	 r13
  002ae	41 5c		 pop	 r12
  002b0	5f		 pop	 rdi
  002b1	5e		 pop	 rsi
  002b2	5d		 pop	 rbp
  002b3	c3		 ret	 0
  002b4	cc		 int	 3
$LN943@split:
?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z ENDP ; wwatch::split
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
str$GSCopy$ = 56
current$ = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 176
str$ = 184
delimiter$dead$ = 192
?dtor$0@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA PROC ; `wwatch::split'::`1'::dtor$0
  00000	48 8b 8a 38 00
	00 00		 mov	 rcx, QWORD PTR str$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA ENDP ; `wwatch::split'::`1'::dtor$0
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
str$GSCopy$ = 56
current$ = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 176
str$ = 184
delimiter$dead$ = 192
?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA PROC ; `wwatch::split'::`1'::dtor$1
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00018	83 e0 01	 and	 eax, 1
  0001b	85 c0		 test	 eax, eax
  0001d	74 0d		 je	 SHORT $LN10@dtor$1
  0001f	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00023	48 8b 4d 30	 mov	 rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
  00027	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
$LN10@dtor$1:
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA ENDP ; `wwatch::split'::`1'::dtor$1
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
str$GSCopy$ = 56
current$ = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 176
str$ = 184
delimiter$dead$ = 192
?dtor$2@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA PROC ; `wwatch::split'::`1'::dtor$2
  00032	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR current$[rdx]
  00039	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA ENDP ; `wwatch::split'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
str$GSCopy$ = 56
current$ = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 176
str$ = 184
delimiter$dead$ = 192
?dtor$0@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA PROC ; `wwatch::split'::`1'::dtor$0
  00000	48 8b 8a 38 00
	00 00		 mov	 rcx, QWORD PTR str$GSCopy$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA ENDP ; `wwatch::split'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
str$GSCopy$ = 56
current$ = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 176
str$ = 184
delimiter$dead$ = 192
?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA PROC ; `wwatch::split'::`1'::dtor$1
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00018	83 e0 01	 and	 eax, 1
  0001b	85 c0		 test	 eax, eax
  0001d	74 0d		 je	 SHORT $LN10@dtor$1
  0001f	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00023	48 8b 4d 30	 mov	 rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
  00027	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
$LN10@dtor$1:
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?dtor$1@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA ENDP ; `wwatch::split'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
str$GSCopy$ = 56
current$ = 64
__$ArrayPad$ = 96
__$ReturnUdt$ = 176
str$ = 184
delimiter$dead$ = 192
?dtor$2@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA PROC ; `wwatch::split'::`1'::dtor$2
  00032	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR current$[rdx]
  00039	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$2@?0??split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z@4HA ENDP ; `wwatch::split'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
_TEXT	SEGMENT
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z PROC ; handle

; 109  :             const std::vector<std::wstring> &extensions) {

$LN671:
  00000	40 55		 push	 rbp
  00002	53		 push	 rbx
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 54		 push	 r12
  00007	41 56		 push	 r14
  00009	41 57		 push	 r15
  0000b	48 8d 6c 24 e9	 lea	 rbp, QWORD PTR [rsp-23]
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 c7 45 9f fe
	ff ff ff	 mov	 QWORD PTR $T2[rbp-153], -2
  0001f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00026	48 33 c4	 xor	 rax, rsp
  00029	48 89 45 07	 mov	 QWORD PTR __$ArrayPad$[rbp-153], rax
  0002d	49 8b f1	 mov	 rsi, r9
  00030	45 8b f0	 mov	 r14d, r8d
  00033	4c 8b e2	 mov	 r12, rdx
  00036	4c 8b f9	 mov	 r15, rcx
  00039	48 8b 5d 77	 mov	 rbx, QWORD PTR command$[rbp-153]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 661  : 		return (_Get_data()._Mylast);

  0003d	48 8b 4d 7f	 mov	 rcx, QWORD PTR extensions$[rbp-153]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm

; 306  : 	return (_Any_of(_Unchecked(_First), _Unchecked(_Last), _Pred));

  00041	4d 8b c1	 mov	 r8, r9
  00044	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00048	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004b	e8 00 00 00 00	 call	 ??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z ; std::_Any_of<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,<lambda_12cb8001b77ee58a89c74fac176e6240> >
; File c:\users\alist_000\cppmisc\wwatch.cc

; 113  :   if (run) {

  00050	84 c0		 test	 al, al
  00052	0f 84 34 02 00
	00		 je	 $LN557@handle
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00058	48 c7 45 df 07
	00 00 00	 mov	 QWORD PTR $T4[rbp-129], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00060	33 ff		 xor	 edi, edi
  00062	48 89 7d d7	 mov	 QWORD PTR $T4[rbp-137], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00066	66 89 7d c7	 mov	 WORD PTR $T4[rbp-153], di
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0006a	49 83 c9 ff	 or	 r9, -1
  0006e	45 33 c0	 xor	 r8d, r8d
  00071	48 8b d3	 mov	 rdx, rbx
  00074	48 8d 4d c7	 lea	 rcx, QWORD PTR $T4[rbp-153]
  00078	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  0007d	90		 npad	 1

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0007e	48 c7 45 ff 07
	00 00 00	 mov	 QWORD PTR $T4[rbp-97], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00086	48 89 7d f7	 mov	 QWORD PTR $T4[rbp-105], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0008a	66 89 7d e7	 mov	 WORD PTR $T4[rbp-121], di
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0008e	49 83 c9 ff	 or	 r9, -1
  00092	45 33 c0	 xor	 r8d, r8d
  00095	48 8b d6	 mov	 rdx, rsi
  00098	48 8d 4d e7	 lea	 rcx, QWORD PTR $T4[rbp-121]
  0009c	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  000a1	90		 npad	 1
  000a2	0f 57 c0	 xorps	 xmm0, xmm0
  000a5	f3 0f 7f 45 87	 movdqu	 XMMWORD PTR $T1[rbp-153], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 482  : 		_Myend = pointer();

  000aa	48 89 7d 97	 mov	 QWORD PTR $T1[rbp-137], rdi

; 796  : 		_Construct(_First, _Last, _Iter_cat(_First));

  000ae	4c 8d 45 07	 lea	 r8, QWORD PTR $T4[rbp-89]
  000b2	48 8d 55 c7	 lea	 rdx, QWORD PTR $T4[rbp-153]
  000b6	48 8d 4d 87	 lea	 rcx, QWORD PTR $T1[rbp-153]
  000ba	e8 00 00 00 00	 call	 ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
  000bf	90		 npad	 1
; File c:\users\alist_000\cppmisc\wwatch.cc

; 114  :     auto fullCommand = wwatch::concat({command, name});

  000c0	48 8d 55 87	 lea	 rdx, QWORD PTR $T1[rbp-153]
  000c4	48 8d 4d a7	 lea	 rcx, QWORD PTR fullCommand$3[rbp-153]
  000c8	e8 00 00 00 00	 call	 ?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z ; wwatch::concat
  000cd	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1660 : 		if (this->_Myfirst() != pointer())

  000ce	48 8b 5d 87	 mov	 rbx, QWORD PTR $T1[rbp-153]
  000d2	48 85 db	 test	 rbx, rbx
  000d5	74 79		 je	 SHORT $LN393@handle

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  000d7	48 8b 55 8f	 mov	 rdx, QWORD PTR $T1[rbp-145]
  000db	48 8b cb	 mov	 rcx, rbx
  000de	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  000e3	48 8b 45 97	 mov	 rax, QWORD PTR $T1[rbp-137]
  000e7	48 2b c3	 sub	 rax, rbx
  000ea	48 c1 f8 05	 sar	 rax, 5
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  000ee	48 b9 ff ff ff
	ff ff ff ff 07	 mov	 rcx, 576460752303423487	; 07ffffffffffffffH
  000f8	48 3b c1	 cmp	 rax, rcx
  000fb	76 06		 jbe	 SHORT $LN468@handle
  000fd	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00102	cc		 int	 3
$LN468@handle:

; 95   : 	const size_t _User_size = _Count * _Sz;

  00103	48 c1 e0 05	 shl	 rax, 5

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00107	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0010d	72 38		 jb	 SHORT $LN469@handle

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0010f	f6 c3 1f	 test	 bl, 31
  00112	74 06		 je	 SHORT $LN470@handle
  00114	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00119	cc		 int	 3
$LN470@handle:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0011a	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0011e	48 3b c3	 cmp	 rax, rbx
  00121	72 06		 jb	 SHORT $LN471@handle
  00123	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00128	cc		 int	 3
$LN471@handle:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00129	48 2b d8	 sub	 rbx, rax
  0012c	48 83 fb 08	 cmp	 rbx, 8
  00130	73 06		 jae	 SHORT $LN472@handle
  00132	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00137	cc		 int	 3
$LN472@handle:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00138	48 83 fb 27	 cmp	 rbx, 39			; 00000027H
  0013c	76 06		 jbe	 SHORT $LN473@handle
  0013e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00143	cc		 int	 3
$LN473@handle:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00144	48 8b d8	 mov	 rbx, rax
$LN469@handle:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00147	48 8b cb	 mov	 rcx, rbx
  0014a	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  0014f	90		 npad	 1
$LN393@handle:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 114  :     auto fullCommand = wwatch::concat({command, name});

  00150	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00157	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0015c	44 8d 42 e2	 lea	 r8d, QWORD PTR [rdx-30]
  00160	48 8d 4d c7	 lea	 rcx, QWORD PTR $T4[rbp-153]
  00164	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z

; 117  :                << std::endl;

  00169	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967191
  00170	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A ; std::wcout
  00177	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0017c	48 8b c8	 mov	 rcx, rax
  0017f	49 8b d7	 mov	 rdx, r15
  00182	e8 00 00 00 00	 call	 ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
  00187	48 8b c8	 mov	 rcx, rax
  0018a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967192
  00191	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  00196	48 8b c8	 mov	 rcx, rax
  00199	49 8b d4	 mov	 rdx, r12
  0019c	e8 00 00 00 00	 call	 ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
  001a1	48 8b c8	 mov	 rcx, rax
  001a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967193
  001ab	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  001b0	4c 8b c0	 mov	 r8, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 212  : 		(*_Pfn)(*(ios_base *)this);

  001b3	48 85 c0	 test	 rax, rax
  001b6	75 05		 jne	 SHORT $LN509@handle
  001b8	48 8b cf	 mov	 rcx, rdi
  001bb	eb 0a		 jmp	 SHORT $LN510@handle
$LN509@handle:
  001bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001c0	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  001c4	49 03 c8	 add	 rcx, r8
$LN510@handle:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 399  : 		_Fmtfl = (fmtflags)(((int)_Fmtfl & (int)~_Mask)

  001c7	81 61 18 ff f9
	ff ff		 and	 DWORD PTR [rcx+24], -1537 ; fffffffffffff9ffH
  001ce	81 49 18 00 08
	00 00		 or	 DWORD PTR [rcx+24], 2048 ; 00000800H
; File c:\users\alist_000\cppmisc\wwatch.cc

; 117  :                << std::endl;

  001d5	41 8b d6	 mov	 edx, r14d
  001d8	49 8b c8	 mov	 rcx, r8
  001db	e8 00 00 00 00	 call	 ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
  001e0	48 8b c8	 mov	 rcx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 212  : 		(*_Pfn)(*(ios_base *)this);

  001e3	48 85 c0	 test	 rax, rax
  001e6	74 0a		 je	 SHORT $LN518@handle
  001e8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001eb	48 63 78 04	 movsxd	 rdi, DWORD PTR [rax+4]
  001ef	48 03 f9	 add	 rdi, rcx
$LN518@handle:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 399  : 		_Fmtfl = (fmtflags)(((int)_Fmtfl & (int)~_Mask)

  001f2	81 67 18 ff f3
	ff ff		 and	 DWORD PTR [rdi+24], -3073 ; fffffffffffff3ffH
  001f9	81 4f 18 00 02
	00 00		 or	 DWORD PTR [rdi+24], 512	; 00000200H
; File c:\users\alist_000\cppmisc\wwatch.cc

; 117  :                << std::endl;

  00200	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967194
  00207	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0020c	48 8b c8	 mov	 rcx, rax
  0020f	48 8b d6	 mov	 rdx, rsi
  00212	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00217	48 8b c8	 mov	 rcx, rax
  0021a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967195
  00221	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  00226	48 8b c8	 mov	 rcx, rax
  00229	48 8d 55 a7	 lea	 rdx, QWORD PTR fullCommand$3[rbp-153]
  0022d	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00232	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00235	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00238	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  0023c	48 03 c8	 add	 rcx, rax
  0023f	b2 0a		 mov	 dl, 10
  00241	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  00246	0f b7 d0	 movzx	 edx, ax
  00249	48 8b cb	 mov	 rcx, rbx
  0024c	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  00251	48 8b cb	 mov	 rcx, rbx
  00254	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
; File c:\users\alist_000\cppmisc\wwatch.cc

; 118  :     ::_flushall();

  00259	e8 00 00 00 00	 call	 _flushall
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0025e	48 8d 4d a7	 lea	 rcx, QWORD PTR fullCommand$3[rbp-153]
  00262	48 83 7d bf 08	 cmp	 QWORD PTR fullCommand$3[rbp-129], 8
  00267	48 0f 43 4d a7	 cmovae	 rcx, QWORD PTR fullCommand$3[rbp-153]
; File c:\users\alist_000\cppmisc\wwatch.cc

; 119  :     ::_wsystem(fullCommand.data());

  0026c	e8 00 00 00 00	 call	 _wsystem
  00271	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00272	4c 8b 45 bf	 mov	 r8, QWORD PTR fullCommand$3[rbp-129]
  00276	49 83 f8 08	 cmp	 r8, 8
  0027a	72 10		 jb	 SHORT $LN557@handle

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0027c	49 ff c0	 inc	 r8
  0027f	48 8b 55 a7	 mov	 rdx, QWORD PTR fullCommand$3[rbp-153]
  00283	48 8d 4d a7	 lea	 rcx, QWORD PTR fullCommand$3[rbp-153]
  00287	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN557@handle:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 121  : }

  0028c	48 8b 4d 07	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-153]
  00290	48 33 cc	 xor	 rcx, rsp
  00293	e8 00 00 00 00	 call	 __security_check_cookie
  00298	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  0029f	41 5f		 pop	 r15
  002a1	41 5e		 pop	 r14
  002a3	41 5c		 pop	 r12
  002a5	5f		 pop	 rdi
  002a6	5e		 pop	 rsi
  002a7	5b		 pop	 rbx
  002a8	5d		 pop	 rbp
  002a9	c3		 ret	 0
$LN670@handle:
?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z ENDP ; handle
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$0@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$0
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$2
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	41 b8 02 00 00
	00		 mov	 r8d, 2
  00022	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00027	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0002b	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$2
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$3@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$3
  00036	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T1[rdx]
  0003d	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$3@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$3
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$4@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$4
  00042	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR fullCommand$3[rdx]
  00049	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$0@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$2
  0000c	40 55		 push	 rbp
  0000e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00012	48 8b ea	 mov	 rbp, rdx
  00015	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	41 b8 02 00 00
	00		 mov	 r8d, 2
  00022	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00027	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0002b	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
?dtor$2@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$3@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$3
  00036	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T1[rdx]
  0003d	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
?dtor$3@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
$T1 = 32
$T2 = 56
fullCommand$3 = 64
$T4 = 96
__$ArrayPad$ = 160
global$ = 240
local$ = 248
action$ = 256
name$ = 264
command$ = 272
extensions$ = 280
?dtor$4@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA PROC ; `handle'::`1'::dtor$4
  00042	48 8d 8a 40 00
	00 00		 lea	 rcx, QWORD PTR fullCommand$3[rdx]
  00049	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$4@?0??handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z@4HA ENDP ; `handle'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ??0<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
this$ = 8
<name>$ = 16
??0<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; <lambda_12cb8001b77ee58a89c74fac176e6240>::<lambda_12cb8001b77ee58a89c74fac176e6240>, COMDAT

; 112  :                   [&](const auto &ext) { return wwatch::endsWith(name, ext); });

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; <lambda_12cb8001b77ee58a89c74fac176e6240>::<lambda_12cb8001b77ee58a89c74fac176e6240>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
_TEXT	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain	PROC

; 123  : int wmain(int argc, wchar_t *argv[]) {

$LN1298:
  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	41 56		 push	 r14
  00005	48 81 ec 00 01
	00 00		 sub	 rsp, 256		; 00000100H
  0000c	48 c7 84 24 80
	00 00 00 fe ff
	ff ff		 mov	 QWORD PTR $T4[rsp], -2
  00018	48 89 9c 24 30
	01 00 00	 mov	 QWORD PTR [rsp+304], rbx
  00020	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00027	48 33 c4	 xor	 rax, rsp
  0002a	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00032	48 8b f2	 mov	 rsi, rdx
  00035	44 8b f1	 mov	 r14d, ecx

; 124  :   if (argc < 4) {

  00038	83 f9 04	 cmp	 ecx, 4
  0003b	0f 8d 98 00 00
	00		 jge	 $LN4@wmain

; 125  :     std::wcout << L"usage:" << std::endl;

  00041	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967190
  00048	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A ; std::wcout
  0004f	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  00054	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00057	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0005a	49 63 48 04	 movsxd	 rcx, DWORD PTR [r8+4]
  0005e	48 03 c8	 add	 rcx, rax
  00061	b2 0a		 mov	 dl, 10
  00063	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  00068	0f b7 d0	 movzx	 edx, ax
  0006b	48 8b cb	 mov	 rcx, rbx
  0006e	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  00073	48 8b cb	 mov	 rcx, rbx
  00076	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
; File c:\users\alist_000\cppmisc\wwatch.cc

; 127  :                << std::endl;

  0007b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967188
  00082	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?wcout@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A ; std::wcout
  00089	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0008e	48 8b c8	 mov	 rcx, rax
  00091	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  00094	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  00099	48 8b c8	 mov	 rcx, rax
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967189
  000a3	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000a8	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  000ab	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000ae	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  000b2	48 03 c8	 add	 rcx, rax
  000b5	b2 0a		 mov	 dl, 10
  000b7	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  000bc	0f b7 d0	 movzx	 edx, ax
  000bf	48 8b cb	 mov	 rcx, rbx
  000c2	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  000c7	48 8b cb	 mov	 rcx, rbx
  000ca	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
; File c:\users\alist_000\cppmisc\wwatch.cc

; 128  :     return 1;

  000cf	b8 01 00 00 00	 mov	 eax, 1
  000d4	e9 b3 02 00 00	 jmp	 $LN1288@wmain
$LN4@wmain:

; 129  :   }
; 130  : 
; 131  :   std::wstring dir(argv[1]);

  000d9	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000dd	48 c7 84 24 e8
	00 00 00 07 00
	00 00		 mov	 QWORD PTR dir$[rsp+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000e9	33 ff		 xor	 edi, edi
  000eb	48 89 bc 24 e0
	00 00 00	 mov	 QWORD PTR dir$[rsp+16], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000f3	66 89 bc 24 d0
	00 00 00	 mov	 WORD PTR dir$[rsp], di

; 303  : 		return (*_First == 0 ? 0

  000fb	48 83 cb ff	 or	 rbx, -1
  000ff	66 39 3a	 cmp	 WORD PTR [rdx], di
  00102	75 05		 jne	 SHORT $LN153@wmain
  00104	44 8b c7	 mov	 r8d, edi
  00107	eb 11		 jmp	 SHORT $LN154@wmain
$LN153@wmain:
  00109	4c 8b c3	 mov	 r8, rbx
  0010c	0f 1f 40 00	 npad	 4
$LL1294@wmain:
  00110	49 ff c0	 inc	 r8
  00113	66 42 39 3c 42	 cmp	 WORD PTR [rdx+r8*2], di
  00118	75 f6		 jne	 SHORT $LL1294@wmain
$LN154@wmain:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0011a	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR dir$[rsp]
  00122	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00127	90		 npad	 1
; File c:\users\alist_000\cppmisc\wwatch.cc

; 132  :   auto extensions = wwatch::split(argv[2], L',');

  00128	48 8b 56 10	 mov	 rdx, QWORD PTR [rsi+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0012c	48 c7 44 24 78
	07 00 00 00	 mov	 QWORD PTR $T3[rsp+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00135	48 89 7c 24 70	 mov	 QWORD PTR $T3[rsp+16], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0013a	66 89 7c 24 60	 mov	 WORD PTR $T3[rsp], di

; 303  : 		return (*_First == 0 ? 0

  0013f	66 83 3a 00	 cmp	 WORD PTR [rdx], 0
  00143	75 0b		 jne	 SHORT $LL1293@wmain
  00145	48 8b df	 mov	 rbx, rdi
  00148	eb 10		 jmp	 SHORT $LN284@wmain
  0014a	66 0f 1f 44 00
	00		 npad	 6
$LL1293@wmain:
  00150	48 ff c3	 inc	 rbx
  00153	66 83 3c 5a 00	 cmp	 WORD PTR [rdx+rbx*2], 0
  00158	75 f6		 jne	 SHORT $LL1293@wmain
$LN284@wmain:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0015a	4c 8b c3	 mov	 r8, rbx
  0015d	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T3[rsp]
  00162	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\users\alist_000\cppmisc\wwatch.cc

; 132  :   auto extensions = wwatch::split(argv[2], L',');

  00167	48 8d 54 24 60	 lea	 rdx, QWORD PTR $T3[rsp]
  0016c	48 8d 4c 24 20	 lea	 rcx, QWORD PTR extensions$[rsp]
  00171	e8 00 00 00 00	 call	 ?split@wwatch@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@3@_W@Z ; wwatch::split
  00176	90		 npad	 1

; 133  : 
; 134  :   auto begin = &argv[3];

  00177	48 8d 56 18	 lea	 rdx, QWORD PTR [rsi+24]

; 135  :   auto end = begin + (argc - 3);

  0017b	41 8d 46 fd	 lea	 eax, DWORD PTR [r14-3]
  0017f	48 63 c8	 movsxd	 rcx, eax
  00182	4c 8d 04 ca	 lea	 r8, QWORD PTR [rdx+rcx*8]
  00186	0f 57 c0	 xorps	 xmm0, xmm0
  00189	f3 0f 7f 44 24
	38		 movdqu	 XMMWORD PTR args$[rsp], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 482  : 		_Myend = pointer();

  0018f	48 89 7c 24 48	 mov	 QWORD PTR args$[rsp+16], rdi

; 796  : 		_Construct(_First, _Last, _Iter_cat(_First));

  00194	48 8d 4c 24 38	 lea	 rcx, QWORD PTR args$[rsp]
  00199	e8 00 00 00 00	 call	 ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>
  0019e	90		 npad	 1
; File c:\users\alist_000\cppmisc\wwatch.cc

; 137  :   auto subcommand = wwatch::concat(args);

  0019f	48 8d 54 24 38	 lea	 rdx, QWORD PTR args$[rsp]
  001a4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR subcommand$[rsp]
  001ac	e8 00 00 00 00	 call	 ?concat@wwatch@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@3@@Z ; wwatch::concat
  001b1	90		 npad	 1

; 138  : 
; 139  :   try {
; 140  :     wwatch::FileWatcher watcher(dir);

  001b2	48 8d 94 24 d0
	00 00 00	 lea	 rdx, QWORD PTR dir$[rsp]
  001ba	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR watcher$6[rsp]
  001c2	e8 00 00 00 00	 call	 ??0FileWatcher@wwatch@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@I@Z ; wwatch::FileWatcher::FileWatcher
  001c7	90		 npad	 1
  001c8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@wmain:

; 144  :       });

  001d0	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR subcommand$[rsp]
  001d8	48 89 44 24 50	 mov	 QWORD PTR $T1[rsp], rax
  001dd	48 8d 44 24 20	 lea	 rax, QWORD PTR extensions$[rsp]
  001e2	48 89 44 24 58	 mov	 QWORD PTR $T1[rsp+8], rax

; 141  :     while (true) {
; 142  :       watcher.poll([&](auto gi, auto li, auto action, const auto &path) {

  001e7	0f 28 44 24 50	 movaps	 xmm0, XMMWORD PTR $T1[rsp]
  001ec	66 0f 7f 44 24
	60		 movdqa	 XMMWORD PTR $T2[rsp], xmm0
  001f2	48 8d 54 24 60	 lea	 rdx, QWORD PTR $T2[rsp]
  001f7	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR watcher$6[rsp]
  001ff	e8 00 00 00 00	 call	 ??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z ; wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >

; 145  :     }

  00204	eb ca		 jmp	 SHORT $LL2@wmain
$LN16@wmain:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00206	4c 8b 84 24 c8
	00 00 00	 mov	 r8, QWORD PTR subcommand$[rsp+24]
  0020e	49 83 f8 08	 cmp	 r8, 8
  00212	72 18		 jb	 SHORT $LN351@wmain

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00214	49 ff c0	 inc	 r8
  00217	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR subcommand$[rsp]
  0021f	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR subcommand$[rsp]
  00227	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN351@wmain:

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0022c	48 c7 84 24 c8
	00 00 00 07 00
	00 00		 mov	 QWORD PTR subcommand$[rsp+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00238	33 ff		 xor	 edi, edi
  0023a	48 89 bc 24 c0
	00 00 00	 mov	 QWORD PTR subcommand$[rsp+16], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00242	66 89 bc 24 b0
	00 00 00	 mov	 WORD PTR subcommand$[rsp], di
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1660 : 		if (this->_Myfirst() != pointer())

  0024a	48 8b 5c 24 38	 mov	 rbx, QWORD PTR args$[rsp]
  0024f	48 85 db	 test	 rbx, rbx
  00252	74 7c		 je	 SHORT $LN1295@wmain

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  00254	48 8b 54 24 40	 mov	 rdx, QWORD PTR args$[rsp+8]
  00259	48 8b cb	 mov	 rcx, rbx
  0025c	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  00261	48 8b 44 24 48	 mov	 rax, QWORD PTR args$[rsp+16]
  00266	48 2b c3	 sub	 rax, rbx
  00269	48 c1 f8 05	 sar	 rax, 5
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0026d	48 be ff ff ff
	ff ff ff ff 07	 mov	 rsi, 576460752303423487	; 07ffffffffffffffH
  00277	48 3b c6	 cmp	 rax, rsi
  0027a	76 06		 jbe	 SHORT $LN543@wmain
  0027c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00281	cc		 int	 3
$LN543@wmain:

; 95   : 	const size_t _User_size = _Count * _Sz;

  00282	48 c1 e0 05	 shl	 rax, 5

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00286	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0028c	72 38		 jb	 SHORT $LN544@wmain

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0028e	f6 c3 1f	 test	 bl, 31
  00291	74 06		 je	 SHORT $LN545@wmain
  00293	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00298	cc		 int	 3
$LN545@wmain:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00299	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0029d	48 3b c3	 cmp	 rax, rbx
  002a0	72 06		 jb	 SHORT $LN546@wmain
  002a2	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  002a7	cc		 int	 3
$LN546@wmain:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  002a8	48 2b d8	 sub	 rbx, rax
  002ab	48 83 fb 08	 cmp	 rbx, 8
  002af	73 06		 jae	 SHORT $LN547@wmain
  002b1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  002b6	cc		 int	 3
$LN547@wmain:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  002b7	48 83 fb 27	 cmp	 rbx, 39			; 00000027H
  002bb	76 06		 jbe	 SHORT $LN548@wmain
  002bd	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  002c2	cc		 int	 3
$LN548@wmain:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  002c3	48 8b d8	 mov	 rbx, rax
$LN544@wmain:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  002c6	48 8b cb	 mov	 rcx, rbx
  002c9	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  002ce	eb 0a		 jmp	 SHORT $LN468@wmain
$LN1295@wmain:
  002d0	48 be ff ff ff
	ff ff ff ff 07	 mov	 rsi, 576460752303423487	; 07ffffffffffffffH
$LN468@wmain:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1660 : 		if (this->_Myfirst() != pointer())

  002da	48 8b 4c 24 20	 mov	 rcx, QWORD PTR extensions$[rsp]
  002df	48 85 c9	 test	 rcx, rcx
  002e2	74 7d		 je	 SHORT $LN586@wmain

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  002e4	48 8b 54 24 28	 mov	 rdx, QWORD PTR extensions$[rsp+8]
  002e9	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  002ee	48 8b 44 24 30	 mov	 rax, QWORD PTR extensions$[rsp+16]
  002f3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR extensions$[rsp]
  002f8	48 2b c1	 sub	 rax, rcx
  002fb	48 c1 f8 05	 sar	 rax, 5
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  002ff	48 3b c6	 cmp	 rax, rsi
  00302	76 06		 jbe	 SHORT $LN661@wmain
  00304	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00309	cc		 int	 3
$LN661@wmain:

; 95   : 	const size_t _User_size = _Count * _Sz;

  0030a	48 c1 e0 05	 shl	 rax, 5

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0030e	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00314	72 38		 jb	 SHORT $LN662@wmain

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00316	f6 c1 1f	 test	 cl, 31
  00319	74 06		 je	 SHORT $LN663@wmain
  0031b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00320	cc		 int	 3
$LN663@wmain:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00321	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00325	48 3b c1	 cmp	 rax, rcx
  00328	72 06		 jb	 SHORT $LN664@wmain
  0032a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0032f	cc		 int	 3
$LN664@wmain:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00330	48 2b c8	 sub	 rcx, rax
  00333	48 83 f9 08	 cmp	 rcx, 8
  00337	73 06		 jae	 SHORT $LN665@wmain
  00339	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0033e	cc		 int	 3
$LN665@wmain:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0033f	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00343	76 06		 jbe	 SHORT $LN666@wmain
  00345	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0034a	cc		 int	 3
$LN666@wmain:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0034b	48 8b c8	 mov	 rcx, rax
$LN662@wmain:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0034e	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
  00353	0f 57 c0	 xorps	 xmm0, xmm0
  00356	f3 0f 7f 44 24
	20		 movdqu	 XMMWORD PTR extensions$[rsp], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1668 : 			this->_Myend() = pointer();

  0035c	48 89 7c 24 30	 mov	 QWORD PTR extensions$[rsp+16], rdi
$LN586@wmain:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00361	4c 8b 84 24 e8
	00 00 00	 mov	 r8, QWORD PTR dir$[rsp+24]
  00369	49 83 f8 08	 cmp	 r8, 8
  0036d	72 18		 jb	 SHORT $LN705@wmain

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0036f	49 ff c0	 inc	 r8
  00372	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR dir$[rsp]
  0037a	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR dir$[rsp]
  00382	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN705@wmain:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 149  :     return 2;

  00387	b8 02 00 00 00	 mov	 eax, 2
$LN1288@wmain:

; 150  :   }
; 151  : }

  0038c	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00394	48 33 cc	 xor	 rcx, rsp
  00397	e8 00 00 00 00	 call	 __security_check_cookie
  0039c	48 8b 9c 24 30
	01 00 00	 mov	 rbx, QWORD PTR [rsp+304]
  003a4	48 81 c4 00 01
	00 00		 add	 rsp, 256		; 00000100H
  003ab	41 5e		 pop	 r14
  003ad	5f		 pop	 rdi
  003ae	5e		 pop	 rsi
  003af	c3		 ret	 0
$LN1296@wmain:
wmain	ENDP
_TEXT	ENDS
text$x	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$0 PROC
  00000	48 8d 8a d0 00
	00 00		 lea	 rcx, QWORD PTR dir$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
wmain$dtor$0 ENDP
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$2 PROC
  0000c	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR extensions$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
wmain$dtor$2 ENDP
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$3 PROC
  00018	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR args$[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
wmain$dtor$3 ENDP
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$4 PROC
  00024	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR subcommand$[rdx]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
wmain$dtor$4 ENDP
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$5 PROC
  00030	48 8d 8a 90 00
	00 00		 lea	 rcx, QWORD PTR watcher$6[rdx]
  00037	e9 00 00 00 00	 jmp	 ??1FileWatcher@wwatch@@QEAA@XZ
wmain$dtor$5 ENDP
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$catch$0 PROC

; 146  :   } catch (const wwatch::Win32Error &error) {

  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	53		 push	 rbx
  00042	55		 push	 rbp
  00043	57		 push	 rdi
  00044	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00048	48 8b ea	 mov	 rbp, rdx
__catch$wmain$0:

; 146  :   } catch (const wwatch::Win32Error &error) {
; 147  :     std::wcerr << L"Error Code: " << error.code() << std::endl;

  0004b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967187
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?wcerr@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A ; std::wcerr
  00059	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0005e	48 8b c8	 mov	 rcx, rax
  00061	48 8b bd 88 00
	00 00		 mov	 rdi, QWORD PTR error$5[rbp]
  00068	8b 17		 mov	 edx, DWORD PTR [rdi]
  0006a	e8 00 00 00 00	 call	 ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
  0006f	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00072	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00075	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00079	48 03 c8	 add	 rcx, rax
  0007c	b2 0a		 mov	 dl, 10
  0007e	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  00083	0f b7 d0	 movzx	 edx, ax
  00086	48 8b cb	 mov	 rcx, rbx
  00089	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
; File c:\users\alist_000\cppmisc\wwatch.cc

; 146  :   } catch (const wwatch::Win32Error &error) {
; 147  :     std::wcerr << L"Error Code: " << error.code() << std::endl;
; 148  :     std::wcerr << L"Error Message: " << error.message() << std::endl;

  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967186
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?wcerr@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A ; std::wcerr
  000a4	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	48 8d 57 08	 lea	 rdx, QWORD PTR [rdi+8]
  000b0	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000b5	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  000b8	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000bb	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  000bf	48 03 c8	 add	 rcx, rax
  000c2	b2 0a		 mov	 dl, 10
  000c4	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  000c9	0f b7 d0	 movzx	 edx, ax
  000cc	48 8b cb	 mov	 rcx, rbx
  000cf	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  000d4	48 8b cb	 mov	 rcx, rbx
  000d7	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
  000dc	90		 npad	 1
; File c:\users\alist_000\cppmisc\wwatch.cc

; 149  :     return 2;

  000dd	48 8d 05 00 00
	00 00		 lea	 rax, $LN16@wmain$catc
  000e4	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e8	5f		 pop	 rdi
  000e9	5d		 pop	 rbp
  000ea	5b		 pop	 rbx
  000eb	c3		 ret	 0
  000ec	cc		 int	 3
wmain$catch$0 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$0 PROC
  00000	48 8d 8a d0 00
	00 00		 lea	 rcx, QWORD PTR dir$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
wmain$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$2 PROC
  0000c	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR extensions$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
wmain$dtor$2 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$3 PROC
  00018	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR args$[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
wmain$dtor$3 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$4 PROC
  00024	48 8d 8a b0 00
	00 00		 lea	 rcx, QWORD PTR subcommand$[rdx]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
wmain$dtor$4 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
text$x	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$dtor$5 PROC
  00030	48 8d 8a 90 00
	00 00		 lea	 rcx, QWORD PTR watcher$6[rdx]
  00037	e9 00 00 00 00	 jmp	 ??1FileWatcher@wwatch@@QEAA@XZ
wmain$dtor$5 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\users\alist_000\cppmisc\wwatch.cc
text$x	SEGMENT
extensions$ = 32
args$ = 56
$T1 = 80
$T2 = 96
$T3 = 96
$T4 = 128
error$5 = 136
watcher$6 = 144
subcommand$ = 176
dir$ = 208
__$ArrayPad$ = 240
argc$ = 288
argv$ = 296
wmain$catch$0 PROC

; 146  :   } catch (const wwatch::Win32Error &error) {

  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	53		 push	 rbx
  00042	55		 push	 rbp
  00043	57		 push	 rdi
  00044	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00048	48 8b ea	 mov	 rbp, rdx
__catch$wmain$0:

; 147  :     std::wcerr << L"Error Code: " << error.code() << std::endl;

  0004b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967187
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?wcerr@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A ; std::wcerr
  00059	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  0005e	48 8b c8	 mov	 rcx, rax
  00061	48 8b bd 88 00
	00 00		 mov	 rdi, QWORD PTR error$5[rbp]
  00068	8b 17		 mov	 edx, DWORD PTR [rdi]
  0006a	e8 00 00 00 00	 call	 ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
  0006f	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00072	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00075	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00079	48 03 c8	 add	 rcx, rax
  0007c	b2 0a		 mov	 dl, 10
  0007e	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  00083	0f b7 d0	 movzx	 edx, ax
  00086	48 8b cb	 mov	 rcx, rbx
  00089	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
; File c:\users\alist_000\cppmisc\wwatch.cc

; 148  :     std::wcerr << L"Error Message: " << error.message() << std::endl;

  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG4294967186
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?wcerr@std@@3V?$basic_ostream@_WU?$char_traits@_W@std@@@1@A ; std::wcerr
  000a4	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	48 8d 57 08	 lea	 rdx, QWORD PTR [rdi+8]
  000b0	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000b5	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  000b8	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000bb	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  000bf	48 03 c8	 add	 rcx, rax
  000c2	b2 0a		 mov	 dl, 10
  000c4	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  000c9	0f b7 d0	 movzx	 edx, ax
  000cc	48 8b cb	 mov	 rcx, rbx
  000cf	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  000d4	48 8b cb	 mov	 rcx, rbx
  000d7	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
  000dc	90		 npad	 1
; File c:\users\alist_000\cppmisc\wwatch.cc

; 149  :     return 2;

  000dd	48 8d 05 00 00
	00 00		 lea	 rax, $LN16@wmain$catc
  000e4	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e8	5f		 pop	 rdi
  000e9	5d		 pop	 rbp
  000ea	5b		 pop	 rbx
  000eb	c3		 ret	 0
  000ec	cc		 int	 3
wmain$catch$0 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ??0<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEAA@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
this$ = 8
<subcommand>$ = 16
<extensions>$ = 24
??0<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEAA@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z PROC ; <lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>::<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>, COMDAT

; 144  :       });

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
  00003	48 8b c1	 mov	 rax, rcx
  00006	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  0000a	c3		 ret	 0
??0<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEAA@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z ENDP ; <lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>::<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1FileWatcher@wwatch@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1FileWatcher@wwatch@@QEAA@XZ PROC			; wwatch::FileWatcher::~FileWatcher, COMDAT

; 1396 : 		if (get() != pointer())

  00000	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00004	48 85 c9	 test	 rcx, rcx
  00007	74 0a		 je	 SHORT $LN32@FileWatche

; 1195 : 		delete _Ptr;

  00009	ba 01 00 00 00	 mov	 edx, 1
  0000e	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN32@FileWatche:
  00013	c3		 ret	 0
??1FileWatcher@wwatch@@QEAA@XZ ENDP			; wwatch::FileWatcher::~FileWatcher
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\initializer_list
;	COMDAT ??0?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z
_TEXT	SEGMENT
this$ = 8
_First_arg$ = 16
_Last_arg$ = 24
??0?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z PROC ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 34   : 		: _First(_First_arg), _Last(_Last_arg)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 36   : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  0000a	c3		 ret	 0
??0?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ENDP ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator!=, COMDAT

; 208  : 		return (_Ptr == _Right._Ptr);

  00000	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00003	48 39 11	 cmp	 QWORD PTR [rcx], rdx

; 213  : 		return (!(*this == _Right));

  00006	0f 95 c0	 setne	 al

; 214  : 		}

  00009	c3		 ret	 0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator++, COMDAT

; 96   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 97   : 		if (this->_Getcont() == 0
; 98   : 			|| _Ptr == 0
; 99   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= _Ptr)
; 100  : 			{	// report error
; 101  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 102  : 			_SCL_SECURE_OUT_OF_RANGE;
; 103  : 			}
; 104  : 
; 105  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 106  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 107  : 		_SCL_SECURE_VALIDATE_RANGE(
; 108  : 			_Ptr != _Tptr()
; 109  : 			&& _Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 110  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 111  : 
; 112  : 		++_Ptr;

  00000	48 83 01 20	 add	 QWORD PTR [rcx], 32	; 00000020H

; 113  : 		return (*this);

  00004	48 8b c1	 mov	 rax, rcx

; 114  : 		}

  00007	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator*, COMDAT

; 66   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 67   : 		if (this->_Getcont() == 0
; 68   : 			|| _Ptr == 0
; 69   : 			|| _Ptr < ((_Myvec *)this->_Getcont())->_Myfirst
; 70   : 			|| ((_Myvec *)this->_Getcont())->_Mylast <= _Ptr)
; 71   : 			{	// report error
; 72   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 73   : 			_SCL_SECURE_OUT_OF_RANGE;
; 74   : 			}
; 75   : 
; 76   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 77   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0);
; 78   : 		_SCL_SECURE_VALIDATE_RANGE(
; 79   : 			_Ptr != _Tptr()
; 80   : 			&& ((_Myvec *)this->_Getcont())->_Myfirst <= _Ptr
; 81   : 			&& _Ptr < ((_Myvec *)this->_Getcont())->_Mylast);
; 82   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 83   : 
; 84   : 		_Analysis_assume_(_Ptr != _Tptr());
; 85   : 
; 86   : 		return (*_Ptr);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 87   : 		}

  00003	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
$T1 = 32
_Ptr$ = 64
_Ptr$ = 64
this$ = 64
$T2 = 72
$T3 = 72
_Val$ = 72
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back, COMDAT

; 1278 : 		{	// insert element at end

$LN511:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 50	 mov	 QWORD PTR [rsp+80], rbx
  00014	48 8b fa	 mov	 rdi, rdx
  00017	48 8b d9	 mov	 rbx, rcx

; 1620 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  0001a	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  0001e	48 3b d0	 cmp	 rdx, rax
  00021	73 65		 jae	 SHORT $LN2@push_back
  00023	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00026	48 3b ca	 cmp	 rcx, rdx
  00029	77 5d		 ja	 SHORT $LN2@push_back

; 1279 : 		if (_Inside(_STD addressof(_Val)))
; 1280 : 			{	// push back an element
; 1281 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0002b	48 2b f9	 sub	 rdi, rcx

; 1282 : 			if (this->_Mylast() == this->_Myend())

  0002e	48 3b 43 10	 cmp	 rax, QWORD PTR [rbx+16]
  00032	75 08		 jne	 SHORT $LN4@push_back

; 1283 : 				_Reserve(1);

  00034	48 8b cb	 mov	 rcx, rbx
  00037	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
$LN4@push_back:

; 1284 : 			_Orphan_range(this->_Mylast(), this->_Mylast());
; 1285 : 			this->_Getal().construct(this->_Mylast(),

  0003c	48 83 e7 e0	 and	 rdi, -32		; ffffffffffffffe0H
  00040	48 03 3b	 add	 rdi, QWORD PTR [rbx]
  00043	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00047	48 89 4c 24 40	 mov	 QWORD PTR _Ptr$[rsp], rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0004c	48 89 4c 24 48	 mov	 QWORD PTR $T3[rsp], rcx
  00051	48 85 c9	 test	 rcx, rcx
  00054	74 30		 je	 SHORT $LN124@push_back
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00056	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00058	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00060	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00064	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00069	72 05		 jb	 SHORT $LN264@push_back
  0006b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0006e	eb 03		 jmp	 SHORT $LN265@push_back
$LN264@push_back:
  00070	48 8b d1	 mov	 rdx, rcx
$LN265@push_back:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00073	66 89 02	 mov	 WORD PTR [rdx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  00076	49 83 c9 ff	 or	 r9, -1
  0007a	45 33 c0	 xor	 r8d, r8d
  0007d	48 8b d7	 mov	 rdx, rdi
  00080	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00085	90		 npad	 1
$LN124@push_back:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1289 : 		else

  00086	eb 51		 jmp	 SHORT $LN510@push_back
$LN2@push_back:

; 1290 : 			{	// push back a non-element
; 1291 : 			if (this->_Mylast() == this->_Myend())

  00088	48 3b 43 10	 cmp	 rax, QWORD PTR [rbx+16]
  0008c	75 08		 jne	 SHORT $LN5@push_back

; 1292 : 				_Reserve(1);

  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
$LN5@push_back:

; 1293 : 			_Orphan_range(this->_Mylast(), this->_Mylast());
; 1294 : 			this->_Getal().construct(this->_Mylast(),

  00096	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  0009a	48 89 4c 24 40	 mov	 QWORD PTR _Ptr$[rsp], rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0009f	48 89 4c 24 48	 mov	 QWORD PTR $T2[rsp], rcx
  000a4	48 85 c9	 test	 rcx, rcx
  000a7	74 30		 je	 SHORT $LN349@push_back
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  000a9	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000ab	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000b3	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b7	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  000bc	72 05		 jb	 SHORT $LN489@push_back
  000be	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c1	eb 03		 jmp	 SHORT $LN490@push_back
$LN489@push_back:
  000c3	48 8b d1	 mov	 rdx, rcx
$LN490@push_back:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000c6	66 89 02	 mov	 WORD PTR [rdx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  000c9	49 83 c9 ff	 or	 r9, -1
  000cd	45 33 c0	 xor	 r8d, r8d
  000d0	48 8b d7	 mov	 rdx, rdi
  000d3	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  000d8	90		 npad	 1
$LN349@push_back:
$LN510@push_back:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1296 : 			++this->_Mylast();

  000d9	48 83 43 08 20	 add	 QWORD PTR [rbx+8], 32	; 00000020H

; 1297 : 			}
; 1298 : 		}

  000de	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  000e3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ptr$ = 64
_Ptr$ = 64
this$ = 64
$T2 = 72
$T3 = 72
_Val$ = 72
?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$35
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 40	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 48	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$35
$T1 = 32
_Ptr$ = 64
_Ptr$ = 64
this$ = 64
$T2 = 72
$T3 = 72
_Val$ = 72
?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$96
  0001c	40 55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
  00025	48 8b 55 40	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00029	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$96
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ptr$ = 64
_Ptr$ = 64
this$ = 64
$T2 = 72
$T3 = 72
_Val$ = 72
?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$35
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 40	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 48	 mov	 rcx, QWORD PTR $T3[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$35@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$35
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ptr$ = 64
_Ptr$ = 64
this$ = 64
$T2 = 72
$T3 = 72
_Val$ = 72
?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$96
  0001c	40 55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
  00025	48 8b 55 40	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00029	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  0002d	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
?dtor$96@?0??push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back'::`1'::dtor$96
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::end, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1076 : 		return (const_iterator(this->_Mylast(), &this->_Get_data()));

  00007	48 8b c2	 mov	 rax, rdx

; 1077 : 		}

  0000a	c3		 ret	 0
?end@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::begin, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1066 : 		return (const_iterator(this->_Myfirst(), &this->_Get_data()));

  00006	48 8b c2	 mov	 rax, rdx

; 1067 : 		}

  00009	c3		 ret	 0
?begin@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 979  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@V?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ilist$ = 56
_Al$dead$ = 64
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@V?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 956  : 		{	// construct from initializer_list

$LN26:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 480  : 		_Myfirst = pointer();

  00006	33 c0		 xor	 eax, eax

; 956  : 		{	// construct from initializer_list

  00008	48 8b d9	 mov	 rbx, rcx

; 480  : 		_Myfirst = pointer();

  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  0000e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00012	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 796  : 		_Construct(_First, _Last, _Iter_cat(_First));

  00016	4c 8b 42 08	 mov	 r8, QWORD PTR [rdx+8]
  0001a	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0001d	e8 00 00 00 00	 call	 ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>

; 957  : 		_Construct(_Ilist.begin(), _Ilist.end());
; 958  : 		}

  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@V?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 480  : 		_Myfirst = pointer();

  00000	45 33 c0	 xor	 r8d, r8d
  00003	4c 89 01	 mov	 QWORD PTR [rcx], r8

; 481  : 		_Mylast = pointer();

  00006	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8

; 482  : 		_Myend = pointer();

  0000a	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 873  : 		this->_Myfirst() = _Right._Myfirst();

  0000e	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00011	48 89 01	 mov	 QWORD PTR [rcx], rax

; 874  : 		this->_Mylast() = _Right._Mylast();

  00014	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00018	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 875  : 		this->_Myend() = _Right._Myend();

  0001c	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  00020	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 845  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());
; 846  : 		}

  00024	48 8b c1	 mov	 rax, rcx

; 877  : 		_Right._Myfirst() = pointer();

  00027	4c 89 02	 mov	 QWORD PTR [rdx], r8

; 878  : 		_Right._Mylast() = pointer();

  0002a	4c 89 42 08	 mov	 QWORD PTR [rdx+8], r8

; 879  : 		_Right._Myend() = pointer();

  0002e	4c 89 42 10	 mov	 QWORD PTR [rdx+16], r8

; 845  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());
; 846  : 		}

  00032	c3		 ret	 0
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 711  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 600  : 		{	// construct default allocator (do nothing)
; 601  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??1?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<char,std::default_delete<char> >::~unique_ptr<char,std::default_delete<char> >, COMDAT

; 1396 : 		if (get() != pointer())

  00000	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00003	48 85 c9	 test	 rcx, rcx
  00006	74 0a		 je	 SHORT $LN29@unique_ptr

; 1195 : 		delete _Ptr;

  00008	ba 01 00 00 00	 mov	 edx, 1
  0000d	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN29@unique_ptr:

; 1397 : 			this->get_deleter()(get());
; 1398 : 		}

  00012	c3		 ret	 0
??1?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<char,std::default_delete<char> >::~unique_ptr<char,std::default_delete<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??4?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<char,std::default_delete<char> >::operator=, COMDAT

; 1378 : 		{	// assign by moving _Right

$LN62:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1379 : 		if (this != &_Right)

  00009	48 3b ca	 cmp	 rcx, rdx
  0000c	74 1f		 je	 SHORT $LN60@operator

; 1412 : 		return (this->_Myptr());

  0000e	48 8b 02	 mov	 rax, QWORD PTR [rdx]

; 1423 : 		this->_Myptr() = pointer();

  00011	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0

; 1412 : 		return (this->_Myptr());

  00018	48 8b 09	 mov	 rcx, QWORD PTR [rcx]

; 1430 : 		this->_Myptr() = _Ptr;

  0001b	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1431 : 		if (_Old != pointer())

  0001e	48 85 c9	 test	 rcx, rcx
  00021	74 0a		 je	 SHORT $LN60@operator

; 1195 : 		delete _Ptr;

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN60@operator:

; 1380 : 			{	// different, do the move
; 1381 : 			reset(_Right.release());
; 1382 : 			this->get_deleter() = _STD forward<_Dx>(_Right.get_deleter());
; 1383 : 			}
; 1384 : 		return (*this);

  0002d	48 8b c3	 mov	 rax, rbx

; 1385 : 		}

  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5b		 pop	 rbx
  00035	c3		 ret	 0
??4?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<char,std::default_delete<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z PROC ; std::unique_ptr<char,std::default_delete<char> >::unique_ptr<char,std::default_delete<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1314 : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z ENDP ; std::unique_ptr<char,std::default_delete<char> >::unique_ptr<char,std::default_delete<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<char,std::default_delete<char> >::unique_ptr<char,std::default_delete<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	48 c7 01 00 00
	00 00		 mov	 QWORD PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1294 : 		}

  00007	48 8b c1	 mov	 rax, rcx
  0000a	c3		 ret	 0
??0?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<char,std::default_delete<char> >::unique_ptr<char,std::default_delete<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator!=, COMDAT

; 214  : 		return (_Ptr == _Right._Ptr);

  00000	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00003	48 39 11	 cmp	 QWORD PTR [rcx], rdx

; 219  : 		return (!(*this == _Right));

  00006	0f 95 c0	 setne	 al

; 220  : 		}

  00009	c3		 ret	 0
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??E?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator++, COMDAT

; 116  : 		++_Ptr;

  00000	48 83 01 02	 add	 QWORD PTR [rcx], 2

; 342  : 		++*(_Mybase *)this;
; 343  : 		return (*this);

  00004	48 8b c1	 mov	 rax, rcx

; 344  : 		}

  00007	c3		 ret	 0
??E?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEA_WXZ
_TEXT	SEGMENT
this$ = 8
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEA_WXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*, COMDAT

; 332  : 		return ((reference)**(_Mybase *)this);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 333  : 		}

  00003	c3		 ret	 0
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEA_WXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>, COMDAT

; 3662 : 		{	// destroy the object

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3689 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN6@Yarn

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN6@Yarn:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3663 : 		_Tidy();
; 3664 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
??1?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::_Yarn<wchar_t>, COMDAT

; 3612 : 		: _Myptr(0), _Nul(0)

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax
  00005	66 89 41 08	 mov	 WORD PTR [rcx+8], ax

; 3614 : 		}

  00009	48 8b c1	 mov	 rax, rcx
  0000c	c3		 ret	 0
??0?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ PROC			; std::_Yarn<char>::c_str, COMDAT

; 3673 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 85 c0	 test	 rax, rax
  00006	75 04		 jne	 SHORT $LN4@c_str
  00008	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]
$LN4@c_str:

; 3674 : 		}

  0000c	c3		 ret	 0
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ ENDP			; std::_Yarn<char>::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT

; 3662 : 		{	// destroy the object

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3689 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN6@Yarn

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN6@Yarn:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3663 : 		_Tidy();
; 3664 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
??1?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::_Yarn<char>, COMDAT

; 3612 : 		: _Myptr(0), _Nul(0)

  00000	48 c7 01 00 00
	00 00		 mov	 QWORD PTR [rcx], 0

; 3614 : 		}

  00007	48 8b c1	 mov	 rax, rcx
  0000a	c6 41 08 00	 mov	 BYTE PTR [rcx+8], 0
  0000e	c3		 ret	 0
??0?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAH_K0AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_N0$ = 64
_Right$ = 72
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAH_K0AEBV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare, COMDAT

; 2124 : 		{	// compare [_Off, _Off + _N0) with _Right

$LN80:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	49 8b c1	 mov	 rax, r9
  00007	4c 8b ca	 mov	 r9, rdx

; 2266 : 		if (this->_Mysize() < _Off)

  0000a	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  0000e	49 3b d1	 cmp	 rdx, r9
  00011	72 35		 jb	 SHORT $LN78@compare

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00013	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8

; 723  : 		return (_Get_data()._Mysize);

  00018	4c 8d 50 10	 lea	 r10, QWORD PTR [rax+16]

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0001c	72 03		 jb	 SHORT $LN39@compare
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0001e	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN39@compare:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00021	49 2b d1	 sub	 rdx, r9

; 2110 : 		if (_Size <= _Max_effective_size)

  00024	4c 3b c2	 cmp	 r8, rdx
  00027	49 0f 46 d0	 cmovbe	 rdx, r8

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0002b	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00030	72 03		 jb	 SHORT $LN70@compare
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00032	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN70@compare:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),

  00035	4a 8d 0c 49	 lea	 rcx, QWORD PTR [rcx+r9*2]
  00039	4c 8b c0	 mov	 r8, rax
  0003c	4d 8b 0a	 mov	 r9, QWORD PTR [r10]

; 2127 : 			_Right._Myptr(), _Right._Mysize()));
; 2128 : 		}

  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),

  00043	e9 00 00 00 00	 jmp	 ?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare
$LN78@compare:

; 2278 : 		_Xout_of_range("invalid string position");

  00048	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0004f	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00054	cc		 int	 3
$LN77@compare:
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAH_K0AEBV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize, COMDAT

; 1758 : 		if (_Newsize <= this->_Mysize())

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 3b d0	 cmp	 rdx, rax
  00007	77 15		 ja	 SHORT $LN4@resize

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00009	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00012	72 03		 jb	 SHORT $LN38@resize
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN38@resize:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00017	33 c0		 xor	 eax, eax
  00019	66 89 04 51	 mov	 WORD PTR [rcx+rdx*2], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1754 : 		}

  0001d	c3		 ret	 0
$LN4@resize:

; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  0001e	45 33 c0	 xor	 r8d, r8d
  00021	48 2b d0	 sub	 rdx, rax
  00024	e9 00 00 00 00	 jmp	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT

; 1742 : 		return (this->_Mysize());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]

; 1743 : 		}

  00004	c3		 ret	 0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 04		 jb	 SHORT $LN16@data

; 1732 : 		return (c_str());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1733 : 		}

  0000a	c3		 ret	 0
$LN16@data:

; 1732 : 		return (c_str());

  0000b	48 8b c1	 mov	 rax, rcx

; 1733 : 		}

  0000e	c3		 ret	 0
?data@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 04		 jb	 SHORT $LN13@c_str

; 1727 : 		return (this->_Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1728 : 		}

  0000a	c3		 ret	 0
$LN13@c_str:

; 1727 : 		return (this->_Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 1728 : 		}

  0000e	c3		 ret	 0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 12		 jb	 SHORT $LN19@end

; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));

  00007	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000b	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));

  0000e	49 8d 0c 40	 lea	 rcx, QWORD PTR [r8+rax*2]
  00012	48 8b c2	 mov	 rax, rdx

; 50   : 		_Ptr = _Parg;

  00015	48 89 0a	 mov	 QWORD PTR [rdx], rcx

; 1601 : 		}

  00018	c3		 ret	 0
$LN19@end:

; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));

  00019	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	4c 8b c1	 mov	 r8, rcx

; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));

  00020	48 8d 0c 41	 lea	 rcx, QWORD PTR [rcx+rax*2]
  00024	48 8b c2	 mov	 rax, rdx

; 50   : 		_Ptr = _Parg;

  00027	48 89 0a	 mov	 QWORD PTR [rdx], rcx

; 1601 : 		}

  0002a	c3		 ret	 0
?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 0a		 jb	 SHORT $LN19@begin
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 50   : 		_Ptr = _Parg;

  0000a	48 89 02	 mov	 QWORD PTR [rdx], rax

; 1590 : 		return (iterator(this->_Myptr(), &this->_Get_data()));

  0000d	48 8b c2	 mov	 rax, rdx

; 1591 : 		}

  00010	c3		 ret	 0
$LN19@begin:

; 50   : 		_Ptr = _Parg;

  00011	48 89 0a	 mov	 QWORD PTR [rdx], rcx

; 1590 : 		return (iterator(this->_Myptr(), &this->_Get_data()));

  00014	48 8b c2	 mov	 rax, rdx

; 1591 : 		}

  00017	c3		 ret	 0
?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear, COMDAT

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00000	33 d2		 xor	 edx, edx
  00002	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00006	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  0000b	72 07		 jb	 SHORT $LN24@clear
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000d	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00010	66 89 10	 mov	 WORD PTR [rax], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1374 : 		}

  00013	c3		 ret	 0
$LN24@clear:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00014	66 89 11	 mov	 WORD PTR [rcx], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1374 : 		}

  00017	c3		 ret	 0
?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z
_TEXT	SEGMENT
this$ = 48
_Ch$ = 56
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=, COMDAT

; 1054 : 		{	// append 1 * _Ch

$LN228:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	56		 push	 rsi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1107 : 		if (npos - this->_Mysize() <= _Count)

  0000a	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0000e	48 83 c8 ff	 or	 rax, -1
  00012	49 2b c0	 sub	 rax, r8

; 1054 : 		{	// append 1 * _Ch

  00015	0f b7 f2	 movzx	 esi, dx
  00018	48 8b d9	 mov	 rbx, rcx

; 1107 : 		if (npos - this->_Mysize() <= _Count)

  0001b	48 83 f8 01	 cmp	 rax, 1
  0001f	0f 86 9d 00 00
	00		 jbe	 $LN225@operator
  00025	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi

; 2220 : 		if (max_size() < _Newsize)

  0002a	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH

; 1110 : 		const size_type _Num = this->_Mysize() + _Count;

  00034	49 8d 78 01	 lea	 rdi, QWORD PTR [r8+1]

; 2220 : 		if (max_size() < _Newsize)

  00038	48 3b f8	 cmp	 rdi, rax
  0003b	0f 87 8e 00 00
	00		 ja	 $LN227@operator

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00041	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  00045	73 1d		 jae	 SHORT $LN30@operator

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00047	48 8b d7	 mov	 rdx, rdi
  0004a	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy

; 2228 : 			_Eos(0);	// new size is zero, just null terminate
; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  0004f	48 85 ff	 test	 rdi, rdi

; 1111 : 		if (0 < _Count && _Grow(_Num))

  00052	74 5b		 je	 SHORT $LN218@operator
$LN224@operator:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00054	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8

; 1113 : 			_Chassign(this->_Mysize(), _Count, _Ch);

  00059	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005d	72 30		 jb	 SHORT $LN152@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0005f	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00062	eb 2e		 jmp	 SHORT $LN153@operator
$LN30@operator:

; 2227 : 		else if (_Newsize == 0)

  00064	48 85 ff	 test	 rdi, rdi
  00067	75 eb		 jne	 SHORT $LN224@operator

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00069	33 c0		 xor	 eax, eax
  0006b	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006f	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00074	72 03		 jb	 SHORT $LN119@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00076	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN119@operator:
  00079	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0007e	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1055 : 		return (append((size_type)1, _Ch));

  00081	48 8b c3	 mov	 rax, rbx

; 1056 : 		}

  00084	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00089	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008d	5e		 pop	 rsi
  0008e	c3		 ret	 0
$LN152@operator:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008f	48 8b c3	 mov	 rax, rbx
$LN153@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00092	66 89 34 48	 mov	 WORD PTR [rax+rcx*2], si
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00096	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009a	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0009f	72 05		 jb	 SHORT $LN209@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000a1	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a4	eb 03		 jmp	 SHORT $LN210@operator
$LN209@operator:
  000a6	48 8b cb	 mov	 rcx, rbx
$LN210@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000a9	33 c0		 xor	 eax, eax
  000ab	66 89 04 79	 mov	 WORD PTR [rcx+rdi*2], ax
$LN218@operator:
  000af	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1055 : 		return (append((size_type)1, _Ch));

  000b4	48 8b c3	 mov	 rax, rbx

; 1056 : 		}

  000b7	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000bc	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c0	5e		 pop	 rsi
  000c1	c3		 ret	 0
$LN225@operator:

; 2261 : 		_Xlength_error("string too long");

  000c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000c9	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000ce	cc		 int	 3
$LN227@operator:
  000cf	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000d6	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000db	cc		 int	 3
$LN222@operator:
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@PEB_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$dead$ = 16
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=, COMDAT

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00000	41 b8 01 00 00
	00		 mov	 r8d, 1
  00006	e9 00 00 00 00	 jmp	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=, COMDAT

; 1060 : 		return (append(_Right, 0, npos));

  00000	49 83 c9 ff	 or	 r9, -1
  00004	45 33 c0	 xor	 r8d, r8d
  00007	e9 00 00 00 00	 jmp	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 1011 : 		{	// destroy the string

$LN120:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]

; 1011 : 		{	// destroy the string

  0000a	48 8b d9	 mov	 rbx, rcx

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	49 83 f8 08	 cmp	 r8, 8
  00011	72 0b		 jb	 SHORT $LN6@basic_stri

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00013	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00016	49 ff c0	 inc	 r8
  00019	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN6@basic_stri:

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001e	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00020	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00028	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002c	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00031	72 0c		 jb	 SHORT $LN108@basic_stri
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00033	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00036	66 89 08	 mov	 WORD PTR [rax], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1013 : 		}

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
$LN108@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0003f	66 89 0b	 mov	 WORD PTR [rbx], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1013 : 		}

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5b		 pop	 rbx
  00047	c3		 ret	 0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 906  : 		{	// construct by moving _Right

$LN144:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00008	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 906  : 		{	// construct by moving _Right

  00014	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00017	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  0001a	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv

; 909  : 		}

  0001f	48 8b c3	 mov	 rax, rbx
  00022	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00026	5b		 pop	 rbx
  00027	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 830  : 		{	// construct from [_Ptr, <null>)

$LN133:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	45 33 c0	 xor	 r8d, r8d

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00009	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00011	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 830  : 		{	// construct from [_Ptr, <null>)

  00015	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00018	66 44 89 01	 mov	 WORD PTR [rcx], r8w

; 303  : 		return (*_First == 0 ? 0

  0001c	66 44 39 02	 cmp	 WORD PTR [rdx], r8w
  00020	74 19		 je	 SHORT $LN130@basic_stri
  00022	49 83 c8 ff	 or	 r8, -1
  00026	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL131@basic_stri:
  00030	49 ff c0	 inc	 r8
  00033	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  00039	75 f5		 jne	 SHORT $LL131@basic_stri
$LN130@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003b	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}

  00040	48 8b c3	 mov	 rax, rbx
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5b		 pop	 rbx
  00048	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 816  : 		{	// construct from [_Ptr, _Ptr + _Count)

$LN126:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00008	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 816  : 		{	// construct from [_Ptr, _Ptr + _Count)

  00014	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00017	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 818  : 		assign(_Ptr, _Count);

  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 819  : 		}

  0001f	48 8b c3	 mov	 rax, rbx
  00022	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00026	5b		 pop	 rbx
  00027	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00000	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00002	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0000a	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0000e	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 790  : 		}

  00011	48 8b c1	 mov	 rax, rcx
  00014	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 774  : 		{	// construct by copying _Right

$LN145:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00008	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  00014	49 83 c9 ff	 or	 r9, -1
  00018	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0001b	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 774  : 		{	// construct by copying _Right

  0001e	48 8b d9	 mov	 rbx, rcx

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  00021	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 777  : 		}

  00026	48 8b c3	 mov	 rax, rbx
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5b		 pop	 rbx
  0002e	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT

; 1781 : 		return (this->_Mysize() == 0);

  00000	33 c0		 xor	 eax, eax
  00002	48 39 41 10	 cmp	 QWORD PTR [rcx+16], rax
  00006	0f 94 c0	 sete	 al

; 1782 : 		}

  00009	c3		 ret	 0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 1758 : 		if (_Newsize <= this->_Mysize())

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 3b d0	 cmp	 rdx, rax
  00007	77 13		 ja	 SHORT $LN4@resize

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00009	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00012	72 03		 jb	 SHORT $LN38@resize
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN38@resize:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00017	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1754 : 		}

  0001b	c3		 ret	 0
$LN4@resize:

; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  0001c	48 2b d0	 sub	 rdx, rax
  0001f	45 33 c0	 xor	 r8d, r8d
  00022	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN13@c_str

; 1727 : 		return (this->_Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1728 : 		}

  0000a	c3		 ret	 0
$LN13@c_str:

; 1727 : 		return (this->_Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 1728 : 		}

  0000e	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  00000	80 3a 00	 cmp	 BYTE PTR [rdx], 0
  00003	75 08		 jne	 SHORT $LN5@append
  00005	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00008	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN5@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0000d	49 83 c8 ff	 or	 r8, -1
$LL7@append:
  00011	49 ff c0	 inc	 r8
  00014	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00019	75 f6		 jne	 SHORT $LL7@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  0001b	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1060 : 		return (append(_Right, 0, npos));

  00000	49 83 c9 ff	 or	 r9, -1
  00004	45 33 c0	 xor	 r8d, r8d
  00007	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 1011 : 		{	// destroy the string

$LN140:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]

; 1011 : 		{	// destroy the string

  0000a	48 8b d9	 mov	 rbx, rcx

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	48 83 f8 10	 cmp	 rax, 16
  00011	72 39		 jb	 SHORT $LN87@basic_stri
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00013	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00016	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00019	48 83 f8 ff	 cmp	 rax, -1
  0001d	77 50		 ja	 SHORT $LN134@basic_stri

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0001f	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00025	72 20		 jb	 SHORT $LN82@basic_stri

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00027	f6 c1 1f	 test	 cl, 31
  0002a	75 49		 jne	 SHORT $LN136@basic_stri

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0002c	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00030	48 3b c1	 cmp	 rax, rcx
  00033	73 46		 jae	 SHORT $LN137@basic_stri

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00035	48 2b c8	 sub	 rcx, rax
  00038	48 83 f9 08	 cmp	 rcx, 8
  0003c	72 43		 jb	 SHORT $LN138@basic_stri

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0003e	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00042	77 43		 ja	 SHORT $LN139@basic_stri

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00044	48 8b c8	 mov	 rcx, rax
$LN82@basic_stri:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00047	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN87@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0004c	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00054	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005c	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00061	72 03		 jb	 SHORT $LN121@basic_stri
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00063	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN121@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00066	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1013 : 		}

  00069	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006d	5b		 pop	 rbx
  0006e	c3		 ret	 0
$LN134@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0006f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00074	cc		 int	 3
$LN136@basic_stri:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00075	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0007a	cc		 int	 3
$LN137@basic_stri:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0007b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00080	cc		 int	 3
$LN138@basic_stri:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00081	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00086	cc		 int	 3
$LN139@basic_stri:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00087	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0008c	cc		 int	 3
$LN133@basic_stri:
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 906  : 		{	// construct by moving _Right

$LN421:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0000a	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 906  : 		{	// construct by moving _Right

  00012	48 8b da	 mov	 rbx, rdx

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00015	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0

; 906  : 		{	// construct by moving _Right

  0001d	48 8b f9	 mov	 rdi, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00020	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)

  00023	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
  00028	73 11		 jae	 SHORT $LN158@basic_stri

; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  0002a	4c 8b 42 10	 mov	 r8, QWORD PTR [rdx+16]
  0002e	49 83 c0 01	 add	 r8, 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  00032	74 14		 je	 SHORT $LN159@basic_stri
  00034	e8 00 00 00 00	 call	 memmove
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 960  : 		else

  00039	eb 0d		 jmp	 SHORT $LN159@basic_stri
$LN158@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0003b	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0003e	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 963  : 			_Right._Bx()._Ptr = pointer();

  00041	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN159@basic_stri:

; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();

  00048	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  0004c	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 966  : 		this->_Myres() = _Right._Myres();

  00050	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00054	48 89 47 18	 mov	 QWORD PTR [rdi+24], rax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00058	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00060	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00068	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0006d	72 14		 jb	 SHORT $LN407@basic_stri
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0006f	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00072	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 909  : 		}

  00075	48 8b c7	 mov	 rax, rdi
  00078	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00081	5f		 pop	 rdi
  00082	c3		 ret	 0
$LN407@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00083	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 909  : 		}

  00086	48 8b c7	 mov	 rax, rdi
  00089	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00092	5f		 pop	 rdi
  00093	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 830  : 		{	// construct from [_Ptr, <null>)

$LN147:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	45 33 c0	 xor	 r8d, r8d

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00009	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00011	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8

; 830  : 		{	// construct from [_Ptr, <null>)

  00015	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00018	44 88 01	 mov	 BYTE PTR [rcx], r8b

; 523  : 		return (*_First == 0 ? 0

  0001b	44 38 02	 cmp	 BYTE PTR [rdx], r8b
  0001e	74 0e		 je	 SHORT $LN144@basic_stri
  00020	49 83 c8 ff	 or	 r8, -1
$LL145@basic_stri:
  00024	49 ff c0	 inc	 r8
  00027	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  0002c	75 f6		 jne	 SHORT $LL145@basic_stri
$LN144@basic_stri:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0002e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}

  00033	48 8b c3	 mov	 rax, rbx
  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5b		 pop	 rbx
  0003b	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00000	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 790  : 		}

  00008	48 8b c1	 mov	 rax, rcx

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0000b	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00013	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 790  : 		}

  00016	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 774  : 		{	// construct by copying _Right

$LN159:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00006	48 c7 41 18 0f
	00 00 00	 mov	 QWORD PTR [rcx+24], 15

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  0000e	49 83 c9 ff	 or	 r9, -1

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00012	48 c7 41 10 00
	00 00 00	 mov	 QWORD PTR [rcx+16], 0

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  0001a	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0001d	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 774  : 		{	// construct by copying _Right

  00020	48 8b d9	 mov	 rbx, rcx

; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);

  00023	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 777  : 		}

  00028	48 8b c3	 mov	 rax, rbx
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5b		 pop	 rbx
  00030	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z
_TEXT	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<, COMDAT

; 396  : 		{	// insert an unsigned long long

$LN992:
  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	41 56		 push	 r14
  00005	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000c	48 c7 44 24 60
	fe ff ff ff	 mov	 QWORD PTR $T5[rsp], -2
  00015	48 89 9c 24 b0
	00 00 00	 mov	 QWORD PTR [rsp+176], rbx
  0001d	4c 8b f2	 mov	 r14, rdx
  00020	48 8b d9	 mov	 rbx, rcx
  00023	48 89 4c 24 38	 mov	 QWORD PTR this$GSCopy$[rsp], rcx

; 397  : 		ios_base::iostate _State = ios_base::goodbit;

  00028	33 ff		 xor	 edi, edi
  0002a	89 7c 24 30	 mov	 DWORD PTR _State$[rsp], edi

; 99   : 			: _Myostr(_Ostr)

  0002e	48 89 4c 24 68	 mov	 QWORD PTR _Ok$[rsp], rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  00033	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00036	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0003a	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0003f	48 85 c9	 test	 rcx, rcx
  00042	74 07		 je	 SHORT $LN19@operator

; 102  : 				_Myostr.rdbuf()->_Lock();

  00044	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00047	ff 50 08	 call	 QWORD PTR [rax+8]
  0004a	90		 npad	 1
$LN19@operator:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0004b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0004e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00052	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00057	75 14		 jne	 SHORT $LN15@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  00059	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0005e	48 85 c9	 test	 rcx, rcx
  00061	74 0a		 je	 SHORT $LN15@operator
  00063	48 3b cb	 cmp	 rcx, rbx
  00066	74 05		 je	 SHORT $LN15@operator

; 125  : 				_Ostr.tie()->flush();

  00068	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
$LN15@operator:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0006d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00070	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00074	48 03 cb	 add	 rcx, rbx

; 339  : 		return (rdstate() == goodbit);

  00077	83 79 10 00	 cmp	 DWORD PTR [rcx+16], 0
  0007b	0f 94 c0	 sete	 al
  0007e	88 44 24 70	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 400  : 		if (_Ok)

  00082	84 c0		 test	 al, al
  00084	0f 84 9b 00 00
	00		 je	 $LN12@operator

; 401  : 			{	// state okay, use facet to insert
; 402  : 			const _Nput& _Nput_fac = _USE(this->getloc(), _Nput);

  0008a	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T4[rsp]
  0008f	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00094	90		 npad	 1
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >
  0009d	48 8b f0	 mov	 rsi, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  000a0	48 8b 4c 24 58	 mov	 rcx, QWORD PTR $T4[rsp+8]
  000a5	48 85 c9	 test	 rcx, rcx
  000a8	74 1a		 je	 SHORT $LN44@operator

; 432  : 			delete _Ptr->_Decref();

  000aa	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000ad	ff 50 10	 call	 QWORD PTR [rax+16]
  000b0	48 85 c0	 test	 rax, rax
  000b3	74 0f		 je	 SHORT $LN44@operator
  000b5	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000b8	ba 01 00 00 00	 mov	 edx, 1
  000bd	48 8b c8	 mov	 rcx, rax
  000c0	41 ff 10	 call	 QWORD PTR [r8]
  000c3	90		 npad	 1
$LN44@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 406  : 				_Myios::fill(), _Val).failed())

  000c4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c7	4c 63 48 04	 movsxd	 r9, DWORD PTR [rax+4]
  000cb	4c 03 cb	 add	 r9, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  000ce	49 8b 41 48	 mov	 rax, QWORD PTR [r9+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 627  : 		: _Failed(false), _Strbuf(_Sb)

  000d2	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000d7	48 89 44 24 48	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  000dc	41 0f b7 49 58	 movzx	 ecx, WORD PTR [r9+88]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1231 : 		return (do_put(_Dest, _Iosbase, _Fill, _Val));

  000e1	0f 28 44 24 40	 movaps	 xmm0, XMMWORD PTR $T2[rsp]
  000e6	66 0f 7f 44 24
	40		 movdqa	 XMMWORD PTR $T1[rsp], xmm0
  000ec	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000ef	4c 89 74 24 28	 mov	 QWORD PTR [rsp+40], r14
  000f4	66 89 4c 24 20	 mov	 WORD PTR [rsp+32], cx
  000f9	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000fe	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T3[rsp]
  00103	48 8b ce	 mov	 rcx, rsi
  00106	ff 50 30	 call	 QWORD PTR [rax+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 406  : 				_Myios::fill(), _Val).failed())

  00109	b8 04 00 00 00	 mov	 eax, 4
  0010e	80 7c 24 50 00	 cmp	 BYTE PTR $T3[rsp], 0
  00113	0f 45 f8	 cmovne	 edi, eax
  00116	89 7c 24 30	 mov	 DWORD PTR _State$[rsp], edi
  0011a	eb 09		 jmp	 SHORT $LN12@operator
$LN13@operator:

; 407  : 				_State |= ios_base::badbit;
; 408  : 			_CATCH_IO_END

  0011c	8b 7c 24 30	 mov	 edi, DWORD PTR _State$[rsp]
  00120	48 8b 5c 24 38	 mov	 rbx, QWORD PTR this$GSCopy$[rsp]
$LN12@operator:

; 409  : 			}
; 410  : 
; 411  : 		_Myios::setstate(_State);

  00125	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00128	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  0012c	48 03 cb	 add	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 59   : 		if (_State != goodbit)

  0012f	85 ff		 test	 edi, edi
  00131	74 18		 je	 SHORT $LN970@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00133	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00136	0b d7		 or	 edx, edi

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00138	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  0013d	75 03		 jne	 SHORT $LN976@operator
  0013f	83 ca 04	 or	 edx, 4
$LN976@operator:
  00142	45 33 c0	 xor	 r8d, r8d
  00145	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  0014a	90		 npad	 1
$LN970@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  0014b	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00150	84 c0		 test	 al, al
  00152	75 09		 jne	 SHORT $LN979@operator

; 133  : 				this->_Myostr._Osfx();

  00154	48 8b cb	 mov	 rcx, rbx
  00157	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
  0015c	90		 npad	 1
$LN979@operator:

; 107  : 			if (_Myostr.rdbuf() != 0)

  0015d	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00160	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00164	48 8b 4c 1a 48	 mov	 rcx, QWORD PTR [rdx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00169	48 85 c9	 test	 rcx, rcx
  0016c	74 07		 je	 SHORT $LN983@operator

; 108  : 				_Myostr.rdbuf()->_Unlock();

  0016e	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00171	ff 52 10	 call	 QWORD PTR [rdx+16]
  00174	90		 npad	 1
$LN983@operator:

; 412  : 		return (*this);

  00175	48 8b c3	 mov	 rax, rbx

; 413  : 		}

  00178	48 8b 9c 24 b0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+176]
  00180	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00187	41 5e		 pop	 r14
  00189	5f		 pop	 rdi
  0018a	5e		 pop	 rsi
  0018b	c3		 ret	 0
$LN990@operator:
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
  0000c	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
  00018	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0

; 407  : 				_State |= ios_base::badbit;
; 408  : 			_CATCH_IO_END

  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00033	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z$0:
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  0003a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003d	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00041	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00044	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00047	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0004a	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0004f	75 03		 jne	 SHORT $LN68@catch$0
  00051	83 c8 04	 or	 eax, 4
$LN68@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00054	83 e0 17	 and	 eax, 23
  00057	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  0005a	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0005d	75 09		 jne	 SHORT $LN71@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 407  : 				_State |= ios_base::badbit;
; 408  : 			_CATCH_IO_END

  0005f	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$0
  00066	eb 0a		 jmp	 SHORT $LN991@catch$0
$LN71@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00068	33 d2		 xor	 edx, edx
  0006a	33 c9		 xor	 ecx, ecx
  0006c	e8 00 00 00 00	 call	 _CxxThrowException
  00071	90		 npad	 1
$LN991@catch$0:
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
  00078	cc		 int	 3
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
  00079	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
  0007e	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
  0000c	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
  00018	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 408  : 			_CATCH_IO_END

  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00033	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z$0:
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  0003a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003d	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00041	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00044	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00047	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0004a	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0004f	75 03		 jne	 SHORT $LN68@catch$0
  00051	83 c8 04	 or	 eax, 4
$LN68@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00054	83 e0 17	 and	 eax, 23
  00057	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  0005a	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0005d	75 09		 jne	 SHORT $LN71@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 408  : 			_CATCH_IO_END

  0005f	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$0
  00066	eb 0a		 jmp	 SHORT $LN991@catch$0
$LN71@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00068	33 d2		 xor	 edx, edx
  0006a	33 c9		 xor	 ecx, ecx
  0006c	e8 00 00 00 00	 call	 _CxxThrowException
  00071	90		 npad	 1
$LN991@catch$0:
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
  00078	cc		 int	 3
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
  00079	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
  0007e	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_K@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z
_TEXT	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<, COMDAT

; 316  : 		{	// insert an unsigned int

$LN992:
  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	41 56		 push	 r14
  00005	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000c	48 c7 44 24 60
	fe ff ff ff	 mov	 QWORD PTR $T5[rsp], -2
  00015	48 89 9c 24 b0
	00 00 00	 mov	 QWORD PTR [rsp+176], rbx
  0001d	44 8b f2	 mov	 r14d, edx
  00020	48 8b d9	 mov	 rbx, rcx
  00023	48 89 4c 24 38	 mov	 QWORD PTR this$GSCopy$[rsp], rcx

; 317  : 		ios_base::iostate _State = ios_base::goodbit;

  00028	33 ff		 xor	 edi, edi
  0002a	89 7c 24 30	 mov	 DWORD PTR _State$[rsp], edi

; 99   : 			: _Myostr(_Ostr)

  0002e	48 89 4c 24 68	 mov	 QWORD PTR _Ok$[rsp], rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  00033	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00036	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0003a	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0003f	48 85 c9	 test	 rcx, rcx
  00042	74 07		 je	 SHORT $LN19@operator

; 102  : 				_Myostr.rdbuf()->_Lock();

  00044	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00047	ff 50 08	 call	 QWORD PTR [rax+8]
  0004a	90		 npad	 1
$LN19@operator:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0004b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0004e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00052	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00057	75 14		 jne	 SHORT $LN15@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  00059	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0005e	48 85 c9	 test	 rcx, rcx
  00061	74 0a		 je	 SHORT $LN15@operator
  00063	48 3b cb	 cmp	 rcx, rbx
  00066	74 05		 je	 SHORT $LN15@operator

; 125  : 				_Ostr.tie()->flush();

  00068	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
$LN15@operator:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0006d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00070	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00074	48 03 cb	 add	 rcx, rbx

; 339  : 		return (rdstate() == goodbit);

  00077	83 79 10 00	 cmp	 DWORD PTR [rcx+16], 0
  0007b	0f 94 c0	 sete	 al
  0007e	88 44 24 70	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 320  : 		if (_Ok)

  00082	84 c0		 test	 al, al
  00084	0f 84 9b 00 00
	00		 je	 $LN12@operator

; 321  : 			{	// state okay, use facet to insert
; 322  : 			const _Nput& _Nput_fac = _USE(this->getloc(), _Nput);

  0008a	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T4[rsp]
  0008f	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00094	90		 npad	 1
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z ; std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >
  0009d	48 8b f0	 mov	 rsi, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  000a0	48 8b 4c 24 58	 mov	 rcx, QWORD PTR $T4[rsp+8]
  000a5	48 85 c9	 test	 rcx, rcx
  000a8	74 1a		 je	 SHORT $LN44@operator

; 432  : 			delete _Ptr->_Decref();

  000aa	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000ad	ff 50 10	 call	 QWORD PTR [rax+16]
  000b0	48 85 c0	 test	 rax, rax
  000b3	74 0f		 je	 SHORT $LN44@operator
  000b5	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000b8	ba 01 00 00 00	 mov	 edx, 1
  000bd	48 8b c8	 mov	 rcx, rax
  000c0	41 ff 10	 call	 QWORD PTR [r8]
  000c3	90		 npad	 1
$LN44@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 326  : 				_Myios::fill(), (unsigned long)_Val).failed())

  000c4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c7	4c 63 48 04	 movsxd	 r9, DWORD PTR [rax+4]
  000cb	4c 03 cb	 add	 r9, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  000ce	49 8b 41 48	 mov	 rax, QWORD PTR [r9+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 627  : 		: _Failed(false), _Strbuf(_Sb)

  000d2	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000d7	48 89 44 24 48	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  000dc	41 0f b7 49 58	 movzx	 ecx, WORD PTR [r9+88]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1219 : 		return (do_put(_Dest, _Iosbase, _Fill, _Val));

  000e1	0f 28 44 24 40	 movaps	 xmm0, XMMWORD PTR $T2[rsp]
  000e6	66 0f 7f 44 24
	40		 movdqa	 XMMWORD PTR $T1[rsp], xmm0
  000ec	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000ef	44 89 74 24 28	 mov	 DWORD PTR [rsp+40], r14d
  000f4	66 89 4c 24 20	 mov	 WORD PTR [rsp+32], cx
  000f9	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000fe	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T3[rsp]
  00103	48 8b ce	 mov	 rcx, rsi
  00106	ff 50 40	 call	 QWORD PTR [rax+64]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 326  : 				_Myios::fill(), (unsigned long)_Val).failed())

  00109	b8 04 00 00 00	 mov	 eax, 4
  0010e	80 7c 24 50 00	 cmp	 BYTE PTR $T3[rsp], 0
  00113	0f 45 f8	 cmovne	 edi, eax
  00116	89 7c 24 30	 mov	 DWORD PTR _State$[rsp], edi
  0011a	eb 09		 jmp	 SHORT $LN12@operator
$LN13@operator:

; 327  : 				_State |= ios_base::badbit;
; 328  : 			_CATCH_IO_END

  0011c	8b 7c 24 30	 mov	 edi, DWORD PTR _State$[rsp]
  00120	48 8b 5c 24 38	 mov	 rbx, QWORD PTR this$GSCopy$[rsp]
$LN12@operator:

; 329  : 			}
; 330  : 
; 331  : 		_Myios::setstate(_State);

  00125	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00128	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  0012c	48 03 cb	 add	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 59   : 		if (_State != goodbit)

  0012f	85 ff		 test	 edi, edi
  00131	74 18		 je	 SHORT $LN970@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00133	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00136	0b d7		 or	 edx, edi

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00138	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  0013d	75 03		 jne	 SHORT $LN976@operator
  0013f	83 ca 04	 or	 edx, 4
$LN976@operator:
  00142	45 33 c0	 xor	 r8d, r8d
  00145	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  0014a	90		 npad	 1
$LN970@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  0014b	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00150	84 c0		 test	 al, al
  00152	75 09		 jne	 SHORT $LN979@operator

; 133  : 				this->_Myostr._Osfx();

  00154	48 8b cb	 mov	 rcx, rbx
  00157	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
  0015c	90		 npad	 1
$LN979@operator:

; 107  : 			if (_Myostr.rdbuf() != 0)

  0015d	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00160	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00164	48 8b 4c 1a 48	 mov	 rcx, QWORD PTR [rdx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00169	48 85 c9	 test	 rcx, rcx
  0016c	74 07		 je	 SHORT $LN983@operator

; 108  : 				_Myostr.rdbuf()->_Unlock();

  0016e	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00171	ff 52 10	 call	 QWORD PTR [rdx+16]
  00174	90		 npad	 1
$LN983@operator:

; 332  : 		return (*this);

  00175	48 8b c3	 mov	 rax, rbx

; 333  : 		}

  00178	48 8b 9c 24 b0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+176]
  00180	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00187	41 5e		 pop	 r14
  00189	5f		 pop	 rdi
  0018a	5e		 pop	 rsi
  0018b	c3		 ret	 0
$LN990@operator:
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
  0000c	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
  00018	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0

; 327  : 				_State |= ios_base::badbit;
; 328  : 			_CATCH_IO_END

  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00033	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z$0:
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  0003a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003d	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00041	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00044	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00047	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0004a	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0004f	75 03		 jne	 SHORT $LN68@catch$0
  00051	83 c8 04	 or	 eax, 4
$LN68@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00054	83 e0 17	 and	 eax, 23
  00057	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  0005a	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0005d	75 09		 jne	 SHORT $LN71@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 327  : 				_State |= ios_base::badbit;
; 328  : 			_CATCH_IO_END

  0005f	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$0
  00066	eb 0a		 jmp	 SHORT $LN991@catch$0
$LN71@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00068	33 d2		 xor	 edx, edx
  0006a	33 c9		 xor	 ecx, ecx
  0006c	e8 00 00 00 00	 call	 _CxxThrowException
  00071	90		 npad	 1
$LN991@catch$0:
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
  00078	cc		 int	 3
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
  00079	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
  0007e	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$2@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
  0000c	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
  00018	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR $T4[rdx]
  0001f	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$1@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
  00024	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 328  : 			_CATCH_IO_END

  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00033	48 8b ea	 mov	 rbp, rdx
__catch$??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z$0:
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  0003a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003d	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00041	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00044	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00047	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0004a	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0004f	75 03		 jne	 SHORT $LN68@catch$0
  00051	83 c8 04	 or	 eax, 4
$LN68@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00054	83 e0 17	 and	 eax, 23
  00057	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  0005a	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0005d	75 09		 jne	 SHORT $LN71@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 328  : 			_CATCH_IO_END

  0005f	48 8d 05 00 00
	00 00		 lea	 rax, $LN13@catch$0
  00066	eb 0a		 jmp	 SHORT $LN991@catch$0
$LN71@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00068	33 d2		 xor	 edx, edx
  0006a	33 c9		 xor	 ecx, ecx
  0006c	e8 00 00 00 00	 call	 _CxxThrowException
  00071	90		 npad	 1
$LN991@catch$0:
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
  00078	cc		 int	 3
?catch$0@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
  00079	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$216@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$216
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 48
this$GSCopy$ = 56
$T1 = 64
$T2 = 64
$T3 = 80
$T4 = 80
$T5 = 96
_Ok$ = 104
this$ = 160
_Val$ = 168
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
  0007e	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$217@?0???6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@I@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<'::`1'::dtor$217
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Pfn$ = 56
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<, COMDAT

; 210  : 		{	// call ios_base manipulator

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 211  : 		_DEBUG_POINTER(_Pfn);
; 212  : 		(*_Pfn)(*(ios_base *)this);

  00009	48 85 c9	 test	 rcx, rcx
  0000c	75 0b		 jne	 SHORT $LN3@operator
  0000e	ff d2		 call	 rdx

; 213  : 		return (*this);

  00010	48 8b c3	 mov	 rax, rbx

; 214  : 		}

  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5b		 pop	 rbx
  00018	c3		 ret	 0
$LN3@operator:

; 211  : 		_DEBUG_POINTER(_Pfn);
; 212  : 		(*_Pfn)(*(ios_base *)this);

  00019	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0001c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00020	48 03 cb	 add	 rcx, rbx
  00023	ff d2		 call	 rdx

; 213  : 		return (*this);

  00025	48 8b c3	 mov	 rax, rbx

; 214  : 		}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5b		 pop	 rbx
  0002d	c3		 ret	 0
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
_TEXT	SEGMENT
this$ = 8
_Pfn$dead$ = 16
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<, COMDAT

; 198  : 		_DEBUG_POINTER(_Pfn);
; 199  : 		return ((*_Pfn)(*this));

  00000	e9 00 00 00 00	 jmp	 ??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z ; std::endl<wchar_t,std::char_traits<wchar_t> >
??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::operator<<
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool, COMDAT

; 142  : 			return (_Ok);

  00000	0f b6 41 08	 movzx	 eax, BYTE PTR [rcx+8]

; 143  : 			}

  00004	c3		 ret	 0
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry, COMDAT

; 130  : 			{	// destroy the object

$LN13:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 131  :  #if _HAS_EXCEPTIONS
; 132  : 			if (!_XSTD uncaught_exception())

  00012	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00017	90		 npad	 1
  00018	84 c0		 test	 al, al
  0001a	75 09		 jne	 SHORT $LN2@sentry

; 133  : 				this->_Myostr._Osfx();

  0001c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0001f	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
  00024	90		 npad	 1
$LN2@sentry:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00025	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00028	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0002b	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0002f	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00034	48 85 c9	 test	 rcx, rcx
  00037	74 07		 je	 SHORT $LN12@sentry

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00039	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0003c	ff 50 10	 call	 QWORD PTR [rax+16]
  0003f	90		 npad	 1
$LN12@sentry:

; 134  : 
; 135  :  #else /* _HAS_EXCEPTIONS */
; 136  : 			this->_Myostr._Osfx();
; 137  :  #endif /* _HAS_EXCEPTIONS */
; 138  : 			}

  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5b		 pop	 rbx
  00045	c3		 ret	 0
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0???1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry'::`1'::dtor$0
  00000	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$0@?0???1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry, COMDAT

; 123  : 			{	// construct locking and testing stream

$LN26:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00018	48 8b da	 mov	 rbx, rdx
  0001b	48 8b f9	 mov	 rdi, rcx

; 99   : 			: _Myostr(_Ostr)

  0001e	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 101  : 			if (_Myostr.rdbuf() != 0)

  00021	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00024	4c 63 40 04	 movsxd	 r8, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00028	49 8b 4c 10 48	 mov	 rcx, QWORD PTR [r8+rdx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0002d	48 85 c9	 test	 rcx, rcx
  00030	74 07		 je	 SHORT $LN6@sentry

; 102  : 				_Myostr.rdbuf()->_Lock();

  00032	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00035	ff 50 08	 call	 QWORD PTR [rax+8]
  00038	90		 npad	 1
$LN6@sentry:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00039	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00040	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00045	75 14		 jne	 SHORT $LN2@sentry
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  00047	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0004c	48 85 c9	 test	 rcx, rcx
  0004f	74 0a		 je	 SHORT $LN2@sentry
  00051	48 3b cb	 cmp	 rcx, rbx
  00054	74 05		 je	 SHORT $LN2@sentry

; 125  : 				_Ostr.tie()->flush();

  00056	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
$LN2@sentry:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0005b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0005e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00062	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
  00067	0f 94 c0	 sete	 al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0006a	88 47 08	 mov	 BYTE PTR [rdi+8], al

; 127  : 			}

  0006d	48 8b c7	 mov	 rax, rdi
  00070	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00075	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00079	5f		 pop	 rdi
  0007a	c3		 ret	 0
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z
_TEXT	SEGMENT
$T1 = 64
_Buf$ = 80
__$ArrayPad$ = 144
this$ = 192
__$ReturnUdt$ = 200
_Dest$ = 208
_Iosbase$ = 216
_Fill$ = 224
_Val$ = 232
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1373 : 		{	// put formatted void pointer to _Dest

$LN4:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1374 : 		char _Buf[2 * _MAX_INT_DIG];
; 1375 : 
; 1376 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00021	49 8b f9	 mov	 rdi, r9
  00024	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02BBAHNLBA@?$CFp?$AA@
  0002b	4c 8b 8c 24 e8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00033	48 8b f2	 mov	 rsi, rdx
  00036	48 8b d9	 mov	 rbx, rcx
  00039	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  0003e	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Buf$[rsp]
  00048	e8 00 00 00 00	 call	 sprintf_s
  0004d	48 63 c8	 movsxd	 rcx, eax
  00050	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  00055	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  0005a	48 8d 44 24 50	 lea	 rax, QWORD PTR _Buf$[rsp]
  0005f	0f b7 8c 24 e0
	00 00 00	 movzx	 ecx, WORD PTR _Fill$[rsp]
  00067	4c 8b cf	 mov	 r9, rdi
  0006a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0006f	48 8b d6	 mov	 rdx, rsi
  00072	66 89 4c 24 20	 mov	 WORD PTR [rsp+32], cx
  00077	48 8b cb	 mov	 rcx, rbx
  0007a	e8 00 00 00 00	 call	 ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput
  0007f	48 8b c6	 mov	 rax, rsi

; 1377 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), "%p", _Val)));
; 1378 : 		}

  00082	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0008a	48 33 cc	 xor	 rcx, rsp
  0008d	e8 00 00 00 00	 call	 __security_check_cookie
  00092	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00099	5f		 pop	 rdi
  0009a	5e		 pop	 rsi
  0009b	5b		 pop	 rbx
  0009c	c3		 ret	 0
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBX@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z
_TEXT	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1349 : 		{	// put formatted long double to _Dest

$LN419:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	41 56		 push	 r14
  00008	41 57		 push	 r15
  0000a	48 8d 68 b1	 lea	 rbp, QWORD PTR [rax-79]
  0000e	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00015	48 c7 45 cf fe
	ff ff ff	 mov	 QWORD PTR $T2[rbp-121], -2
  0001d	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00021	0f 29 70 c8	 movaps	 XMMWORD PTR [rax-56], xmm6
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 45 0f	 mov	 QWORD PTR __$ArrayPad$[rbp-121], rax
  00033	49 8b f9	 mov	 rdi, r9
  00036	4d 8b f8	 mov	 r15, r8
  00039	48 8b f2	 mov	 rsi, rdx
  0003c	4c 8b f1	 mov	 r14, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0003f	41 ba 0f 00 00
	00		 mov	 r10d, 15
  00045	4c 89 55 ff	 mov	 QWORD PTR _Buf$[rbp-97], r10

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00049	45 33 c9	 xor	 r9d, r9d
  0004c	4c 89 4d f7	 mov	 QWORD PTR _Buf$[rbp-105], r9
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00050	44 88 4d e7	 mov	 BYTE PTR _Buf$[rbp-121], r9b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00054	8b 47 18	 mov	 eax, DWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1353 : 			== ios_base::fixed;

  00057	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  0005c	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00061	0f 94 c0	 sete	 al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 411  : 		return (_Prec);

  00064	48 8b 5f 20	 mov	 rbx, QWORD PTR [rdi+32]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1354 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  00068	f2 0f 10 75 7f	 movsd	 xmm6, QWORD PTR _Val$[rbp-121]
  0006d	48 85 db	 test	 rbx, rbx
  00070	7f 0d		 jg	 SHORT $LN4@do_put
  00072	84 c0		 test	 al, al
  00074	75 09		 jne	 SHORT $LN4@do_put
  00076	bb 06 00 00 00	 mov	 ebx, 6

; 1355 : 			? 6 : _Iosbase.precision();	// desired precision
; 1356 : 		size_t _Bufsize = (size_t)_Precision;

  0007b	8b d3		 mov	 edx, ebx

; 1354 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  0007d	eb 54		 jmp	 SHORT $LN2@do_put
$LN4@do_put:

; 1355 : 			? 6 : _Iosbase.precision();	// desired precision
; 1356 : 		size_t _Bufsize = (size_t)_Precision;

  0007f	48 8b d3	 mov	 rdx, rbx

; 1357 : 		if (_Isfixed && 1e10 < _CSTD fabsl(_Val))

  00082	84 c0		 test	 al, al
  00084	74 4d		 je	 SHORT $LN2@do_put
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h

; 842  :     return fabs((double)_X);

  00086	0f 28 c6	 movaps	 xmm0, xmm6
  00089	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1357 : 		if (_Isfixed && 1e10 < _CSTD fabsl(_Val))

  00090	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4202a05f20000000
  00098	76 39		 jbe	 SHORT $LN2@do_put
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h

; 863  :     return frexp((double)_X, _Y);

  0009a	48 8d 55 c7	 lea	 rdx, QWORD PTR _Ptwo$1[rbp-121]
  0009e	0f 28 c6	 movaps	 xmm0, xmm6
  000a1	e8 00 00 00 00	 call	 frexp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1361 : 			_Bufsize += _CSTD abs(_Ptwo) * 30103L / 100000L;

  000a6	8b 45 c7	 mov	 eax, DWORD PTR _Ptwo$1[rbp-121]
  000a9	99		 cdq
  000aa	33 c2		 xor	 eax, edx
  000ac	2b c2		 sub	 eax, edx
  000ae	69 c8 97 75 00
	00		 imul	 ecx, eax, 30103		; 00007597H
  000b4	b8 89 b5 f8 14	 mov	 eax, 351843721		; 14f8b589H
  000b9	f7 e9		 imul	 ecx
  000bb	c1 fa 0d	 sar	 edx, 13
  000be	8b c2		 mov	 eax, edx
  000c0	c1 e8 1f	 shr	 eax, 31
  000c3	03 d0		 add	 edx, eax
  000c5	48 63 d2	 movsxd	 rdx, edx
  000c8	48 03 d3	 add	 rdx, rbx
  000cb	4c 8b 55 ff	 mov	 r10, QWORD PTR _Buf$[rbp-97]
  000cf	4c 8b 4d f7	 mov	 r9, QWORD PTR _Buf$[rbp-105]
$LN2@do_put:

; 1362 : 			}
; 1363 : 		_Buf.resize(_Bufsize + 50);	// add fudge factor

  000d3	48 83 c2 32	 add	 rdx, 50			; 00000032H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1758 : 		if (_Newsize <= this->_Mysize())

  000d7	49 3b d1	 cmp	 rdx, r9
  000da	77 17		 ja	 SHORT $LN160@do_put

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000dc	48 89 55 f7	 mov	 QWORD PTR _Buf$[rbp-105], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e0	48 8d 45 e7	 lea	 rax, QWORD PTR _Buf$[rbp-121]
  000e4	49 83 fa 10	 cmp	 r10, 16
  000e8	48 0f 43 45 e7	 cmovae	 rax, QWORD PTR _Buf$[rbp-121]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ed	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1760 : 		else

  000f1	eb 0f		 jmp	 SHORT $LN161@do_put
$LN160@do_put:

; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  000f3	49 2b d1	 sub	 rdx, r9
  000f6	45 33 c0	 xor	 r8d, r8d
  000f9	48 8d 4d e7	 lea	 rcx, QWORD PTR _Buf$[rbp-121]
  000fd	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN161@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00102	8b 57 18	 mov	 edx, DWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1385 : 		*_Ptr++ = '%';

  00105	c6 45 07 25	 mov	 BYTE PTR _Fmt$[rbp-121], 37 ; 00000025H
  00109	48 8d 45 08	 lea	 rax, QWORD PTR _Fmt$[rbp-120]

; 1386 : 
; 1387 : 		if (_Flags & ios_base::showpos)

  0010d	f6 c2 20	 test	 dl, 32			; 00000020H
  00110	74 08		 je	 SHORT $LN216@do_put

; 1388 : 			*_Ptr++ = '+';

  00112	c6 45 08 2b	 mov	 BYTE PTR _Fmt$[rbp-120], 43 ; 0000002bH
  00116	48 8d 45 09	 lea	 rax, QWORD PTR _Fmt$[rbp-119]
$LN216@do_put:

; 1389 : 		if (_Flags & ios_base::showpoint)

  0011a	f6 c2 10	 test	 dl, 16
  0011d	74 06		 je	 SHORT $LN217@do_put

; 1390 : 			*_Ptr++ = '#';

  0011f	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  00122	48 ff c0	 inc	 rax
$LN217@do_put:

; 1391 : 		*_Ptr++ = '.';

  00125	66 c7 00 2e 2a	 mov	 WORD PTR [rax], 10798	; 00002a2eH

; 1392 : 		*_Ptr++ = '*';	// for precision argument
; 1393 : 		if (_Spec != '\0')
; 1394 : 			*_Ptr++ = _Spec;	// 'L' qualifier for long double only

  0012a	c6 40 02 4c	 mov	 BYTE PTR [rax+2], 76	; 0000004cH

; 1395 : 
; 1396 : 		ios_base::fmtflags _Ffl = _Flags & ios_base::floatfield;

  0012e	8b ca		 mov	 ecx, edx
  00130	81 e1 00 30 00
	00		 and	 ecx, 12288		; 00003000H

; 1397 : 		if (_Flags & ios_base::uppercase)

  00136	f6 c2 04	 test	 dl, 4
  00139	74 23		 je	 SHORT $LN219@do_put

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0013b	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  00141	75 04		 jne	 SHORT $LN224@do_put
  00143	b2 66		 mov	 dl, 102			; 00000066H
  00145	eb 44		 jmp	 SHORT $LN227@do_put
$LN224@do_put:
  00147	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  0014d	75 04		 jne	 SHORT $LN222@do_put
  0014f	b2 41		 mov	 dl, 65			; 00000041H
  00151	eb 38		 jmp	 SHORT $LN227@do_put
$LN222@do_put:
  00153	ba 47 00 00 00	 mov	 edx, 71			; 00000047H
  00158	44 8d 42 fe	 lea	 r8d, QWORD PTR [rdx-2]

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else

  0015c	eb 23		 jmp	 SHORT $LN418@do_put
$LN219@do_put:

; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0015e	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  00164	75 04		 jne	 SHORT $LN228@do_put
  00166	b2 66		 mov	 dl, 102			; 00000066H
  00168	eb 21		 jmp	 SHORT $LN227@do_put
$LN228@do_put:
  0016a	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  00170	75 04		 jne	 SHORT $LN226@do_put
  00172	b2 61		 mov	 dl, 97			; 00000061H
  00174	eb 15		 jmp	 SHORT $LN227@do_put
$LN226@do_put:
  00176	ba 67 00 00 00	 mov	 edx, 103		; 00000067H
  0017b	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
$LN418@do_put:
  00181	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00187	41 0f 44 d0	 cmove	 edx, r8d
$LN227@do_put:
  0018b	88 50 03	 mov	 BYTE PTR [rax+3], dl
  0018e	48 83 c0 04	 add	 rax, 4

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  00192	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00195	48 8d 4d e7	 lea	 rcx, QWORD PTR _Buf$[rbp-121]
  00199	48 83 7d ff 10	 cmp	 QWORD PTR _Buf$[rbp-97], 16
  0019e	48 0f 43 4d e7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-121]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1365 : 		int _Ngen = _CSTD sprintf_s((char *)_Buf.c_str(), _Buf.size(),

  001a3	f2 0f 11 74 24
	20		 movsd	 QWORD PTR [rsp+32], xmm6
  001a9	44 8b cb	 mov	 r9d, ebx
  001ac	4c 8d 45 07	 lea	 r8, QWORD PTR _Fmt$[rbp-121]
  001b0	48 8b 55 f7	 mov	 rdx, QWORD PTR _Buf$[rbp-105]
  001b4	e8 00 00 00 00	 call	 sprintf_s

; 1368 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001b9	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  001bd	0f 29 45 d7	 movaps	 XMMWORD PTR $T3[rbp-121], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  001c1	48 8d 4d e7	 lea	 rcx, QWORD PTR _Buf$[rbp-121]
  001c5	48 83 7d ff 10	 cmp	 QWORD PTR _Buf$[rbp-97], 16
  001ca	48 0f 43 4d e7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-121]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1368 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001cf	48 98		 cdqe
  001d1	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001d6	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001db	0f b7 45 77	 movzx	 eax, WORD PTR _Fill$[rbp-121]
  001df	66 89 44 24 20	 mov	 WORD PTR [rsp+32], ax
  001e4	4c 8b cf	 mov	 r9, rdi
  001e7	4c 8d 45 d7	 lea	 r8, QWORD PTR $T3[rbp-121]
  001eb	48 8b d6	 mov	 rdx, rsi
  001ee	49 8b ce	 mov	 rcx, r14
  001f1	e8 00 00 00 00	 call	 ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput
  001f6	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  001f7	48 8b 45 ff	 mov	 rax, QWORD PTR _Buf$[rbp-97]
  001fb	48 83 f8 10	 cmp	 rax, 16
  001ff	72 59		 jb	 SHORT $LN371@do_put

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00201	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00204	48 8b 4d e7	 mov	 rcx, QWORD PTR _Buf$[rbp-121]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00208	48 83 f8 ff	 cmp	 rax, -1
  0020c	76 06		 jbe	 SHORT $LN365@do_put
  0020e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00213	cc		 int	 3
$LN365@do_put:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00214	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0021a	72 39		 jb	 SHORT $LN366@do_put

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0021c	f6 45 e7 1f	 test	 BYTE PTR _Buf$[rbp-121], 31
  00220	74 06		 je	 SHORT $LN367@do_put
  00222	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00227	cc		 int	 3
$LN367@do_put:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00228	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0022c	48 3b c1	 cmp	 rax, rcx
  0022f	72 06		 jb	 SHORT $LN368@do_put
  00231	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00236	cc		 int	 3
$LN368@do_put:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00237	48 2b c8	 sub	 rcx, rax
  0023a	48 83 f9 08	 cmp	 rcx, 8
  0023e	73 06		 jae	 SHORT $LN369@do_put
  00240	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00245	cc		 int	 3
$LN369@do_put:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00246	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0024a	76 06		 jbe	 SHORT $LN370@do_put
  0024c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00251	cc		 int	 3
$LN370@do_put:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00252	48 8b c8	 mov	 rcx, rax
$LN366@do_put:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00255	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN371@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1368 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  0025a	48 8b c6	 mov	 rax, rsi

; 1369 : 		}

  0025d	48 8b 4d 0f	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-121]
  00261	48 33 cc	 xor	 rcx, rsp
  00264	e8 00 00 00 00	 call	 __security_check_cookie
  00269	48 8b 9c 24 d0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+208]
  00271	0f 28 b4 24 90
	00 00 00	 movaps	 xmm6, XMMWORD PTR [rsp+144]
  00279	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00280	41 5f		 pop	 r15
  00282	41 5e		 pop	 r14
  00284	5f		 pop	 rdi
  00285	5e		 pop	 rsi
  00286	5d		 pop	 rbp
  00287	c3		 ret	 0
$LN417@do_put:
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WO@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z
_TEXT	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1325 : 		{	// put formatted double to _Dest

$LN415:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	41 56		 push	 r14
  00008	41 57		 push	 r15
  0000a	48 8d 68 b1	 lea	 rbp, QWORD PTR [rax-79]
  0000e	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00015	48 c7 45 cf fe
	ff ff ff	 mov	 QWORD PTR $T2[rbp-121], -2
  0001d	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00021	0f 29 70 c8	 movaps	 XMMWORD PTR [rax-56], xmm6
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 45 0f	 mov	 QWORD PTR __$ArrayPad$[rbp-121], rax
  00033	49 8b f9	 mov	 rdi, r9
  00036	4d 8b f8	 mov	 r15, r8
  00039	48 8b f2	 mov	 rsi, rdx
  0003c	4c 8b f1	 mov	 r14, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0003f	41 ba 0f 00 00
	00		 mov	 r10d, 15
  00045	4c 89 55 ff	 mov	 QWORD PTR _Buf$[rbp-97], r10

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00049	45 33 c9	 xor	 r9d, r9d
  0004c	4c 89 4d f7	 mov	 QWORD PTR _Buf$[rbp-105], r9
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00050	44 88 4d e7	 mov	 BYTE PTR _Buf$[rbp-121], r9b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00054	8b 47 18	 mov	 eax, DWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1329 : 			== ios_base::fixed;

  00057	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  0005c	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00061	0f 94 c0	 sete	 al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 411  : 		return (_Prec);

  00064	48 8b 5f 20	 mov	 rbx, QWORD PTR [rdi+32]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1330 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  00068	f2 0f 10 75 7f	 movsd	 xmm6, QWORD PTR _Val$[rbp-121]
  0006d	48 85 db	 test	 rbx, rbx
  00070	7f 0d		 jg	 SHORT $LN4@do_put
  00072	84 c0		 test	 al, al
  00074	75 09		 jne	 SHORT $LN4@do_put
  00076	bb 06 00 00 00	 mov	 ebx, 6

; 1331 : 			? 6 : _Iosbase.precision();	// desired precision
; 1332 : 		size_t _Bufsize = (size_t)_Precision;

  0007b	8b d3		 mov	 edx, ebx

; 1330 : 		streamsize _Precision = _Iosbase.precision() <= 0 && !_Isfixed

  0007d	eb 54		 jmp	 SHORT $LN2@do_put
$LN4@do_put:

; 1331 : 			? 6 : _Iosbase.precision();	// desired precision
; 1332 : 		size_t _Bufsize = (size_t)_Precision;

  0007f	48 8b d3	 mov	 rdx, rbx

; 1333 : 		if (_Isfixed && 1e10 < _CSTD fabs(_Val))

  00082	84 c0		 test	 al, al
  00084	74 4d		 je	 SHORT $LN2@do_put
  00086	0f 28 c6	 movaps	 xmm0, xmm6
  00089	0f 54 05 00 00
	00 00		 andps	 xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
  00090	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4202a05f20000000
  00098	76 39		 jbe	 SHORT $LN2@do_put

; 1334 : 			{	// f or F format
; 1335 : 			int _Ptwo;
; 1336 : 			(void)_CSTD frexp(_Val, &_Ptwo);

  0009a	48 8d 55 c7	 lea	 rdx, QWORD PTR _Ptwo$1[rbp-121]
  0009e	0f 28 c6	 movaps	 xmm0, xmm6
  000a1	e8 00 00 00 00	 call	 frexp

; 1337 : 			_Bufsize += _CSTD abs(_Ptwo) * 30103L / 100000L;

  000a6	8b 45 c7	 mov	 eax, DWORD PTR _Ptwo$1[rbp-121]
  000a9	99		 cdq
  000aa	33 c2		 xor	 eax, edx
  000ac	2b c2		 sub	 eax, edx
  000ae	69 c8 97 75 00
	00		 imul	 ecx, eax, 30103		; 00007597H
  000b4	b8 89 b5 f8 14	 mov	 eax, 351843721		; 14f8b589H
  000b9	f7 e9		 imul	 ecx
  000bb	c1 fa 0d	 sar	 edx, 13
  000be	8b c2		 mov	 eax, edx
  000c0	c1 e8 1f	 shr	 eax, 31
  000c3	03 d0		 add	 edx, eax
  000c5	48 63 d2	 movsxd	 rdx, edx
  000c8	48 03 d3	 add	 rdx, rbx
  000cb	4c 8b 55 ff	 mov	 r10, QWORD PTR _Buf$[rbp-97]
  000cf	4c 8b 4d f7	 mov	 r9, QWORD PTR _Buf$[rbp-105]
$LN2@do_put:

; 1338 : 			}
; 1339 : 		_Buf.resize(_Bufsize + 50);	// add fudge factor

  000d3	48 83 c2 32	 add	 rdx, 50			; 00000032H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1758 : 		if (_Newsize <= this->_Mysize())

  000d7	49 3b d1	 cmp	 rdx, r9
  000da	77 17		 ja	 SHORT $LN156@do_put

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000dc	48 89 55 f7	 mov	 QWORD PTR _Buf$[rbp-105], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e0	48 8d 45 e7	 lea	 rax, QWORD PTR _Buf$[rbp-121]
  000e4	49 83 fa 10	 cmp	 r10, 16
  000e8	48 0f 43 45 e7	 cmovae	 rax, QWORD PTR _Buf$[rbp-121]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ed	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1760 : 		else

  000f1	eb 0f		 jmp	 SHORT $LN157@do_put
$LN156@do_put:

; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  000f3	49 2b d1	 sub	 rdx, r9
  000f6	45 33 c0	 xor	 r8d, r8d
  000f9	48 8d 4d e7	 lea	 rcx, QWORD PTR _Buf$[rbp-121]
  000fd	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN157@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00102	8b 57 18	 mov	 edx, DWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1385 : 		*_Ptr++ = '%';

  00105	c6 45 07 25	 mov	 BYTE PTR _Fmt$[rbp-121], 37 ; 00000025H
  00109	48 8d 45 08	 lea	 rax, QWORD PTR _Fmt$[rbp-120]

; 1386 : 
; 1387 : 		if (_Flags & ios_base::showpos)

  0010d	f6 c2 20	 test	 dl, 32			; 00000020H
  00110	74 08		 je	 SHORT $LN212@do_put

; 1388 : 			*_Ptr++ = '+';

  00112	c6 45 08 2b	 mov	 BYTE PTR _Fmt$[rbp-120], 43 ; 0000002bH
  00116	48 8d 45 09	 lea	 rax, QWORD PTR _Fmt$[rbp-119]
$LN212@do_put:

; 1389 : 		if (_Flags & ios_base::showpoint)

  0011a	f6 c2 10	 test	 dl, 16
  0011d	74 06		 je	 SHORT $LN213@do_put

; 1390 : 			*_Ptr++ = '#';

  0011f	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  00122	48 ff c0	 inc	 rax
$LN213@do_put:

; 1391 : 		*_Ptr++ = '.';

  00125	66 c7 00 2e 2a	 mov	 WORD PTR [rax], 10798	; 00002a2eH

; 1392 : 		*_Ptr++ = '*';	// for precision argument
; 1393 : 		if (_Spec != '\0')
; 1394 : 			*_Ptr++ = _Spec;	// 'L' qualifier for long double only
; 1395 : 
; 1396 : 		ios_base::fmtflags _Ffl = _Flags & ios_base::floatfield;

  0012a	8b ca		 mov	 ecx, edx
  0012c	81 e1 00 30 00
	00		 and	 ecx, 12288		; 00003000H

; 1397 : 		if (_Flags & ios_base::uppercase)

  00132	f6 c2 04	 test	 dl, 4
  00135	74 23		 je	 SHORT $LN215@do_put

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00137	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  0013d	75 04		 jne	 SHORT $LN220@do_put
  0013f	b2 66		 mov	 dl, 102			; 00000066H
  00141	eb 44		 jmp	 SHORT $LN223@do_put
$LN220@do_put:
  00143	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  00149	75 04		 jne	 SHORT $LN218@do_put
  0014b	b2 41		 mov	 dl, 65			; 00000041H
  0014d	eb 38		 jmp	 SHORT $LN223@do_put
$LN218@do_put:
  0014f	ba 47 00 00 00	 mov	 edx, 71			; 00000047H
  00154	44 8d 42 fe	 lea	 r8d, QWORD PTR [rdx-2]

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else

  00158	eb 23		 jmp	 SHORT $LN414@do_put
$LN215@do_put:

; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  0015a	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  00160	75 04		 jne	 SHORT $LN224@do_put
  00162	b2 66		 mov	 dl, 102			; 00000066H
  00164	eb 21		 jmp	 SHORT $LN223@do_put
$LN224@do_put:
  00166	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  0016c	75 04		 jne	 SHORT $LN222@do_put
  0016e	b2 61		 mov	 dl, 97			; 00000061H
  00170	eb 15		 jmp	 SHORT $LN223@do_put
$LN222@do_put:
  00172	ba 67 00 00 00	 mov	 edx, 103		; 00000067H
  00177	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
$LN414@do_put:
  0017d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00183	41 0f 44 d0	 cmove	 edx, r8d
$LN223@do_put:
  00187	88 50 02	 mov	 BYTE PTR [rax+2], dl
  0018a	48 83 c0 03	 add	 rax, 3

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  0018e	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00191	48 8d 4d e7	 lea	 rcx, QWORD PTR _Buf$[rbp-121]
  00195	48 83 7d ff 10	 cmp	 QWORD PTR _Buf$[rbp-97], 16
  0019a	48 0f 43 4d e7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-121]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1341 : 		int _Ngen = _CSTD sprintf_s((char *)_Buf.c_str(), _Buf.size(),

  0019f	f2 0f 11 74 24
	20		 movsd	 QWORD PTR [rsp+32], xmm6
  001a5	44 8b cb	 mov	 r9d, ebx
  001a8	4c 8d 45 07	 lea	 r8, QWORD PTR _Fmt$[rbp-121]
  001ac	48 8b 55 f7	 mov	 rdx, QWORD PTR _Buf$[rbp-105]
  001b0	e8 00 00 00 00	 call	 sprintf_s

; 1344 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001b5	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  001b9	0f 29 45 d7	 movaps	 XMMWORD PTR $T3[rbp-121], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  001bd	48 8d 4d e7	 lea	 rcx, QWORD PTR _Buf$[rbp-121]
  001c1	48 83 7d ff 10	 cmp	 QWORD PTR _Buf$[rbp-97], 16
  001c6	48 0f 43 4d e7	 cmovae	 rcx, QWORD PTR _Buf$[rbp-121]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1344 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  001cb	48 98		 cdqe
  001cd	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001d2	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001d7	0f b7 45 77	 movzx	 eax, WORD PTR _Fill$[rbp-121]
  001db	66 89 44 24 20	 mov	 WORD PTR [rsp+32], ax
  001e0	4c 8b cf	 mov	 r9, rdi
  001e3	4c 8d 45 d7	 lea	 r8, QWORD PTR $T3[rbp-121]
  001e7	48 8b d6	 mov	 rdx, rsi
  001ea	49 8b ce	 mov	 rcx, r14
  001ed	e8 00 00 00 00	 call	 ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput
  001f2	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  001f3	48 8b 45 ff	 mov	 rax, QWORD PTR _Buf$[rbp-97]
  001f7	48 83 f8 10	 cmp	 rax, 16
  001fb	72 59		 jb	 SHORT $LN367@do_put

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  001fd	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00200	48 8b 4d e7	 mov	 rcx, QWORD PTR _Buf$[rbp-121]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00204	48 83 f8 ff	 cmp	 rax, -1
  00208	76 06		 jbe	 SHORT $LN361@do_put
  0020a	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0020f	cc		 int	 3
$LN361@do_put:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00210	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00216	72 39		 jb	 SHORT $LN362@do_put

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00218	f6 45 e7 1f	 test	 BYTE PTR _Buf$[rbp-121], 31
  0021c	74 06		 je	 SHORT $LN363@do_put
  0021e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00223	cc		 int	 3
$LN363@do_put:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00224	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00228	48 3b c1	 cmp	 rax, rcx
  0022b	72 06		 jb	 SHORT $LN364@do_put
  0022d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00232	cc		 int	 3
$LN364@do_put:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00233	48 2b c8	 sub	 rcx, rax
  00236	48 83 f9 08	 cmp	 rcx, 8
  0023a	73 06		 jae	 SHORT $LN365@do_put
  0023c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00241	cc		 int	 3
$LN365@do_put:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00242	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00246	76 06		 jbe	 SHORT $LN366@do_put
  00248	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0024d	cc		 int	 3
$LN366@do_put:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0024e	48 8b c8	 mov	 rcx, rax
$LN362@do_put:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00251	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN367@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1344 : 		return (_Fput(_Dest, _Iosbase, _Fill, _Buf.c_str(), _Ngen));

  00256	48 8b c6	 mov	 rax, rsi

; 1345 : 		}

  00259	48 8b 4d 0f	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-121]
  0025d	48 33 cc	 xor	 rcx, rsp
  00260	e8 00 00 00 00	 call	 __security_check_cookie
  00265	48 8b 9c 24 d0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+208]
  0026d	0f 28 b4 24 90
	00 00 00	 movaps	 xmm6, XMMWORD PTR [rsp+144]
  00275	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  0027c	41 5f		 pop	 r15
  0027e	41 5e		 pop	 r14
  00280	5f		 pop	 rdi
  00281	5e		 pop	 rsi
  00282	5d		 pop	 rbp
  00283	c3		 ret	 0
$LN413@do_put:
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ptwo$1 = 64
$T2 = 72
$T3 = 80
_Buf$ = 96
_Fmt$ = 128
__$ArrayPad$ = 136
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Buf$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WN@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1315 : 		{	// put formatted unsigned long long to _Dest

$LN16:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00021	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00024	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00029	41 8b 51 18	 mov	 edx, DWORD PTR [r9+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1489 : 		*_Ptr++ = '%';

  0002d	48 8d 44 24 51	 lea	 rax, QWORD PTR _Fmt$[rsp+1]

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00032	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00037	49 8b d9	 mov	 rbx, r9
  0003a	48 8b f1	 mov	 rsi, rcx

; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	f6 c2 20	 test	 dl, 32			; 00000020H
  00040	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00042	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00047	48 8d 44 24 52	 lea	 rax, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004c	f6 c2 08	 test	 dl, 8
  0004f	74 06		 je	 SHORT $LN8@do_put

; 1494 : 			*_Ptr++ = '#';

  00051	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  00054	48 ff c0	 inc	 rax
$LN8@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00057	8b ca		 mov	 ecx, edx
  00059	66 c7 00 49 36	 mov	 WORD PTR [rax], 13897	; 00003649H
  0005e	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H
  00064	c6 40 02 34	 mov	 BYTE PTR [rax+2], 52	; 00000034H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00068	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  0006e	75 04		 jne	 SHORT $LN13@do_put
  00070	b2 6f		 mov	 dl, 111			; 0000006fH
  00072	eb 17		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  00074	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  0007a	74 04		 je	 SHORT $LN11@do_put
  0007c	b2 75		 mov	 dl, 117			; 00000075H
  0007e	eb 0b		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00080	c0 e2 03	 shl	 dl, 3
  00083	f6 d2		 not	 dl
  00085	80 e2 20	 and	 dl, 32			; 00000020H
  00088	80 ca 58	 or	 dl, 88			; 00000058H
$LN12@do_put:

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0008b	4c 8b 8c 24 f8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00093	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00098	88 50 03	 mov	 BYTE PTR [rax+3], dl

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009b	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  000a0	ba 40 00 00 00	 mov	 edx, 64			; 00000040H

; 1509 : 		*_Ptr = '\0';

  000a5	c6 40 04 00	 mov	 BYTE PTR [rax+4], 0

; 1316 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1317 : 
; 1318 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  000a9	e8 00 00 00 00	 call	 sprintf_s
  000ae	48 63 c8	 movsxd	 rcx, eax
  000b1	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b6	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000bb	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000c0	0f b7 8c 24 f0
	00 00 00	 movzx	 ecx, WORD PTR _Fill$[rsp]
  000c8	4c 8b cb	 mov	 r9, rbx
  000cb	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d0	48 8b d7	 mov	 rdx, rdi
  000d3	66 89 4c 24 20	 mov	 WORD PTR [rsp+32], cx
  000d8	48 8b ce	 mov	 rcx, rsi
  000db	e8 00 00 00 00	 call	 ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput
  000e0	48 8b c7	 mov	 rax, rdi

; 1319 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "Lu",
; 1320 : 				_Iosbase.flags()), _Val)));
; 1321 : 		}

  000e3	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000eb	48 33 cc	 xor	 rcx, rsp
  000ee	e8 00 00 00 00	 call	 __security_check_cookie
  000f3	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000fa	5f		 pop	 rdi
  000fb	5e		 pop	 rsi
  000fc	5b		 pop	 rbx
  000fd	c3		 ret	 0
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1305 : 		{	// put formatted long long to _Dest

$LN16:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00021	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00024	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00029	41 8b 51 18	 mov	 edx, DWORD PTR [r9+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1489 : 		*_Ptr++ = '%';

  0002d	48 8d 44 24 51	 lea	 rax, QWORD PTR _Fmt$[rsp+1]

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00032	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00037	49 8b d9	 mov	 rbx, r9
  0003a	48 8b f1	 mov	 rsi, rcx

; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	f6 c2 20	 test	 dl, 32			; 00000020H
  00040	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00042	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00047	48 8d 44 24 52	 lea	 rax, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004c	f6 c2 08	 test	 dl, 8
  0004f	74 06		 je	 SHORT $LN8@do_put

; 1494 : 			*_Ptr++ = '#';

  00051	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  00054	48 ff c0	 inc	 rax
$LN8@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00057	8b ca		 mov	 ecx, edx
  00059	66 c7 00 49 36	 mov	 WORD PTR [rax], 13897	; 00003649H
  0005e	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H
  00064	c6 40 02 34	 mov	 BYTE PTR [rax+2], 52	; 00000034H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00068	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  0006e	75 04		 jne	 SHORT $LN13@do_put
  00070	b2 6f		 mov	 dl, 111			; 0000006fH
  00072	eb 17		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  00074	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  0007a	74 04		 je	 SHORT $LN11@do_put
  0007c	b2 64		 mov	 dl, 100			; 00000064H
  0007e	eb 0b		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00080	c0 e2 03	 shl	 dl, 3
  00083	f6 d2		 not	 dl
  00085	80 e2 20	 and	 dl, 32			; 00000020H
  00088	80 ca 58	 or	 dl, 88			; 00000058H
$LN12@do_put:

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0008b	4c 8b 8c 24 f8
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  00093	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00098	88 50 03	 mov	 BYTE PTR [rax+3], dl

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009b	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]
  000a0	ba 40 00 00 00	 mov	 edx, 64			; 00000040H

; 1509 : 		*_Ptr = '\0';

  000a5	c6 40 04 00	 mov	 BYTE PTR [rax+4], 0

; 1306 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[8];
; 1307 : 
; 1308 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  000a9	e8 00 00 00 00	 call	 sprintf_s
  000ae	48 63 c8	 movsxd	 rcx, eax
  000b1	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000b6	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000bb	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000c0	0f b7 8c 24 f0
	00 00 00	 movzx	 ecx, WORD PTR _Fill$[rsp]
  000c8	4c 8b cb	 mov	 r9, rbx
  000cb	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d0	48 8b d7	 mov	 rdx, rdi
  000d3	66 89 4c 24 20	 mov	 WORD PTR [rsp+32], cx
  000d8	48 8b ce	 mov	 rcx, rsi
  000db	e8 00 00 00 00	 call	 ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput
  000e0	48 8b c7	 mov	 rax, rdi

; 1309 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "Ld",
; 1310 : 				_Iosbase.flags()), _Val)));
; 1311 : 		}

  000e3	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000eb	48 33 cc	 xor	 rcx, rsp
  000ee	e8 00 00 00 00	 call	 __security_check_cookie
  000f3	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000fa	5f		 pop	 rdi
  000fb	5e		 pop	 rsi
  000fc	5b		 pop	 rbx
  000fd	c3		 ret	 0
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_J@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1295 : 		{	// put formatted unsigned long to _Dest

$LN17:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00021	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1295 : 		{	// put formatted unsigned long to _Dest

  00025	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00028	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H

; 1295 : 		{	// put formatted unsigned long to _Dest

  0002d	49 8b d9	 mov	 rbx, r9

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00030	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00035	48 8b f1	 mov	 rsi, rcx

; 1489 : 		*_Ptr++ = '%';

  00038	48 8d 54 24 51	 lea	 rdx, QWORD PTR _Fmt$[rsp+1]

; 1490 : 
; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	a8 20		 test	 al, 32			; 00000020H
  0003f	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00041	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00046	48 8d 54 24 52	 lea	 rdx, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004b	a8 08		 test	 al, 8
  0004d	74 06		 je	 SHORT $LN15@do_put

; 1494 : 			*_Ptr++ = '#';

  0004f	c6 02 23	 mov	 BYTE PTR [rdx], 35	; 00000023H
  00052	48 ff c2	 inc	 rdx
$LN15@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00055	8b c8		 mov	 ecx, eax
  00057	c6 02 6c	 mov	 BYTE PTR [rdx], 108	; 0000006cH
  0005a	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00060	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  00066	75 04		 jne	 SHORT $LN13@do_put
  00068	b0 6f		 mov	 al, 111			; 0000006fH
  0006a	eb 15		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  0006c	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  00072	74 04		 je	 SHORT $LN11@do_put
  00074	b0 75		 mov	 al, 117			; 00000075H
  00076	eb 09		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00078	c0 e0 03	 shl	 al, 3
  0007b	f6 d0		 not	 al
  0007d	24 20		 and	 al, 32			; 00000020H
  0007f	0c 58		 or	 al, 88			; 00000058H
$LN12@do_put:

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00081	44 8b 8c 24 f8
	00 00 00	 mov	 r9d, DWORD PTR _Val$[rsp]
  00089	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0008e	88 42 01	 mov	 BYTE PTR [rdx+1], al

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00091	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]

; 1509 : 		*_Ptr = '\0';

  00096	c6 42 02 00	 mov	 BYTE PTR [rdx+2], 0

; 1296 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1297 : 
; 1298 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0009f	e8 00 00 00 00	 call	 sprintf_s
  000a4	48 63 c8	 movsxd	 rcx, eax
  000a7	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000ac	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000b1	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000b6	0f b7 8c 24 f0
	00 00 00	 movzx	 ecx, WORD PTR _Fill$[rsp]
  000be	4c 8b cb	 mov	 r9, rbx
  000c1	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c6	48 8b d7	 mov	 rdx, rdi
  000c9	66 89 4c 24 20	 mov	 WORD PTR [rsp+32], cx
  000ce	48 8b ce	 mov	 rcx, rsi
  000d1	e8 00 00 00 00	 call	 ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput
  000d6	48 8b c7	 mov	 rax, rdi

; 1299 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "lu",
; 1300 : 				_Iosbase.flags()), _Val)));
; 1301 : 		}

  000d9	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e1	48 33 cc	 xor	 rcx, rsp
  000e4	e8 00 00 00 00	 call	 __security_check_cookie
  000e9	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000f0	5f		 pop	 rdi
  000f1	5e		 pop	 rsi
  000f2	5b		 pop	 rbx
  000f3	c3		 ret	 0
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z
_TEXT	SEGMENT
$T1 = 64
_Fmt$ = 80
_Buf$ = 96
__$ArrayPad$ = 160
this$ = 208
__$ReturnUdt$ = 216
_Dest$ = 224
_Iosbase$ = 232
_Fill$ = 240
_Val$ = 248
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1285 : 		{	// put formatted long to _Dest

$LN17:
  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00012	48 33 c4	 xor	 rax, rsp
  00015	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0001d	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00021	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1285 : 		{	// put formatted long to _Dest

  00025	48 8b fa	 mov	 rdi, rdx

; 1489 : 		*_Ptr++ = '%';

  00028	c6 44 24 50 25	 mov	 BYTE PTR _Fmt$[rsp], 37	; 00000025H

; 1285 : 		{	// put formatted long to _Dest

  0002d	49 8b d9	 mov	 rbx, r9

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00030	0f 29 44 24 40	 movaps	 XMMWORD PTR $T1[rsp], xmm0
  00035	48 8b f1	 mov	 rsi, rcx

; 1489 : 		*_Ptr++ = '%';

  00038	48 8d 54 24 51	 lea	 rdx, QWORD PTR _Fmt$[rsp+1]

; 1490 : 
; 1491 : 		if (_Flags & ios_base::showpos)

  0003d	a8 20		 test	 al, 32			; 00000020H
  0003f	74 0a		 je	 SHORT $LN6@do_put

; 1492 : 			*_Ptr++ = '+';

  00041	c6 44 24 51 2b	 mov	 BYTE PTR _Fmt$[rsp+1], 43 ; 0000002bH
  00046	48 8d 54 24 52	 lea	 rdx, QWORD PTR _Fmt$[rsp+2]
$LN6@do_put:

; 1493 : 		if (_Flags & ios_base::showbase)

  0004b	a8 08		 test	 al, 8
  0004d	74 06		 je	 SHORT $LN15@do_put

; 1494 : 			*_Ptr++ = '#';

  0004f	c6 02 23	 mov	 BYTE PTR [rdx], 35	; 00000023H
  00052	48 ff c2	 inc	 rdx
$LN15@do_put:

; 1495 : 		if (_Spec[0] != 'L')
; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier
; 1497 : 		else
; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';
; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';
; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  00055	8b c8		 mov	 ecx, eax
  00057	c6 02 6c	 mov	 BYTE PTR [rdx], 108	; 0000006cH
  0005a	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00060	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  00066	75 04		 jne	 SHORT $LN13@do_put
  00068	b0 6f		 mov	 al, 111			; 0000006fH
  0006a	eb 15		 jmp	 SHORT $LN12@do_put
$LN13@do_put:
  0006c	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  00072	74 04		 je	 SHORT $LN11@do_put
  00074	b0 64		 mov	 al, 100			; 00000064H
  00076	eb 09		 jmp	 SHORT $LN12@do_put
$LN11@do_put:
  00078	c0 e0 03	 shl	 al, 3
  0007b	f6 d0		 not	 al
  0007d	24 20		 and	 al, 32			; 00000020H
  0007f	0c 58		 or	 al, 88			; 00000058H
$LN12@do_put:

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00081	44 8b 8c 24 f8
	00 00 00	 mov	 r9d, DWORD PTR _Val$[rsp]
  00089	4c 8d 44 24 50	 lea	 r8, QWORD PTR _Fmt$[rsp]

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0008e	88 42 01	 mov	 BYTE PTR [rdx+1], al

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  00091	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Buf$[rsp]

; 1509 : 		*_Ptr = '\0';

  00096	c6 42 02 00	 mov	 BYTE PTR [rdx+2], 0

; 1286 : 		char _Buf[2 * _MAX_INT_DIG], _Fmt[6];
; 1287 : 
; 1288 : 		return (_Iput(_Dest, _Iosbase, _Fill, _Buf,

  0009a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0009f	e8 00 00 00 00	 call	 sprintf_s
  000a4	48 63 c8	 movsxd	 rcx, eax
  000a7	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  000ac	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000b1	48 8d 44 24 60	 lea	 rax, QWORD PTR _Buf$[rsp]
  000b6	0f b7 8c 24 f0
	00 00 00	 movzx	 ecx, WORD PTR _Fill$[rsp]
  000be	4c 8b cb	 mov	 r9, rbx
  000c1	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c6	48 8b d7	 mov	 rdx, rdi
  000c9	66 89 4c 24 20	 mov	 WORD PTR [rsp+32], cx
  000ce	48 8b ce	 mov	 rcx, rsi
  000d1	e8 00 00 00 00	 call	 ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput
  000d6	48 8b c7	 mov	 rax, rdi

; 1289 : 			_CSTD sprintf_s(_Buf, sizeof (_Buf), _Ifmt(_Fmt, "ld",
; 1290 : 				_Iosbase.flags()), _Val)));
; 1291 : 		}

  000d9	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e1	48 33 cc	 xor	 rcx, rsp
  000e4	e8 00 00 00 00	 call	 __security_check_cookie
  000e9	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000f0	5f		 pop	 rdi
  000f1	5e		 pop	 rsi
  000f2	5b		 pop	 rbx
  000f3	c3		 ret	 0
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WJ@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put, COMDAT

; 1255 : 		{	// put formatted bool to _Dest

$LN1314:
  00000	40 55		 push	 rbp
  00002	53		 push	 rbx
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 54		 push	 r12
  00007	41 55		 push	 r13
  00009	41 56		 push	 r14
  0000b	41 57		 push	 r15
  0000d	48 8d 6c 24 f1	 lea	 rbp, QWORD PTR [rsp-15]
  00012	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H
  00019	48 c7 45 b7 fe
	ff ff ff	 mov	 QWORD PTR $T6[rbp-153], -2
  00021	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00028	48 33 c4	 xor	 rax, rsp
  0002b	48 89 45 ff	 mov	 QWORD PTR __$ArrayPad$[rbp-153], rax
  0002f	4d 8b e9	 mov	 r13, r9
  00032	4c 89 4d a7	 mov	 QWORD PTR _Iosbase$GSCopy$1$[rbp-153], r9
  00036	4d 8b e0	 mov	 r12, r8
  00039	48 8b da	 mov	 rbx, rdx
  0003c	48 89 55 af	 mov	 QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-153], rdx
  00040	44 0f b7 7d 77	 movzx	 r15d, WORD PTR _Fill$[rbp-153]

; 1256 : 		_DEBUG_POINTER(_Dest);
; 1257 : 		if (!(_Iosbase.flags() & ios_base::boolalpha))

  00045	41 f7 41 18 00
	40 00 00	 test	 DWORD PTR [r9+24], 16384 ; 00004000H
  0004d	75 29		 jne	 SHORT $LN2@do_put

; 1258 : 			return (do_put(_Dest, _Iosbase, _Fill, (long)_Val));

  0004f	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00053	0f 29 45 97	 movaps	 XMMWORD PTR $T4[rbp-153], xmm0
  00057	4c 8b 11	 mov	 r10, QWORD PTR [rcx]
  0005a	0f b6 55 7f	 movzx	 edx, BYTE PTR _Val$[rbp-153]
  0005e	89 54 24 28	 mov	 DWORD PTR [rsp+40], edx
  00062	66 44 89 7c 24
	20		 mov	 WORD PTR [rsp+32], r15w
  00068	4c 8d 45 97	 lea	 r8, QWORD PTR $T4[rbp-153]
  0006c	48 8b d3	 mov	 rdx, rbx
  0006f	41 ff 52 48	 call	 QWORD PTR [r10+72]
  00073	e9 de 02 00 00	 jmp	 $LN1187@do_put
$LN2@do_put:

; 1259 : 		else
; 1260 : 			{	// put "false" or "true"
; 1261 : 			const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  00078	48 8d 55 97	 lea	 rdx, QWORD PTR $T5[rbp-153]
  0007c	49 8b c9	 mov	 rcx, r9
  0007f	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00084	90		 npad	 1
  00085	48 8b c8	 mov	 rcx, rax
  00088	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<wchar_t> >
  0008d	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  00090	48 8b 4d 9f	 mov	 rcx, QWORD PTR $T5[rbp-145]
  00094	48 85 c9	 test	 rcx, rcx
  00097	74 1a		 je	 SHORT $LN21@do_put

; 432  : 			delete _Ptr->_Decref();

  00099	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0009c	ff 52 10	 call	 QWORD PTR [rdx+16]
  0009f	48 85 c0	 test	 rax, rax
  000a2	74 0f		 je	 SHORT $LN21@do_put
  000a4	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000a7	ba 01 00 00 00	 mov	 edx, 1
  000ac	48 8b c8	 mov	 rcx, rax
  000af	41 ff 10	 call	 QWORD PTR [r8]
  000b2	90		 npad	 1
$LN21@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000b3	48 c7 45 d7 07
	00 00 00	 mov	 QWORD PTR _Str$7[rbp-129], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000bb	45 33 f6	 xor	 r14d, r14d
  000be	4c 89 75 cf	 mov	 QWORD PTR _Str$7[rbp-137], r14
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000c2	66 44 89 75 bf	 mov	 WORD PTR _Str$7[rbp-153], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1264 : 				_Str.assign(_Punct_fac.truename());

  000c7	48 8d 55 df	 lea	 rdx, QWORD PTR $T9[rbp-153]
  000cb	48 8b cb	 mov	 rcx, rbx

; 1262 : 			_Mystr _Str;
; 1263 : 			if (_Val)

  000ce	44 38 75 7f	 cmp	 BYTE PTR _Val$[rbp-153], r14b
  000d2	74 4b		 je	 SHORT $LN4@do_put

; 1264 : 				_Str.assign(_Punct_fac.truename());

  000d4	e8 00 00 00 00	 call	 ?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::numpunct<wchar_t>::truename
  000d9	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 942  : 		if (this == &_Right)

  000dc	48 8d 45 bf	 lea	 rax, QWORD PTR _Str$7[rbp-153]
  000e0	48 3b c3	 cmp	 rax, rbx
  000e3	74 38		 je	 SHORT $LN153@do_put

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  000e5	4c 8b 45 d7	 mov	 r8, QWORD PTR _Str$7[rbp-129]
  000e9	49 83 f8 08	 cmp	 r8, 8
  000ed	72 10		 jb	 SHORT $LN344@do_put

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  000ef	49 ff c0	 inc	 r8
  000f2	48 8b 55 bf	 mov	 rdx, QWORD PTR _Str$7[rbp-153]
  000f6	48 8d 4d bf	 lea	 rcx, QWORD PTR _Str$7[rbp-153]
  000fa	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN344@do_put:

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000ff	48 c7 45 d7 07
	00 00 00	 mov	 QWORD PTR _Str$7[rbp-129], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00107	4c 89 75 cf	 mov	 QWORD PTR _Str$7[rbp-137], r14
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0010b	66 44 89 75 bf	 mov	 WORD PTR _Str$7[rbp-153], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 950  : 			_Assign_rv(_STD forward<_Myt>(_Right));

  00110	48 8b d3	 mov	 rdx, rbx
  00113	48 8d 4d bf	 lea	 rcx, QWORD PTR _Str$7[rbp-153]
  00117	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
  0011c	90		 npad	 1
$LN153@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1265 : 			else

  0011d	eb 49		 jmp	 SHORT $LN1313@do_put
$LN4@do_put:

; 1266 : 				_Str.assign(_Punct_fac.falsename());

  0011f	e8 00 00 00 00	 call	 ?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::numpunct<wchar_t>::falsename
  00124	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 942  : 		if (this == &_Right)

  00127	48 8d 45 bf	 lea	 rax, QWORD PTR _Str$7[rbp-153]
  0012b	48 3b c3	 cmp	 rax, rbx
  0012e	74 38		 je	 SHORT $LN583@do_put

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00130	4c 8b 45 d7	 mov	 r8, QWORD PTR _Str$7[rbp-129]
  00134	49 83 f8 08	 cmp	 r8, 8
  00138	72 10		 jb	 SHORT $LN774@do_put

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0013a	49 ff c0	 inc	 r8
  0013d	48 8b 55 bf	 mov	 rdx, QWORD PTR _Str$7[rbp-153]
  00141	48 8d 4d bf	 lea	 rcx, QWORD PTR _Str$7[rbp-153]
  00145	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN774@do_put:

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0014a	48 c7 45 d7 07
	00 00 00	 mov	 QWORD PTR _Str$7[rbp-129], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00152	4c 89 75 cf	 mov	 QWORD PTR _Str$7[rbp-137], r14
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00156	66 44 89 75 bf	 mov	 WORD PTR _Str$7[rbp-153], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 950  : 			_Assign_rv(_STD forward<_Myt>(_Right));

  0015b	48 8b d3	 mov	 rdx, rbx
  0015e	48 8d 4d bf	 lea	 rcx, QWORD PTR _Str$7[rbp-153]
  00162	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
  00167	90		 npad	 1
$LN583@do_put:
$LN1313@do_put:

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00168	4c 8b 45 f7	 mov	 r8, QWORD PTR $T8[rbp-129]
  0016c	49 83 f8 08	 cmp	 r8, 8
  00170	72 10		 jb	 SHORT $LN896@do_put

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00172	49 ff c0	 inc	 r8
  00175	48 8b 55 df	 mov	 rdx, QWORD PTR $T8[rbp-153]
  00179	48 8d 4d df	 lea	 rcx, QWORD PTR $T8[rbp-153]
  0017d	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN896@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 423  : 		return (_Wide);

  00182	49 8b 7d 28	 mov	 rdi, QWORD PTR [r13+40]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1269 : 				|| (size_t)_Iosbase.width() <= _Str.size()

  00186	48 8b 75 cf	 mov	 rsi, QWORD PTR _Str$7[rbp-137]
  0018a	48 85 ff	 test	 rdi, rdi
  0018d	7e 0a		 jle	 SHORT $LN8@do_put
  0018f	48 3b fe	 cmp	 rdi, rsi
  00192	76 05		 jbe	 SHORT $LN8@do_put
  00194	48 2b fe	 sub	 rdi, rsi
  00197	eb 03		 jmp	 SHORT $LN9@do_put
$LN8@do_put:
  00199	49 8b fe	 mov	 rdi, r14
$LN9@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  0019c	41 8b 45 18	 mov	 eax, DWORD PTR [r13+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1272 : 			if ((_Iosbase.flags() & ios_base::adjustfield) != ios_base::left)

  001a0	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  001a5	41 be ff ff 00
	00		 mov	 r14d, 65535		; 0000ffffH
  001ab	83 f8 40	 cmp	 eax, 64			; 00000040H
  001ae	74 73		 je	 SHORT $LN6@do_put

; 1273 : 				{	// put leading fill
; 1274 : 				_Dest = _Rep(_Dest, _Fill, _Fillcount);

  001b0	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  001b5	0f 29 45 97	 movaps	 XMMWORD PTR $T3[rbp-153], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  001b9	48 85 ff	 test	 rdi, rdi
  001bc	74 5e		 je	 SHORT $LN1043@do_put
  001be	48 8b 5d 9f	 mov	 rbx, QWORD PTR $T3[rbp-145]
$LL1044@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  001c2	48 85 db	 test	 rbx, rbx
  001c5	74 43		 je	 SHORT $LN1052@do_put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  001c7	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  001cb	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  001cf	74 26		 je	 SHORT $LN1056@do_put
  001d1	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  001d5	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  001d7	85 c0		 test	 eax, eax
  001d9	7e 1c		 jle	 SHORT $LN1056@do_put

; 308  : 		--*_IPcount;

  001db	ff c8		 dec	 eax
  001dd	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  001df	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  001e3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  001e6	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  001ea	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  001ed	66 44 89 3a	 mov	 WORD PTR [rdx], r15w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  001f1	41 0f b7 c7	 movzx	 eax, r15w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  001f5	eb 0d		 jmp	 SHORT $LN1057@do_put
$LN1056@do_put:
  001f7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  001fa	41 0f b7 d7	 movzx	 edx, r15w
  001fe	48 8b cb	 mov	 rcx, rbx
  00201	ff 50 18	 call	 QWORD PTR [rax+24]
$LN1057@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00204	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00208	75 04		 jne	 SHORT $LN1042@do_put
$LN1052@do_put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0020a	c6 45 97 01	 mov	 BYTE PTR $T3[rbp-153], 1
$LN1042@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0020e	48 83 ef 01	 sub	 rdi, 1
  00212	75 ae		 jne	 SHORT $LL1044@do_put
  00214	48 8b 75 cf	 mov	 rsi, QWORD PTR _Str$7[rbp-137]
  00218	0f 28 45 97	 movaps	 xmm0, XMMWORD PTR $T3[rbp-153]
$LN1043@do_put:

; 1273 : 				{	// put leading fill
; 1274 : 				_Dest = _Rep(_Dest, _Fill, _Fillcount);

  0021c	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0

; 1275 : 				_Fillcount = 0;

  00221	33 ff		 xor	 edi, edi
$LN6@do_put:

; 1276 : 				}
; 1277 : 			_Dest = _Put(_Dest, _Str.c_str(), _Str.size());	// put field

  00223	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  00228	0f 29 45 97	 movaps	 XMMWORD PTR $T2[rbp-153], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0022c	4c 8d 75 bf	 lea	 r14, QWORD PTR _Str$7[rbp-153]
  00230	4c 8b 45 d7	 mov	 r8, QWORD PTR _Str$7[rbp-129]
  00234	49 83 f8 08	 cmp	 r8, 8
  00238	4c 0f 43 75 bf	 cmovae	 r14, QWORD PTR _Str$7[rbp-153]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  0023d	48 85 f6	 test	 rsi, rsi
  00240	74 74		 je	 SHORT $LN1111@do_put
  00242	48 8b 5d 9f	 mov	 rbx, QWORD PTR $T2[rbp-145]
  00246	41 bd ff ff 00
	00		 mov	 r13d, 65535		; 0000ffffH
  0024c	0f 1f 40 00	 npad	 4
$LL1112@do_put:

; 1577 : 			*_Dest = *_Ptr;

  00250	45 0f b7 06	 movzx	 r8d, WORD PTR [r14]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00254	48 85 db	 test	 rbx, rbx
  00257	74 43		 je	 SHORT $LN1120@do_put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00259	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  0025d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00261	74 22		 je	 SHORT $LN1124@do_put
  00263	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00267	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00269	85 c0		 test	 eax, eax
  0026b	7e 18		 jle	 SHORT $LN1124@do_put

; 308  : 		--*_IPcount;

  0026d	ff c8		 dec	 eax
  0026f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00271	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00275	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00278	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0027c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0027f	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00283	eb 11		 jmp	 SHORT $LN1125@do_put
$LN1124@do_put:
  00285	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00288	41 0f b7 d0	 movzx	 edx, r8w
  0028c	48 8b cb	 mov	 rcx, rbx
  0028f	ff 50 18	 call	 QWORD PTR [rax+24]
  00292	44 0f b7 c0	 movzx	 r8d, ax
$LN1125@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00296	66 45 3b e8	 cmp	 r13w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0029a	75 04		 jne	 SHORT $LN1110@do_put
$LN1120@do_put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0029c	c6 45 97 01	 mov	 BYTE PTR $T2[rbp-153], 1
$LN1110@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  002a0	49 83 c6 02	 add	 r14, 2
  002a4	48 83 ee 01	 sub	 rsi, 1
  002a8	75 a6		 jne	 SHORT $LL1112@do_put
  002aa	4c 8b 45 d7	 mov	 r8, QWORD PTR _Str$7[rbp-129]
  002ae	0f 28 45 97	 movaps	 xmm0, XMMWORD PTR $T2[rbp-153]
  002b2	4c 8b 6d a7	 mov	 r13, QWORD PTR _Iosbase$GSCopy$1$[rbp-153]
$LN1111@do_put:

; 1276 : 				}
; 1277 : 			_Dest = _Put(_Dest, _Str.c_str(), _Str.size());	// put field

  002b6	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  002bb	49 c7 45 28 00
	00 00 00	 mov	 QWORD PTR [r13+40], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1279 : 			return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  002c3	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  002c8	0f 29 45 97	 movaps	 XMMWORD PTR $T1[rbp-153], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  002cc	48 85 ff	 test	 rdi, rdi
  002cf	74 68		 je	 SHORT $LN1148@do_put
  002d1	48 8b 5d 9f	 mov	 rbx, QWORD PTR $T1[rbp-145]
  002d5	be ff ff 00 00	 mov	 esi, 65535		; 0000ffffH
  002da	66 0f 1f 44 00
	00		 npad	 6
$LL1149@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  002e0	48 85 db	 test	 rbx, rbx
  002e3	74 42		 je	 SHORT $LN1157@do_put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  002e5	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  002e9	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  002ed	74 26		 je	 SHORT $LN1161@do_put
  002ef	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  002f3	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  002f5	85 c0		 test	 eax, eax
  002f7	7e 1c		 jle	 SHORT $LN1161@do_put

; 308  : 		--*_IPcount;

  002f9	ff c8		 dec	 eax
  002fb	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  002fd	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00301	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00304	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  00308	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0030b	66 44 89 3a	 mov	 WORD PTR [rdx], r15w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  0030f	41 0f b7 c7	 movzx	 eax, r15w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00313	eb 0d		 jmp	 SHORT $LN1162@do_put
$LN1161@do_put:
  00315	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00318	41 0f b7 d7	 movzx	 edx, r15w
  0031c	48 8b cb	 mov	 rcx, rbx
  0031f	ff 50 18	 call	 QWORD PTR [rax+24]
$LN1162@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00322	66 3b f0	 cmp	 si, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00325	75 04		 jne	 SHORT $LN1147@do_put
$LN1157@do_put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00327	c6 45 97 01	 mov	 BYTE PTR $T1[rbp-153], 1
$LN1147@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0032b	48 83 ef 01	 sub	 rdi, 1
  0032f	75 af		 jne	 SHORT $LL1149@do_put
  00331	4c 8b 45 d7	 mov	 r8, QWORD PTR _Str$7[rbp-129]
  00335	0f 28 45 97	 movaps	 xmm0, XMMWORD PTR $T1[rbp-153]
$LN1148@do_put:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  00339	48 8b 5d af	 mov	 rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-153]
  0033d	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00340	49 83 f8 08	 cmp	 r8, 8
  00344	72 10		 jb	 SHORT $LN1187@do_put

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00346	49 ff c0	 inc	 r8
  00349	48 8b 55 bf	 mov	 rdx, QWORD PTR _Str$7[rbp-153]
  0034d	48 8d 4d bf	 lea	 rcx, QWORD PTR _Str$7[rbp-153]
  00351	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN1187@do_put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1279 : 			return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  00356	48 8b c3	 mov	 rax, rbx

; 1280 : 			}
; 1281 : 		}

  00359	48 8b 4d ff	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-153]
  0035d	48 33 cc	 xor	 rcx, rsp
  00360	e8 00 00 00 00	 call	 __security_check_cookie
  00365	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  0036c	41 5f		 pop	 r15
  0036e	41 5e		 pop	 r14
  00370	41 5d		 pop	 r13
  00372	41 5c		 pop	 r12
  00374	5f		 pop	 rdi
  00375	5e		 pop	 rsi
  00376	5b		 pop	 rbx
  00377	5d		 pop	 rbp
  00378	c3		 ret	 0
?do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR $T5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$4@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$4
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$1@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$1
  00011	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Str$7[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$1
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$38@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$38
  0001d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$38@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$38
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$158@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$158
  00022	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$158@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$158
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR $T5[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$4@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$1@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$1
  00011	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Str$7[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$38@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$38
  0001d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$38@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$38
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 48
$T4 = 48
$T5 = 48
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T6 = 80
_Str$7 = 88
$T8 = 120
$T9 = 120
__$ArrayPad$ = 152
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Val$ = 280
?dtor$158@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$158
  00022	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$158@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::do_put'::`1'::dtor$158
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
__$ReturnUdt$ = 88
_Dest$ = 96
_Iosbase$ = 104
_Fill$ = 112
_Val$ = 120
?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::put, COMDAT

; 1230 : 		{	// put formatted unsigned long long to _Dest

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 1231 : 		return (do_put(_Dest, _Iosbase, _Fill, _Val));

  00006	48 8b 44 24 78	 mov	 rax, QWORD PTR _Val$[rsp]
  0000b	48 8b da	 mov	 rbx, rdx
  0000e	41 0f 28 00	 movaps	 xmm0, XMMWORD PTR [r8]
  00012	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T1[rsp]
  00017	4c 8b 11	 mov	 r10, QWORD PTR [rcx]
  0001a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0001f	0f b7 44 24 70	 movzx	 eax, WORD PTR _Fill$[rsp]
  00024	66 89 44 24 20	 mov	 WORD PTR [rsp+32], ax
  00029	66 0f 7f 44 24
	30		 movdqa	 XMMWORD PTR $T1[rsp], xmm0
  0002f	41 ff 52 30	 call	 QWORD PTR [r10+48]
  00033	48 8b c3	 mov	 rax, rbx

; 1232 : 		}

  00036	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0003a	5b		 pop	 rbx
  0003b	c3		 ret	 0
?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_K@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
__$ReturnUdt$ = 88
_Dest$ = 96
_Iosbase$ = 104
_Fill$ = 112
_Val$ = 120
?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::put, COMDAT

; 1218 : 		{	// put formatted unsigned long to _Dest

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 1219 : 		return (do_put(_Dest, _Iosbase, _Fill, _Val));

  00006	8b 44 24 78	 mov	 eax, DWORD PTR _Val$[rsp]
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	41 0f 28 00	 movaps	 xmm0, XMMWORD PTR [r8]
  00011	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T1[rsp]
  00016	4c 8b 11	 mov	 r10, QWORD PTR [rcx]
  00019	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  0001d	0f b7 44 24 70	 movzx	 eax, WORD PTR _Fill$[rsp]
  00022	66 89 44 24 20	 mov	 WORD PTR [rsp+32], ax
  00027	66 0f 7f 44 24
	30		 movdqa	 XMMWORD PTR $T1[rsp], xmm0
  0002d	41 ff 52 40	 call	 QWORD PTR [r10+64]
  00031	48 8b c3	 mov	 rax, rbx

; 1220 : 		}

  00034	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00038	5b		 pop	 rbx
  00039	c3		 ret	 0
?put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WK@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??1?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAA@XZ PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::~num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00007	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1180 : 		}

  0000a	c3		 ret	 0
??1?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAA@XZ ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::~num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?failed@?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?failed@?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ PROC ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::failed, COMDAT

; 662  : 		return (_Failed);

  00000	0f b6 01	 movzx	 eax, BYTE PTR [rcx]

; 663  : 		}

  00003	c3		 ret	 0
?failed@?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEBA_NXZ ENDP ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::failed
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??0?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Sb$ = 16
??0?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z PROC ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 627  : 		: _Failed(false), _Strbuf(_Sb)

  00000	c6 01 00	 mov	 BYTE PTR [rcx], 0

; 629  : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	48 89 51 08	 mov	 QWORD PTR [rcx+8], rdx
  0000a	c3		 ret	 0
??0?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z ENDP ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\initializer_list
;	COMDAT ?end@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?end@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::end, COMDAT

; 45   : 		return (_Last);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 46   : 		}

  00004	c3		 ret	 0
?end@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\initializer_list
;	COMDAT ?begin@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?begin@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::begin, COMDAT

; 40   : 		return (_First);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 41   : 		}

  00003	c3		 ret	 0
?begin@?$initializer_list@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::initializer_list<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator==, COMDAT

; 207  : 		_Compat(_Right);
; 208  : 		return (_Ptr == _Right._Ptr);

  00000	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00003	48 39 11	 cmp	 QWORD PTR [rcx], rdx
  00006	0f 94 c0	 sete	 al

; 209  : 		}

  00009	c3		 ret	 0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 46   : 		: _Ptr(_Parg)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 48   : 		this->_Adopt(_Pvector);
; 49   : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend, COMDAT

; 666  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 667  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast, COMDAT

; 661  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 662  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast, COMDAT

; 656  : 		return (_Get_data()._Mylast);

  00000	48 8d 41 08	 lea	 rax, QWORD PTR [rcx+8]

; 657  : 		}

  00004	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst, COMDAT

; 651  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 652  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst, COMDAT

; 646  : 		return (_Get_data()._Myfirst);

  00000	48 8b c1	 mov	 rax, rcx

; 647  : 		}

  00003	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data, COMDAT

; 641  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 642  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal, COMDAT

; 626  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 627  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 515  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range, COMDAT

; 1817 : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy, COMDAT

; 1659 : 		{	// free all storage

$LN121:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1660 : 		if (this->_Myfirst() != pointer())

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 64		 je	 SHORT $LN2@Tidy

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  00011	48 8b 53 08	 mov	 rdx, QWORD PTR [rbx+8]
  00015	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  0001a	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0001d	48 ba ff ff ff
	ff ff ff ff 07	 mov	 rdx, 576460752303423487	; 07ffffffffffffffH
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1664 : 			this->_Getal().deallocate(this->_Myfirst(),

  00027	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  0002b	48 2b c1	 sub	 rax, rcx
  0002e	48 c1 f8 05	 sar	 rax, 5
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00032	48 3b c2	 cmp	 rax, rdx
  00035	77 44		 ja	 SHORT $LN115@Tidy

; 95   : 	const size_t _User_size = _Count * _Sz;

  00037	48 c1 e0 05	 shl	 rax, 5

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0003b	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00041	72 20		 jb	 SHORT $LN78@Tidy

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00043	f6 c1 1f	 test	 cl, 31
  00046	75 39		 jne	 SHORT $LN117@Tidy

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00048	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0004c	48 3b c1	 cmp	 rax, rcx
  0004f	73 36		 jae	 SHORT $LN118@Tidy

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00051	48 2b c8	 sub	 rcx, rax
  00054	48 83 f9 08	 cmp	 rcx, 8
  00058	72 33		 jb	 SHORT $LN119@Tidy

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0005a	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0005e	77 33		 ja	 SHORT $LN120@Tidy

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00060	48 8b c8	 mov	 rcx, rax
$LN78@Tidy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00063	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1666 : 			this->_Myfirst() = pointer();

  00068	33 c0		 xor	 eax, eax
  0006a	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1667 : 			this->_Mylast() = pointer();

  0006d	48 89 43 08	 mov	 QWORD PTR [rbx+8], rax

; 1668 : 			this->_Myend() = pointer();

  00071	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 1670 : 		}

  00075	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00079	5b		 pop	 rbx
  0007a	c3		 ret	 0
$LN115@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0007b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00080	cc		 int	 3
$LN117@Tidy:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00081	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00086	cc		 int	 3
$LN118@Tidy:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00087	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0008c	cc		 int	 3
$LN119@Tidy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0008d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00092	cc		 int	 3
$LN120@Tidy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00093	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00098	cc		 int	 3
$LN114@Tidy:
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$dead$ = 56
?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve, COMDAT

; 1649 : 		{	// ensure room for _Count new elements, grow exponentially

$LN136:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1051 : 		return (this->_Myend() - this->_Mylast());

  00004	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]

; 1649 : 		{	// ensure room for _Count new elements, grow exponentially

  00008	4c 8b c1	 mov	 r8, rcx

; 1051 : 		return (this->_Myend() - this->_Mylast());

  0000b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000f	49 8b c1	 mov	 rax, r9
  00012	48 2b c1	 sub	 rax, rcx
  00015	48 c1 f8 05	 sar	 rax, 5

; 1650 : 		if (_Unused_capacity() < _Count)

  00019	48 83 f8 01	 cmp	 rax, 1
  0001d	73 54		 jae	 SHORT $LN2@Reserve

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  0001f	49 8b 10	 mov	 rdx, QWORD PTR [r8]

; 1651 : 			{	// need more room, try to get it
; 1652 : 			if (max_size() - size() < _Count)

  00022	49 ba ff ff ff
	ff ff ff ff 07	 mov	 r10, 576460752303423487	; 07ffffffffffffffH

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  0002c	48 2b ca	 sub	 rcx, rdx

; 1651 : 			{	// need more room, try to get it
; 1652 : 			if (max_size() - size() < _Count)

  0002f	49 8b c2	 mov	 rax, r10

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  00032	48 c1 f9 05	 sar	 rcx, 5

; 1651 : 			{	// need more room, try to get it
; 1652 : 			if (max_size() - size() < _Count)

  00036	48 2b c1	 sub	 rax, rcx
  00039	48 83 f8 01	 cmp	 rax, 1
  0003d	72 39		 jb	 SHORT $LN134@Reserve

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  0003f	4c 2b ca	 sub	 r9, rdx

; 1653 : 				_Xlen();
; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  00042	48 ff c1	 inc	 rcx

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00045	49 c1 f9 05	 sar	 r9, 5

; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00049	45 33 db	 xor	 r11d, r11d
  0004c	49 8b c1	 mov	 rax, r9
  0004f	48 d1 e8	 shr	 rax, 1
  00052	4c 2b d0	 sub	 r10, rax
  00055	4d 3b d1	 cmp	 r10, r9
  00058	4a 8d 14 08	 lea	 rdx, QWORD PTR [rax+r9]
  0005c	49 0f 42 d3	 cmovb	 rdx, r11

; 1612 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1613 : 		if (_Capacity < _Count)

  00060	48 3b d1	 cmp	 rdx, rcx
  00063	48 0f 42 d1	 cmovb	 rdx, rcx

; 1653 : 				_Xlen();
; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  00067	49 8b c8	 mov	 rcx, r8

; 1655 : 			}
; 1656 : 		}

  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 1653 : 				_Xlen();
; 1654 : 			_Reallocate(_Grow_to(size() + _Count));

  0006e	e9 00 00 00 00	 jmp	 ?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate
$LN2@Reserve:

; 1655 : 			}
; 1656 : 		}

  00073	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00077	c3		 ret	 0
$LN134@Reserve:

; 1788 : 		_Xlength_error("vector<T> too long");

  00078	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0007f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00084	cc		 int	 3
$LN133@Reserve:
?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside, COMDAT

; 1620 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  00000	48 3b 51 08	 cmp	 rdx, QWORD PTR [rcx+8]
  00004	73 08		 jae	 SHORT $LN3@Inside
  00006	48 39 11	 cmp	 QWORD PTR [rcx], rdx
  00009	77 03		 ja	 SHORT $LN3@Inside
  0000b	b0 01		 mov	 al, 1

; 1621 : 		}

  0000d	c3		 ret	 0
$LN3@Inside:

; 1620 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  0000e	32 c0		 xor	 al, al

; 1621 : 		}

  00010	c3		 ret	 0
?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Assign_rv@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
__formal$dead$ = 24
?_Assign_rv@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Assign_rv, COMDAT

; 872  : 		this->_Swap_all((_Myt&)_Right);
; 873  : 		this->_Myfirst() = _Right._Myfirst();

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 874  : 		this->_Mylast() = _Right._Mylast();

  00006	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0000a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 875  : 		this->_Myend() = _Right._Myend();

  0000e	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  00012	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 876  : 
; 877  : 		_Right._Myfirst() = pointer();

  00016	33 c0		 xor	 eax, eax
  00018	48 89 02	 mov	 QWORD PTR [rdx], rax

; 878  : 		_Right._Mylast() = pointer();

  0001b	48 89 42 08	 mov	 QWORD PTR [rdx+8], rax

; 879  : 		_Right._Myend() = pointer();

  0001f	48 89 42 10	 mov	 QWORD PTR [rdx+16], rax

; 880  : 		}

  00023	c3		 ret	 0
?_Assign_rv@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get_deleter@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAU?$default_delete@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?get_deleter@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAU?$default_delete@D@2@XZ PROC ; std::_Unique_ptr_base<char,std::default_delete<char> >::get_deleter, COMDAT

; 1253 : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 1254 : 		}

  00003	c3		 ret	 0
?get_deleter@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAU?$default_delete@D@2@XZ ENDP ; std::_Unique_ptr_base<char,std::default_delete<char> >::get_deleter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?reset@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAXPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?reset@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAXPEAD@Z PROC ; std::unique_ptr<char,std::default_delete<char> >::reset, COMDAT

; 1412 : 		return (this->_Myptr());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1429 : 		pointer _Old = get();
; 1430 : 		this->_Myptr() = _Ptr;

  00003	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 1431 : 		if (_Old != pointer())

  00006	48 85 c0	 test	 rax, rax
  00009	74 0d		 je	 SHORT $LN26@reset

; 1195 : 		delete _Ptr;

  0000b	ba 01 00 00 00	 mov	 edx, 1
  00010	48 8b c8	 mov	 rcx, rax
  00013	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
$LN26@reset:

; 1432 : 			this->get_deleter()(_Old);
; 1433 : 		}

  00018	c3		 ret	 0
?reset@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAXPEAD@Z ENDP ; std::unique_ptr<char,std::default_delete<char> >::reset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?release@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?release@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAPEADXZ PROC ; std::unique_ptr<char,std::default_delete<char> >::release, COMDAT

; 1412 : 		return (this->_Myptr());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1422 : 		pointer _Ans = get();
; 1423 : 		this->_Myptr() = pointer();

  00003	48 c7 01 00 00
	00 00		 mov	 QWORD PTR [rcx], 0

; 1424 : 		return (_Ans);
; 1425 : 		}

  0000a	c3		 ret	 0
?release@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEAAPEADXZ ENDP ; std::unique_ptr<char,std::default_delete<char> >::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?get@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEBAPEADXZ
_TEXT	SEGMENT
this$ = 8
?get@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEBAPEADXZ PROC ; std::unique_ptr<char,std::default_delete<char> >::get, COMDAT

; 1412 : 		return (this->_Myptr());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 1413 : 		}

  00003	c3		 ret	 0
?get@?$unique_ptr@DU?$default_delete@D@std@@@std@@QEBAPEADXZ ENDP ; std::unique_ptr<char,std::default_delete<char> >::get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??R?$default_delete@D@std@@QEBAXPEAD@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
??R?$default_delete@D@std@@QEBAXPEAD@Z PROC		; std::default_delete<char>::operator(), COMDAT

; 1192 : 		{	// delete a pointer

  00000	48 8b ca	 mov	 rcx, rdx

; 1193 : 		static_assert(0 < sizeof (_Ty),
; 1194 : 			"can't delete an incomplete type");
; 1195 : 		delete _Ptr;

  00003	ba 01 00 00 00	 mov	 edx, 1
  00008	e9 00 00 00 00	 jmp	 ??3@YAXPEAX_K@Z		; operator delete
??R?$default_delete@D@std@@QEBAXPEAD@Z ENDP		; std::default_delete<char>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==, COMDAT

; 213  : 		_Compat(_Right);
; 214  : 		return (_Ptr == _Right._Ptr);

  00000	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00003	48 39 11	 cmp	 QWORD PTR [rcx], rdx
  00006	0f 94 c0	 sete	 al

; 215  : 		}

  00009	c3		 ret	 0
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator++, COMDAT

; 99   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 100  : 		if (this->_Getcont() == 0
; 101  : 			|| _Ptr == 0
; 102  : 			|| ((_Mystr *)this->_Getcont())->_Myptr()
; 103  : 				+ ((_Mystr *)this->_Getcont())->_Mysize <= _Ptr)
; 104  : 			{	// report error
; 105  : 			_DEBUG_ERROR("string iterator not incrementable");
; 106  : 			_SCL_SECURE_OUT_OF_RANGE;
; 107  : 			}
; 108  : 
; 109  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 110  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && _Ptr != 0);
; 111  : 		_SCL_SECURE_VALIDATE_RANGE(
; 112  : 			_Ptr < ((_Mystr *)this->_Getcont())->_Myptr()
; 113  : 				+ ((_Mystr *)this->_Getcont())->_Mysize);
; 114  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 115  : 
; 116  : 		++_Ptr;

  00000	48 83 01 02	 add	 QWORD PTR [rcx], 2

; 117  : 		return (*this);

  00004	48 8b c1	 mov	 rax, rcx

; 118  : 		}

  00007	c3		 ret	 0
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEB_WXZ
_TEXT	SEGMENT
this$ = 8
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEB_WXZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*, COMDAT

; 68   :  #if _ITERATOR_DEBUG_LEVEL == 2
; 69   : 		if (this->_Getcont() == 0
; 70   : 			|| _Ptr == 0
; 71   : 			|| _Ptr < ((_Mystr *)this->_Getcont())->_Myptr()
; 72   : 			|| ((_Mystr *)this->_Getcont())->_Myptr()
; 73   : 				+ ((_Mystr *)this->_Getcont())->_Mysize <= _Ptr)
; 74   : 			{	// report error
; 75   : 			_DEBUG_ERROR("string iterator not dereferencable");
; 76   : 			_SCL_SECURE_OUT_OF_RANGE;
; 77   : 			}
; 78   : 
; 79   :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 80   : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && _Ptr != 0);
; 81   : 		_SCL_SECURE_VALIDATE_RANGE(
; 82   : 			((_Mystr *)this->_Getcont())->_Myptr() <= _Ptr
; 83   : 			&& _Ptr < ((_Mystr *)this->_Getcont())->_Myptr()
; 84   : 				+ ((_Mystr *)this->_Getcont())->_Mysize);
; 85   :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 86   : 
; 87   : 		_Analysis_assume_(_Ptr != 0);
; 88   : 
; 89   : 		return (*_Ptr);

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 90   : 		}

  00003	c3		 ret	 0
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAAEB_WXZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEA_WPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pstring$ = 24
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEA_WPEBU_Container_base0@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT

; 50   : 		_Ptr = _Parg;

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 315  : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEA_WPEBU_Container_base0@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
__formal$ = 24
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT

; 811  : 		return (_Mytraits::select_on_container_copy_construction(*this));

  00000	48 8b c2	 mov	 rax, rdx

; 812  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT

; 723  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 724  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT

; 718  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 719  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT

; 696  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 697  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT

; 691  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 692  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT

; 686  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 687  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 573  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 566  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 567  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 566  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 567  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 561  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 562  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 561  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 562  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ PROC			; std::_Yarn<wchar_t>::_Tidy, COMDAT

; 3688 : 		{	// discard any string

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3689 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN4@Tidy

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN4@Tidy:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3699 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ ENDP			; std::_Yarn<wchar_t>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Tidy@?$_Yarn@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@D@std@@AEAAXXZ PROC			; std::_Yarn<char>::_Tidy, COMDAT

; 3688 : 		{	// discard any string

$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 3689 : 		if (_Myptr != 0)

  00009	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0000c	48 85 c9	 test	 rcx, rcx
  0000f	74 05		 je	 SHORT $LN4@Tidy

; 3690 : 
; 3691 :  #ifdef _DEBUG
; 3692 : 			_free_dbg(_Myptr, _CRT_BLOCK);
; 3693 : 
; 3694 :  #else /* _DEBUG */
; 3695 : 			_CSTD free(_Myptr);

  00011	e8 00 00 00 00	 call	 free
$LN4@Tidy:

; 3696 :  #endif /* _DEBUG */
; 3697 : 
; 3698 : 		_Myptr = 0;

  00016	48 c7 03 00 00
	00 00		 mov	 QWORD PTR [rbx], 0

; 3699 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
?_Tidy@?$_Yarn@D@std@@AEAAXXZ ENDP			; std::_Yarn<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
__formal$ = 24
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 811  : 		return (_Mytraits::select_on_container_copy_construction(*this));

  00000	48 8b c2	 mov	 rax, rdx

; 812  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 723  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 724  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 691  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 692  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT

; 686  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 687  : 		}

  00003	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 573  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 566  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 567  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 566  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 567  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN11@Myptr

; 561  : 		return (_Get_data()._Myptr());

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 562  : 		}

  0000a	c3		 ret	 0
$LN11@Myptr:

; 561  : 		return (_Get_data()._Myptr());

  0000b	48 8b c1	 mov	 rax, rcx

; 562  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAPEADXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT

; 2265 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 05		 jb	 SHORT $LN17@Check_offs

; 2267 : 			_Xran();
; 2268 : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN17@Check_offs:

; 2278 : 		_Xout_of_range("invalid string position");

  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0001b	cc		 int	 3
$LN16@Check_offs:
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Built$ = 56
_Newsize$ = 64
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT

; 2243 : 		{	// initialize buffer, deallocating any storage

$LN118:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b f8	 mov	 rdi, r8
  0000d	48 8b d9	 mov	 rbx, rcx

; 2244 : 		if (!_Built)

  00010	84 d2		 test	 dl, dl
  00012	74 36		 je	 SHORT $LN4@Tidy

; 2245 : 			;
; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00014	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00019	72 2f		 jb	 SHORT $LN4@Tidy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;

  0001b	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  00020	48 8b 31	 mov	 rsi, QWORD PTR [rcx]

; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)

  00023	4d 85 c0	 test	 r8, r8
  00026	74 0b		 je	 SHORT $LN58@Tidy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00028	4d 03 c0	 add	 r8, r8
  0002b	48 8b d6	 mov	 rdx, rsi
  0002e	e8 00 00 00 00	 call	 memcpy
$LN58@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00033	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00037	48 8b d6	 mov	 rdx, rsi
  0003a	49 ff c0	 inc	 r8
  0003d	48 8b cb	 mov	 rcx, rbx
  00040	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
  00045	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
$LN4@Tidy:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0004a	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00052	33 c9		 xor	 ecx, ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00054	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00058	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0005d	72 12		 jb	 SHORT $LN106@Tidy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0005f	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00062	66 89 0c 78	 mov	 WORD PTR [rax+rdi*2], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2257 : 		}

  00066	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0006b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
$LN106@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00071	66 89 0c 7b	 mov	 WORD PTR [rbx+rdi*2], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2257 : 		}

  00075	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0007a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00000	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx
  00004	48 8b c1	 mov	 rax, rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00007	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  0000c	72 03		 jb	 SHORT $LN22@Eos
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
$LN22@Eos:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00011	33 c9		 xor	 ecx, ecx
  00013	66 89 0c 50	 mov	 WORD PTR [rax+rdx*2], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2215 : 		}

  00017	c3		 ret	 0
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Size$ = 24
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b c2	 sub	 rax, rdx

; 2110 : 		if (_Size <= _Max_effective_size)

  00007	4c 3b c0	 cmp	 r8, rax
  0000a	49 0f 46 c0	 cmovbe	 rax, r8

; 2111 : 			return (_Size);
; 2112 : 		else
; 2113 : 			return (_Max_effective_size);
; 2114 : 		}

  0000e	c3		 ret	 0
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z
_TEXT	SEGMENT
_Left$ = 8
_Left_size$ = 16
_Right$ = 24
_Right_size$ = 32
?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare, COMDAT

; 2091 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits

$LN25:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 7c 24 10	 mov	 QWORD PTR [rsp+16], rdi

; 2092 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;

  0000a	49 3b d1	 cmp	 rdx, r9
  0000d	4d 8b d1	 mov	 r10, r9
  00010	49 8b d9	 mov	 rbx, r9
  00013	4c 0f 42 d2	 cmovb	 r10, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 297  : 		return (_Count == 0 ? 0

  00017	45 33 db	 xor	 r11d, r11d
  0001a	83 cf ff	 or	 edi, -1
  0001d	4d 85 d2	 test	 r10, r10
$LN22@Traits_com:
  00020	75 1e		 jne	 SHORT $LL13@Traits_com
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 220  :         return 0;

  00022	45 8b cb	 mov	 r9d, r11d
$LN10@Traits_com:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2095 : 		if (_Ans != 0)

  00025	45 85 c9	 test	 r9d, r9d
  00028	74 3c		 je	 SHORT $LN2@Traits_com

; 2096 : 			return (_Ans);

  0002a	41 8b c1	 mov	 eax, r9d

; 2100 : 
; 2101 : 		if (_Left_size > _Right_size)
; 2102 : 			return (1);
; 2103 : 
; 2104 : 		return (0);
; 2105 : 		}

  0002d	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  00032	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  00037	c3		 ret	 0
  00038	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL13@Traits_com:
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 217  :             if (*_S1 != *_S2)

  00040	41 0f b7 00	 movzx	 eax, WORD PTR [r8]
  00044	66 39 01	 cmp	 WORD PTR [rcx], ax
  00047	75 0e		 jne	 SHORT $LN17@Traits_com

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  00049	48 83 c1 02	 add	 rcx, 2
  0004d	49 83 c0 02	 add	 r8, 2
  00051	49 83 ea 01	 sub	 r10, 1

; 217  :             if (*_S1 != *_S2)

  00055	eb c9		 jmp	 SHORT $LN22@Traits_com
$LN17@Traits_com:

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

  00057	66 39 01	 cmp	 WORD PTR [rcx], ax
  0005a	41 b9 01 00 00
	00		 mov	 r9d, 1
  00060	44 0f 42 cf	 cmovb	 r9d, edi
  00064	eb bf		 jmp	 SHORT $LN10@Traits_com
$LN2@Traits_com:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2098 : 		if (_Left_size < _Right_size)

  00066	48 3b d3	 cmp	 rdx, rbx
  00069	73 0d		 jae	 SHORT $LN23@Traits_com

; 2099 : 			return (-1);

  0006b	8b c7		 mov	 eax, edi

; 2100 : 
; 2101 : 		if (_Left_size > _Right_size)
; 2102 : 			return (1);
; 2103 : 
; 2104 : 		return (0);
; 2105 : 		}

  0006d	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  00072	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  00077	c3		 ret	 0
$LN23@Traits_com:
  00078	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  0007d	41 0f 97 c3	 seta	 r11b
  00081	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  00086	41 8b c3	 mov	 eax, r11d
  00089	c3		 ret	 0
?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K_W@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
_Ch$ = 24
?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize, COMDAT

; 1758 : 		if (_Newsize <= this->_Mysize())

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 3b d0	 cmp	 rdx, rax
  00007	77 15		 ja	 SHORT $LN2@resize

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00009	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00012	72 03		 jb	 SHORT $LN36@resize
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN36@resize:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00017	33 c0		 xor	 eax, eax
  00019	66 89 04 51	 mov	 WORD PTR [rcx+rdx*2], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1762 : 		}

  0001d	c3		 ret	 0
$LN2@resize:

; 1759 : 			_Eos(_Newsize);
; 1760 : 		else
; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  0001e	48 2b d0	 sub	 rdx, rax
  00021	e9 00 00 00 00	 jmp	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 303  : 		return (*_First == 0 ? 0

  00000	66 83 3a 00	 cmp	 WORD PTR [rdx], 0
  00004	75 08		 jne	 SHORT $LN5@assign
  00006	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00009	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN5@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 303  : 		return (*_First == 0 ? 0

  0000e	49 83 c8 ff	 or	 r8, -1
$LL7@assign:
  00012	49 ff c0	 inc	 r8
  00015	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  0001b	75 f5		 jne	 SHORT $LL7@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0001d	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1160 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN235:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00018	48 85 d2	 test	 rdx, rdx
  0001b	74 61		 je	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00021	48 83 fa 08	 cmp	 rdx, 8
  00025	72 05		 jb	 SHORT $LN20@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00027	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002a	eb 03		 jmp	 SHORT $LN21@assign
$LN20@assign:
  0002c	48 8b c1	 mov	 rax, rcx
$LN21@assign:

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002f	48 3b f0	 cmp	 rsi, rax
  00032	72 4a		 jb	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00034	48 83 fa 08	 cmp	 rdx, 8
  00038	72 03		 jb	 SHORT $LN39@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN39@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003d	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00041	48 8d 0c 41	 lea	 rcx, QWORD PTR [rcx+rax*2]
  00045	48 3b ce	 cmp	 rcx, rsi
  00048	76 34		 jbe	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004a	48 83 fa 08	 cmp	 rdx, 8
  0004e	72 05		 jb	 SHORT $LN65@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00050	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00053	eb 03		 jmp	 SHORT $LN66@assign
$LN65@assign:
  00055	48 8b c3	 mov	 rax, rbx
$LN66@assign:

; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,

  00058	48 2b f0	 sub	 rsi, rax
  0005b	4d 8b c8	 mov	 r9, r8
  0005e	48 d1 fe	 sar	 rsi, 1
  00061	48 8b d3	 mov	 rdx, rbx
  00064	4c 8b c6	 mov	 r8, rsi
  00067	48 8b cb	 mov	 rcx, rbx

; 1172 : 		}

  0006a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006f	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00074	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00078	5f		 pop	 rdi

; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,

  00079	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN2@assign:

; 2220 : 		if (max_size() < _Newsize)

  0007e	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  00088	4c 3b c0	 cmp	 r8, rax
  0008b	0f 87 aa 00 00
	00		 ja	 $LN233@assign

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00091	4c 39 43 18	 cmp	 QWORD PTR [rbx+24], r8
  00095	73 20		 jae	 SHORT $LN75@assign

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00097	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0009b	48 8b d7	 mov	 rdx, rdi
  0009e	48 8b cb	 mov	 rcx, rbx
  000a1	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN172@assign:

; 2228 : 			_Eos(0);	// new size is zero, just null terminate
; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000a6	48 85 ff	 test	 rdi, rdi

; 1164 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1165 : 
; 1166 : 		if (_Grow(_Count))

  000a9	74 7d		 je	 SHORT $LN229@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ab	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000b0	72 49		 jb	 SHORT $LN185@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  000b2	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b5	eb 47		 jmp	 SHORT $LN186@assign
$LN75@assign:

; 2227 : 		else if (_Newsize == 0)

  000b7	4d 85 c0	 test	 r8, r8
  000ba	75 ea		 jne	 SHORT $LN172@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000bc	33 c0		 xor	 eax, eax
  000be	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c2	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000c7	72 19		 jb	 SHORT $LN163@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000c9	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000cc	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1171 : 		return (*this);

  000cf	48 8b c3	 mov	 rax, rbx

; 1172 : 		}

  000d2	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000d7	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000dc	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e0	5f		 pop	 rdi
  000e1	c3		 ret	 0
$LN163@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000e2	66 89 03	 mov	 WORD PTR [rbx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e5	48 8b cb	 mov	 rcx, rbx

; 1171 : 		return (*this);

  000e8	48 8b c3	 mov	 rax, rbx

; 1172 : 		}

  000eb	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000f0	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000f5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000f9	5f		 pop	 rdi
  000fa	c3		 ret	 0
$LN185@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000fb	48 8b cb	 mov	 rcx, rbx
$LN186@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 310  : 		return (_Count == 0 ? _First1

  000fe	48 85 ff	 test	 rdi, rdi
  00101	74 0c		 je	 SHORT $LN196@assign
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00103	4c 8d 04 3f	 lea	 r8, QWORD PTR [rdi+rdi]
  00107	48 8b d6	 mov	 rdx, rsi
  0010a	e8 00 00 00 00	 call	 memcpy
$LN196@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0010f	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00113	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00118	72 05		 jb	 SHORT $LN220@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0011a	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0011d	eb 03		 jmp	 SHORT $LN221@assign
$LN220@assign:
  0011f	48 8b cb	 mov	 rcx, rbx
$LN221@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00122	33 c0		 xor	 eax, eax
  00124	66 89 04 79	 mov	 WORD PTR [rcx+rdi*2], ax
$LN229@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1172 : 		}

  00128	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0012d	48 8b c3	 mov	 rax, rbx
  00130	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00135	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00139	5f		 pop	 rdi
  0013a	c3		 ret	 0
$LN233@assign:

; 2261 : 		_Xlength_error("string too long");

  0013b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00142	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00147	cc		 int	 3
$LN232@assign:
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN267:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	48 89 7c 24 18	 mov	 QWORD PTR [rsp+24], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)

  00019	49 8b f9	 mov	 rdi, r9
  0001c	4d 8b f0	 mov	 r14, r8
  0001f	48 8b f2	 mov	 rsi, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 e6 00 00
	00		 jb	 $LN263@assign

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 2110 : 		if (_Size <= _Max_effective_size)

  00031	4c 3b c8	 cmp	 r9, rax
  00034	48 0f 47 f8	 cmova	 rdi, rax

; 1145 : 		_Right._Check_offset(_Roff);
; 1146 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1147 : 
; 1148 : 		if (this == &_Right)

  00038	48 3b ca	 cmp	 rcx, rdx
  0003b	75 36		 jne	 SHORT $LN2@assign

; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0003d	49 8d 0c 38	 lea	 rcx, QWORD PTR [r8+rdi]

; 2266 : 		if (this->_Mysize() < _Off)

  00041	48 39 4b 10	 cmp	 QWORD PTR [rbx+16], rcx
  00045	0f 82 d6 00 00
	00		 jb	 $LN265@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0004b	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00054	72 05		 jb	 SHORT $LN74@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00056	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00059	eb 03		 jmp	 SHORT $LN75@assign
$LN74@assign:
  0005b	48 8b d3	 mov	 rdx, rbx
$LN75@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0005e	33 c0		 xor	 eax, eax
  00060	66 89 04 4a	 mov	 WORD PTR [rdx+rcx*2], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  00064	33 d2		 xor	 edx, edx
  00066	48 8b cb	 mov	 rcx, rbx
  00069	e8 00 00 00 00	 call	 ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase

; 1150 : 		else if (_Grow(_Count))

  0006e	e9 88 00 00 00	 jmp	 $LN258@assign
$LN2@assign:

; 2220 : 		if (max_size() < _Newsize)

  00073	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  0007d	48 3b f8	 cmp	 rdi, rax
  00080	0f 87 a8 00 00
	00		 ja	 $LN266@assign

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00086	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0008a	73 27		 jae	 SHORT $LN87@assign

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0008c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00090	48 8b d7	 mov	 rdx, rdi
  00093	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00098	48 85 ff	 test	 rdi, rdi

; 1150 : 		else if (_Grow(_Count))

  0009b	74 5e		 je	 SHORT $LN258@assign
$LN262@assign:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0009d	48 83 7e 18 08	 cmp	 QWORD PTR [rsi+24], 8
  000a2	72 03		 jb	 SHORT $LN196@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000a4	48 8b 36	 mov	 rsi, QWORD PTR [rsi]
$LN196@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a7	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000ac	72 1f		 jb	 SHORT $LN214@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  000ae	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b1	eb 1d		 jmp	 SHORT $LN215@assign
$LN87@assign:

; 2227 : 		else if (_Newsize == 0)

  000b3	48 85 ff	 test	 rdi, rdi
  000b6	75 e5		 jne	 SHORT $LN262@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000b8	33 c0		 xor	 eax, eax
  000ba	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000be	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  000c3	72 03		 jb	 SHORT $LN176@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000c5	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN176@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000c8	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000cb	eb 2e		 jmp	 SHORT $LN258@assign
$LN214@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000cd	48 8b cb	 mov	 rcx, rbx
$LN215@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 310  : 		return (_Count == 0 ? _First1

  000d0	48 85 ff	 test	 rdi, rdi
  000d3	74 0d		 je	 SHORT $LN225@assign
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  000d5	4c 8d 04 3f	 lea	 r8, QWORD PTR [rdi+rdi]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1152 : 			_Traits::copy(this->_Myptr(),

  000d9	4a 8d 14 76	 lea	 rdx, QWORD PTR [rsi+r14*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  000dd	e8 00 00 00 00	 call	 memcpy
$LN225@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000e2	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e6	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000eb	72 05		 jb	 SHORT $LN249@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000ed	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000f0	eb 03		 jmp	 SHORT $LN250@assign
$LN249@assign:
  000f2	48 8b cb	 mov	 rcx, rbx
$LN250@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000f5	33 c0		 xor	 eax, eax
  000f7	66 89 04 79	 mov	 WORD PTR [rcx+rdi*2], ax
$LN258@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1157 : 		}

  000fb	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00100	48 8b c3	 mov	 rax, rbx
  00103	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00108	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  0010d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00111	41 5e		 pop	 r14
  00113	c3		 ret	 0
$LN263@assign:

; 2278 : 		_Xout_of_range("invalid string position");

  00114	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0011b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00120	cc		 int	 3
$LN265@assign:
  00121	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00128	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0012d	cc		 int	 3
$LN266@assign:

; 2261 : 		_Xlength_error("string too long");

  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00135	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0013a	cc		 int	 3
$LN260@assign:
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT

; 1106 : 		{	// append _Count * _Ch

$LN229:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  0000a	41 56		 push	 r14
  0000c	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1107 : 		if (npos - this->_Mysize() <= _Count)

  00010	48 83 c8 ff	 or	 rax, -1
  00014	45 0f b7 f0	 movzx	 r14d, r8w
  00018	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0001c	48 8b ea	 mov	 rbp, rdx
  0001f	49 2b c0	 sub	 rax, r8
  00022	48 8b d9	 mov	 rbx, rcx
  00025	48 3b c2	 cmp	 rax, rdx
  00028	0f 86 d0 00 00
	00		 jbe	 $LN226@append

; 1108 : 			_Xlen();	// result too long
; 1109 : 
; 1110 : 		const size_type _Num = this->_Mysize() + _Count;

  0002e	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  00033	49 8d 34 10	 lea	 rsi, QWORD PTR [r8+rdx]

; 1111 : 		if (0 < _Count && _Grow(_Num))

  00037	48 85 d2	 test	 rdx, rdx
  0003a	0f 84 a5 00 00
	00		 je	 $LN216@append

; 2220 : 		if (max_size() < _Newsize)

  00040	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  0004a	48 3b f0	 cmp	 rsi, rax
  0004d	0f 87 b8 00 00
	00		 ja	 $LN228@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00053	48 39 71 18	 cmp	 QWORD PTR [rcx+24], rsi
  00057	73 28		 jae	 SHORT $LN28@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00059	48 8b d6	 mov	 rdx, rsi
  0005c	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00061	48 85 f6	 test	 rsi, rsi

; 1111 : 		if (0 < _Count && _Grow(_Num))

  00064	74 7f		 je	 SHORT $LN216@append
$LN225@append:

; 1112 : 			{	// make room and append new stuff using assign
; 1113 : 			_Chassign(this->_Mysize(), _Count, _Ch);

  00066	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]

; 2171 : 		if (_Count == 1)

  0006a	48 83 fd 01	 cmp	 rbp, 1
  0006e	75 35		 jne	 SHORT $LN137@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00070	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00075	72 24		 jb	 SHORT $LN150@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00077	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0007a	66 44 89 34 48	 mov	 WORD PTR [rax+rcx*2], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  0007f	eb 4b		 jmp	 SHORT $LN184@append
$LN28@append:

; 2227 : 		else if (_Newsize == 0)

  00081	48 85 f6	 test	 rsi, rsi
  00084	75 e0		 jne	 SHORT $LN225@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00086	33 c0		 xor	 eax, eax
  00088	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008c	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00091	72 03		 jb	 SHORT $LN117@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00093	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN117@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00096	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00099	eb 4a		 jmp	 SHORT $LN216@append
$LN150@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009b	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0009e	66 44 89 34 4b	 mov	 WORD PTR [rbx+rcx*2], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  000a3	eb 27		 jmp	 SHORT $LN184@append
$LN137@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a5	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000aa	48 89 7c 24 38	 mov	 QWORD PTR [rsp+56], rdi
  000af	72 05		 jb	 SHORT $LN171@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000b1	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b4	eb 03		 jmp	 SHORT $LN172@append
$LN171@append:
  000b6	48 8b c3	 mov	 rax, rbx
$LN172@append:

; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  000b9	48 8d 3c 48	 lea	 rdi, QWORD PTR [rax+rcx*2]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 340  : 		return ((_Elem *)_CSTD wmemset(_First, _Ch, _Count));

  000bd	41 0f b7 c6	 movzx	 eax, r14w
  000c1	48 8b cd	 mov	 rcx, rbp
  000c4	66 f3 ab	 rep stosw
  000c7	48 8b 7c 24 38	 mov	 rdi, QWORD PTR [rsp+56]
$LN184@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000cc	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d0	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000d5	72 05		 jb	 SHORT $LN207@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000d7	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000da	eb 03		 jmp	 SHORT $LN208@append
$LN207@append:
  000dc	48 8b cb	 mov	 rcx, rbx
$LN208@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000df	33 c0		 xor	 eax, eax
  000e1	66 89 04 71	 mov	 WORD PTR [rcx+rsi*2], ax
$LN216@append:
  000e5	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1116 : 		return (*this);

  000ea	48 8b c3	 mov	 rax, rbx

; 1117 : 		}

  000ed	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000f2	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  000f7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000fb	41 5e		 pop	 r14
  000fd	c3		 ret	 0
$LN226@append:

; 2261 : 		_Xlength_error("string too long");

  000fe	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00105	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0010a	cc		 int	 3
$LN228@append:
  0010b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00112	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00117	cc		 int	 3
$LN223@append:
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$dead$ = 16
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT

; 1101 : 		_DEBUG_POINTER(_Ptr);
; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));

  00000	41 b8 01 00 00
	00		 mov	 r8d, 1
  00006	e9 00 00 00 00	 jmp	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT

; 1060 : 		return (append(_Right, 0, npos));

  00000	49 83 c9 ff	 or	 r9, -1
  00004	45 33 c0	 xor	 r8d, r8d
  00007	e9 00 00 00 00	 jmp	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv, COMDAT

; 956  : 		{	// assign by moving _Right

$LN252:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)

  0000f	33 ff		 xor	 edi, edi
  00011	48 8b da	 mov	 rbx, rdx
  00014	48 83 7a 18 08	 cmp	 QWORD PTR [rdx+24], 8
  00019	48 8b f1	 mov	 rsi, rcx
  0001c	73 14		 jae	 SHORT $LN2@Assign_rv

; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  0001e	4c 8b 42 10	 mov	 r8, QWORD PTR [rdx+16]
  00022	49 83 c0 01	 add	 r8, 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 333  : 		return (_Count == 0 ? _First1

  00026	74 18		 je	 SHORT $LN3@Assign_rv
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00028	4d 03 c0	 add	 r8, r8
  0002b	e8 00 00 00 00	 call	 memmove
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 960  : 		else

  00030	eb 0e		 jmp	 SHORT $LN3@Assign_rv
$LN2@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00032	48 85 c9	 test	 rcx, rcx
  00035	74 06		 je	 SHORT $LN83@Assign_rv
  00037	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN83@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 963  : 			_Right._Bx()._Ptr = pointer();

  0003d	48 89 3a	 mov	 QWORD PTR [rdx], rdi
$LN3@Assign_rv:

; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();

  00040	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00044	48 89 46 10	 mov	 QWORD PTR [rsi+16], rax

; 966  : 		this->_Myres() = _Right._Myres();

  00048	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  0004c	48 89 46 18	 mov	 QWORD PTR [rsi+24], rax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00050	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00058	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005c	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00061	72 16		 jb	 SHORT $LN240@Assign_rv
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00063	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00066	66 89 38	 mov	 WORD PTR [rax], di
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 968  : 		}

  00069	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006e	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00073	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
$LN240@Assign_rv:
  00079	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0007e	66 89 3b	 mov	 WORD PTR [rbx], di
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 968  : 		}

  00081	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00086	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Built$ = 56
_Newsize$ = 64
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 2243 : 		{	// initialize buffer, deallocating any storage

$LN137:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f0	 mov	 rsi, r8
  00012	48 8b d9	 mov	 rbx, rcx

; 2244 : 		if (!_Built)

  00015	84 d2		 test	 dl, dl
  00017	74 55		 je	 SHORT $LN85@Tidy

; 2245 : 			;
; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00019	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0001e	72 4e		 jb	 SHORT $LN85@Tidy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;

  00020	48 8b 39	 mov	 rdi, QWORD PTR [rcx]

; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)

  00023	4d 85 c0	 test	 r8, r8
  00026	74 08		 je	 SHORT $LN58@Tidy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  00028	48 8b d7	 mov	 rdx, rdi
  0002b	e8 00 00 00 00	 call	 memcpy
$LN58@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00030	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00034	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00037	48 83 f8 ff	 cmp	 rax, -1
  0003b	77 5b		 ja	 SHORT $LN131@Tidy

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0003d	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00043	72 21		 jb	 SHORT $LN80@Tidy

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00045	40 f6 c7 1f	 test	 dil, 31
  00049	75 53		 jne	 SHORT $LN133@Tidy

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0004b	48 8b 47 f8	 mov	 rax, QWORD PTR [rdi-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0004f	48 3b c7	 cmp	 rax, rdi
  00052	73 50		 jae	 SHORT $LN134@Tidy

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00054	48 2b f8	 sub	 rdi, rax
  00057	48 83 ff 08	 cmp	 rdi, 8
  0005b	72 4d		 jb	 SHORT $LN135@Tidy

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0005d	48 83 ff 27	 cmp	 rdi, 39			; 00000027H
  00061	77 4d		 ja	 SHORT $LN136@Tidy

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00063	48 8b f8	 mov	 rdi, rax
$LN80@Tidy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00066	48 8b cf	 mov	 rcx, rdi
  00069	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN85@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0006e	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00076	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0007a	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0007f	72 03		 jb	 SHORT $LN119@Tidy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00081	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN119@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00084	c6 04 33 00	 mov	 BYTE PTR [rbx+rsi], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2257 : 		}

  00088	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008d	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00092	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00096	5f		 pop	 rdi
  00097	c3		 ret	 0
$LN131@Tidy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00098	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0009d	cc		 int	 3
$LN133@Tidy:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0009e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a3	cc		 int	 3
$LN134@Tidy:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000a4	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000a9	cc		 int	 3
$LN135@Tidy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000aa	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000af	cc		 int	 3
$LN136@Tidy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000b0	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000b5	cc		 int	 3
$LN130@Tidy:
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
_Ch$ = 24
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 1758 : 		if (_Newsize <= this->_Mysize())

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 3b d0	 cmp	 rdx, rax
  00007	77 13		 ja	 SHORT $LN2@resize

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00009	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00012	72 03		 jb	 SHORT $LN36@resize
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN36@resize:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00017	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1762 : 		}

  0001b	c3		 ret	 0
$LN2@resize:

; 1759 : 			_Eos(_Newsize);
; 1760 : 		else
; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);

  0001c	48 2b d0	 sub	 rdx, rax
  0001f	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 1742 : 		return (this->_Mysize());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]

; 1743 : 		}

  00004	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  00000	80 3a 00	 cmp	 BYTE PTR [rdx], 0
  00003	75 08		 jne	 SHORT $LN5@assign
  00005	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00008	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN5@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 523  : 		return (*_First == 0 ? 0

  0000d	49 83 c8 ff	 or	 r8, -1
$LL7@assign:
  00011	49 ff c0	 inc	 r8
  00014	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00019	75 f6		 jne	 SHORT $LL7@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0001b	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1160 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN233:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00018	48 85 d2	 test	 rdx, rdx
  0001b	74 5a		 je	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00021	48 83 fa 10	 cmp	 rdx, 16
  00025	72 05		 jb	 SHORT $LN20@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00027	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002a	eb 03		 jmp	 SHORT $LN21@assign
$LN20@assign:
  0002c	48 8b c1	 mov	 rax, rcx
$LN21@assign:

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002f	48 3b f0	 cmp	 rsi, rax
  00032	72 43		 jb	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00034	48 83 fa 10	 cmp	 rdx, 16
  00038	72 03		 jb	 SHORT $LN39@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN39@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003d	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  00041	48 3b ce	 cmp	 rcx, rsi
  00044	76 31		 jbe	 SHORT $LN2@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00046	48 83 fa 10	 cmp	 rdx, 16
  0004a	72 05		 jb	 SHORT $LN65@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0004c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	eb 03		 jmp	 SHORT $LN66@assign
$LN65@assign:
  00051	48 8b c3	 mov	 rax, rbx
$LN66@assign:

; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,

  00054	48 2b f0	 sub	 rsi, rax
  00057	4d 8b c8	 mov	 r9, r8
  0005a	4c 8b c6	 mov	 r8, rsi
  0005d	48 8b d3	 mov	 rdx, rbx
  00060	48 8b cb	 mov	 rcx, rbx

; 1172 : 		}

  00063	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00068	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5f		 pop	 rdi

; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,

  00072	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@assign:

; 2220 : 		if (max_size() < _Newsize)

  00077	49 83 f8 fe	 cmp	 r8, -2
  0007b	0f 87 a2 00 00
	00		 ja	 $LN231@assign

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00081	4c 39 43 18	 cmp	 QWORD PTR [rbx+24], r8
  00085	73 20		 jae	 SHORT $LN75@assign

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00087	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0008b	48 8b d7	 mov	 rdx, rdi
  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
$LN172@assign:

; 2228 : 			_Eos(0);	// new size is zero, just null terminate
; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00096	48 85 ff	 test	 rdi, rdi

; 1164 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1165 : 
; 1166 : 		if (_Grow(_Count))

  00099	74 75		 je	 SHORT $LN227@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009b	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000a0	72 44		 jb	 SHORT $LN185@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  000a2	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a5	eb 42		 jmp	 SHORT $LN186@assign
$LN75@assign:

; 2227 : 		else if (_Newsize == 0)

  000a7	4d 85 c0	 test	 r8, r8
  000aa	75 ea		 jne	 SHORT $LN172@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ac	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b0	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000b5	72 19		 jb	 SHORT $LN163@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000b7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ba	44 88 00	 mov	 BYTE PTR [rax], r8b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1171 : 		return (*this);

  000bd	48 8b c3	 mov	 rax, rbx

; 1172 : 		}

  000c0	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c5	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000ca	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ce	5f		 pop	 rdi
  000cf	c3		 ret	 0
$LN163@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d0	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000d3	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1172 : 		}

  000d6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000db	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000e0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e4	5f		 pop	 rdi
  000e5	c3		 ret	 0
$LN185@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e6	48 8b cb	 mov	 rcx, rbx
$LN186@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000e9	48 85 ff	 test	 rdi, rdi
  000ec	74 0b		 je	 SHORT $LN196@assign
  000ee	4c 8b c7	 mov	 r8, rdi
  000f1	48 8b d6	 mov	 rdx, rsi
  000f4	e8 00 00 00 00	 call	 memcpy
$LN196@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000f9	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000fd	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00102	72 05		 jb	 SHORT $LN218@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00104	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00107	eb 03		 jmp	 SHORT $LN219@assign
$LN218@assign:
  00109	48 8b c3	 mov	 rax, rbx
$LN219@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0010c	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN227@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1172 : 		}

  00110	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00115	48 8b c3	 mov	 rax, rbx
  00118	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0011d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00121	5f		 pop	 rdi
  00122	c3		 ret	 0
$LN231@assign:

; 2261 : 		_Xlength_error("string too long");

  00123	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0012a	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012f	cc		 int	 3
$LN230@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN265:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	48 89 7c 24 18	 mov	 QWORD PTR [rsp+24], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)

  00019	49 8b f9	 mov	 rdi, r9
  0001c	4d 8b f0	 mov	 r14, r8
  0001f	48 8b f2	 mov	 rsi, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 d9 00 00
	00		 jb	 $LN261@assign

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 2110 : 		if (_Size <= _Max_effective_size)

  00031	4c 3b c8	 cmp	 r9, rax
  00034	48 0f 47 f8	 cmova	 rdi, rax

; 1145 : 		_Right._Check_offset(_Roff);
; 1146 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1147 : 
; 1148 : 		if (this == &_Right)

  00038	48 3b ca	 cmp	 rcx, rdx
  0003b	75 2f		 jne	 SHORT $LN2@assign

; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0003d	49 8d 04 38	 lea	 rax, QWORD PTR [r8+rdi]

; 2266 : 		if (this->_Mysize() < _Off)

  00041	48 39 41 10	 cmp	 QWORD PTR [rcx+16], rax
  00045	0f 82 c9 00 00
	00		 jb	 $LN263@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0004b	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00054	72 03		 jb	 SHORT $LN75@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00056	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN75@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00059	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

  0005d	33 d2		 xor	 edx, edx
  0005f	48 8b cb	 mov	 rcx, rbx
  00062	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 1150 : 		else if (_Grow(_Count))

  00067	e9 82 00 00 00	 jmp	 $LN256@assign
$LN2@assign:

; 2220 : 		if (max_size() < _Newsize)

  0006c	48 83 ff fe	 cmp	 rdi, -2
  00070	0f 87 ab 00 00
	00		 ja	 $LN264@assign

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00076	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0007a	73 27		 jae	 SHORT $LN87@assign

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0007c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00080	48 8b d7	 mov	 rdx, rdi
  00083	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00088	48 85 ff	 test	 rdi, rdi

; 1150 : 		else if (_Grow(_Count))

  0008b	74 61		 je	 SHORT $LN256@assign
$LN260@assign:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0008d	48 83 7e 18 10	 cmp	 QWORD PTR [rsi+24], 16
  00092	72 03		 jb	 SHORT $LN196@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00094	48 8b 36	 mov	 rsi, QWORD PTR [rsi]
$LN196@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00097	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0009c	72 25		 jb	 SHORT $LN214@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0009e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a1	eb 23		 jmp	 SHORT $LN215@assign
$LN87@assign:

; 2227 : 		else if (_Newsize == 0)

  000a3	48 85 ff	 test	 rdi, rdi
  000a6	75 e5		 jne	 SHORT $LN260@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000a8	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ac	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  000b1	72 08		 jb	 SHORT $LN175@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000b3	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000b6	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000b9	eb 33		 jmp	 SHORT $LN256@assign
$LN175@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000bb	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000be	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000c1	eb 2b		 jmp	 SHORT $LN256@assign
$LN214@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c3	48 8b cb	 mov	 rcx, rbx
$LN215@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000c6	48 85 ff	 test	 rdi, rdi
  000c9	74 0c		 je	 SHORT $LN225@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1152 : 			_Traits::copy(this->_Myptr(),

  000cb	4a 8d 14 36	 lea	 rdx, QWORD PTR [rsi+r14]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000cf	4c 8b c7	 mov	 r8, rdi
  000d2	e8 00 00 00 00	 call	 memcpy
$LN225@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d7	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000db	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000e0	72 05		 jb	 SHORT $LN247@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000e2	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e5	eb 03		 jmp	 SHORT $LN248@assign
$LN247@assign:
  000e7	48 8b c3	 mov	 rax, rbx
$LN248@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ea	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN256@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1157 : 		}

  000ee	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000f3	48 8b c3	 mov	 rax, rbx
  000f6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000fb	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  00100	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00104	41 5e		 pop	 r14
  00106	c3		 ret	 0
$LN261@assign:

; 2278 : 		_Xout_of_range("invalid string position");

  00107	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0010e	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00113	cc		 int	 3
$LN263@assign:
  00114	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0011b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00120	cc		 int	 3
$LN264@assign:

; 2261 : 		_Xlength_error("string too long");

  00121	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00128	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012d	cc		 int	 3
$LN258@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1082 : 		{	// append [_Ptr, _Ptr + _Count)

$LN267:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f0	 mov	 rsi, r8
  00012	48 8b ea	 mov	 rbp, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00018	48 85 d2	 test	 rdx, rdx
  0001b	74 5a		 je	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001d	4c 8b 49 18	 mov	 r9, QWORD PTR [rcx+24]
  00021	49 83 f9 10	 cmp	 r9, 16
  00025	72 05		 jb	 SHORT $LN21@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00027	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002a	eb 03		 jmp	 SHORT $LN22@append
$LN21@append:
  0002c	48 8b c1	 mov	 rax, rcx
$LN22@append:

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002f	48 3b d0	 cmp	 rdx, rax
  00032	72 43		 jb	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00034	49 83 f9 10	 cmp	 r9, 16
  00038	72 03		 jb	 SHORT $LN40@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN40@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003d	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  00041	48 3b ca	 cmp	 rcx, rdx
  00044	76 31		 jbe	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00046	49 83 f9 10	 cmp	 r9, 16
  0004a	72 05		 jb	 SHORT $LN66@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0004c	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	eb 03		 jmp	 SHORT $LN67@append
$LN66@append:
  00051	48 8b c3	 mov	 rax, rbx
$LN67@append:

; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,

  00054	48 2b e8	 sub	 rbp, rax
  00057	4d 8b c8	 mov	 r9, r8
  0005a	4c 8b c5	 mov	 r8, rbp
  0005d	48 8b d3	 mov	 rdx, rbx
  00060	48 8b cb	 mov	 rcx, rbx

; 1097 : 		}

  00063	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00068	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5e		 pop	 rsi

; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,

  00072	e9 00 00 00 00	 jmp	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@append:

; 1086 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1087 : 		if (npos - this->_Mysize() <= _Count)

  00077	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0007b	48 83 c8 ff	 or	 rax, -1
  0007f	49 2b c0	 sub	 rax, r8
  00082	48 3b c6	 cmp	 rax, rsi
  00085	0f 86 a0 00 00
	00		 jbe	 $LN264@append

; 1088 : 			_Xlen();	// result too long
; 1089 : 
; 1090 : 		const size_type _Num = this->_Mysize() + _Count;

  0008b	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00090	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1091 : 		if (0 < _Count && _Grow(_Num))

  00094	48 85 f6	 test	 rsi, rsi
  00097	74 7a		 je	 SHORT $LN257@append

; 2220 : 		if (max_size() < _Newsize)

  00099	48 83 ff fe	 cmp	 rdi, -2
  0009d	0f 87 95 00 00
	00		 ja	 $LN266@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  000a3	48 39 7b 18	 cmp	 QWORD PTR [rbx+24], rdi
  000a7	73 1c		 jae	 SHORT $LN97@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  000a9	48 8b d7	 mov	 rdx, rdi
  000ac	48 8b cb	 mov	 rcx, rbx
  000af	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000b4	48 85 ff	 test	 rdi, rdi

; 1091 : 		if (0 < _Count && _Grow(_Num))

  000b7	74 5a		 je	 SHORT $LN257@append
$LN263@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b9	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000be	72 25		 jb	 SHORT $LN206@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000c0	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c3	eb 23		 jmp	 SHORT $LN207@append
$LN97@append:

; 2227 : 		else if (_Newsize == 0)

  000c5	48 85 ff	 test	 rdi, rdi
  000c8	75 ef		 jne	 SHORT $LN263@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ca	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ce	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d3	72 08		 jb	 SHORT $LN185@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000d5	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000d8	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000db	eb 36		 jmp	 SHORT $LN257@append
$LN185@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000dd	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000e0	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000e3	eb 2e		 jmp	 SHORT $LN257@append
$LN206@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e5	48 8b cb	 mov	 rcx, rbx
$LN207@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000e8	48 85 f6	 test	 rsi, rsi
  000eb	74 0f		 je	 SHORT $LN226@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1093 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

  000ed	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000f1	4c 8b c6	 mov	 r8, rsi
  000f4	48 8b d5	 mov	 rdx, rbp
  000f7	e8 00 00 00 00	 call	 memcpy
$LN226@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000fc	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00100	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00105	72 05		 jb	 SHORT $LN248@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00107	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0010a	eb 03		 jmp	 SHORT $LN249@append
$LN248@append:
  0010c	48 8b c3	 mov	 rax, rbx
$LN249@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0010f	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN257@append:
  00113	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1096 : 		return (*this);

  00118	48 8b c3	 mov	 rax, rbx

; 1097 : 		}

  0011b	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00120	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00125	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00129	5e		 pop	 rsi
  0012a	c3		 ret	 0
$LN264@append:

; 2261 : 		_Xlength_error("string too long");

  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00132	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00137	cc		 int	 3
$LN266@append:
  00138	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0013f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00144	cc		 int	 3
$LN261@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)

$LN244:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)

  00019	49 8b f1	 mov	 rsi, r9
  0001c	49 8b e8	 mov	 rbp, r8
  0001f	4c 8b f2	 mov	 r14, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 d0 00 00
	00		 jb	 $LN240@append

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)

  00031	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]

; 2110 : 		if (_Size <= _Max_effective_size)

  00035	4c 3b c8	 cmp	 r9, rax
  00038	48 0f 47 f0	 cmova	 rsi, rax

; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)

  0003c	48 83 c8 ff	 or	 rax, -1
  00040	49 2b c0	 sub	 rax, r8
  00043	48 3b c6	 cmp	 rax, rsi
  00046	0f 86 bf 00 00
	00		 jbe	 $LN242@append

; 1069 : 			_Xlen();	// result too long
; 1070 : 
; 1071 : 		const size_type _Num = this->_Mysize() + _Count;

  0004c	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00051	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1072 : 		if (0 < _Count && _Grow(_Num))

  00055	48 85 f6	 test	 rsi, rsi
  00058	0f 84 82 00 00
	00		 je	 $LN234@append

; 2220 : 		if (max_size() < _Newsize)

  0005e	48 83 ff fe	 cmp	 rdi, -2
  00062	0f 87 b0 00 00
	00		 ja	 $LN243@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00068	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0006c	73 23		 jae	 SHORT $LN56@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0006e	48 8b d7	 mov	 rdx, rdi
  00071	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00076	48 85 ff	 test	 rdi, rdi

; 1072 : 		if (0 < _Count && _Grow(_Num))

  00079	74 65		 je	 SHORT $LN234@append
$LN239@append:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0007b	49 83 7e 18 10	 cmp	 QWORD PTR [r14+24], 16
  00080	72 03		 jb	 SHORT $LN165@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00082	4d 8b 36	 mov	 r14, QWORD PTR [r14]
$LN165@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00085	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0008a	72 25		 jb	 SHORT $LN183@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0008c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008f	eb 23		 jmp	 SHORT $LN184@append
$LN56@append:

; 2227 : 		else if (_Newsize == 0)

  00091	48 85 ff	 test	 rdi, rdi
  00094	75 e5		 jne	 SHORT $LN239@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00096	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009a	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0009f	72 08		 jb	 SHORT $LN144@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000a1	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000a4	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000a7	eb 37		 jmp	 SHORT $LN234@append
$LN144@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a9	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ac	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000af	eb 2f		 jmp	 SHORT $LN234@append
$LN183@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b1	48 8b cb	 mov	 rcx, rbx
$LN184@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000b4	48 85 f6	 test	 rsi, rsi
  000b7	74 10		 je	 SHORT $LN203@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1074 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

  000b9	48 03 4b 10	 add	 rcx, QWORD PTR [rbx+16]
  000bd	49 8d 14 2e	 lea	 rdx, QWORD PTR [r14+rbp]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000c1	4c 8b c6	 mov	 r8, rsi
  000c4	e8 00 00 00 00	 call	 memcpy
$LN203@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000c9	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000cd	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000d2	72 05		 jb	 SHORT $LN225@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000d4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d7	eb 03		 jmp	 SHORT $LN226@append
$LN225@append:
  000d9	48 8b c3	 mov	 rax, rbx
$LN226@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000dc	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN234@append:
  000e0	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1078 : 		return (*this);

  000e5	48 8b c3	 mov	 rax, rbx

; 1079 : 		}

  000e8	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000ed	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000f2	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000f7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000fb	41 5e		 pop	 r14
  000fd	c3		 ret	 0
$LN240@append:

; 2278 : 		_Xout_of_range("invalid string position");

  000fe	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00105	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0010a	cc		 int	 3
$LN242@append:

; 2261 : 		_Xlength_error("string too long");

  0010b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00112	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00117	cc		 int	 3
$LN243@append:
  00118	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0011f	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00124	cc		 int	 3
$LN237@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT

; 956  : 		{	// assign by moving _Right

$LN264:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)

  0000a	48 83 7a 18 10	 cmp	 QWORD PTR [rdx+24], 16
  0000f	48 8b da	 mov	 rbx, rdx
  00012	48 8b f9	 mov	 rdi, rcx
  00015	73 11		 jae	 SHORT $LN2@Assign_rv

; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  00017	4c 8b 42 10	 mov	 r8, QWORD PTR [rdx+16]
  0001b	49 83 c0 01	 add	 r8, 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  0001f	74 19		 je	 SHORT $LN3@Assign_rv
  00021	e8 00 00 00 00	 call	 memmove
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 960  : 		else

  00026	eb 12		 jmp	 SHORT $LN3@Assign_rv
$LN2@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 85 c9	 test	 rcx, rcx
  0002b	74 06		 je	 SHORT $LN81@Assign_rv
  0002d	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00030	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN81@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 963  : 			_Right._Bx()._Ptr = pointer();

  00033	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN3@Assign_rv:

; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();

  0003a	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  0003e	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 966  : 		this->_Myres() = _Right._Myres();

  00042	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00046	48 89 47 18	 mov	 QWORD PTR [rdi+24], rax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0004a	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00052	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005a	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0005f	72 11		 jb	 SHORT $LN251@Assign_rv
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00061	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00064	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 968  : 		}

  00067	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
$LN251@Assign_rv:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00072	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 968  : 		}

  00075	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX$$QEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ
_TEXT	SEGMENT
this$ = 8
?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::fill, COMDAT

; 113  : 		return (_Fillch);

  00000	0f b7 41 58	 movzx	 eax, WORD PTR [rcx+88]

; 114  : 		}

  00004	c3		 ret	 0
?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WXZ ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::fill
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::rdbuf, COMDAT

; 92   : 		return (_Mystrbuf);

  00000	48 8b 41 48	 mov	 rax, QWORD PTR [rcx+72]

; 93   : 		}

  00004	c3		 ret	 0
?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::rdbuf
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::setstate, COMDAT

; 58   : 		{	// merge _State into state, possibly reraise exception

  00000	8b c2		 mov	 eax, edx

; 59   : 		if (_State != goodbit)

  00002	85 d2		 test	 edx, edx
  00004	74 14		 je	 SHORT $LN2@setstate

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00006	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
  00009	0b d0		 or	 edx, eax

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  0000b	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00010	75 03		 jne	 SHORT $LN8@setstate
  00012	83 ca 04	 or	 edx, 4
$LN8@setstate:
  00015	e9 00 00 00 00	 jmp	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
$LN2@setstate:

; 61   : 		}

  0001a	c3		 ret	 0
?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::setstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??_G?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`scalar deleting destructor', COMDAT
$LN15:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax
  00013	f6 c2 01	 test	 dl, 1
  00016	74 0a		 je	 SHORT $LN13@scalar
  00018	ba 10 00 00 00	 mov	 edx, 16
  0001d	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN13@scalar:
  00022	48 8b c3	 mov	 rax, rbx
  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
??_G?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEAAPEAXI@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::numpunct<wchar_t>::do_truename, COMDAT

; 251  : 		{	// return name for true

$LN137:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b da	 mov	 rbx, rdx
  00009	45 33 c0	 xor	 r8d, r8d

; 252  : 		return (string_type(_Truename));

  0000c	48 8b 51 28	 mov	 rdx, QWORD PTR [rcx+40]
  00010	44 89 44 24 20	 mov	 DWORD PTR $T1[rsp], r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001d	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00021	66 44 89 03	 mov	 WORD PTR [rbx], r8w

; 303  : 		return (*_First == 0 ? 0

  00025	66 44 39 02	 cmp	 WORD PTR [rdx], r8w
  00029	74 10		 je	 SHORT $LN134@do_truenam
  0002b	49 83 c8 ff	 or	 r8, -1
  0002f	90		 npad	 1
$LL135@do_truenam:
  00030	49 ff c0	 inc	 r8
  00033	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  00039	75 f5		 jne	 SHORT $LL135@do_truenam
$LN134@do_truenam:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 252  : 		return (string_type(_Truename));

  00043	48 8b c3	 mov	 rax, rbx

; 253  : 		}

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5b		 pop	 rbx
  0004b	c3		 ret	 0
?do_truename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::numpunct<wchar_t>::do_truename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::numpunct<wchar_t>::do_falsename, COMDAT

; 246  : 		{	// return name for false

$LN137:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b da	 mov	 rbx, rdx
  00009	45 33 c0	 xor	 r8d, r8d

; 247  : 		return (string_type(_Falsename));

  0000c	48 8b 51 20	 mov	 rdx, QWORD PTR [rcx+32]
  00010	44 89 44 24 20	 mov	 DWORD PTR $T1[rsp], r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001d	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00021	66 44 89 03	 mov	 WORD PTR [rbx], r8w

; 303  : 		return (*_First == 0 ? 0

  00025	66 44 39 02	 cmp	 WORD PTR [rdx], r8w
  00029	74 10		 je	 SHORT $LN134@do_falsena
  0002b	49 83 c8 ff	 or	 r8, -1
  0002f	90		 npad	 1
$LL135@do_falsena:
  00030	49 ff c0	 inc	 r8
  00033	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  00039	75 f5		 jne	 SHORT $LL135@do_falsena
$LN134@do_falsena:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 247  : 		return (string_type(_Falsename));

  00043	48 8b c3	 mov	 rax, rbx

; 248  : 		}

  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5b		 pop	 rbx
  0004b	c3		 ret	 0
?do_falsename@?$numpunct@_W@std@@MEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::numpunct<wchar_t>::do_falsename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<wchar_t>::do_grouping, COMDAT

; 241  : 		{	// return grouping string

$LN152:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b da	 mov	 rbx, rdx
  00009	45 33 c0	 xor	 r8d, r8d

; 242  : 		return (string(_Grouping));

  0000c	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  00010	44 89 44 24 20	 mov	 DWORD PTR $T1[rsp], r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00015	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001d	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00021	44 88 03	 mov	 BYTE PTR [rbx], r8b

; 523  : 		return (*_First == 0 ? 0

  00024	44 38 02	 cmp	 BYTE PTR [rdx], r8b
  00027	74 11		 je	 SHORT $LN148@do_groupin
  00029	49 83 c8 ff	 or	 r8, -1
  0002d	0f 1f 00	 npad	 3
$LL150@do_groupin:
  00030	49 ff c0	 inc	 r8
  00033	42 80 3c 02 00	 cmp	 BYTE PTR [rdx+r8], 0
  00038	75 f6		 jne	 SHORT $LL150@do_groupin
$LN148@do_groupin:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0003a	48 8b cb	 mov	 rcx, rbx
  0003d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 242  : 		return (string(_Grouping));

  00042	48 8b c3	 mov	 rax, rbx

; 243  : 		}

  00045	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
?do_grouping@?$numpunct@_W@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<wchar_t>::do_grouping
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_thousands_sep@?$numpunct@_W@std@@MEBA_WXZ
_TEXT	SEGMENT
this$ = 8
?do_thousands_sep@?$numpunct@_W@std@@MEBA_WXZ PROC	; std::numpunct<wchar_t>::do_thousands_sep, COMDAT

; 237  : 		return (_Kseparator);

  00000	0f b7 41 1a	 movzx	 eax, WORD PTR [rcx+26]

; 238  : 		}

  00004	c3		 ret	 0
?do_thousands_sep@?$numpunct@_W@std@@MEBA_WXZ ENDP	; std::numpunct<wchar_t>::do_thousands_sep
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?do_decimal_point@?$numpunct@_W@std@@MEBA_WXZ
_TEXT	SEGMENT
this$ = 8
?do_decimal_point@?$numpunct@_W@std@@MEBA_WXZ PROC	; std::numpunct<wchar_t>::do_decimal_point, COMDAT

; 232  : 		return (_Dp);

  00000	0f b7 41 18	 movzx	 eax, WORD PTR [rcx+24]

; 233  : 		}

  00004	c3		 ret	 0
?do_decimal_point@?$numpunct@_W@std@@MEBA_WXZ ENDP	; std::numpunct<wchar_t>::do_decimal_point
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??1?$numpunct@_W@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$numpunct@_W@std@@MEAA@XZ PROC			; std::numpunct<wchar_t>::~numpunct<wchar_t>, COMDAT

; 175  : 		{	// destroy the object

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 89 01	 mov	 QWORD PTR [rcx], rax

; 258  : 		_CSTD free((void *)_Grouping);

  00013	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00017	e8 00 00 00 00	 call	 free

; 259  : 		_CSTD free((void *)_Falsename);

  0001c	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
  00020	e8 00 00 00 00	 call	 free

; 260  : 		_CSTD free((void *)_Truename);

  00025	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]
  00029	e8 00 00 00 00	 call	 free
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  00035	48 89 03	 mov	 QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 177  : 		}

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5b		 pop	 rbx
  0003d	c3		 ret	 0
??1?$numpunct@_W@std@@MEAA@XZ ENDP			; std::numpunct<wchar_t>::~numpunct<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::numpunct<wchar_t>::truename, COMDAT

; 143  : 		{	// return name for true

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 144  : 		return (do_truename());

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx
  0000c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00014	ff 50 38	 call	 QWORD PTR [rax+56]
  00017	48 8b c3	 mov	 rax, rbx

; 145  : 		}

  0001a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?truename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::numpunct<wchar_t>::truename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::numpunct<wchar_t>::falsename, COMDAT

; 138  : 		{	// return name for false

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 139  : 		return (do_falsename());

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx
  0000c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00014	ff 50 30	 call	 QWORD PTR [rax+48]
  00017	48 8b c3	 mov	 rax, rbx

; 140  : 		}

  0001a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?falsename@?$numpunct@_W@std@@QEBA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::numpunct<wchar_t>::falsename
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base, COMDAT

; 106  : 			{	// destroy after unlocking

$LN8:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2

; 107  : 			if (_Myostr.rdbuf() != 0)

  0000d	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00010	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00013	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00017	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
  0001c	48 85 c9	 test	 rcx, rcx
  0001f	74 0b		 je	 SHORT $LN2@Sentry_bas

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00021	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 109  : 			}

  00024	48 83 c4 38	 add	 rsp, 56			; 00000038H

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00028	48 ff 60 10	 rex_jmp QWORD PTR [rax+16]
$LN2@Sentry_bas:

; 109  : 			}

  0002c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00030	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base, COMDAT

; 100  : 			{	// lock the stream buffer, if there

$LN10:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 99   : 			: _Myostr(_Ostr)

  00006	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 100  : 			{	// lock the stream buffer, if there

  00009	48 8b d9	 mov	 rbx, rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  0000c	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000f	4c 63 40 04	 movsxd	 r8, DWORD PTR [rax+4]
  00013	49 8b 4c 10 48	 mov	 rcx, QWORD PTR [r8+rdx+72]
  00018	48 85 c9	 test	 rcx, rcx
  0001b	74 06		 je	 SHORT $LN8@Sentry_bas

; 102  : 				_Myostr.rdbuf()->_Lock();

  0001d	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00020	ff 50 08	 call	 QWORD PTR [rax+8]
$LN8@Sentry_bas:

; 103  : 			}

  00023	48 8b c3	 mov	 rax, rbx
  00026	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002a	5b		 pop	 rbx
  0002b	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Dest$ = 64
_Ch$ = 72
_Count$ = 80
?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Rep, COMDAT

; 1583 : 		{	// put _Count * _Ch to _Dest

$LN41:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00014	48 8b 7c 24 50	 mov	 rdi, QWORD PTR _Count$[rsp]
  00019	41 0f b7 f1	 movzx	 esi, r9w
  0001d	49 8b d8	 mov	 rbx, r8
  00020	48 8b ea	 mov	 rbp, rdx
  00023	48 85 ff	 test	 rdi, rdi
  00026	74 5f		 je	 SHORT $LN3@Rep
  00028	4c 89 74 24 30	 mov	 QWORD PTR [rsp+48], r14
  0002d	41 be ff ff 00
	00		 mov	 r14d, 65535		; 0000ffffH
$LL4@Rep:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00033	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00037	48 85 c9	 test	 rcx, rcx
  0003a	74 3d		 je	 SHORT $LN12@Rep

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0003c	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  00040	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00044	74 24		 je	 SHORT $LN16@Rep
  00046	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  0004a	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  0004c	85 c0		 test	 eax, eax
  0004e	7e 1a		 jle	 SHORT $LN16@Rep

; 308  : 		--*_IPcount;

  00050	ff c8		 dec	 eax
  00052	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  00054	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  00058	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  0005b	48 8d 41 02	 lea	 rax, QWORD PTR [rcx+2]
  0005f	48 89 02	 mov	 QWORD PTR [rdx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  00062	0f b7 c6	 movzx	 eax, si
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00065	66 89 31	 mov	 WORD PTR [rcx], si
  00068	eb 09		 jmp	 SHORT $LN17@Rep
$LN16@Rep:
  0006a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0006d	0f b7 d6	 movzx	 edx, si
  00070	ff 50 18	 call	 QWORD PTR [rax+24]
$LN17@Rep:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00073	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00077	75 03		 jne	 SHORT $LN2@Rep
$LN12@Rep:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00079	c6 03 01	 mov	 BYTE PTR [rbx], 1
$LN2@Rep:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0007c	48 83 ef 01	 sub	 rdi, 1
  00080	75 b1		 jne	 SHORT $LL4@Rep
  00082	4c 8b 74 24 30	 mov	 r14, QWORD PTR [rsp+48]
$LN3@Rep:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  00087	0f 10 03	 movups	 xmm0, XMMWORD PTR [rbx]

; 1587 : 		}

  0008a	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0008f	48 8b c5	 mov	 rax, rbp
  00092	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00097	0f 11 45 00	 movups	 XMMWORD PTR [rbp], xmm0
  0009b	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000a0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Rep@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@_W_K@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Rep
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Dest$ = 64
_Ptr$ = 72
_Count$ = 80
?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Put, COMDAT

; 1575 : 		{	// put [_Ptr, _Ptr + _Count) to _Dest

$LN41:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00014	48 8b 5c 24 50	 mov	 rbx, QWORD PTR _Count$[rsp]
  00019	49 8b f9	 mov	 rdi, r9
  0001c	49 8b f0	 mov	 rsi, r8
  0001f	48 8b ea	 mov	 rbp, rdx
  00022	48 85 db	 test	 rbx, rbx
  00025	74 6a		 je	 SHORT $LN3@Put
  00027	4c 89 74 24 30	 mov	 QWORD PTR [rsp+48], r14
  0002c	41 be ff ff 00
	00		 mov	 r14d, 65535		; 0000ffffH
$LL4@Put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00032	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00036	48 85 c9	 test	 rcx, rcx
  00039	74 44		 je	 SHORT $LN12@Put

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0003b	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0003f	44 0f b7 07	 movzx	 r8d, WORD PTR [rdi]

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00043	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00047	74 22		 je	 SHORT $LN16@Put
  00049	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  0004d	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  0004f	85 c0		 test	 eax, eax
  00051	7e 18		 jle	 SHORT $LN16@Put

; 308  : 		--*_IPcount;

  00053	ff c8		 dec	 eax
  00055	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  00057	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  0005b	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  0005e	48 8d 41 02	 lea	 rax, QWORD PTR [rcx+2]
  00062	48 89 02	 mov	 QWORD PTR [rdx], rax

; 200  : 		return (0 < _Pnavail()

  00065	66 44 89 01	 mov	 WORD PTR [rcx], r8w
  00069	eb 0e		 jmp	 SHORT $LN17@Put
$LN16@Put:
  0006b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0006e	41 0f b7 d0	 movzx	 edx, r8w
  00072	ff 50 18	 call	 QWORD PTR [rax+24]
  00075	44 0f b7 c0	 movzx	 r8d, ax
$LN17@Put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00079	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0007d	75 03		 jne	 SHORT $LN2@Put
$LN12@Put:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0007f	c6 06 01	 mov	 BYTE PTR [rsi], 1
$LN2@Put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00082	48 83 c7 02	 add	 rdi, 2
  00086	48 83 eb 01	 sub	 rbx, 1
  0008a	75 a6		 jne	 SHORT $LL4@Put
  0008c	4c 8b 74 24 30	 mov	 r14, QWORD PTR [rsp+48]
$LN3@Put:

; 1577 : 			*_Dest = *_Ptr;
; 1578 : 		return (_Dest);

  00091	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]

; 1579 : 		}

  00094	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00099	48 8b c5	 mov	 rax, rbp
  0009c	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000a1	0f 11 45 00	 movups	 XMMWORD PTR [rbp], xmm0
  000a5	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000aa	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
?_Put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@PEB_W_K@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Put
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput, COMDAT

; 1515 : 		{	// put formatted integer to _Dest

$LN1246:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 8d 6c 24 f1	 lea	 rbp, QWORD PTR [rsp-15]
  00011	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00018	48 c7 45 bf fe
	ff ff ff	 mov	 QWORD PTR $T10[rbp-145], -2
  00020	48 89 9c 24 e0
	00 00 00	 mov	 QWORD PTR [rsp+224], rbx
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 45 07	 mov	 QWORD PTR __$ArrayPad$[rbp-145], rax
  00036	49 8b f1	 mov	 rsi, r9
  00039	4c 89 4d af	 mov	 QWORD PTR _Iosbase$GSCopy$1$[rbp-145], r9
  0003d	4d 8b f8	 mov	 r15, r8
  00040	4c 89 45 9f	 mov	 QWORD PTR _Dest$GSCopy$1$[rbp-145], r8
  00044	48 89 55 b7	 mov	 QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-145], rdx
  00048	44 0f b7 6d 6f	 movzx	 r13d, WORD PTR _Fill$[rbp-145]
  0004d	48 8b 5d 77	 mov	 rbx, QWORD PTR _Buf$[rbp-145]
  00051	4c 8b 75 7f	 mov	 r14, QWORD PTR _Count$[rbp-145]

; 1516 : 		_DEBUG_POINTER(_Dest);
; 1517 : 		size_t _Prefix = 0 < _Count && (*_Buf == '+' || *_Buf == '-')

  00055	33 c9		 xor	 ecx, ecx
  00057	4d 85 f6	 test	 r14, r14
  0005a	74 0c		 je	 SHORT $LN14@Iput
  0005c	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  0005f	2c 2b		 sub	 al, 43			; 0000002bH
  00061	a8 fd		 test	 al, 253			; 000000fdH
  00063	8d 41 01	 lea	 eax, QWORD PTR [rcx+1]
  00066	74 02		 je	 SHORT $LN15@Iput
$LN14@Iput:
  00068	8b c1		 mov	 eax, ecx
$LN15@Iput:
  0006a	4c 63 e0	 movsxd	 r12, eax
  0006d	4c 89 65 a7	 mov	 QWORD PTR _Prefix$1$[rbp-145], r12
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00071	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1521 : 			&& (_Buf[_Prefix + 1] == 'x' || _Buf[_Prefix + 1] == 'X'))

  00075	25 00 0e 00 00	 and	 eax, 3584		; 00000e00H
  0007a	3d 00 08 00 00	 cmp	 eax, 2048		; 00000800H
  0007f	75 23		 jne	 SHORT $LN4@Iput
  00081	49 8d 4c 24 02	 lea	 rcx, QWORD PTR [r12+2]
  00086	49 3b ce	 cmp	 rcx, r14
  00089	77 19		 ja	 SHORT $LN4@Iput
  0008b	42 80 3c 23 30	 cmp	 BYTE PTR [rbx+r12], 48	; 00000030H
  00090	75 12		 jne	 SHORT $LN4@Iput
  00092	42 0f b6 44 23
	01		 movzx	 eax, BYTE PTR [rbx+r12+1]
  00098	2c 58		 sub	 al, 88			; 00000058H
  0009a	a8 df		 test	 al, 223			; 000000dfH
  0009c	4c 0f 44 e1	 cmove	 r12, rcx
  000a0	4c 89 65 a7	 mov	 QWORD PTR _Prefix$1$[rbp-145], r12
$LN4@Iput:

; 1522 : 			_Prefix += 2;
; 1523 : 
; 1524 : 		const ctype<_Elem>& _Ctype_fac =

  000a4	48 8d 55 8f	 lea	 rdx, QWORD PTR $T9[rbp-145]
  000a8	49 8b c9	 mov	 rcx, r9
  000ab	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  000b0	90		 npad	 1
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
  000b9	48 8b f8	 mov	 rdi, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  000bc	48 8b 4d 97	 mov	 rcx, QWORD PTR $T9[rbp-137]
  000c0	48 85 c9	 test	 rcx, rcx
  000c3	74 1a		 je	 SHORT $LN27@Iput

; 432  : 			delete _Ptr->_Decref();

  000c5	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000c8	ff 50 10	 call	 QWORD PTR [rax+16]
  000cb	48 85 c0	 test	 rax, rax
  000ce	74 0f		 je	 SHORT $LN27@Iput
  000d0	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000d3	ba 01 00 00 00	 mov	 edx, 1
  000d8	48 8b c8	 mov	 rcx, rax
  000db	41 ff 10	 call	 QWORD PTR [r8]
  000de	90		 npad	 1
$LN27@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000df	48 c7 45 df 07
	00 00 00	 mov	 QWORD PTR _Groupstring$[rbp-121], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000e7	33 c0		 xor	 eax, eax
  000e9	48 89 45 d7	 mov	 QWORD PTR _Groupstring$[rbp-129], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000ed	66 89 45 c7	 mov	 WORD PTR _Groupstring$[rbp-145], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 846  : 		assign(_Count, _Ch);

  000f1	45 33 c0	 xor	 r8d, r8d
  000f4	49 8b d6	 mov	 rdx, r14
  000f7	48 8d 4d c7	 lea	 rcx, QWORD PTR _Groupstring$[rbp-145]
  000fb	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00100	90		 npad	 1

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00101	4c 8d 4d c7	 lea	 r9, QWORD PTR _Groupstring$[rbp-145]
  00105	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  0010a	4c 0f 43 4d c7	 cmovae	 r9, QWORD PTR _Groupstring$[rbp-145]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1527 : 		_Ctype_fac.widen(&_Buf[0], &_Buf[_Count], &_Groupstring[0]);

  0010f	4e 8d 04 33	 lea	 r8, QWORD PTR [rbx+r14]
  00113	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00116	48 8b d3	 mov	 rdx, rbx
  00119	48 8b cf	 mov	 rcx, rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2630 : 		return (do_widen(_First, _Last, _Dest));

  0011c	ff 50 58	 call	 QWORD PTR [rax+88]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1529 : 		const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  0011f	48 8d 55 8f	 lea	 rdx, QWORD PTR $T8[rbp-145]
  00123	48 8b ce	 mov	 rcx, rsi
  00126	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  0012b	90		 npad	 1
  0012c	48 8b c8	 mov	 rcx, rax
  0012f	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<wchar_t> >
  00134	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  00137	48 8b 4d 97	 mov	 rcx, QWORD PTR $T8[rbp-137]
  0013b	48 85 c9	 test	 rcx, rcx
  0013e	74 1a		 je	 SHORT $LN181@Iput

; 432  : 			delete _Ptr->_Decref();

  00140	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00143	ff 50 10	 call	 QWORD PTR [rax+16]
  00146	48 85 c0	 test	 rax, rax
  00149	74 0f		 je	 SHORT $LN181@Iput
  0014b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0014e	ba 01 00 00 00	 mov	 edx, 1
  00153	48 8b c8	 mov	 rcx, rax
  00156	41 ff 10	 call	 QWORD PTR [r8]
  00159	90		 npad	 1
$LN181@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1530 : 		const string _Grouping = _Punct_fac.grouping();

  0015a	48 8d 55 e7	 lea	 rdx, QWORD PTR _Grouping$[rbp-145]
  0015e	48 8b cb	 mov	 rcx, rbx
  00161	e8 00 00 00 00	 call	 ?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<wchar_t>::grouping
  00166	90		 npad	 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00167	48 8d 75 e7	 lea	 rsi, QWORD PTR _Grouping$[rbp-145]
  0016b	48 83 7d ff 10	 cmp	 QWORD PTR _Grouping$[rbp-121], 16
  00170	48 0f 43 75 e7	 cmovae	 rsi, QWORD PTR _Grouping$[rbp-145]
  00175	0f b6 06	 movzx	 eax, BYTE PTR [rsi]
  00178	fe c8		 dec	 al
  0017a	3c 7d		 cmp	 al, 125			; 0000007dH
  0017c	0f 87 80 01 00
	00		 ja	 $LN1240@Iput
  00182	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00185	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  0018c	48 3b c1	 cmp	 rax, rcx
  0018f	75 07		 jne	 SHORT $LN207@Iput
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 237  : 		return (_Kseparator);

  00191	44 0f b7 7b 1a	 movzx	 r15d, WORD PTR [rbx+26]
  00196	eb 0a		 jmp	 SHORT $LN206@Iput
$LN207@Iput:
  00198	48 8b cb	 mov	 rcx, rbx

; 129  : 		return (do_thousands_sep());

  0019b	ff 50 20	 call	 QWORD PTR [rax+32]
  0019e	44 0f b7 f8	 movzx	 r15d, ax
$LN206@Iput:

; 1536 : 				&& (size_t)*_Pg < _Count - _Prefix)

  001a2	0f b6 0e	 movzx	 ecx, BYTE PTR [rsi]
  001a5	48 8b 5d d7	 mov	 rbx, QWORD PTR _Groupstring$[rbp-129]
  001a9	80 f9 7f	 cmp	 cl, 127			; 0000007fH
  001ac	0f 84 4a 01 00
	00		 je	 $LN1239@Iput
  001b2	49 b8 fe ff ff
	ff ff ff ff 7f	 mov	 r8, 9223372036854775806	; 7ffffffffffffffeH
  001bc	0f 1f 40 00	 npad	 4
$LL2@Iput:
  001c0	84 c9		 test	 cl, cl
  001c2	0f 8e 34 01 00
	00		 jle	 $LN1239@Iput
  001c8	48 0f be d1	 movsx	 rdx, cl
  001cc	49 8b c6	 mov	 rax, r14
  001cf	49 2b c4	 sub	 rax, r12
  001d2	48 3b d0	 cmp	 rdx, rax
  001d5	0f 83 21 01 00
	00		 jae	 $LN1239@Iput

; 1537 : 				{	// insert thousands separator
; 1538 : 				_Count -= *_Pg;

  001db	4c 2b f2	 sub	 r14, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2266 : 		if (this->_Mysize() < _Off)

  001de	49 3b de	 cmp	 rbx, r14
  001e1	0f 82 08 01 00
	00		 jb	 $LN1208@Iput

; 1275 : 		if (npos - this->_Mysize() <= _Count)

  001e7	48 83 c8 ff	 or	 rax, -1
  001eb	48 2b c3	 sub	 rax, rbx
  001ee	48 83 f8 01	 cmp	 rax, 1
  001f2	0f 86 ea 00 00
	00		 jbe	 $LN1209@Iput

; 1276 : 			_Xlen();	// result too long
; 1277 : 		const size_type _Num = this->_Mysize() + _Count;

  001f8	48 8d 7b 01	 lea	 rdi, QWORD PTR [rbx+1]

; 2220 : 		if (max_size() < _Newsize)

  001fc	49 3b f8	 cmp	 rdi, r8
  001ff	0f 87 d0 00 00
	00		 ja	 $LN1210@Iput

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00205	48 39 7d df	 cmp	 QWORD PTR _Groupstring$[rbp-121], rdi
  00209	73 15		 jae	 SHORT $LN252@Iput

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0020b	4c 8b c3	 mov	 r8, rbx
  0020e	48 8b d7	 mov	 rdx, rdi
  00211	48 8d 4d c7	 lea	 rcx, QWORD PTR _Groupstring$[rbp-145]
  00215	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
  0021a	48 8b 5d d7	 mov	 rbx, QWORD PTR _Groupstring$[rbp-129]
  0021e	eb 22		 jmp	 SHORT $LN1241@Iput
$LN252@Iput:

; 2224 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)
; 2225 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2226 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2227 : 		else if (_Newsize == 0)

  00220	48 85 ff	 test	 rdi, rdi
  00223	75 1d		 jne	 SHORT $LN1241@Iput

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00225	33 d2		 xor	 edx, edx
  00227	48 89 55 d7	 mov	 QWORD PTR _Groupstring$[rbp-129], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0022b	48 8d 45 c7	 lea	 rax, QWORD PTR _Groupstring$[rbp-145]
  0022f	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  00234	48 0f 43 45 c7	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-145]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00239	66 89 10	 mov	 WORD PTR [rax], dx
  0023c	48 8b 5d d7	 mov	 rbx, QWORD PTR _Groupstring$[rbp-129]
  00240	eb 02		 jmp	 SHORT $LN465@Iput
$LN1241@Iput:
  00242	33 d2		 xor	 edx, edx
$LN465@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00244	48 85 ff	 test	 rdi, rdi

; 1278 : 		if (0 < _Count && _Grow(_Num))

  00247	74 65		 je	 SHORT $LN598@Iput

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00249	4c 8d 4d c7	 lea	 r9, QWORD PTR _Groupstring$[rbp-145]
  0024d	48 8b 55 c7	 mov	 rdx, QWORD PTR _Groupstring$[rbp-145]
  00251	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  00256	4c 0f 43 ca	 cmovae	 r9, rdx
  0025a	48 8d 4d c7	 lea	 rcx, QWORD PTR _Groupstring$[rbp-145]
  0025e	48 0f 43 ca	 cmovae	 rcx, rdx

; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  00262	49 2b de	 sub	 rbx, r14
  00265	48 8d 49 02	 lea	 rcx, QWORD PTR [rcx+2]
  00269	4a 8d 0c 71	 lea	 rcx, QWORD PTR [rcx+r14*2]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 333  : 		return (_Count == 0 ? _First1

  0026d	74 11		 je	 SHORT $LN515@Iput
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  0026f	4c 8d 04 1b	 lea	 r8, QWORD PTR [rbx+rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  00273	4b 8d 14 71	 lea	 rdx, QWORD PTR [r9+r14*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00277	e8 00 00 00 00	 call	 memmove
  0027c	48 8b 55 c7	 mov	 rdx, QWORD PTR _Groupstring$[rbp-145]
$LN515@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00280	48 8d 45 c7	 lea	 rax, QWORD PTR _Groupstring$[rbp-145]
  00284	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  00289	48 0f 43 c2	 cmovae	 rax, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0028d	66 46 89 3c 70	 mov	 WORD PTR [rax+r14*2], r15w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00292	48 89 7d d7	 mov	 QWORD PTR _Groupstring$[rbp-129], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00296	48 8d 45 c7	 lea	 rax, QWORD PTR _Groupstring$[rbp-145]
  0029a	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  0029f	48 0f 43 45 c7	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-145]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  002a4	33 d2		 xor	 edx, edx
  002a6	66 89 14 78	 mov	 WORD PTR [rax+rdi*2], dx
  002aa	48 8b 5d d7	 mov	 rbx, QWORD PTR _Groupstring$[rbp-129]
$LN598@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1536 : 				&& (size_t)*_Pg < _Count - _Prefix)

  002ae	48 8d 46 01	 lea	 rax, QWORD PTR [rsi+1]

; 1539 : 				_Groupstring.insert(_Count, 1, _Kseparator);
; 1540 : 				if ('\0' < _Pg[1])

  002b2	80 38 00	 cmp	 BYTE PTR [rax], 0
  002b5	48 0f 4f f0	 cmovg	 rsi, rax

; 1536 : 				&& (size_t)*_Pg < _Count - _Prefix)

  002b9	0f b6 0e	 movzx	 ecx, BYTE PTR [rsi]
  002bc	80 f9 7f	 cmp	 cl, 127			; 0000007fH
  002bf	49 b8 fe ff ff
	ff ff ff ff 7f	 mov	 r8, 9223372036854775806	; 7ffffffffffffffeH
  002c9	0f 85 f1 fe ff
	ff		 jne	 $LL2@Iput
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2220 : 		if (max_size() < _Newsize)

  002cf	4c 8b 7d 9f	 mov	 r15, QWORD PTR _Dest$GSCopy$1$[rbp-145]
  002d3	eb 33		 jmp	 SHORT $LN3@Iput
$LN1210@Iput:

; 2261 : 		_Xlength_error("string too long");

  002d5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  002dc	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  002e1	cc		 int	 3
$LN1209@Iput:
  002e2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  002e9	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  002ee	cc		 int	 3
$LN1208@Iput:

; 2278 : 		_Xout_of_range("invalid string position");

  002ef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  002f6	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  002fb	cc		 int	 3
$LN1239@Iput:
  002fc	4c 8b 7d 9f	 mov	 r15, QWORD PTR _Dest$GSCopy$1$[rbp-145]
  00300	eb 04		 jmp	 SHORT $LN1243@Iput
$LN1240@Iput:
  00302	48 8b 5d d7	 mov	 rbx, QWORD PTR _Groupstring$[rbp-129]
$LN1243@Iput:
  00306	33 d2		 xor	 edx, edx
$LN3@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 423  : 		return (_Wide);

  00308	48 8b 45 af	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-145]
  0030c	48 8b 70 28	 mov	 rsi, QWORD PTR [rax+40]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1547 : 			|| (size_t)_Iosbase.width() <= _Count

  00310	48 85 f6	 test	 rsi, rsi
  00313	7e 0a		 jle	 SHORT $LN16@Iput
  00315	48 3b f3	 cmp	 rsi, rbx
  00318	76 05		 jbe	 SHORT $LN16@Iput
  0031a	48 2b f3	 sub	 rsi, rbx
  0031d	eb 03		 jmp	 SHORT $LN17@Iput
$LN16@Iput:
  0031f	48 8b f2	 mov	 rsi, rdx
$LN17@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  00322	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1551 : 			_Iosbase.flags() & ios_base::adjustfield;

  00325	25 c0 01 00 00	 and	 eax, 448		; 000001c0H

; 1554 : 			{	// put leading fill
; 1555 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  0032a	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0032e	41 be ff ff 00
	00		 mov	 r14d, 65535		; 0000ffffH

; 1554 : 			{	// put leading fill
; 1555 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  00334	0f 29 45 8f	 movaps	 XMMWORD PTR $T7[rbp-145], xmm0

; 1552 : 		if (_Adjustfield != ios_base::left
; 1553 : 			&& _Adjustfield != ios_base::internal)

  00338	83 f8 40	 cmp	 eax, 64			; 00000040H
  0033b	0f 84 e0 01 00
	00		 je	 $LN10@Iput
  00341	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  00346	0f 84 e3 00 00
	00		 je	 $LN1234@Iput

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0034c	48 85 f6	 test	 rsi, rsi
  0034f	74 5a		 je	 SHORT $LN623@Iput
  00351	48 8b 7d 97	 mov	 rdi, QWORD PTR $T7[rbp-137]
$LL624@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00355	48 85 ff	 test	 rdi, rdi
  00358	74 43		 je	 SHORT $LN632@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0035a	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  0035e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00362	74 26		 je	 SHORT $LN636@Iput
  00364	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00368	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  0036a	85 c0		 test	 eax, eax
  0036c	7e 1c		 jle	 SHORT $LN636@Iput

; 308  : 		--*_IPcount;

  0036e	ff c8		 dec	 eax
  00370	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00372	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00376	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00379	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0037d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00380	66 44 89 2a	 mov	 WORD PTR [rdx], r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  00384	41 0f b7 c5	 movzx	 eax, r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00388	eb 0d		 jmp	 SHORT $LN637@Iput
$LN636@Iput:
  0038a	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0038d	41 0f b7 d5	 movzx	 edx, r13w
  00391	48 8b cf	 mov	 rcx, rdi
  00394	ff 50 18	 call	 QWORD PTR [rax+24]
$LN637@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00397	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0039b	75 04		 jne	 SHORT $LN622@Iput
$LN632@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0039d	c6 45 8f 01	 mov	 BYTE PTR $T7[rbp-145], 1
$LN622@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  003a1	48 83 ee 01	 sub	 rsi, 1
  003a5	75 ae		 jne	 SHORT $LL624@Iput
  003a7	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T7[rbp-145]
$LN623@Iput:

; 1554 : 			{	// put leading fill
; 1555 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  003ab	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0

; 1556 : 			_Fillcount = 0;

  003af	33 f6		 xor	 esi, esi

; 1557 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  003b1	0f 29 45 8f	 movaps	 XMMWORD PTR $T6[rbp-145], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  003b5	4c 8d 7d c7	 lea	 r15, QWORD PTR _Groupstring$[rbp-145]
  003b9	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  003be	4c 0f 43 7d c7	 cmovae	 r15, QWORD PTR _Groupstring$[rbp-145]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  003c3	48 39 75 a7	 cmp	 QWORD PTR _Prefix$1$[rbp-145], rsi
  003c7	0f 86 d1 01 00
	00		 jbe	 $LN823@Iput
  003cd	48 8b 7d 97	 mov	 rdi, QWORD PTR $T6[rbp-137]
$LL679@Iput:

; 1577 : 			*_Dest = *_Ptr;

  003d1	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  003d5	48 85 ff	 test	 rdi, rdi
  003d8	74 42		 je	 SHORT $LN687@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  003da	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  003de	48 39 30	 cmp	 QWORD PTR [rax], rsi
  003e1	74 22		 je	 SHORT $LN691@Iput
  003e3	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  003e7	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  003e9	85 c0		 test	 eax, eax
  003eb	7e 18		 jle	 SHORT $LN691@Iput

; 308  : 		--*_IPcount;

  003ed	ff c8		 dec	 eax
  003ef	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  003f1	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  003f5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  003f8	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  003fc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  003ff	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00403	eb 11		 jmp	 SHORT $LN692@Iput
$LN691@Iput:
  00405	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00408	41 0f b7 d0	 movzx	 edx, r8w
  0040c	48 8b cf	 mov	 rcx, rdi
  0040f	ff 50 18	 call	 QWORD PTR [rax+24]
  00412	44 0f b7 c0	 movzx	 r8d, ax
$LN692@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00416	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0041a	75 04		 jne	 SHORT $LN677@Iput
$LN687@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0041c	c6 45 8f 01	 mov	 BYTE PTR $T6[rbp-145], 1
$LN677@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00420	49 83 c7 02	 add	 r15, 2
  00424	49 83 ec 01	 sub	 r12, 1
  00428	75 a7		 jne	 SHORT $LL679@Iput

; 1557 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0042a	e9 6b 01 00 00	 jmp	 $LN1244@Iput
$LN1234@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0042f	4c 8d 7d c7	 lea	 r15, QWORD PTR _Groupstring$[rbp-145]
  00433	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  00438	4c 0f 43 7d c7	 cmovae	 r15, QWORD PTR _Groupstring$[rbp-145]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  0043d	48 83 7d a7 00	 cmp	 QWORD PTR _Prefix$1$[rbp-145], 0
  00442	76 6a		 jbe	 SHORT $LN733@Iput
  00444	48 8b 7d 97	 mov	 rdi, QWORD PTR $T5[rbp-137]
  00448	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL734@Iput:

; 1577 : 			*_Dest = *_Ptr;

  00450	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00454	48 85 ff	 test	 rdi, rdi
  00457	74 43		 je	 SHORT $LN742@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00459	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  0045d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00461	74 22		 je	 SHORT $LN746@Iput
  00463	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00467	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00469	85 c0		 test	 eax, eax
  0046b	7e 18		 jle	 SHORT $LN746@Iput

; 308  : 		--*_IPcount;

  0046d	ff c8		 dec	 eax
  0046f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00471	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00475	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00478	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0047c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0047f	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00483	eb 11		 jmp	 SHORT $LN747@Iput
$LN746@Iput:
  00485	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00488	41 0f b7 d0	 movzx	 edx, r8w
  0048c	48 8b cf	 mov	 rcx, rdi
  0048f	ff 50 18	 call	 QWORD PTR [rax+24]
  00492	44 0f b7 c0	 movzx	 r8d, ax
$LN747@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00496	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0049a	75 04		 jne	 SHORT $LN732@Iput
$LN742@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0049c	c6 45 8f 01	 mov	 BYTE PTR $T5[rbp-145], 1
$LN732@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  004a0	49 83 c7 02	 add	 r15, 2
  004a4	49 83 ec 01	 sub	 r12, 1
  004a8	75 a6		 jne	 SHORT $LL734@Iput
  004aa	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T5[rbp-145]
$LN733@Iput:

; 1558 : 			}
; 1559 : 		else if (_Adjustfield == ios_base::internal)
; 1560 : 			{	// put internal fill
; 1561 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  004ae	4c 8b 65 9f	 mov	 r12, QWORD PTR _Dest$GSCopy$1$[rbp-145]
  004b2	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0

; 1562 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  004b7	0f 29 45 8f	 movaps	 XMMWORD PTR $T4[rbp-145], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  004bb	48 85 f6	 test	 rsi, rsi
  004be	74 5a		 je	 SHORT $LN768@Iput
  004c0	48 8b 7d 97	 mov	 rdi, QWORD PTR $T4[rbp-137]
$LL769@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  004c4	48 85 ff	 test	 rdi, rdi
  004c7	74 43		 je	 SHORT $LN777@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  004c9	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  004cd	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  004d1	74 26		 je	 SHORT $LN781@Iput
  004d3	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  004d7	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  004d9	85 c0		 test	 eax, eax
  004db	7e 1c		 jle	 SHORT $LN781@Iput

; 308  : 		--*_IPcount;

  004dd	ff c8		 dec	 eax
  004df	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  004e1	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  004e5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  004e8	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  004ec	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  004ef	66 44 89 2a	 mov	 WORD PTR [rdx], r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  004f3	41 0f b7 c5	 movzx	 eax, r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  004f7	eb 0d		 jmp	 SHORT $LN782@Iput
$LN781@Iput:
  004f9	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  004fc	41 0f b7 d5	 movzx	 edx, r13w
  00500	48 8b cf	 mov	 rcx, rdi
  00503	ff 50 18	 call	 QWORD PTR [rax+24]
$LN782@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00506	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0050a	75 04		 jne	 SHORT $LN767@Iput
$LN777@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0050c	c6 45 8f 01	 mov	 BYTE PTR $T4[rbp-145], 1
$LN767@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00510	48 83 ee 01	 sub	 rsi, 1
  00514	75 ae		 jne	 SHORT $LL769@Iput
  00516	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T4[rbp-145]
$LN768@Iput:

; 1563 : 			_Fillcount = 0;

  0051a	33 f6		 xor	 esi, esi

; 1564 : 			}
; 1565 : 		else

  0051c	e9 81 00 00 00	 jmp	 $LN1245@Iput
$LN10@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00521	4c 8d 7d c7	 lea	 r15, QWORD PTR _Groupstring$[rbp-145]
  00525	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  0052a	4c 0f 43 7d c7	 cmovae	 r15, QWORD PTR _Groupstring$[rbp-145]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  0052f	48 83 7d a7 00	 cmp	 QWORD PTR _Prefix$1$[rbp-145], 0
  00534	76 68		 jbe	 SHORT $LN823@Iput
  00536	48 8b 7d 97	 mov	 rdi, QWORD PTR $T3[rbp-137]
  0053a	66 0f 1f 44 00
	00		 npad	 6
$LL824@Iput:

; 1577 : 			*_Dest = *_Ptr;

  00540	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00544	48 85 ff	 test	 rdi, rdi
  00547	74 43		 je	 SHORT $LN832@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00549	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  0054d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00551	74 22		 je	 SHORT $LN836@Iput
  00553	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00557	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00559	85 c0		 test	 eax, eax
  0055b	7e 18		 jle	 SHORT $LN836@Iput

; 308  : 		--*_IPcount;

  0055d	ff c8		 dec	 eax
  0055f	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00561	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00565	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00568	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0056c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0056f	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00573	eb 11		 jmp	 SHORT $LN837@Iput
$LN836@Iput:
  00575	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00578	41 0f b7 d0	 movzx	 edx, r8w
  0057c	48 8b cf	 mov	 rcx, rdi
  0057f	ff 50 18	 call	 QWORD PTR [rax+24]
  00582	44 0f b7 c0	 movzx	 r8d, ax
$LN837@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00586	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0058a	75 04		 jne	 SHORT $LN822@Iput
$LN832@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0058c	c6 45 8f 01	 mov	 BYTE PTR $T3[rbp-145], 1
$LN822@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00590	49 83 c7 02	 add	 r15, 2
  00594	49 83 ec 01	 sub	 r12, 1
  00598	75 a6		 jne	 SHORT $LL824@Iput
$LN1244@Iput:
  0059a	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T3[rbp-145]
$LN823@Iput:

; 1566 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0059e	4c 8b 65 9f	 mov	 r12, QWORD PTR _Dest$GSCopy$1$[rbp-145]
$LN1245@Iput:
  005a2	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0

; 1568 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  005a7	0f 29 45 8f	 movaps	 XMMWORD PTR $T2[rbp-145], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  005ab	48 8d 45 c7	 lea	 rax, QWORD PTR _Groupstring$[rbp-145]
  005af	48 83 7d df 08	 cmp	 QWORD PTR _Groupstring$[rbp-121], 8
  005b4	48 0f 43 45 c7	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-145]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1568 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  005b9	48 8b 4d a7	 mov	 rcx, QWORD PTR _Prefix$1$[rbp-145]
  005bd	48 2b d9	 sub	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1679 : 		return (this->_Myptr()[_Off]);

  005c0	4c 8d 3c 48	 lea	 r15, QWORD PTR [rax+rcx*2]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  005c4	74 68		 je	 SHORT $LN878@Iput
  005c6	48 8b 7d 97	 mov	 rdi, QWORD PTR $T2[rbp-137]
  005ca	66 0f 1f 44 00
	00		 npad	 6
$LL879@Iput:

; 1577 : 			*_Dest = *_Ptr;

  005d0	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  005d4	48 85 ff	 test	 rdi, rdi
  005d7	74 43		 je	 SHORT $LN887@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  005d9	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  005dd	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  005e1	74 22		 je	 SHORT $LN891@Iput
  005e3	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  005e7	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  005e9	85 c0		 test	 eax, eax
  005eb	7e 18		 jle	 SHORT $LN891@Iput

; 308  : 		--*_IPcount;

  005ed	ff c8		 dec	 eax
  005ef	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  005f1	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  005f5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  005f8	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  005fc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  005ff	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00603	eb 11		 jmp	 SHORT $LN892@Iput
$LN891@Iput:
  00605	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00608	41 0f b7 d0	 movzx	 edx, r8w
  0060c	48 8b cf	 mov	 rcx, rdi
  0060f	ff 50 18	 call	 QWORD PTR [rax+24]
  00612	44 0f b7 c0	 movzx	 r8d, ax
$LN892@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00616	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0061a	75 04		 jne	 SHORT $LN877@Iput
$LN887@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0061c	c6 45 8f 01	 mov	 BYTE PTR $T2[rbp-145], 1
$LN877@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00620	49 83 c7 02	 add	 r15, 2
  00624	48 83 eb 01	 sub	 rbx, 1
  00628	75 a6		 jne	 SHORT $LL879@Iput
  0062a	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T2[rbp-145]
$LN878@Iput:

; 1568 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  0062e	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  00633	48 8b 45 af	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-145]
  00637	33 ff		 xor	 edi, edi
  00639	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1570 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  0063d	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  00642	0f 29 45 8f	 movaps	 XMMWORD PTR $T1[rbp-145], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00646	48 85 f6	 test	 rsi, rsi
  00649	74 5a		 je	 SHORT $LN915@Iput
  0064b	48 8b 5d 97	 mov	 rbx, QWORD PTR $T1[rbp-137]
  0064f	90		 npad	 1
$LL916@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00650	48 85 db	 test	 rbx, rbx
  00653	74 42		 je	 SHORT $LN924@Iput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00655	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  00659	48 39 38	 cmp	 QWORD PTR [rax], rdi
  0065c	74 26		 je	 SHORT $LN928@Iput
  0065e	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  00662	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00664	85 c0		 test	 eax, eax
  00666	7e 1c		 jle	 SHORT $LN928@Iput

; 308  : 		--*_IPcount;

  00668	ff c8		 dec	 eax
  0066a	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  0066c	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  00670	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00673	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  00677	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0067a	66 44 89 2a	 mov	 WORD PTR [rdx], r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  0067e	41 0f b7 c5	 movzx	 eax, r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  00682	eb 0d		 jmp	 SHORT $LN929@Iput
$LN928@Iput:
  00684	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00687	41 0f b7 d5	 movzx	 edx, r13w
  0068b	48 8b cb	 mov	 rcx, rbx
  0068e	ff 50 18	 call	 QWORD PTR [rax+24]
$LN929@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00691	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00695	75 04		 jne	 SHORT $LN914@Iput
$LN924@Iput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00697	c6 45 8f 01	 mov	 BYTE PTR $T1[rbp-145], 1
$LN914@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0069b	48 83 ee 01	 sub	 rsi, 1
  0069f	75 af		 jne	 SHORT $LL916@Iput
  006a1	0f 28 45 8f	 movaps	 xmm0, XMMWORD PTR $T1[rbp-145]
$LN915@Iput:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  006a5	48 8b 5d b7	 mov	 rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-145]
  006a9	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  006ac	48 8b 45 ff	 mov	 rax, QWORD PTR _Grouping$[rbp-121]
  006b0	48 83 f8 10	 cmp	 rax, 16
  006b4	72 5e		 jb	 SHORT $LN1035@Iput

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  006b6	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  006b9	48 8b 4d e7	 mov	 rcx, QWORD PTR _Grouping$[rbp-145]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  006bd	48 83 f8 ff	 cmp	 rax, -1
  006c1	76 06		 jbe	 SHORT $LN1029@Iput
  006c3	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  006c8	cc		 int	 3
$LN1029@Iput:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  006c9	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  006cf	72 3e		 jb	 SHORT $LN1030@Iput

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  006d1	f6 45 e7 1f	 test	 BYTE PTR _Grouping$[rbp-145], 31
  006d5	74 06		 je	 SHORT $LN1031@Iput
  006d7	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  006dc	cc		 int	 3
$LN1031@Iput:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

  006dd	48 8b 45 e7	 mov	 rax, QWORD PTR _Grouping$[rbp-145]

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  006e1	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  006e5	48 3b c8	 cmp	 rcx, rax
  006e8	72 06		 jb	 SHORT $LN1032@Iput
  006ea	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  006ef	cc		 int	 3
$LN1032@Iput:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  006f0	48 8b 45 e7	 mov	 rax, QWORD PTR _Grouping$[rbp-145]
  006f4	48 2b c1	 sub	 rax, rcx
  006f7	48 83 f8 08	 cmp	 rax, 8
  006fb	73 06		 jae	 SHORT $LN1033@Iput
  006fd	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00702	cc		 int	 3
$LN1033@Iput:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00703	48 83 f8 27	 cmp	 rax, 39			; 00000027H
  00707	76 06		 jbe	 SHORT $LN1030@Iput
  00709	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0070e	cc		 int	 3
$LN1030@Iput:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);
; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0070f	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN1035@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00714	48 c7 45 ff 0f
	00 00 00	 mov	 QWORD PTR _Grouping$[rbp-121], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0071c	48 89 7d f7	 mov	 QWORD PTR _Grouping$[rbp-129], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00720	c6 45 e7 00	 mov	 BYTE PTR _Grouping$[rbp-145], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00724	4c 8b 45 df	 mov	 r8, QWORD PTR _Groupstring$[rbp-121]
  00728	49 83 f8 08	 cmp	 r8, 8
  0072c	72 10		 jb	 SHORT $LN1087@Iput

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0072e	49 ff c0	 inc	 r8
  00731	48 8b 55 c7	 mov	 rdx, QWORD PTR _Groupstring$[rbp-145]
  00735	48 8d 4d c7	 lea	 rcx, QWORD PTR _Groupstring$[rbp-145]
  00739	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN1087@Iput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1570 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  0073e	48 8b c3	 mov	 rax, rbx

; 1571 : 		}

  00741	48 8b 4d 07	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-145]
  00745	48 33 cc	 xor	 rcx, rsp
  00748	e8 00 00 00 00	 call	 __security_check_cookie
  0074d	48 8b 9c 24 e0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+224]
  00755	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  0075c	41 5f		 pop	 r15
  0075e	41 5e		 pop	 r14
  00760	41 5d		 pop	 r13
  00762	41 5c		 pop	 r12
  00764	5f		 pop	 rdi
  00765	5e		 pop	 rsi
  00766	5d		 pop	 rbp
  00767	c3		 ret	 0
$LN1242@Iput:
?_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$0@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$0
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$4@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$4
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$1@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$1
  00011	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$1
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$2@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$2
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$41@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$41
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$41@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$41
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$3@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$3
  0002e	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$0@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$4@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$1@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$1
  00011	48 8d 8a 58 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$2@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$41@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$41
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$41@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$41
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dest$GSCopy$1$ = 48
_Prefix$1$ = 56
_Iosbase$GSCopy$1$ = 64
__$ReturnUdt$GSCopy$1$ = 72
$T10 = 80
_Groupstring$ = 88
_Grouping$ = 120
__$ArrayPad$ = 152
this$ = 224
__$ReturnUdt$ = 232
_Dest$ = 240
_Iosbase$ = 248
_Fill$ = 256
_Buf$ = 264
_Count$ = 272
?dtor$3@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$3
  0002e	48 8d 8a 78 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Iput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEAD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Iput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Ifmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z
_TEXT	SEGMENT
this$ = 8
_Fmt$ = 16
_Spec$ = 24
_Flags$ = 32
?_Ifmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Ifmt, COMDAT

; 1488 : 		char *_Ptr = _Fmt;
; 1489 : 		*_Ptr++ = '%';

  00000	c6 02 25	 mov	 BYTE PTR [rdx], 37	; 00000025H
  00003	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]

; 1490 : 
; 1491 : 		if (_Flags & ios_base::showpos)

  00007	41 f6 c1 20	 test	 r9b, 32			; 00000020H
  0000b	74 06		 je	 SHORT $LN2@Ifmt

; 1492 : 			*_Ptr++ = '+';

  0000d	c6 00 2b	 mov	 BYTE PTR [rax], 43	; 0000002bH
  00010	48 ff c0	 inc	 rax
$LN2@Ifmt:

; 1493 : 		if (_Flags & ios_base::showbase)

  00013	41 f6 c1 08	 test	 r9b, 8
  00017	74 06		 je	 SHORT $LN3@Ifmt

; 1494 : 			*_Ptr++ = '#';

  00019	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0001c	48 ff c0	 inc	 rax
$LN3@Ifmt:

; 1495 : 		if (_Spec[0] != 'L')

  0001f	41 0f b6 08	 movzx	 ecx, BYTE PTR [r8]
  00023	80 f9 4c	 cmp	 cl, 76			; 0000004cH
  00026	74 07		 je	 SHORT $LN4@Ifmt

; 1496 : 			*_Ptr++ = _Spec[0];	// qualifier

  00028	88 08		 mov	 BYTE PTR [rax], cl
  0002a	48 ff c0	 inc	 rax

; 1497 : 		else

  0002d	eb 0d		 jmp	 SHORT $LN5@Ifmt
$LN4@Ifmt:

; 1498 : 
; 1499 : 			{	/* change L to I64 */
; 1500 : 			*_Ptr++ = 'I';

  0002f	66 c7 00 49 36	 mov	 WORD PTR [rax], 13897	; 00003649H

; 1501 : 			*_Ptr++ = '6';
; 1502 : 			*_Ptr++ = '4';

  00034	c6 40 02 34	 mov	 BYTE PTR [rax+2], 52	; 00000034H
  00038	48 83 c0 03	 add	 rax, 3
$LN5@Ifmt:

; 1503 : 			}
; 1504 : 
; 1505 : 		ios_base::fmtflags _Basefield = _Flags & ios_base::basefield;

  0003c	41 8b c9	 mov	 ecx, r9d
  0003f	81 e1 00 0e 00
	00		 and	 ecx, 3584		; 00000e00H

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00045	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  0004b	75 0e		 jne	 SHORT $LN9@Ifmt
  0004d	41 b1 6f	 mov	 r9b, 111		; 0000006fH
  00050	44 88 08	 mov	 BYTE PTR [rax], r9b

; 1507 : 			: _Basefield != ios_base::hex ? _Spec[1]	// 'd' or 'u'
; 1508 : 			: _Flags & ios_base::uppercase ? 'X' : 'x';
; 1509 : 		*_Ptr = '\0';

  00053	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1510 : 		return (_Fmt);

  00057	48 8b c2	 mov	 rax, rdx

; 1511 : 		}

  0005a	c3		 ret	 0
$LN9@Ifmt:

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  0005b	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  00061	74 10		 je	 SHORT $LN7@Ifmt
  00063	45 0f b6 48 01	 movzx	 r9d, BYTE PTR [r8+1]
  00068	44 88 08	 mov	 BYTE PTR [rax], r9b

; 1507 : 			: _Basefield != ios_base::hex ? _Spec[1]	// 'd' or 'u'
; 1508 : 			: _Flags & ios_base::uppercase ? 'X' : 'x';
; 1509 : 		*_Ptr = '\0';

  0006b	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1510 : 		return (_Fmt);

  0006f	48 8b c2	 mov	 rax, rdx

; 1511 : 		}

  00072	c3		 ret	 0
$LN7@Ifmt:

; 1506 : 		*_Ptr++ = _Basefield == ios_base::oct ? 'o'

  00073	41 c0 e1 03	 shl	 r9b, 3
  00077	41 f6 d1	 not	 r9b
  0007a	41 80 e1 20	 and	 r9b, 32			; 00000020H
  0007e	41 80 c9 58	 or	 r9b, 88			; 00000058H
  00082	44 88 08	 mov	 BYTE PTR [rax], r9b

; 1507 : 			: _Basefield != ios_base::hex ? _Spec[1]	// 'd' or 'u'
; 1508 : 			: _Flags & ios_base::uppercase ? 'X' : 'x';
; 1509 : 		*_Ptr = '\0';

  00085	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1510 : 		return (_Fmt);

  00089	48 8b c2	 mov	 rax, rdx

; 1511 : 		}

  0008c	c3		 ret	 0
?_Ifmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADPEBDH@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Ifmt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput, COMDAT

; 1413 : 		{	// put formatted floating-point to _Dest

$LN1272:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 8d 6c 24 f1	 lea	 rbp, QWORD PTR [rsp-15]
  00011	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00018	48 c7 45 b7 fe
	ff ff ff	 mov	 QWORD PTR $T10[rbp-161], -2
  00020	48 89 9c 24 f0
	00 00 00	 mov	 QWORD PTR [rsp+240], rbx
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 45 ff	 mov	 QWORD PTR __$ArrayPad$[rbp-161], rax
  00036	4d 8b e1	 mov	 r12, r9
  00039	4c 89 4d a7	 mov	 QWORD PTR _Iosbase$GSCopy$1$[rbp-161], r9
  0003d	4c 89 45 97	 mov	 QWORD PTR _Dest$GSCopy$1$[rbp-161], r8
  00041	48 89 55 af	 mov	 QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-161], rdx
  00045	44 0f b7 6d 6f	 movzx	 r13d, WORD PTR _Fill$[rbp-161]
  0004a	48 8b 5d 77	 mov	 rbx, QWORD PTR _Buf$[rbp-161]
  0004e	48 8b 7d 7f	 mov	 rdi, QWORD PTR _Count$[rbp-161]

; 1414 : 		_DEBUG_POINTER(_Dest);
; 1415 : 		size_t _Prefix = 0 < _Count && (*_Buf == '+' || *_Buf == '-')

  00052	33 c9		 xor	 ecx, ecx
  00054	48 85 ff	 test	 rdi, rdi
  00057	74 0c		 je	 SHORT $LN16@Fput
  00059	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  0005c	2c 2b		 sub	 al, 43			; 0000002bH
  0005e	a8 fd		 test	 al, 253			; 000000fdH
  00060	8d 41 01	 lea	 eax, QWORD PTR [rcx+1]
  00063	74 02		 je	 SHORT $LN17@Fput
$LN16@Fput:
  00065	8b c1		 mov	 eax, ecx
$LN17@Fput:
  00067	4c 63 c0	 movsxd	 r8, eax
  0006a	4c 89 45 9f	 mov	 QWORD PTR _Prefix$1$[rbp-161], r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  0006e	41 8b 41 18	 mov	 eax, DWORD PTR [r9+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1419 : 		if ((_Iosbase.flags() & ios_base::floatfield) != ios_base::hexfloat)

  00072	25 00 30 00 00	 and	 eax, 12288		; 00003000H
  00077	3d 00 30 00 00	 cmp	 eax, 12288		; 00003000H
  0007c	74 09		 je	 SHORT $LN4@Fput

; 1420 : 			_Exps = "eE";

  0007e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02MDKMJEGG@eE?$AA@

; 1421 : 		else

  00085	eb 29		 jmp	 SHORT $LN6@Fput
$LN4@Fput:

; 1422 : 			{	// correct for hexadecimal floating-point
; 1423 : 			_Exps = "pP";

  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02OOPEBDOJ@pP?$AA@

; 1424 : 			if (_Prefix + 2 <= _Count && _Buf[_Prefix] == '0'
; 1425 : 				&& (_Buf[_Prefix + 1] == 'x' || _Buf[_Prefix + 1] == 'X'))

  0008e	49 8d 48 02	 lea	 rcx, QWORD PTR [r8+2]
  00092	48 3b cf	 cmp	 rcx, rdi
  00095	77 19		 ja	 SHORT $LN6@Fput
  00097	42 80 3c 03 30	 cmp	 BYTE PTR [rbx+r8], 48	; 00000030H
  0009c	75 12		 jne	 SHORT $LN6@Fput
  0009e	42 0f b6 44 03
	01		 movzx	 eax, BYTE PTR [rbx+r8+1]
  000a4	2c 58		 sub	 al, 88			; 00000058H
  000a6	a8 df		 test	 al, 223			; 000000dfH
  000a8	4c 0f 44 c1	 cmove	 r8, rcx
  000ac	4c 89 45 9f	 mov	 QWORD PTR _Prefix$1$[rbp-161], r8
$LN6@Fput:

; 1426 : 				_Prefix += 2;
; 1427 : 			}
; 1428 : 		const size_t _Eoff =
; 1429 : 			_CSTD strcspn(&_Buf[0], _Exps);	// find exponent

  000b0	48 8b cb	 mov	 rcx, rbx
  000b3	e8 00 00 00 00	 call	 strcspn
  000b8	4c 8b f8	 mov	 r15, rax

; 1430 : 		char _Dp[2] = {"."};

  000bb	b8 2e 00 00 00	 mov	 eax, 46			; 0000002eH
  000c0	66 89 45 8f	 mov	 WORD PTR _Dp$[rbp-161], ax

; 1431 : 		_Dp[0] = _CSTD localeconv()->decimal_point[0];

  000c4	e8 00 00 00 00	 call	 localeconv
  000c9	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000cc	0f b6 01	 movzx	 eax, BYTE PTR [rcx]
  000cf	88 45 8f	 mov	 BYTE PTR _Dp$[rbp-161], al

; 1432 : 		const size_t _Poff =
; 1433 : 			_CSTD strcspn(&_Buf[0], &_Dp[0]);	// find decimal point

  000d2	48 8d 55 8f	 lea	 rdx, QWORD PTR _Dp$[rbp-161]
  000d6	48 8b cb	 mov	 rcx, rbx
  000d9	e8 00 00 00 00	 call	 strcspn
  000de	48 8b f0	 mov	 rsi, rax

; 1434 : 
; 1435 : 		const ctype<_Elem>& _Ctype_fac =

  000e1	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T9[rsp]
  000e6	49 8b cc	 mov	 rcx, r12
  000e9	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  000ee	90		 npad	 1
  000ef	48 8b c8	 mov	 rcx, rax
  000f2	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
  000f7	4c 8b f0	 mov	 r14, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  000fa	48 8b 4d 87	 mov	 rcx, QWORD PTR $T9[rbp-153]
  000fe	48 85 c9	 test	 rcx, rcx
  00101	74 19		 je	 SHORT $LN29@Fput

; 432  : 			delete _Ptr->_Decref();

  00103	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00106	ff 50 10	 call	 QWORD PTR [rax+16]
  00109	48 8b c8	 mov	 rcx, rax
  0010c	48 85 c0	 test	 rax, rax
  0010f	74 0b		 je	 SHORT $LN29@Fput
  00111	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00114	ba 01 00 00 00	 mov	 edx, 1
  00119	ff 10		 call	 QWORD PTR [rax]
  0011b	90		 npad	 1
$LN29@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0011c	48 c7 45 d7 07
	00 00 00	 mov	 QWORD PTR _Groupstring$[rbp-137], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00124	33 c0		 xor	 eax, eax
  00126	48 89 45 cf	 mov	 QWORD PTR _Groupstring$[rbp-145], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0012a	66 89 45 bf	 mov	 WORD PTR _Groupstring$[rbp-161], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 846  : 		assign(_Count, _Ch);

  0012e	45 33 c0	 xor	 r8d, r8d
  00131	48 8b d7	 mov	 rdx, rdi
  00134	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-161]
  00138	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  0013d	90		 npad	 1

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0013e	4c 8d 4d bf	 lea	 r9, QWORD PTR _Groupstring$[rbp-161]
  00142	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  00147	4c 0f 43 4d bf	 cmovae	 r9, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1438 : 		_Ctype_fac.widen(&_Buf[0], &_Buf[_Count], &_Groupstring[0]);

  0014c	4c 8d 04 3b	 lea	 r8, QWORD PTR [rbx+rdi]
  00150	49 8b 06	 mov	 rax, QWORD PTR [r14]
  00153	48 8b d3	 mov	 rdx, rbx
  00156	49 8b ce	 mov	 rcx, r14
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2630 : 		return (do_widen(_First, _Last, _Dest));

  00159	ff 50 58	 call	 QWORD PTR [rax+88]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1440 : 		const _Mypunct& _Punct_fac = _USE(_Iosbase.getloc(), _Mypunct);

  0015c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T8[rsp]
  00161	49 8b cc	 mov	 rcx, r12
  00164	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00169	90		 npad	 1
  0016a	48 8b c8	 mov	 rcx, rax
  0016d	e8 00 00 00 00	 call	 ??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::numpunct<wchar_t> >
  00172	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  00175	48 8b 4d 87	 mov	 rcx, QWORD PTR $T8[rbp-153]
  00179	48 85 c9	 test	 rcx, rcx
  0017c	74 19		 je	 SHORT $LN183@Fput

; 432  : 			delete _Ptr->_Decref();

  0017e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00181	ff 50 10	 call	 QWORD PTR [rax+16]
  00184	48 8b c8	 mov	 rcx, rax
  00187	48 85 c0	 test	 rax, rax
  0018a	74 0b		 je	 SHORT $LN183@Fput
  0018c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0018f	ba 01 00 00 00	 mov	 edx, 1
  00194	ff 10		 call	 QWORD PTR [rax]
  00196	90		 npad	 1
$LN183@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1441 : 		const string _Grouping = _Punct_fac.grouping();

  00197	48 8d 55 df	 lea	 rdx, QWORD PTR _Grouping$[rbp-161]
  0019b	48 8b cb	 mov	 rcx, rbx
  0019e	e8 00 00 00 00	 call	 ?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::numpunct<wchar_t>::grouping
  001a3	90		 npad	 1
  001a4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  001a7	4c 8d 35 00 00
	00 00		 lea	 r14, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  001ae	49 3b c6	 cmp	 rax, r14
  001b1	75 07		 jne	 SHORT $LN189@Fput

; 237  : 		return (_Kseparator);

  001b3	44 0f b7 63 1a	 movzx	 r12d, WORD PTR [rbx+26]
  001b8	eb 0a		 jmp	 SHORT $LN188@Fput
$LN189@Fput:
  001ba	48 8b cb	 mov	 rcx, rbx

; 129  : 		return (do_thousands_sep());

  001bd	ff 50 20	 call	 QWORD PTR [rax+32]
  001c0	44 0f b7 e0	 movzx	 r12d, ax
$LN188@Fput:

; 1442 : 		const _Elem _Kseparator = _Punct_fac.thousands_sep();
; 1443 : 
; 1444 : 		if (_Poff != _Count)

  001c4	48 3b f7	 cmp	 rsi, rdi
  001c7	74 2c		 je	 SHORT $LN1269@Fput
  001c9	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  001cc	49 3b c6	 cmp	 rax, r14
  001cf	75 06		 jne	 SHORT $LN195@Fput

; 232  : 		return (_Dp);

  001d1	0f b7 4b 18	 movzx	 ecx, WORD PTR [rbx+24]
  001d5	eb 09		 jmp	 SHORT $LN194@Fput
$LN195@Fput:
  001d7	48 8b cb	 mov	 rcx, rbx

; 124  : 		return (do_decimal_point());

  001da	ff 50 18	 call	 QWORD PTR [rax+24]
  001dd	0f b7 c8	 movzx	 ecx, ax
$LN194@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  001e0	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  001e4	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  001e9	48 0f 43 45 bf	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1445 : 			_Groupstring[_Poff] = _Punct_fac.decimal_point();

  001ee	66 89 0c 70	 mov	 WORD PTR [rax+rsi*2], cx

; 1446 : 
; 1447 : 		size_t _Off = _Poff == _Count ? _Eoff : _Poff;

  001f2	48 3b f7	 cmp	 rsi, rdi
$LN1269@Fput:
  001f5	49 0f 44 f7	 cmove	 rsi, r15
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  001f9	4c 8d 75 df	 lea	 r14, QWORD PTR _Grouping$[rbp-161]
  001fd	48 83 7d f7 10	 cmp	 QWORD PTR _Grouping$[rbp-137], 16
  00202	4c 0f 43 75 df	 cmovae	 r14, QWORD PTR _Grouping$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1450 : 			&& (size_t)*_Pg < _Off - _Prefix)

  00207	41 0f b6 06	 movzx	 eax, BYTE PTR [r14]
  0020b	48 8b 5d cf	 mov	 rbx, QWORD PTR _Groupstring$[rbp-145]
  0020f	3c 7f		 cmp	 al, 127			; 0000007fH
  00211	0f 84 49 01 00
	00		 je	 $LN1265@Fput
  00217	48 ba fe ff ff
	ff ff ff ff 7f	 mov	 rdx, 9223372036854775806 ; 7ffffffffffffffeH
  00221	4c 8b 7d 9f	 mov	 r15, QWORD PTR _Prefix$1$[rbp-161]
$LL2@Fput:
  00225	84 c0		 test	 al, al
  00227	0f 8e 33 01 00
	00		 jle	 $LN1265@Fput
  0022d	48 0f be c8	 movsx	 rcx, al
  00231	48 8b c6	 mov	 rax, rsi
  00234	49 2b c7	 sub	 rax, r15
  00237	48 3b c8	 cmp	 rcx, rax
  0023a	0f 83 20 01 00
	00		 jae	 $LN1265@Fput

; 1451 : 			{	// add thousands separator
; 1452 : 			_Groupstring.insert(_Off -= *_Pg, (size_t)1, _Kseparator);

  00240	48 2b f1	 sub	 rsi, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2266 : 		if (this->_Mysize() < _Off)

  00243	48 3b de	 cmp	 rbx, rsi
  00246	0f 82 07 01 00
	00		 jb	 $LN1236@Fput

; 1275 : 		if (npos - this->_Mysize() <= _Count)

  0024c	48 83 c8 ff	 or	 rax, -1
  00250	48 2b c3	 sub	 rax, rbx
  00253	48 83 f8 01	 cmp	 rax, 1
  00257	0f 86 e9 00 00
	00		 jbe	 $LN1237@Fput

; 1276 : 			_Xlen();	// result too long
; 1277 : 		const size_type _Num = this->_Mysize() + _Count;

  0025d	48 8d 7b 01	 lea	 rdi, QWORD PTR [rbx+1]

; 2220 : 		if (max_size() < _Newsize)

  00261	48 3b fa	 cmp	 rdi, rdx
  00264	0f 87 cf 00 00
	00		 ja	 $LN1238@Fput

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  0026a	48 39 7d d7	 cmp	 QWORD PTR _Groupstring$[rbp-137], rdi
  0026e	73 15		 jae	 SHORT $LN280@Fput

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00270	4c 8b c3	 mov	 r8, rbx
  00273	48 8b d7	 mov	 rdx, rdi
  00276	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-161]
  0027a	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
  0027f	48 8b 5d cf	 mov	 rbx, QWORD PTR _Groupstring$[rbp-145]
  00283	eb 22		 jmp	 SHORT $LN1267@Fput
$LN280@Fput:

; 2224 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)
; 2225 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2226 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2227 : 		else if (_Newsize == 0)

  00285	48 85 ff	 test	 rdi, rdi
  00288	75 1d		 jne	 SHORT $LN1267@Fput

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0028a	33 c9		 xor	 ecx, ecx
  0028c	48 89 4d cf	 mov	 QWORD PTR _Groupstring$[rbp-145], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00290	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  00294	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  00299	48 0f 43 45 bf	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0029e	66 89 08	 mov	 WORD PTR [rax], cx
  002a1	48 8b 5d cf	 mov	 rbx, QWORD PTR _Groupstring$[rbp-145]
  002a5	eb 02		 jmp	 SHORT $LN493@Fput
$LN1267@Fput:
  002a7	33 c9		 xor	 ecx, ecx
$LN493@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  002a9	48 85 ff	 test	 rdi, rdi

; 1278 : 		if (0 < _Count && _Grow(_Num))

  002ac	74 68		 je	 SHORT $LN626@Fput

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  002ae	4c 8d 4d bf	 lea	 r9, QWORD PTR _Groupstring$[rbp-161]
  002b2	48 8b 55 bf	 mov	 rdx, QWORD PTR _Groupstring$[rbp-161]
  002b6	4c 8b 45 d7	 mov	 r8, QWORD PTR _Groupstring$[rbp-137]
  002ba	49 83 f8 08	 cmp	 r8, 8
  002be	4c 0f 43 ca	 cmovae	 r9, rdx
  002c2	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-161]
  002c6	48 0f 43 ca	 cmovae	 rcx, rdx

; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  002ca	48 2b de	 sub	 rbx, rsi
  002cd	48 8d 49 02	 lea	 rcx, QWORD PTR [rcx+2]
  002d1	48 8d 0c 71	 lea	 rcx, QWORD PTR [rcx+rsi*2]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 333  : 		return (_Count == 0 ? _First1

  002d5	74 11		 je	 SHORT $LN543@Fput
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  002d7	4c 8d 04 1b	 lea	 r8, QWORD PTR [rbx+rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  002db	49 8d 14 71	 lea	 rdx, QWORD PTR [r9+rsi*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  002df	e8 00 00 00 00	 call	 memmove
  002e4	48 8b 55 bf	 mov	 rdx, QWORD PTR _Groupstring$[rbp-161]
$LN543@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  002e8	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  002ec	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  002f1	48 0f 43 c2	 cmovae	 rax, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  002f5	66 44 89 24 70	 mov	 WORD PTR [rax+rsi*2], r12w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  002fa	48 89 7d cf	 mov	 QWORD PTR _Groupstring$[rbp-145], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  002fe	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  00302	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  00307	48 0f 43 45 bf	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0030c	33 c9		 xor	 ecx, ecx
  0030e	66 89 0c 78	 mov	 WORD PTR [rax+rdi*2], cx
  00312	48 8b 5d cf	 mov	 rbx, QWORD PTR _Groupstring$[rbp-145]
$LN626@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1450 : 			&& (size_t)*_Pg < _Off - _Prefix)

  00316	49 8d 46 01	 lea	 rax, QWORD PTR [r14+1]

; 1453 : 			if ('\0' < _Pg[1])

  0031a	80 38 00	 cmp	 BYTE PTR [rax], 0
  0031d	4c 0f 4f f0	 cmovg	 r14, rax

; 1450 : 			&& (size_t)*_Pg < _Off - _Prefix)

  00321	41 0f b6 06	 movzx	 eax, BYTE PTR [r14]
  00325	3c 7f		 cmp	 al, 127			; 0000007fH
  00327	48 ba fe ff ff
	ff ff ff ff 7f	 mov	 rdx, 9223372036854775806 ; 7ffffffffffffffeH
  00331	0f 85 ee fe ff
	ff		 jne	 $LL2@Fput
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2220 : 		if (max_size() < _Newsize)

  00337	eb 29		 jmp	 SHORT $LN3@Fput
$LN1238@Fput:

; 2261 : 		_Xlength_error("string too long");

  00339	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00340	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00345	cc		 int	 3
$LN1237@Fput:
  00346	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0034d	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00352	cc		 int	 3
$LN1236@Fput:

; 2278 : 		_Xout_of_range("invalid string position");

  00353	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0035a	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0035f	cc		 int	 3
$LN1265@Fput:
  00360	33 c9		 xor	 ecx, ecx
$LN3@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 423  : 		return (_Wide);

  00362	48 8b 45 a7	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-161]
  00366	48 8b 70 28	 mov	 rsi, QWORD PTR [rax+40]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1459 : 			|| (size_t)_Iosbase.width() <= _Count

  0036a	48 85 f6	 test	 rsi, rsi
  0036d	7e 0a		 jle	 SHORT $LN18@Fput
  0036f	48 3b f3	 cmp	 rsi, rbx
  00372	76 05		 jbe	 SHORT $LN18@Fput
  00374	48 2b f3	 sub	 rsi, rbx
  00377	eb 03		 jmp	 SHORT $LN19@Fput
$LN18@Fput:
  00379	48 8b f1	 mov	 rsi, rcx
$LN19@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  0037c	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1463 : 			_Iosbase.flags() & ios_base::adjustfield;

  0037f	25 c0 01 00 00	 and	 eax, 448		; 000001c0H

; 1466 : 			{	// put leading fill
; 1467 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  00384	4c 8b 7d 97	 mov	 r15, QWORD PTR _Dest$GSCopy$1$[rbp-161]

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00388	41 be ff ff 00
	00		 mov	 r14d, 65535		; 0000ffffH

; 1466 : 			{	// put leading fill
; 1467 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  0038e	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  00392	0f 29 44 24 20	 movaps	 XMMWORD PTR $T7[rsp], xmm0

; 1464 : 		if (_Adjustfield != ios_base::left
; 1465 : 			&& _Adjustfield != ios_base::internal)

  00397	83 f8 40	 cmp	 eax, 64			; 00000040H
  0039a	0f 84 f6 01 00
	00		 je	 $LN12@Fput
  003a0	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  003a5	0f 84 f4 00 00
	00		 je	 $LN1262@Fput

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  003ab	48 85 f6	 test	 rsi, rsi
  003ae	74 5c		 je	 SHORT $LN651@Fput
  003b0	48 8b 7d 87	 mov	 rdi, QWORD PTR $T7[rbp-153]
$LL652@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  003b4	48 85 ff	 test	 rdi, rdi
  003b7	74 43		 je	 SHORT $LN660@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  003b9	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  003bd	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  003c1	74 26		 je	 SHORT $LN664@Fput
  003c3	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  003c7	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  003c9	85 c0		 test	 eax, eax
  003cb	7e 1c		 jle	 SHORT $LN664@Fput

; 308  : 		--*_IPcount;

  003cd	ff c8		 dec	 eax
  003cf	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  003d1	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  003d5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  003d8	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  003dc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  003df	66 44 89 2a	 mov	 WORD PTR [rdx], r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  003e3	41 0f b7 c5	 movzx	 eax, r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  003e7	eb 0d		 jmp	 SHORT $LN665@Fput
$LN664@Fput:
  003e9	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  003ec	41 0f b7 d5	 movzx	 edx, r13w
  003f0	48 8b cf	 mov	 rcx, rdi
  003f3	ff 50 18	 call	 QWORD PTR [rax+24]
$LN665@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  003f6	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  003fa	75 05		 jne	 SHORT $LN650@Fput
$LN660@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  003fc	c6 44 24 20 01	 mov	 BYTE PTR $T7[rsp], 1
$LN650@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00401	48 83 ee 01	 sub	 rsi, 1
  00405	75 ad		 jne	 SHORT $LL652@Fput
  00407	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T7[rsp]
$LN651@Fput:

; 1466 : 			{	// put leading fill
; 1467 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  0040c	41 0f 11 07	 movups	 XMMWORD PTR [r15], xmm0

; 1468 : 			_Fillcount = 0;

  00410	33 f6		 xor	 esi, esi

; 1469 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00412	0f 29 44 24 20	 movaps	 XMMWORD PTR $T6[rsp], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00417	4c 8d 7d bf	 lea	 r15, QWORD PTR _Groupstring$[rbp-161]
  0041b	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  00420	4c 0f 43 7d bf	 cmovae	 r15, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1469 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00425	48 8b 45 9f	 mov	 rax, QWORD PTR _Prefix$1$[rbp-161]
  00429	4c 8b e0	 mov	 r12, rax

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  0042c	48 85 c0	 test	 rax, rax
  0042f	0f 84 df 01 00
	00		 je	 $LN851@Fput
  00435	48 8b 7d 87	 mov	 rdi, QWORD PTR $T6[rbp-153]
  00439	0f 1f 80 00 00
	00 00		 npad	 7
$LL707@Fput:

; 1577 : 			*_Dest = *_Ptr;

  00440	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00444	48 85 ff	 test	 rdi, rdi
  00447	74 42		 je	 SHORT $LN715@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00449	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  0044d	48 39 30	 cmp	 QWORD PTR [rax], rsi
  00450	74 22		 je	 SHORT $LN719@Fput
  00452	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00456	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  00458	85 c0		 test	 eax, eax
  0045a	7e 18		 jle	 SHORT $LN719@Fput

; 308  : 		--*_IPcount;

  0045c	ff c8		 dec	 eax
  0045e	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00460	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00464	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00467	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0046b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0046e	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00472	eb 11		 jmp	 SHORT $LN720@Fput
$LN719@Fput:
  00474	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00477	41 0f b7 d0	 movzx	 edx, r8w
  0047b	48 8b cf	 mov	 rcx, rdi
  0047e	ff 50 18	 call	 QWORD PTR [rax+24]
  00481	44 0f b7 c0	 movzx	 r8d, ax
$LN720@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00485	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00489	75 05		 jne	 SHORT $LN705@Fput
$LN715@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0048b	c6 44 24 20 01	 mov	 BYTE PTR $T6[rsp], 1
$LN705@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00490	49 83 c7 02	 add	 r15, 2
  00494	49 83 ec 01	 sub	 r12, 1
  00498	75 a6		 jne	 SHORT $LL707@Fput

; 1469 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  0049a	e9 70 01 00 00	 jmp	 $LN1270@Fput
$LN1262@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0049f	4c 8d 7d bf	 lea	 r15, QWORD PTR _Groupstring$[rbp-161]
  004a3	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  004a8	4c 0f 43 7d bf	 cmovae	 r15, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1473 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  004ad	48 8b 45 9f	 mov	 rax, QWORD PTR _Prefix$1$[rbp-161]
  004b1	4c 8b e0	 mov	 r12, rax

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  004b4	48 85 c0	 test	 rax, rax
  004b7	74 67		 je	 SHORT $LN761@Fput
  004b9	48 8b 7d 87	 mov	 rdi, QWORD PTR $T5[rbp-153]
  004bd	0f 1f 00	 npad	 3
$LL762@Fput:

; 1577 : 			*_Dest = *_Ptr;

  004c0	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  004c4	48 85 ff	 test	 rdi, rdi
  004c7	74 43		 je	 SHORT $LN770@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  004c9	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  004cd	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  004d1	74 22		 je	 SHORT $LN774@Fput
  004d3	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  004d7	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  004d9	85 c0		 test	 eax, eax
  004db	7e 18		 jle	 SHORT $LN774@Fput

; 308  : 		--*_IPcount;

  004dd	ff c8		 dec	 eax
  004df	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  004e1	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  004e5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  004e8	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  004ec	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  004ef	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  004f3	eb 11		 jmp	 SHORT $LN775@Fput
$LN774@Fput:
  004f5	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  004f8	41 0f b7 d0	 movzx	 edx, r8w
  004fc	48 8b cf	 mov	 rcx, rdi
  004ff	ff 50 18	 call	 QWORD PTR [rax+24]
  00502	44 0f b7 c0	 movzx	 r8d, ax
$LN775@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00506	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0050a	75 05		 jne	 SHORT $LN760@Fput
$LN770@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0050c	c6 44 24 20 01	 mov	 BYTE PTR $T5[rsp], 1
$LN760@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00511	49 83 c7 02	 add	 r15, 2
  00515	49 83 ec 01	 sub	 r12, 1
  00519	75 a5		 jne	 SHORT $LL762@Fput
  0051b	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T5[rsp]
$LN761@Fput:

; 1473 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00520	4c 8b 65 97	 mov	 r12, QWORD PTR _Dest$GSCopy$1$[rbp-161]
  00524	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0

; 1474 : 			_Dest = _Rep(_Dest, _Fill, _Fillcount);

  00529	0f 29 44 24 20	 movaps	 XMMWORD PTR $T4[rsp], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0052e	48 85 f6	 test	 rsi, rsi
  00531	74 5c		 je	 SHORT $LN796@Fput
  00533	48 8b 7d 87	 mov	 rdi, QWORD PTR $T4[rbp-153]
$LL797@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00537	48 85 ff	 test	 rdi, rdi
  0053a	74 43		 je	 SHORT $LN805@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0053c	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  00540	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00544	74 26		 je	 SHORT $LN809@Fput
  00546	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  0054a	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  0054c	85 c0		 test	 eax, eax
  0054e	7e 1c		 jle	 SHORT $LN809@Fput

; 308  : 		--*_IPcount;

  00550	ff c8		 dec	 eax
  00552	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00554	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00558	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0055b	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0055f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00562	66 44 89 2a	 mov	 WORD PTR [rdx], r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  00566	41 0f b7 c5	 movzx	 eax, r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  0056a	eb 0d		 jmp	 SHORT $LN810@Fput
$LN809@Fput:
  0056c	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0056f	41 0f b7 d5	 movzx	 edx, r13w
  00573	48 8b cf	 mov	 rcx, rdi
  00576	ff 50 18	 call	 QWORD PTR [rax+24]
$LN810@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00579	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0057d	75 05		 jne	 SHORT $LN795@Fput
$LN805@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0057f	c6 44 24 20 01	 mov	 BYTE PTR $T4[rsp], 1
$LN795@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  00584	48 83 ee 01	 sub	 rsi, 1
  00588	75 ad		 jne	 SHORT $LL797@Fput
  0058a	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T4[rsp]
$LN796@Fput:

; 1475 : 			_Fillcount = 0;

  0058f	33 f6		 xor	 esi, esi

; 1476 : 			}
; 1477 : 		else

  00591	e9 82 00 00 00	 jmp	 $LN1271@Fput
$LN12@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00596	4c 8d 7d bf	 lea	 r15, QWORD PTR _Groupstring$[rbp-161]
  0059a	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  0059f	4c 0f 43 7d bf	 cmovae	 r15, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1478 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  005a4	48 8b 45 9f	 mov	 rax, QWORD PTR _Prefix$1$[rbp-161]
  005a8	4c 8b e0	 mov	 r12, rax

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  005ab	48 85 c0	 test	 rax, rax
  005ae	74 64		 je	 SHORT $LN851@Fput
  005b0	48 8b 7d 87	 mov	 rdi, QWORD PTR $T3[rbp-153]
$LL852@Fput:

; 1577 : 			*_Dest = *_Ptr;

  005b4	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  005b8	48 85 ff	 test	 rdi, rdi
  005bb	74 43		 je	 SHORT $LN860@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  005bd	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  005c1	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  005c5	74 22		 je	 SHORT $LN864@Fput
  005c7	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  005cb	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  005cd	85 c0		 test	 eax, eax
  005cf	7e 18		 jle	 SHORT $LN864@Fput

; 308  : 		--*_IPcount;

  005d1	ff c8		 dec	 eax
  005d3	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  005d5	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  005d9	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  005dc	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  005e0	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  005e3	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  005e7	eb 11		 jmp	 SHORT $LN865@Fput
$LN864@Fput:
  005e9	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  005ec	41 0f b7 d0	 movzx	 edx, r8w
  005f0	48 8b cf	 mov	 rcx, rdi
  005f3	ff 50 18	 call	 QWORD PTR [rax+24]
  005f6	44 0f b7 c0	 movzx	 r8d, ax
$LN865@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  005fa	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  005fe	75 05		 jne	 SHORT $LN850@Fput
$LN860@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  00600	c6 44 24 20 01	 mov	 BYTE PTR $T3[rsp], 1
$LN850@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00605	49 83 c7 02	 add	 r15, 2
  00609	49 83 ec 01	 sub	 r12, 1
  0060d	75 a5		 jne	 SHORT $LL852@Fput
$LN1270@Fput:
  0060f	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T3[rsp]
$LN851@Fput:

; 1478 : 			_Dest = _Put(_Dest, &_Groupstring[0], _Prefix);

  00614	4c 8b 65 97	 mov	 r12, QWORD PTR _Dest$GSCopy$1$[rbp-161]
$LN1271@Fput:
  00618	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0

; 1480 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  0061d	0f 29 44 24 20	 movaps	 XMMWORD PTR $T2[rsp], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00622	48 8d 45 bf	 lea	 rax, QWORD PTR _Groupstring$[rbp-161]
  00626	48 83 7d d7 08	 cmp	 QWORD PTR _Groupstring$[rbp-137], 8
  0062b	48 0f 43 45 bf	 cmovae	 rax, QWORD PTR _Groupstring$[rbp-161]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1480 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  00630	4c 8b 7d 9f	 mov	 r15, QWORD PTR _Prefix$1$[rbp-161]
  00634	49 2b df	 sub	 rbx, r15
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1679 : 		return (this->_Myptr()[_Off]);

  00637	4e 8d 3c 78	 lea	 r15, QWORD PTR [rax+r15*2]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  0063b	74 64		 je	 SHORT $LN906@Fput
  0063d	48 8b 7d 87	 mov	 rdi, QWORD PTR $T2[rbp-153]
$LL907@Fput:

; 1577 : 			*_Dest = *_Ptr;

  00641	45 0f b7 07	 movzx	 r8d, WORD PTR [r15]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00645	48 85 ff	 test	 rdi, rdi
  00648	74 43		 je	 SHORT $LN915@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0064a	48 8b 47 40	 mov	 rax, QWORD PTR [rdi+64]
  0064e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00652	74 22		 je	 SHORT $LN919@Fput
  00654	48 8b 4f 58	 mov	 rcx, QWORD PTR [rdi+88]
  00658	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  0065a	85 c0		 test	 eax, eax
  0065c	7e 18		 jle	 SHORT $LN919@Fput

; 308  : 		--*_IPcount;

  0065e	ff c8		 dec	 eax
  00660	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  00662	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00666	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00669	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0066d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00670	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00674	eb 11		 jmp	 SHORT $LN920@Fput
$LN919@Fput:
  00676	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00679	41 0f b7 d0	 movzx	 edx, r8w
  0067d	48 8b cf	 mov	 rcx, rdi
  00680	ff 50 18	 call	 QWORD PTR [rax+24]
  00683	44 0f b7 c0	 movzx	 r8d, ax
$LN920@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00687	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0068b	75 05		 jne	 SHORT $LN905@Fput
$LN915@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0068d	c6 44 24 20 01	 mov	 BYTE PTR $T2[rsp], 1
$LN905@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1576 : 		for (; 0 < _Count; --_Count, ++_Dest, ++_Ptr)

  00692	49 83 c7 02	 add	 r15, 2
  00696	48 83 eb 01	 sub	 rbx, 1
  0069a	75 a5		 jne	 SHORT $LL907@Fput
  0069c	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T2[rsp]
$LN906@Fput:

; 1480 : 		_Dest = _Put(_Dest, &_Groupstring[_Prefix], _Count - _Prefix);

  006a1	41 0f 11 04 24	 movups	 XMMWORD PTR [r12], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  006a6	48 8b 45 a7	 mov	 rax, QWORD PTR _Iosbase$GSCopy$1$[rbp-161]
  006aa	33 ff		 xor	 edi, edi
  006ac	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1482 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  006b0	41 0f 10 04 24	 movups	 xmm0, XMMWORD PTR [r12]
  006b5	0f 29 44 24 20	 movaps	 XMMWORD PTR $T1[rsp], xmm0

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  006ba	48 85 f6	 test	 rsi, rsi
  006bd	74 5b		 je	 SHORT $LN943@Fput
  006bf	48 8b 5d 87	 mov	 rbx, QWORD PTR $T1[rbp-153]
$LL944@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  006c3	48 85 db	 test	 rbx, rbx
  006c6	74 42		 je	 SHORT $LN952@Fput

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  006c8	48 8b 43 40	 mov	 rax, QWORD PTR [rbx+64]
  006cc	48 39 38	 cmp	 QWORD PTR [rax], rdi
  006cf	74 26		 je	 SHORT $LN956@Fput
  006d1	48 8b 4b 58	 mov	 rcx, QWORD PTR [rbx+88]
  006d5	8b 01		 mov	 eax, DWORD PTR [rcx]

; 200  : 		return (0 < _Pnavail()

  006d7	85 c0		 test	 eax, eax
  006d9	7e 1c		 jle	 SHORT $LN956@Fput

; 308  : 		--*_IPcount;

  006db	ff c8		 dec	 eax
  006dd	89 01		 mov	 DWORD PTR [rcx], eax

; 309  : 		return ((*_IPnext)++);

  006df	48 8b 4b 40	 mov	 rcx, QWORD PTR [rbx+64]
  006e3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  006e6	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  006ea	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  006ed	66 44 89 2a	 mov	 WORD PTR [rdx], r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 369  : 		return (_Ch);

  006f1	41 0f b7 c5	 movzx	 eax, r13w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 200  : 		return (0 < _Pnavail()

  006f5	eb 0d		 jmp	 SHORT $LN957@Fput
$LN956@Fput:
  006f7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  006fa	41 0f b7 d5	 movzx	 edx, r13w
  006fe	48 8b cb	 mov	 rcx, rbx
  00701	ff 50 18	 call	 QWORD PTR [rax+24]
$LN957@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00704	66 44 3b f0	 cmp	 r14w, ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00708	75 05		 jne	 SHORT $LN942@Fput
$LN952@Fput:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0070a	c6 44 24 20 01	 mov	 BYTE PTR $T1[rsp], 1
$LN942@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1584 : 		for (; 0 < _Count; --_Count, ++_Dest)

  0070f	48 83 ee 01	 sub	 rsi, 1
  00713	75 ae		 jne	 SHORT $LL944@Fput
  00715	0f 28 44 24 20	 movaps	 xmm0, XMMWORD PTR $T1[rsp]
$LN943@Fput:

; 1585 : 			*_Dest = _Ch;
; 1586 : 		return (_Dest);

  0071a	48 8b 5d af	 mov	 rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-161]
  0071e	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00721	48 8b 45 f7	 mov	 rax, QWORD PTR _Grouping$[rbp-137]
  00725	48 83 f8 10	 cmp	 rax, 16
  00729	72 5e		 jb	 SHORT $LN1063@Fput

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0072b	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0072e	48 8b 4d df	 mov	 rcx, QWORD PTR _Grouping$[rbp-161]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00732	48 83 f8 ff	 cmp	 rax, -1
  00736	76 06		 jbe	 SHORT $LN1057@Fput
  00738	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0073d	cc		 int	 3
$LN1057@Fput:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0073e	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00744	72 3e		 jb	 SHORT $LN1058@Fput

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00746	f6 45 df 1f	 test	 BYTE PTR _Grouping$[rbp-161], 31
  0074a	74 06		 je	 SHORT $LN1059@Fput
  0074c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00751	cc		 int	 3
$LN1059@Fput:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

  00752	48 8b 45 df	 mov	 rax, QWORD PTR _Grouping$[rbp-161]

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00756	48 8b 48 f8	 mov	 rcx, QWORD PTR [rax-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0075a	48 3b c8	 cmp	 rcx, rax
  0075d	72 06		 jb	 SHORT $LN1060@Fput
  0075f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00764	cc		 int	 3
$LN1060@Fput:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00765	48 8b 45 df	 mov	 rax, QWORD PTR _Grouping$[rbp-161]
  00769	48 2b c1	 sub	 rax, rcx
  0076c	48 83 f8 08	 cmp	 rax, 8
  00770	73 06		 jae	 SHORT $LN1061@Fput
  00772	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00777	cc		 int	 3
$LN1061@Fput:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00778	48 83 f8 27	 cmp	 rax, 39			; 00000027H
  0077c	76 06		 jbe	 SHORT $LN1058@Fput
  0077e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00783	cc		 int	 3
$LN1058@Fput:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);
; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00784	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN1063@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00789	48 c7 45 f7 0f
	00 00 00	 mov	 QWORD PTR _Grouping$[rbp-137], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00791	48 89 7d ef	 mov	 QWORD PTR _Grouping$[rbp-145], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00795	c6 45 df 00	 mov	 BYTE PTR _Grouping$[rbp-161], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00799	4c 8b 45 d7	 mov	 r8, QWORD PTR _Groupstring$[rbp-137]
  0079d	49 83 f8 08	 cmp	 r8, 8
  007a1	72 10		 jb	 SHORT $LN1115@Fput

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  007a3	49 ff c0	 inc	 r8
  007a6	48 8b 55 bf	 mov	 rdx, QWORD PTR _Groupstring$[rbp-161]
  007aa	48 8d 4d bf	 lea	 rcx, QWORD PTR _Groupstring$[rbp-161]
  007ae	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN1115@Fput:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1482 : 		return (_Rep(_Dest, _Fill, _Fillcount));	// put trailing fill

  007b3	48 8b c3	 mov	 rax, rbx

; 1483 : 		}

  007b6	48 8b 4d ff	 mov	 rcx, QWORD PTR __$ArrayPad$[rbp-161]
  007ba	48 33 cc	 xor	 rcx, rsp
  007bd	e8 00 00 00 00	 call	 __security_check_cookie
  007c2	48 8b 9c 24 f0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+240]
  007ca	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  007d1	41 5f		 pop	 r15
  007d3	41 5e		 pop	 r14
  007d5	41 5d		 pop	 r13
  007d7	41 5c		 pop	 r12
  007d9	5f		 pop	 rdi
  007da	5e		 pop	 rsi
  007db	5d		 pop	 rbp
  007dc	c3		 ret	 0
$LN1268@Fput:
?_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$0@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$0
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$4@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$4
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$1@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$1
  00011	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$1
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$2@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$2
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$41@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$41
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$41@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$41
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$3@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$3
  0002e	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$0@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$0
  00000	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T9[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$4@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$4
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$4@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$1@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$1
  00011	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR _Groupstring$[rdx]
  00018	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$1@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$2@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$2
  0001d	48 8d 8a 20 00
	00 00		 lea	 rcx, QWORD PTR $T8[rdx]
  00024	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$2@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$41@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$41
  00029	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$41@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$41
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
_Dp$ = 48
_Dest$GSCopy$1$ = 56
_Prefix$1$ = 64
_Iosbase$GSCopy$1$ = 72
__$ReturnUdt$GSCopy$1$ = 80
$T10 = 88
_Groupstring$ = 96
_Grouping$ = 128
__$ArrayPad$ = 160
this$ = 240
__$ReturnUdt$ = 248
_Dest$ = 256
_Iosbase$ = 264
_Fill$ = 272
_Buf$ = 280
_Count$ = 288
?dtor$3@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$3
  0002e	48 8d 8a 80 00
	00 00		 lea	 rcx, QWORD PTR _Grouping$[rdx]
  00035	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??_Fput@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_WPEBD_K@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Fput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Ffmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADDH@Z
_TEXT	SEGMENT
this$ = 8
_Fmt$ = 16
_Spec$ = 24
_Flags$ = 32
?_Ffmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADDH@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Ffmt, COMDAT

; 1384 : 		char *_Ptr = _Fmt;
; 1385 : 		*_Ptr++ = '%';

  00000	c6 02 25	 mov	 BYTE PTR [rdx], 37	; 00000025H
  00003	4c 8b d2	 mov	 r10, rdx
  00006	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]

; 1386 : 
; 1387 : 		if (_Flags & ios_base::showpos)

  0000a	41 f6 c1 20	 test	 r9b, 32			; 00000020H
  0000e	74 06		 je	 SHORT $LN2@Ffmt

; 1388 : 			*_Ptr++ = '+';

  00010	c6 00 2b	 mov	 BYTE PTR [rax], 43	; 0000002bH
  00013	48 ff c0	 inc	 rax
$LN2@Ffmt:

; 1389 : 		if (_Flags & ios_base::showpoint)

  00016	41 f6 c1 10	 test	 r9b, 16
  0001a	74 06		 je	 SHORT $LN3@Ffmt

; 1390 : 			*_Ptr++ = '#';

  0001c	c6 00 23	 mov	 BYTE PTR [rax], 35	; 00000023H
  0001f	48 ff c0	 inc	 rax
$LN3@Ffmt:

; 1391 : 		*_Ptr++ = '.';

  00022	66 c7 00 2e 2a	 mov	 WORD PTR [rax], 10798	; 00002a2eH

; 1392 : 		*_Ptr++ = '*';	// for precision argument

  00027	48 83 c0 02	 add	 rax, 2

; 1393 : 		if (_Spec != '\0')

  0002b	45 84 c0	 test	 r8b, r8b
  0002e	74 06		 je	 SHORT $LN4@Ffmt

; 1394 : 			*_Ptr++ = _Spec;	// 'L' qualifier for long double only

  00030	44 88 00	 mov	 BYTE PTR [rax], r8b
  00033	48 ff c0	 inc	 rax
$LN4@Ffmt:

; 1395 : 
; 1396 : 		ios_base::fmtflags _Ffl = _Flags & ios_base::floatfield;

  00036	41 8b c9	 mov	 ecx, r9d
  00039	81 e1 00 30 00
	00		 and	 ecx, 12288		; 00003000H

; 1397 : 		if (_Flags & ios_base::uppercase)

  0003f	41 f6 c1 04	 test	 r9b, 4
  00043	74 3b		 je	 SHORT $LN5@Ffmt

; 1398 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00045	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  0004b	74 3b		 je	 SHORT $LN17@Ffmt
  0004d	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  00053	75 0c		 jne	 SHORT $LN8@Ffmt
  00055	b2 41		 mov	 dl, 65			; 00000041H

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00057	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  00059	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  0005d	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  00060	c3		 ret	 0
$LN8@Ffmt:

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00061	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00067	ba 47 00 00 00	 mov	 edx, 71			; 00000047H
  0006c	41 b8 45 00 00
	00		 mov	 r8d, 69			; 00000045H
  00072	41 0f 44 d0	 cmove	 edx, r8d
  00076	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  00078	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  0007c	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  0007f	c3		 ret	 0
$LN5@Ffmt:

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00080	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  00086	75 0c		 jne	 SHORT $LN14@Ffmt
$LN17@Ffmt:
  00088	b2 66		 mov	 dl, 102			; 00000066H
  0008a	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  0008c	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  00090	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  00093	c3		 ret	 0
$LN14@Ffmt:

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  00094	81 f9 00 30 00
	00		 cmp	 ecx, 12288		; 00003000H
  0009a	75 0c		 jne	 SHORT $LN12@Ffmt
  0009c	b2 61		 mov	 dl, 97			; 00000061H
  0009e	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  000a0	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  000a4	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  000a7	c3		 ret	 0
$LN12@Ffmt:

; 1399 : 				: _Ffl == ios_base::hexfloat ? 'A'	// added with TR1
; 1400 : 				: _Ffl == ios_base::scientific ? 'E' : 'G';	// specifier
; 1401 : 		else
; 1402 : 			*_Ptr++ = _Ffl == ios_base::fixed ? 'f'

  000a8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ae	ba 67 00 00 00	 mov	 edx, 103		; 00000067H
  000b3	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
  000b9	41 0f 44 d0	 cmove	 edx, r8d
  000bd	88 10		 mov	 BYTE PTR [rax], dl

; 1403 : 				: _Ffl == ios_base::hexfloat ? 'a'	// added with TR1
; 1404 : 				: _Ffl == ios_base::scientific ? 'e' : 'g';	// specifier
; 1405 : 
; 1406 : 		*_Ptr = '\0';

  000bf	c6 40 01 00	 mov	 BYTE PTR [rax+1], 0

; 1407 : 		return (_Fmt);

  000c3	49 8b c2	 mov	 rax, r10

; 1408 : 		}

  000c6	c3		 ret	 0
?_Ffmt@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@AEBAPEADPEADDH@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Ffmt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second, COMDAT

; 319  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 320  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first, COMDAT

; 294  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 295  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Compat, COMDAT

; 256  : 		}

  00000	c2 00 00	 ret	 0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate, COMDAT

; 884  : 		{	// deallocate object at _Ptr, ignore size

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 39		 ja	 SHORT $LN16@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	49 c1 e0 05	 shl	 r8, 5

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0001e	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00020	f6 c2 1f	 test	 dl, 31
  00023	75 2d		 jne	 SHORT $LN18@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00025	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00029	48 3b c2	 cmp	 rax, rdx
  0002c	73 2a		 jae	 SHORT $LN19@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002e	48 2b d0	 sub	 rdx, rax
  00031	48 83 fa 08	 cmp	 rdx, 8
  00035	72 27		 jb	 SHORT $LN20@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00037	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003b	77 27		 ja	 SHORT $LN21@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003d	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00040	48 8b ca	 mov	 rcx, rdx

; 885  : 		_Mybase::deallocate(_Ptr, _Count);
; 886  : 		}

  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00047	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00051	cc		 int	 3
$LN18@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00052	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00057	cc		 int	 3
$LN19@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00058	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005d	cc		 int	 3
$LN20@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00063	cc		 int	 3
$LN21@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00064	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00069	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data, COMDAT

; 636  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 637  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Right$dead$ = 16
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Swap_all, COMDAT

; 621  : 		_Get_data()._Swap_all(_Right._Get_data());
; 622  : 		}

  00000	c2 00 00	 ret	 0
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all, COMDAT

; 616  : 		_Get_data()._Orphan_all();
; 617  : 		}

  00000	c2 00 00	 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen, COMDAT

; 1787 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1788 : 		_Xlength_error("vector<T> too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 64
_Count$ = 72
?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate, COMDAT

; 1624 : 		{	// move to array of exactly _Count elements

$LN219:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00015	48 8b fa	 mov	 rdi, rdx
  00018	4c 8b f1	 mov	 r14, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 51   : 	if (_Count == 0)

  0001b	48 bd ff ff ff
	ff ff ff ff 07	 mov	 rbp, 576460752303423487	; 07ffffffffffffffH
  00025	48 85 d2	 test	 rdx, rdx
  00028	75 49		 jne	 SHORT $LN20@Reallocate

; 52   : 		return (_Ptr);

  0002a	33 db		 xor	 ebx, ebx
$LN26@Reallocate:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  0002c	49 8b 56 08	 mov	 rdx, QWORD PTR [r14+8]
  00030	4c 8b c3	 mov	 r8, rbx
  00033	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
  00036	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  0003b	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  00040	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
  00043	49 8b 56 08	 mov	 rdx, QWORD PTR [r14+8]
  00047	48 8b f2	 mov	 rsi, rdx
  0004a	48 2b f1	 sub	 rsi, rcx

; 1625 : 		pointer _Ptr = this->_Getal().allocate(_Count);
; 1626 : 
; 1627 : 		_TRY_BEGIN
; 1628 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);
; 1629 : 		_CATCH_ALL
; 1630 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1631 : 		_RERAISE;
; 1632 : 		_CATCH_END
; 1633 : 
; 1634 : 		size_type _Size = size();
; 1635 : 		if (this->_Myfirst() != pointer())

  0004d	48 85 c9	 test	 rcx, rcx
  00050	0f 84 a9 00 00
	00		 je	 $LN177@Reallocate

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  00056	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >

; 1636 : 			{	// destroy and deallocate old array
; 1637 : 			_Destroy(this->_Myfirst(), this->_Mylast());
; 1638 : 			this->_Getal().deallocate(this->_Myfirst(),

  0005b	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
  0005e	49 8b 46 10	 mov	 rax, QWORD PTR [r14+16]
  00062	48 2b c1	 sub	 rax, rcx
  00065	48 c1 f8 05	 sar	 rax, 5
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00069	48 3b c5	 cmp	 rax, rbp
  0006c	76 60		 jbe	 SHORT $LN171@Reallocate
  0006e	e9 c0 00 00 00	 jmp	 $LN209@Reallocate
$LN20@Reallocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00073	48 3b d5	 cmp	 rdx, rbp
  00076	0f 87 bd 00 00
	00		 ja	 $LN211@Reallocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  0007c	48 8b ca	 mov	 rcx, rdx
  0007f	48 c1 e1 05	 shl	 rcx, 5

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00083	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0008a	72 2f		 jb	 SHORT $LN22@Reallocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0008c	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00090	48 3b c1	 cmp	 rax, rcx
  00093	0f 86 a6 00 00
	00		 jbe	 $LN212@Reallocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00099	48 8b c8	 mov	 rcx, rax
  0009c	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  000a1	48 85 c0	 test	 rax, rax
  000a4	0f 84 9b 00 00
	00		 je	 $LN213@Reallocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  000aa	48 8d 58 27	 lea	 rbx, QWORD PTR [rax+39]
  000ae	48 83 e3 e0	 and	 rbx, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  000b2	48 89 43 f8	 mov	 QWORD PTR [rbx-8], rax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  000b6	e9 71 ff ff ff	 jmp	 $LN26@Reallocate
$LN22@Reallocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  000bb	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000c0	48 8b d8	 mov	 rbx, rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  000c3	48 85 c0	 test	 rax, rax
  000c6	0f 85 60 ff ff
	ff		 jne	 $LN26@Reallocate
  000cc	eb 7d		 jmp	 SHORT $LN214@Reallocate
$LN171@Reallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

  000ce	48 c1 e0 05	 shl	 rax, 5

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  000d2	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  000d8	72 20		 jb	 SHORT $LN172@Reallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000da	f6 c1 1f	 test	 cl, 31
  000dd	75 72		 jne	 SHORT $LN215@Reallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  000df	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000e3	48 3b c1	 cmp	 rax, rcx
  000e6	73 6f		 jae	 SHORT $LN216@Reallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000e8	48 2b c8	 sub	 rcx, rax
  000eb	48 83 f9 08	 cmp	 rcx, 8
  000ef	72 6c		 jb	 SHORT $LN217@Reallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000f1	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  000f5	77 6c		 ja	 SHORT $LN218@Reallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000f7	48 8b c8	 mov	 rcx, rax
$LN172@Reallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000fa	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN177@Reallocate:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1646 : 		}

  000ff	48 8b 6c 24 50	 mov	 rbp, QWORD PTR [rsp+80]
  00104	48 83 e6 e0	 and	 rsi, -32		; ffffffffffffffe0H
  00108	48 c1 e7 05	 shl	 rdi, 5
  0010c	48 03 fb	 add	 rdi, rbx
  0010f	48 03 f3	 add	 rsi, rbx
  00112	49 89 7e 10	 mov	 QWORD PTR [r14+16], rdi
  00116	48 8b 7c 24 58	 mov	 rdi, QWORD PTR [rsp+88]
  0011b	49 89 76 08	 mov	 QWORD PTR [r14+8], rsi
  0011f	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00124	49 89 1e	 mov	 QWORD PTR [r14], rbx
  00127	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  0012c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00130	41 5e		 pop	 r14
  00132	c3		 ret	 0
$LN209@Reallocate:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00133	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00138	cc		 int	 3
$LN211@Reallocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00139	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0013e	cc		 int	 3
$LN212@Reallocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0013f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00144	cc		 int	 3
$LN213@Reallocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00145	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0014a	cc		 int	 3
$LN214@Reallocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0014b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00150	cc		 int	 3
$LN215@Reallocate:

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00151	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00156	cc		 int	 3
$LN216@Reallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00157	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0015c	cc		 int	 3
$LN217@Reallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0015d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00162	cc		 int	 3
$LN218@Reallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00163	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00168	cc		 int	 3
$LN208@Reallocate:
?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Count$ = 16
?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to, COMDAT

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00000	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]

; 1609 : 		size_type _Capacity = capacity();
; 1610 : 
; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00004	45 33 d2	 xor	 r10d, r10d

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00007	4c 2b 09	 sub	 r9, QWORD PTR [rcx]

; 1609 : 		size_type _Capacity = capacity();
; 1610 : 
; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  0000a	48 b9 ff ff ff
	ff ff ff ff 07	 mov	 rcx, 576460752303423487	; 07ffffffffffffffH

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00014	49 c1 f9 05	 sar	 r9, 5

; 1609 : 		size_type _Capacity = capacity();
; 1610 : 
; 1611 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00018	4d 8b c1	 mov	 r8, r9
  0001b	49 d1 e8	 shr	 r8, 1
  0001e	49 2b c8	 sub	 rcx, r8
  00021	49 3b c9	 cmp	 rcx, r9
  00024	4b 8d 04 08	 lea	 rax, QWORD PTR [r8+r9]
  00028	49 0f 42 c2	 cmovb	 rax, r10

; 1612 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1613 : 		if (_Capacity < _Count)

  0002c	48 3b c2	 cmp	 rax, rdx
  0002f	48 0f 42 c2	 cmovb	 rax, rdx

; 1614 : 			_Capacity = _Count;
; 1615 : 		return (_Capacity);
; 1616 : 		}

  00033	c3		 ret	 0
?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
this$dead$ = 8
_First$ = 16
_Last$ = 24
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy, COMDAT

; 1603 : 		{	// destroy [_First, _Last) using allocator

  00000	48 8b ca	 mov	 rcx, rdx

; 1604 : 		_Destroy_range(_First, _Last, this->_Getal());

  00003	49 8b d0	 mov	 rdx, r8
  00006	e9 00 00 00 00	 jmp	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 1188 : 		return (this->_Getal().max_size());

  00000	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH

; 1189 : 		}

  0000a	c3		 ret	 0
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size, COMDAT

; 1183 : 		return (this->_Mylast() - this->_Myfirst());

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  00007	48 c1 f8 05	 sar	 rax, 5

; 1184 : 		}

  0000b	c3		 ret	 0
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Unused_capacity, COMDAT

; 1051 : 		return (this->_Myend() - this->_Mylast());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 41 08	 sub	 rax, QWORD PTR [rcx+8]
  00008	48 c1 f8 05	 sar	 rax, 5

; 1052 : 		}

  0000c	c3		 ret	 0
?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@D@2@XZ PROC ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_first, COMDAT

; 294  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 295  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@D@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEBAAEBQEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEBAAEBQEADXZ PROC ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Myptr, COMDAT

; 1268 : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 1269 : 		}

  00003	c3		 ret	 0
?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEBAAEBQEADXZ ENDP ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAPEADXZ PROC ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Myptr, COMDAT

; 1263 : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 1264 : 		}

  00003	c3		 ret	 0
?_Myptr@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAAAEAPEADXZ ENDP ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT

; 314  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 315  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 299  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 300  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 294  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 295  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat, COMDAT

; 262  : 		}

  00000	c2 00 00	 ret	 0
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEB_WPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pstring$ = 24
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEB_WPEBU_Container_base0@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT

; 48   : 		{	// construct with pointer _Parg
; 49   : 		this->_Adopt(_Pstring);
; 50   : 		_Ptr = _Parg;

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 51   : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QEAA@PEB_WPEBU_Container_base0@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$ = 16
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT

; 773  : 		return (_Al);

  00000	48 8b c1	 mov	 rax, rcx

; 774  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT

; 884  : 		{	// deallocate object at _Ptr, ignore size

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 38		 ja	 SHORT $LN16@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	4b 8d 04 00	 lea	 rax, QWORD PTR [r8+r8]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001d	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0001f	f6 c2 1f	 test	 dl, 31
  00022	75 2d		 jne	 SHORT $LN18@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00024	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00028	48 3b c2	 cmp	 rax, rdx
  0002b	73 2a		 jae	 SHORT $LN19@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002d	48 2b d0	 sub	 rdx, rax
  00030	48 83 fa 08	 cmp	 rdx, 8
  00034	72 27		 jb	 SHORT $LN20@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00036	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003a	77 27		 ja	 SHORT $LN21@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003c	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0003f	48 8b ca	 mov	 rcx, rdx

; 885  : 		_Mybase::deallocate(_Ptr, _Count);
; 886  : 		}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN18@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN19@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN20@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN21@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT

; 728  : 		return (_Get_data()._Myres);

  00000	48 8d 41 18	 lea	 rax, QWORD PTR [rcx+24]

; 729  : 		}

  00004	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx, COMDAT

; 708  : 		return (_Get_data()._Bx);

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		}

  00003	c3		 ret	 0
?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT

; 701  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 702  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 299  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 300  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 294  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 295  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 513  : 			? _STD addressof(*this->_Bx._Ptr)
; 514  : 			: this->_Bx._Buf);
; 515  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 04		 jb	 SHORT $LN3@Myptr
  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000a	c3		 ret	 0
$LN3@Myptr:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000b	48 8b c1	 mov	 rax, rcx

; 506  : 			? _STD addressof(*this->_Bx._Ptr)
; 507  : 			: this->_Bx._Buf);
; 508  : 		}

  0000e	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$ = 16
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 773  : 		return (_Al);

  00000	48 8b c1	 mov	 rax, rcx

; 774  : 		}

  00003	c3		 ret	 0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT

; 884  : 		{	// deallocate object at _Ptr, ignore size

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	49 83 f8 ff	 cmp	 r8, -1
  00008	77 35		 ja	 SHORT $LN16@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0000a	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  00011	72 20		 jb	 SHORT $LN7@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00013	f6 c2 1f	 test	 dl, 31
  00016	75 2d		 jne	 SHORT $LN18@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00018	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0001c	48 3b c2	 cmp	 rax, rdx
  0001f	73 2a		 jae	 SHORT $LN19@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00021	48 2b d0	 sub	 rdx, rax
  00024	48 83 fa 08	 cmp	 rdx, 8
  00028	72 27		 jb	 SHORT $LN20@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0002a	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0002e	77 27		 ja	 SHORT $LN21@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00030	48 8b d0	 mov	 rdx, rax
$LN7@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00033	48 8b ca	 mov	 rcx, rdx

; 885  : 		_Mybase::deallocate(_Ptr, _Count);
; 886  : 		}

  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  0003a	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN16@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN18@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN19@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN20@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN21@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN15@deallocate:
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT

; 728  : 		return (_Get_data()._Myres);

  00000	48 8d 41 18	 lea	 rax, QWORD PTR [rcx+24]

; 729  : 		}

  00004	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize, COMDAT

; 718  : 		return (_Get_data()._Mysize);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 719  : 		}

  00004	c3		 ret	 0
?_Mysize@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx, COMDAT

; 708  : 		return (_Get_data()._Bx);

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		}

  00003	c3		 ret	 0
?_Bx@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 701  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 702  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT

; 696  : 		return (_Mypair._Get_second());

  00000	48 8b c1	 mov	 rax, rcx

; 697  : 		}

  00003	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 2277 : 		{	// report an out_of_range error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2278 : 		_Xout_of_range("invalid string position");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00010	cc		 int	 3
$LN3@Xran:
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 2260 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2261 : 		_Xlength_error("string too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 35		 je	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00005	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00009	48 83 f8 08	 cmp	 rax, 8
  0000d	72 05		 jb	 SHORT $LN16@Inside
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000f	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00012	eb 03		 jmp	 SHORT $LN17@Inside
$LN16@Inside:
  00014	4c 8b c1	 mov	 r8, rcx
$LN17@Inside:

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00017	49 3b d0	 cmp	 rdx, r8
  0001a	72 1e		 jb	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001c	48 83 f8 08	 cmp	 rax, 8
  00020	72 05		 jb	 SHORT $LN34@Inside
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00022	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00025	eb 03		 jmp	 SHORT $LN35@Inside
$LN34@Inside:
  00027	4c 8b c1	 mov	 r8, rcx
$LN35@Inside:

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002a	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  0002e	49 8d 0c 40	 lea	 rcx, QWORD PTR [r8+rax*2]
  00032	48 3b ca	 cmp	 rcx, rdx
  00035	76 03		 jbe	 SHORT $LN4@Inside

; 2237 : 		else
; 2238 : 			return (true);

  00037	b0 01		 mov	 al, 1

; 2239 : 		}

  00039	c3		 ret	 0
$LN4@Inside:

; 2236 : 			return (false);	// don't ask

  0003a	32 c0		 xor	 al, al

; 2239 : 		}

  0003c	c3		 ret	 0
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Trim$ = 64
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT

; 2219 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN105:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2220 : 		if (max_size() < _Newsize)

  00006	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  00010	48 8b da	 mov	 rbx, rdx
  00013	48 3b d0	 cmp	 rdx, rax
  00016	77 7c		 ja	 SHORT $LN103@Grow

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00018	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  0001d	33 ff		 xor	 edi, edi
  0001f	48 39 51 18	 cmp	 QWORD PTR [rcx+24], rdx
  00023	73 1a		 jae	 SHORT $LN3@Grow

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00025	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00029	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
  0002e	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00033	48 85 db	 test	 rbx, rbx
  00036	0f 95 c0	 setne	 al

; 2230 : 		}

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
$LN3@Grow:

; 2224 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  0003f	45 84 c0	 test	 r8b, r8b
  00042	74 29		 je	 SHORT $LN5@Grow
  00044	48 83 fa 08	 cmp	 rdx, 8
  00048	73 23		 jae	 SHORT $LN5@Grow

; 2225 : 			_Tidy(true,	// copy and deallocate if trimming to small string

  0004a	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0004e	49 3b d0	 cmp	 rdx, r8
  00051	4c 0f 42 c2	 cmovb	 r8, rdx
  00055	b2 01		 mov	 dl, 1
  00057	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  0005c	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00061	48 85 db	 test	 rbx, rbx
  00064	0f 95 c0	 setne	 al

; 2230 : 		}

  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5b		 pop	 rbx
  0006c	c3		 ret	 0
$LN5@Grow:

; 2226 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2227 : 		else if (_Newsize == 0)

  0006d	48 85 d2	 test	 rdx, rdx
  00070	75 11		 jne	 SHORT $LN100@Grow

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00072	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00076	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  0007b	72 03		 jb	 SHORT $LN91@Grow
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0007d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN91@Grow:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00080	66 89 39	 mov	 WORD PTR [rcx], di
$LN100@Grow:
  00083	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00088	48 85 db	 test	 rbx, rbx
  0008b	0f 95 c0	 setne	 al

; 2230 : 		}

  0008e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00092	5b		 pop	 rbx
  00093	c3		 ret	 0
$LN103@Grow:

; 2261 : 		_Xlength_error("string too long");

  00094	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0009b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000a0	cc		 int	 3
$LN102@Grow:
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0_W@Z
_TEXT	SEGMENT
this$ = 16
_Off$ = 24
_Count$ = 32
_Ch$ = 40
?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign, COMDAT

; 2170 : 		{	// assign _Count copies of _Ch beginning at _Off

$LN57:
  00000	48 83 ec 08	 sub	 rsp, 8

; 2171 : 		if (_Count == 1)

  00004	49 83 f8 01	 cmp	 r8, 1
  00008	75 14		 jne	 SHORT $LN2@Chassign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000a	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  0000f	72 03		 jb	 SHORT $LN15@Chassign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00011	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN15@Chassign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00014	66 44 89 0c 51	 mov	 WORD PTR [rcx+rdx*2], r9w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2175 : 		}

  00019	48 83 c4 08	 add	 rsp, 8
  0001d	c3		 ret	 0
$LN2@Chassign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001e	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00023	48 89 3c 24	 mov	 QWORD PTR [rsp], rdi
  00027	72 03		 jb	 SHORT $LN36@Chassign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00029	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN36@Chassign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  0002c	48 8d 3c 51	 lea	 rdi, QWORD PTR [rcx+rdx*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 260  :         for (; 0 < _N; ++_Su, --_N)

  00030	4d 85 c0	 test	 r8, r8
  00033	74 0a		 je	 SHORT $LN55@Chassign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 340  : 		return ((_Elem *)_CSTD wmemset(_First, _Ch, _Count));

  00035	41 0f b7 c1	 movzx	 eax, r9w
  00039	49 8b c8	 mov	 rcx, r8
  0003c	66 f3 ab	 rep stosw
$LN55@Chassign:
  0003f	48 8b 3c 24	 mov	 rdi, QWORD PTR [rsp]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2175 : 		}

  00043	48 83 c4 08	 add	 rsp, 8
  00047	c3		 ret	 0
?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Count$ = 64
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT

; 1342 : 		{	// erase elements [_Off, _Off + _Count)

$LN131:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  0000a	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]

; 1342 : 		{	// erase elements [_Off, _Off + _Count)

  0000e	4d 8b c8	 mov	 r9, r8
  00011	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00014	48 3b fa	 cmp	 rdi, rdx
  00017	0f 82 83 00 00
	00		 jb	 $LN129@erase

; 1343 : 		_Check_offset(_Off);
; 1344 : 		if (this->_Mysize() - _Off <= _Count)

  0001d	48 8b c7	 mov	 rax, rdi
  00020	48 2b c2	 sub	 rax, rdx
  00023	49 3b c0	 cmp	 rax, r8
  00026	77 22		 ja	 SHORT $LN2@erase

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00028	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002c	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00031	72 03		 jb	 SHORT $LN53@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN53@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00036	33 c0		 xor	 eax, eax
  00038	66 89 04 51	 mov	 WORD PTR [rcx+rdx*2], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  0003c	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  0003f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
$LN2@erase:

; 1345 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1346 : 		else if (0 < _Count)

  0004a	4d 85 c0	 test	 r8, r8
  0004d	74 43		 je	 SHORT $LN126@erase

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00054	72 05		 jb	 SHORT $LN73@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00056	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00059	eb 03		 jmp	 SHORT $LN74@erase
$LN73@erase:
  0005b	48 8b c1	 mov	 rax, rcx
$LN74@erase:

; 1347 : 			{	// move elements down
; 1348 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1349 : 			size_type _Newsize = this->_Mysize() - _Count;

  0005e	49 2b f8	 sub	 rdi, r8
  00061	48 8d 0c 50	 lea	 rcx, QWORD PTR [rax+rdx*2]

; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  00065	4c 8b c7	 mov	 r8, rdi
  00068	4c 2b c2	 sub	 r8, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 333  : 		return (_Count == 0 ? _First1

  0006b	74 0c		 je	 SHORT $LN93@erase
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  0006d	4d 03 c0	 add	 r8, r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  00070	4a 8d 14 49	 lea	 rdx, QWORD PTR [rcx+r9*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00074	e8 00 00 00 00	 call	 memmove
$LN93@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00079	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0007d	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00082	72 05		 jb	 SHORT $LN117@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00084	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00087	eb 03		 jmp	 SHORT $LN118@erase
$LN117@erase:
  00089	48 8b cb	 mov	 rcx, rbx
$LN118@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0008c	33 c0		 xor	 eax, eax
  0008e	66 89 04 79	 mov	 WORD PTR [rcx+rdi*2], ax
$LN126@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  00092	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  00095	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0009a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
$LN129@erase:

; 2278 : 		_Xout_of_range("invalid string position");

  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  000a7	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  000ac	cc		 int	 3
$LN128@erase:
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT

; 1335 : 		{	// erase elements [_Off, ...)

$LN54:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 2e		 jb	 SHORT $LN52@erase

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0000a	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000e	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00013	72 13		 jb	 SHORT $LN40@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00015	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00018	45 33 c0	 xor	 r8d, r8d
  0001b	66 44 89 04 50	 mov	 WORD PTR [rax+rdx*2], r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1338 : 		return (*this);

  00020	48 8b c1	 mov	 rax, rcx

; 1339 : 		}

  00023	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00027	c3		 ret	 0
$LN40@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00028	45 33 c0	 xor	 r8d, r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002b	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0002e	66 44 89 04 51	 mov	 WORD PTR [rcx+rdx*2], r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1339 : 		}

  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	c3		 ret	 0
$LN52@erase:

; 2278 : 		_Xout_of_range("invalid string position");

  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0003f	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00044	cc		 int	 3
$LN51@erase:
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$dead$ = 56
_Count$ = 64
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT

; 1082 : 		{	// append [_Ptr, _Ptr + _Count)

$LN269:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000f	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]

; 1082 : 		{	// append [_Ptr, _Ptr + _Count)

  00013	49 8b f0	 mov	 rsi, r8
  00016	48 8b d9	 mov	 rbx, rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00019	48 83 fa 08	 cmp	 rdx, 8
  0001d	72 05		 jb	 SHORT $LN21@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0001f	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00022	eb 03		 jmp	 SHORT $LN22@append
$LN21@append:
  00024	48 8b c1	 mov	 rax, rcx
$LN22@append:

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00027	48 8d 2d 00 00
	00 00		 lea	 rbp, OFFSET FLAT:$SG4294967197
  0002e	48 3b e8	 cmp	 rbp, rax
  00031	72 4a		 jb	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00033	48 83 fa 08	 cmp	 rdx, 8
  00037	72 03		 jb	 SHORT $LN40@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN40@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0003c	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00040	48 8d 0c 41	 lea	 rcx, QWORD PTR [rcx+rax*2]
  00044	48 3b cd	 cmp	 rcx, rbp
  00047	76 34		 jbe	 SHORT $LN2@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00049	48 83 fa 08	 cmp	 rdx, 8
  0004d	72 05		 jb	 SHORT $LN66@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0004f	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00052	eb 03		 jmp	 SHORT $LN67@append
$LN66@append:
  00054	48 8b c3	 mov	 rax, rbx
$LN67@append:

; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,

  00057	48 2b e8	 sub	 rbp, rax
  0005a	4d 8b c8	 mov	 r9, r8
  0005d	48 d1 fd	 sar	 rbp, 1
  00060	48 8b d3	 mov	 rdx, rbx
  00063	4c 8b c5	 mov	 r8, rbp
  00066	48 8b cb	 mov	 rcx, rbx

; 1097 : 		}

  00069	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0006e	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00073	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00077	5e		 pop	 rsi

; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,

  00078	e9 00 00 00 00	 jmp	 ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
$LN2@append:

; 1086 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1087 : 		if (npos - this->_Mysize() <= _Count)

  0007d	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00081	48 83 c8 ff	 or	 rax, -1
  00085	49 2b c0	 sub	 rax, r8
  00088	48 3b c6	 cmp	 rax, rsi
  0008b	0f 86 b4 00 00
	00		 jbe	 $LN266@append

; 1088 : 			_Xlen();	// result too long
; 1089 : 
; 1090 : 		const size_type _Num = this->_Mysize() + _Count;

  00091	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00096	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1091 : 		if (0 < _Count && _Grow(_Num))

  0009a	48 85 f6	 test	 rsi, rsi
  0009d	0f 84 8a 00 00
	00		 je	 $LN259@append

; 2220 : 		if (max_size() < _Newsize)

  000a3	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  000ad	48 3b f8	 cmp	 rdi, rax
  000b0	0f 87 9c 00 00
	00		 ja	 $LN268@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  000b6	48 3b d7	 cmp	 rdx, rdi
  000b9	73 1c		 jae	 SHORT $LN97@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  000bb	48 8b d7	 mov	 rdx, rdi
  000be	48 8b cb	 mov	 rcx, rbx
  000c1	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000c6	48 85 ff	 test	 rdi, rdi

; 1091 : 		if (0 < _Count && _Grow(_Num))

  000c9	74 62		 je	 SHORT $LN259@append
$LN265@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000cb	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000d0	72 26		 jb	 SHORT $LN206@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000d2	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d5	eb 24		 jmp	 SHORT $LN207@append
$LN97@append:

; 2227 : 		else if (_Newsize == 0)

  000d7	48 85 ff	 test	 rdi, rdi
  000da	75 ef		 jne	 SHORT $LN265@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000dc	33 c0		 xor	 eax, eax
  000de	48 89 43 10	 mov	 QWORD PTR [rbx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000e2	48 83 fa 08	 cmp	 rdx, 8
  000e6	72 08		 jb	 SHORT $LN185@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000e8	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000eb	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000ee	eb 3d		 jmp	 SHORT $LN259@append
$LN185@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000f0	48 8b cb	 mov	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000f3	66 89 03	 mov	 WORD PTR [rbx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000f6	eb 35		 jmp	 SHORT $LN259@append
$LN206@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000f8	48 8b cb	 mov	 rcx, rbx
$LN207@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 310  : 		return (_Count == 0 ? _First1

  000fb	48 85 f6	 test	 rsi, rsi
  000fe	74 14		 je	 SHORT $LN226@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1093 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

  00100	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00104	4c 8d 04 36	 lea	 r8, QWORD PTR [rsi+rsi]
  00108	48 8b d5	 mov	 rdx, rbp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1093 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);

  0010b	48 8d 0c 41	 lea	 rcx, QWORD PTR [rcx+rax*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  0010f	e8 00 00 00 00	 call	 memcpy
$LN226@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00114	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00118	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0011d	72 05		 jb	 SHORT $LN250@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0011f	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00122	eb 03		 jmp	 SHORT $LN251@append
$LN250@append:
  00124	48 8b cb	 mov	 rcx, rbx
$LN251@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00127	33 c0		 xor	 eax, eax
  00129	66 89 04 79	 mov	 WORD PTR [rcx+rdi*2], ax
$LN259@append:
  0012d	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1096 : 		return (*this);

  00132	48 8b c3	 mov	 rax, rbx

; 1097 : 		}

  00135	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0013a	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0013f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00143	5e		 pop	 rsi
  00144	c3		 ret	 0
$LN266@append:

; 2261 : 		_Xlength_error("string too long");

  00145	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0014c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00151	cc		 int	 3
$LN268@append:
  00152	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00159	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0015e	cc		 int	 3
$LN263@append:
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append, COMDAT

; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)

$LN246:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  00015	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]

; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)

  00019	49 8b f1	 mov	 rsi, r9
  0001c	49 8b e8	 mov	 rbp, r8
  0001f	4c 8b f2	 mov	 r14, rdx
  00022	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00025	49 3b c0	 cmp	 rax, r8
  00028	0f 82 da 00 00
	00		 jb	 $LN242@append

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002e	49 2b c0	 sub	 rax, r8

; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)

  00031	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]

; 2110 : 		if (_Size <= _Max_effective_size)

  00035	4c 3b c8	 cmp	 r9, rax
  00038	48 0f 47 f0	 cmova	 rsi, rax

; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)

  0003c	48 83 c8 ff	 or	 rax, -1
  00040	49 2b c0	 sub	 rax, r8
  00043	48 3b c6	 cmp	 rax, rsi
  00046	0f 86 c9 00 00
	00		 jbe	 $LN244@append

; 1069 : 			_Xlen();	// result too long
; 1070 : 
; 1071 : 		const size_type _Num = this->_Mysize() + _Count;

  0004c	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00051	49 8d 3c 30	 lea	 rdi, QWORD PTR [r8+rsi]

; 1072 : 		if (0 < _Count && _Grow(_Num))

  00055	48 85 f6	 test	 rsi, rsi
  00058	0f 84 8c 00 00
	00		 je	 $LN236@append

; 2220 : 		if (max_size() < _Newsize)

  0005e	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  00068	48 3b f8	 cmp	 rdi, rax
  0006b	0f 87 b1 00 00
	00		 ja	 $LN245@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00071	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  00075	73 23		 jae	 SHORT $LN56@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  00077	48 8b d7	 mov	 rdx, rdi
  0007a	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  0007f	48 85 ff	 test	 rdi, rdi

; 1072 : 		if (0 < _Count && _Grow(_Num))

  00082	74 66		 je	 SHORT $LN236@append
$LN241@append:

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00084	49 83 7e 18 08	 cmp	 QWORD PTR [r14+24], 8
  00089	72 03		 jb	 SHORT $LN165@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0008b	4d 8b 36	 mov	 r14, QWORD PTR [r14]
$LN165@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008e	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00093	72 1f		 jb	 SHORT $LN183@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00095	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00098	eb 1d		 jmp	 SHORT $LN184@append
$LN56@append:

; 2227 : 		else if (_Newsize == 0)

  0009a	48 85 ff	 test	 rdi, rdi
  0009d	75 e5		 jne	 SHORT $LN241@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0009f	33 c0		 xor	 eax, eax
  000a1	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a5	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  000aa	72 03		 jb	 SHORT $LN145@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000ac	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN145@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000af	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000b2	eb 36		 jmp	 SHORT $LN236@append
$LN183@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b4	48 8b cb	 mov	 rcx, rbx
$LN184@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 310  : 		return (_Count == 0 ? _First1

  000b7	48 85 f6	 test	 rsi, rsi
  000ba	74 15		 je	 SHORT $LN203@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1074 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

  000bc	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  000c0	4c 8d 04 36	 lea	 r8, QWORD PTR [rsi+rsi]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1074 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),

  000c4	49 8d 14 6e	 lea	 rdx, QWORD PTR [r14+rbp*2]
  000c8	48 8d 0c 41	 lea	 rcx, QWORD PTR [rcx+rax*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  000cc	e8 00 00 00 00	 call	 memcpy
$LN203@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000d1	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000d5	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000da	72 05		 jb	 SHORT $LN227@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000dc	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000df	eb 03		 jmp	 SHORT $LN228@append
$LN227@append:
  000e1	48 8b cb	 mov	 rcx, rbx
$LN228@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000e4	33 c0		 xor	 eax, eax
  000e6	66 89 04 79	 mov	 WORD PTR [rcx+rdi*2], ax
$LN236@append:
  000ea	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1078 : 		return (*this);

  000ef	48 8b c3	 mov	 rax, rbx

; 1079 : 		}

  000f2	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000f7	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000fc	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00101	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00105	41 5e		 pop	 r14
  00107	c3		 ret	 0
$LN242@append:

; 2278 : 		_Xout_of_range("invalid string position");

  00108	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0010f	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00114	cc		 int	 3
$LN244@append:

; 2261 : 		_Xlength_error("string too long");

  00115	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0011c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00121	cc		 int	 3
$LN245@append:
  00122	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00129	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  0012e	cc		 int	 3
$LN239@append:
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 941  : 		{	// assign by moving _Right

$LN312:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00014	48 8b fa	 mov	 rdi, rdx
  00017	48 8b d9	 mov	 rbx, rcx

; 942  : 		if (this == &_Right)

  0001a	48 3b ca	 cmp	 rcx, rdx
  0001d	74 42		 je	 SHORT $LN311@assign

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0001f	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00023	49 83 f8 08	 cmp	 r8, 8
  00027	72 0c		 jb	 SHORT $LN195@assign

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00029	49 ff c0	 inc	 r8
  0002c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0002f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
  00034	90		 npad	 1
$LN195@assign:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00035	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0003d	33 c9		 xor	 ecx, ecx
  0003f	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00043	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00048	72 05		 jb	 SHORT $LN297@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0004a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004d	eb 03		 jmp	 SHORT $LN298@assign
$LN297@assign:
  0004f	48 8b c3	 mov	 rax, rbx
$LN298@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00052	66 89 08	 mov	 WORD PTR [rax], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 950  : 			_Assign_rv(_STD forward<_Myt>(_Right));

  00055	48 8b d7	 mov	 rdx, rdi
  00058	48 8b cb	 mov	 rcx, rbx
  0005b	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
  00060	90		 npad	 1
$LN311@assign:

; 951  : 			}
; 952  : 		return (*this);

  00061	48 8b c3	 mov	 rax, rbx

; 953  : 		}

  00064	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00069	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@$$QEAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset, COMDAT

; 2265 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 05		 jb	 SHORT $LN17@Check_offs

; 2267 : 			_Xran();
; 2268 : 		}

  0000a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000e	c3		 ret	 0
$LN17@Check_offs:

; 2278 : 		_Xout_of_range("invalid string position");

  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0001b	cc		 int	 3
$LN16@Check_offs:
?_Check_offset@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 2260 : 		{	// report a length_error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2261 : 		_Xlength_error("string too long");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00010	cc		 int	 3
$LN3@Xlen:
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 35		 je	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00005	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00009	48 83 f8 10	 cmp	 rax, 16
  0000d	72 05		 jb	 SHORT $LN16@Inside
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000f	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00012	eb 03		 jmp	 SHORT $LN17@Inside
$LN16@Inside:
  00014	4c 8b c1	 mov	 r8, rcx
$LN17@Inside:

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  00017	49 3b d0	 cmp	 rdx, r8
  0001a	72 1e		 jb	 SHORT $LN4@Inside

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0001c	48 83 f8 10	 cmp	 rax, 16
  00020	72 05		 jb	 SHORT $LN34@Inside
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00022	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00025	eb 03		 jmp	 SHORT $LN35@Inside
$LN34@Inside:
  00027	4c 8b c1	 mov	 r8, rcx
$LN35@Inside:

; 2234 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2235 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

  0002a	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  0002e	49 8d 0c 00	 lea	 rcx, QWORD PTR [r8+rax]
  00032	48 3b ca	 cmp	 rcx, rdx
  00035	76 03		 jbe	 SHORT $LN4@Inside

; 2237 : 		else
; 2238 : 			return (true);

  00037	b0 01		 mov	 al, 1

; 2239 : 		}

  00039	c3		 ret	 0
$LN4@Inside:

; 2236 : 			return (false);	// don't ask

  0003a	32 c0		 xor	 al, al

; 2239 : 		}

  0003c	c3		 ret	 0
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_NPEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Trim$ = 64
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT

; 2219 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN105:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b da	 mov	 rbx, rdx

; 2220 : 		if (max_size() < _Newsize)

  00009	48 83 fa fe	 cmp	 rdx, -2
  0000d	77 7c		 ja	 SHORT $LN103@Grow

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  0000f	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00014	33 ff		 xor	 edi, edi
  00016	48 39 51 18	 cmp	 QWORD PTR [rcx+24], rdx
  0001a	73 1a		 jae	 SHORT $LN3@Grow

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0001c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00025	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  0002a	48 85 db	 test	 rbx, rbx
  0002d	0f 95 c0	 setne	 al

; 2230 : 		}

  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5b		 pop	 rbx
  00035	c3		 ret	 0
$LN3@Grow:

; 2224 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00036	45 84 c0	 test	 r8b, r8b
  00039	74 29		 je	 SHORT $LN5@Grow
  0003b	48 83 fa 10	 cmp	 rdx, 16
  0003f	73 23		 jae	 SHORT $LN5@Grow

; 2225 : 			_Tidy(true,	// copy and deallocate if trimming to small string

  00041	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00045	49 3b d0	 cmp	 rdx, r8
  00048	4c 0f 42 c2	 cmovb	 r8, rdx
  0004c	b2 01		 mov	 dl, 1
  0004e	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_N_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00053	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00058	48 85 db	 test	 rbx, rbx
  0005b	0f 95 c0	 setne	 al

; 2230 : 		}

  0005e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00062	5b		 pop	 rbx
  00063	c3		 ret	 0
$LN5@Grow:

; 2226 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2227 : 		else if (_Newsize == 0)

  00064	48 85 d2	 test	 rdx, rdx
  00067	75 11		 jne	 SHORT $LN100@Grow

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00069	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006d	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00072	72 03		 jb	 SHORT $LN91@Grow
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN91@Grow:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00077	40 88 39	 mov	 BYTE PTR [rcx], dil
$LN100@Grow:
  0007a	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  0007f	48 85 db	 test	 rbx, rbx
  00082	0f 95 c0	 setne	 al

; 2230 : 		}

  00085	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00089	5b		 pop	 rbx
  0008a	c3		 ret	 0
$LN103@Grow:

; 2261 : 		_Xlength_error("string too long");

  0008b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00092	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00097	cc		 int	 3
$LN102@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00000	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00004	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00009	72 08		 jb	 SHORT $LN22@Eos
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000b	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0000e	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2215 : 		}

  00012	c3		 ret	 0
$LN22@Eos:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00013	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2215 : 		}

  00017	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Count$ = 24
_Ch$ = 32
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT

; 2170 : 		{	// assign _Count copies of _Ch beginning at _Off

  00000	48 8b c2	 mov	 rax, rdx

; 2171 : 		if (_Count == 1)

  00003	49 83 f8 01	 cmp	 r8, 1
  00007	75 0f		 jne	 SHORT $LN2@Chassign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00009	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0000e	72 03		 jb	 SHORT $LN16@Chassign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00010	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN16@Chassign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00013	44 88 0c 11	 mov	 BYTE PTR [rcx+rdx], r9b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2175 : 		}

  00017	c3		 ret	 0
$LN2@Chassign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00018	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0001d	72 03		 jb	 SHORT $LN37@Chassign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0001f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN37@Chassign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  00022	41 0f be d1	 movsx	 edx, r9b
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  00026	48 03 c8	 add	 rcx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  00029	e9 00 00 00 00	 jmp	 memset
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Size$ = 24
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size, COMDAT

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b c2	 sub	 rax, rdx

; 2110 : 		if (_Size <= _Max_effective_size)

  00007	4c 3b c0	 cmp	 r8, rax
  0000a	49 0f 46 c0	 cmovbe	 rax, r8

; 2111 : 			return (_Size);
; 2112 : 		else
; 2113 : 			return (_Max_effective_size);
; 2114 : 		}

  0000e	c3		 ret	 0
?_Clamp_suffix_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Count$ = 64
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1342 : 		{	// erase elements [_Off, _Off + _Count)

$LN129:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2266 : 		if (this->_Mysize() < _Off)

  0000a	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]

; 1342 : 		{	// erase elements [_Off, _Off + _Count)

  0000e	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00011	48 3b fa	 cmp	 rdi, rdx
  00014	0f 82 a4 00 00
	00		 jb	 $LN127@erase

; 1343 : 		_Check_offset(_Off);
; 1344 : 		if (this->_Mysize() - _Off <= _Count)

  0001a	48 8b c7	 mov	 rax, rdi
  0001d	48 2b c2	 sub	 rax, rdx
  00020	49 3b c0	 cmp	 rax, r8
  00023	77 35		 ja	 SHORT $LN2@erase

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00025	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00029	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  0002e	72 15		 jb	 SHORT $LN52@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00030	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00033	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  00037	48 8b c1	 mov	 rax, rcx

; 1354 : 		}

  0003a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
$LN52@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00045	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00048	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  0004c	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  0004f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
$LN2@erase:

; 1345 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1346 : 		else if (0 < _Count)

  0005a	4d 85 c0	 test	 r8, r8
  0005d	74 51		 je	 SHORT $LN124@erase

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0005f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00064	72 05		 jb	 SHORT $LN73@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00066	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00069	eb 03		 jmp	 SHORT $LN74@erase
$LN73@erase:
  0006b	48 8b c1	 mov	 rax, rcx
$LN74@erase:

; 1347 : 			{	// move elements down
; 1348 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1349 : 			size_type _Newsize = this->_Mysize() - _Count;

  0006e	49 2b f8	 sub	 rdi, r8
  00071	48 8d 0c 10	 lea	 rcx, QWORD PTR [rax+rdx]

; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  00075	48 8b c7	 mov	 rax, rdi
  00078	48 2b c2	 sub	 rax, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  0007b	74 0c		 je	 SHORT $LN93@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

  0007d	4a 8d 14 01	 lea	 rdx, QWORD PTR [rcx+r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 553  : 		return (_Count == 0 ? _First1

  00081	4c 8b c0	 mov	 r8, rax
  00084	e8 00 00 00 00	 call	 memmove
$LN93@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00089	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008d	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00092	72 15		 jb	 SHORT $LN115@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00094	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00097	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  0009b	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  0009e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
$LN115@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a9	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000ac	c6 04 3b 00	 mov	 BYTE PTR [rbx+rdi], 0
$LN124@erase:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1353 : 		return (*this);

  000b0	48 8b c3	 mov	 rax, rbx

; 1354 : 		}

  000b3	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000b8	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
$LN127@erase:

; 2278 : 		_Xout_of_range("invalid string position");

  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  000c5	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  000ca	cc		 int	 3
$LN126@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 1335 : 		{	// erase elements [_Off, ...)

$LN54:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2266 : 		if (this->_Mysize() < _Off)

  00004	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00008	72 26		 jb	 SHORT $LN52@erase

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0000a	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0000e	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00013	72 0f		 jb	 SHORT $LN40@erase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00015	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00018	c6 04 10 00	 mov	 BYTE PTR [rax+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1338 : 		return (*this);

  0001c	48 8b c1	 mov	 rax, rcx

; 1339 : 		}

  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
$LN40@erase:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00024	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00027	c6 04 11 00	 mov	 BYTE PTR [rcx+rdx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1339 : 		}

  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	c3		 ret	 0
$LN52@erase:

; 2278 : 		_Xout_of_range("invalid string position");

  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00037	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0003c	cc		 int	 3
$LN51@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 1106 : 		{	// append _Count * _Ch

$LN220:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1107 : 		if (npos - this->_Mysize() <= _Count)

  0000f	48 83 c8 ff	 or	 rax, -1
  00013	41 0f b6 e8	 movzx	 ebp, r8b
  00017	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0001b	48 8b f2	 mov	 rsi, rdx
  0001e	49 2b c0	 sub	 rax, r8
  00021	48 8b d9	 mov	 rbx, rcx
  00024	48 3b c2	 cmp	 rax, rdx
  00027	0f 86 bf 00 00
	00		 jbe	 $LN217@append

; 1108 : 			_Xlen();	// result too long
; 1109 : 
; 1110 : 		const size_type _Num = this->_Mysize() + _Count;

  0002d	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00032	49 8d 3c 10	 lea	 rdi, QWORD PTR [r8+rdx]

; 1111 : 		if (0 < _Count && _Grow(_Num))

  00036	48 85 d2	 test	 rdx, rdx
  00039	0f 84 95 00 00
	00		 je	 $LN211@append

; 2220 : 		if (max_size() < _Newsize)

  0003f	48 83 ff fe	 cmp	 rdi, -2
  00043	0f 87 b0 00 00
	00		 ja	 $LN219@append

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00049	48 39 79 18	 cmp	 QWORD PTR [rcx+24], rdi
  0004d	73 27		 jae	 SHORT $LN28@append

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0004f	48 8b d7	 mov	 rdx, rdi
  00052	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00057	48 85 ff	 test	 rdi, rdi

; 1111 : 		if (0 < _Count && _Grow(_Num))

  0005a	74 78		 je	 SHORT $LN211@append
$LN216@append:

; 1112 : 			{	// make room and append new stuff using assign
; 1113 : 			_Chassign(this->_Mysize(), _Count, _Ch);

  0005c	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]

; 2171 : 		if (_Count == 1)

  00060	48 83 fe 01	 cmp	 rsi, 1
  00064	75 39		 jne	 SHORT $LN137@append

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00066	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0006b	72 29		 jb	 SHORT $LN150@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0006d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00070	40 88 2c 08	 mov	 BYTE PTR [rax+rcx], bpl
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  00074	eb 47		 jmp	 SHORT $LN138@append
$LN28@append:

; 2227 : 		else if (_Newsize == 0)

  00076	48 85 ff	 test	 rdi, rdi
  00079	75 e1		 jne	 SHORT $LN216@append

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0007b	48 89 79 10	 mov	 QWORD PTR [rcx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0007f	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00084	72 08		 jb	 SHORT $LN116@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00086	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00089	40 88 38	 mov	 BYTE PTR [rax], dil
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  0008c	eb 46		 jmp	 SHORT $LN211@append
$LN116@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008e	48 8b c1	 mov	 rax, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00091	c6 01 00	 mov	 BYTE PTR [rcx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00094	eb 3e		 jmp	 SHORT $LN211@append
$LN150@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00096	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  00099	40 88 2c 0b	 mov	 BYTE PTR [rbx+rcx], bpl
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  0009d	eb 1e		 jmp	 SHORT $LN138@append
$LN137@append:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0009f	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000a4	72 05		 jb	 SHORT $LN171@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000a6	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a9	eb 03		 jmp	 SHORT $LN172@append
$LN171@append:
  000ab	48 8b c3	 mov	 rax, rbx
$LN172@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  000ae	40 0f be d5	 movsx	 edx, bpl
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  000b2	48 03 c8	 add	 rcx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 560  : 		return ((_Elem *)_CSTD memset(_First, _Ch, _Count));

  000b5	4c 8b c6	 mov	 r8, rsi
  000b8	e8 00 00 00 00	 call	 memset
$LN138@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000bd	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c1	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000c6	72 05		 jb	 SHORT $LN202@append
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000c8	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000cb	eb 03		 jmp	 SHORT $LN203@append
$LN202@append:
  000cd	48 8b c3	 mov	 rax, rbx
$LN203@append:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000d0	c6 04 38 00	 mov	 BYTE PTR [rax+rdi], 0
$LN211@append:
  000d4	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1116 : 		return (*this);

  000d9	48 8b c3	 mov	 rax, rbx

; 1117 : 		}

  000dc	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000e1	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000e6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ea	5e		 pop	 rsi
  000eb	c3		 ret	 0
$LN217@append:

; 2261 : 		_Xlength_error("string too long");

  000ec	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000f3	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000f8	cc		 int	 3
$LN219@append:
  000f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00100	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00105	cc		 int	 3
$LN214@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ
_TEXT	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush, COMDAT

; 574  : 		{	// flush output stream

$LN61:
  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 575  : 		if (_Myios::rdbuf() != 0)

  00012	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00015	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00019	48 83 7c 0a 48
	00		 cmp	 QWORD PTR [rdx+rcx+72], 0
  0001f	0f 84 80 00 00
	00		 je	 $LN60@flush

; 576  : 			{	// buffer exists, flush it
; 577  : 			const sentry _Ok(*this);

  00025	48 8b d1	 mov	 rdx, rcx
  00028	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ok$2[rsp]
  0002d	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
  00032	90		 npad	 1

; 579  : 			if (_Ok && _Myios::rdbuf()->pubsync() == -1)

  00033	80 7c 24 30 00	 cmp	 BYTE PTR _Ok$2[rsp+8], 0
  00038	74 3a		 je	 SHORT $LN40@flush
  0003a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003d	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00041	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 145  : 		return (sync());

  00046	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00049	ff 50 68	 call	 QWORD PTR [rax+104]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 579  : 			if (_Ok && _Myios::rdbuf()->pubsync() == -1)

  0004c	83 f8 ff	 cmp	 eax, -1
  0004f	75 23		 jne	 SHORT $LN40@flush

; 580  : 				_Myios::setstate(ios_base::badbit);	// sync failed

  00051	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00054	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00058	48 03 cb	 add	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  0005b	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  0005e	83 ca 04	 or	 edx, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00061	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00066	75 03		 jne	 SHORT $LN46@flush
  00068	83 ca 04	 or	 edx, 4
$LN46@flush:
  0006b	45 33 c0	 xor	 r8d, r8d
  0006e	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00073	90		 npad	 1
$LN40@flush:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  00074	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00079	84 c0		 test	 al, al
  0007b	75 0b		 jne	 SHORT $LN49@flush

; 133  : 				this->_Myostr._Osfx();

  0007d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Ok$2[rsp]
  00082	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
  00087	90		 npad	 1
$LN49@flush:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00088	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Ok$2[rsp]
  0008d	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00090	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00094	48 8b 4c 11 48	 mov	 rcx, QWORD PTR [rcx+rdx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00099	48 85 c9	 test	 rcx, rcx
  0009c	74 07		 je	 SHORT $LN53@flush

; 108  : 				_Myostr.rdbuf()->_Unlock();

  0009e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000a1	ff 50 10	 call	 QWORD PTR [rax+16]
  000a4	90		 npad	 1
$LN53@flush:
$LN60@flush:

; 581  : 			}
; 582  : 		return (*this);

  000a5	48 8b c3	 mov	 rax, rbx

; 583  : 		}

  000a8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ac	5b		 pop	 rbx
  000ad	c3		 ret	 0
?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Ok$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$0
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$2@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$2
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$2@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$2
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$3@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$3
  00011	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$0@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$0
  00000	48 8d 8a 28 00
	00 00		 lea	 rcx, QWORD PTR _Ok$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$2@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$2
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$2@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ok$2 = 40
this$ = 80
?dtor$3@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$3
  00011	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$3@?0??flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx, COMDAT

; 165  : 		{	// perform any wrapup

$LN30:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 8b d9	 mov	 rbx, rcx

; 167  : 		if (this->good() && this->flags() & ios_base::unitbuf)

  00012	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00015	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00019	83 7c 0a 10 00	 cmp	 DWORD PTR [rdx+rcx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 167  : 		if (this->good() && this->flags() & ios_base::unitbuf)

  0001e	75 3a		 jne	 SHORT $LN21@Osfx
  00020	f6 44 0a 18 02	 test	 BYTE PTR [rdx+rcx+24], 2
  00025	74 33		 je	 SHORT $LN21@Osfx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00027	48 8b 4c 0a 48	 mov	 rcx, QWORD PTR [rdx+rcx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 145  : 		return (sync());

  0002c	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002f	ff 50 68	 call	 QWORD PTR [rax+104]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 168  : 			if (_Myios::rdbuf()->pubsync() == -1)	// flush stream as needed

  00032	83 f8 ff	 cmp	 eax, -1
  00035	75 23		 jne	 SHORT $LN21@Osfx

; 169  : 				_Myios::setstate(ios_base::badbit);

  00037	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0003a	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  0003e	48 03 cb	 add	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00041	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00044	83 ca 04	 or	 edx, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00047	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  0004c	75 03		 jne	 SHORT $LN27@Osfx
  0004e	83 ca 04	 or	 edx, 4
$LN27@Osfx:
  00051	45 33 c0	 xor	 r8d, r8d
  00054	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00059	90		 npad	 1
$LN21@Osfx:
$LN9@Osfx:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 172  : 		}

  0005a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005e	5b		 pop	 rbx
  0005f	c3		 ret	 0
?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ$0:

; 170  : 		_CATCH_ALL
; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx'::`1'::catch$0

; 170  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ$0:

; 171  : 		_CATCH_END

  0000d	48 8d 05 00 00
	00 00		 lea	 rax, $LN9@catch$0
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
  0001a	cc		 int	 3
?catch$0@?0??_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::tie, COMDAT

; 80   : 		return (_Tiestr);

  00000	48 8b 41 50	 mov	 rax, QWORD PTR [rcx+80]

; 81   : 		}

  00004	c3		 ret	 0
?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBAPEAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::tie
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
this$ = 8
_State$ = 16
_Reraise$ = 24
?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::clear, COMDAT

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00000	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00005	75 03		 jne	 SHORT $LN3@clear
  00007	83 ca 04	 or	 edx, 4
$LN3@clear:
  0000a	e9 00 00 00 00	 jmp	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet
;	COMDAT ??_G?$numpunct@_W@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$numpunct@_W@std@@MEAAPEAXI@Z PROC			; std::numpunct<wchar_t>::`scalar deleting destructor', COMDAT
$LN17:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 175  : 		{	// destroy the object

  0000a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
  00017	8b da		 mov	 ebx, edx

; 258  : 		_CSTD free((void *)_Grouping);

  00019	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0001d	e8 00 00 00 00	 call	 free

; 259  : 		_CSTD free((void *)_Falsename);

  00022	48 8b 4f 20	 mov	 rcx, QWORD PTR [rdi+32]
  00026	e8 00 00 00 00	 call	 free

; 260  : 		_CSTD free((void *)_Truename);

  0002b	48 8b 4f 28	 mov	 rcx, QWORD PTR [rdi+40]
  0002f	e8 00 00 00 00	 call	 free
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xfacet

; 24   : 		{	// ensure that derived classes can be destroyed properly

  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
  0003b	48 89 07	 mov	 QWORD PTR [rdi], rax
  0003e	f6 c3 01	 test	 bl, 1
  00041	74 0d		 je	 SHORT $LN15@scalar
  00043	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00048	48 8b cf	 mov	 rcx, rdi
  0004b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN15@scalar:
  00050	48 8b c7	 mov	 rax, rdi
  00053	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??_G?$numpunct@_W@std@@MEAAPEAXI@Z ENDP			; std::numpunct<wchar_t>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Tidy@?$numpunct@_W@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$numpunct@_W@std@@AEAAXXZ PROC			; std::numpunct<wchar_t>::_Tidy, COMDAT

; 257  : 		{	// free all storage

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 258  : 		_CSTD free((void *)_Grouping);

  00009	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0000d	e8 00 00 00 00	 call	 free

; 259  : 		_CSTD free((void *)_Falsename);

  00012	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
  00016	e8 00 00 00 00	 call	 free

; 260  : 		_CSTD free((void *)_Truename);

  0001b	48 8b 4b 28	 mov	 rcx, QWORD PTR [rbx+40]

; 261  : 		}

  0001f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00023	5b		 pop	 rbx

; 260  : 		_CSTD free((void *)_Truename);

  00024	e9 00 00 00 00	 jmp	 free
?_Tidy@?$numpunct@_W@std@@AEAAXXZ ENDP			; std::numpunct<wchar_t>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::numpunct<wchar_t>::grouping, COMDAT

; 133  : 		{	// return grouping string

$LN8:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 134  : 		return (do_grouping());

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	48 8b da	 mov	 rbx, rdx
  0000c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  00014	ff 50 28	 call	 QWORD PTR [rax+40]
  00017	48 8b c3	 mov	 rax, rbx

; 135  : 		}

  0001a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
?grouping@?$numpunct@_W@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::numpunct<wchar_t>::grouping
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?thousands_sep@?$numpunct@_W@std@@QEBA_WXZ
_TEXT	SEGMENT
this$ = 48
?thousands_sep@?$numpunct@_W@std@@QEBA_WXZ PROC		; std::numpunct<wchar_t>::thousands_sep, COMDAT

; 128  : 		{	// return thousands separator

$LN8:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  0000e	48 3b c2	 cmp	 rax, rdx
  00011	75 0e		 jne	 SHORT $LN7@thousands_

; 129  : 		return (do_thousands_sep());

  00013	0f b7 41 1a	 movzx	 eax, WORD PTR [rcx+26]

; 130  : 		}

  00017	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001b	c3		 ret	 0
$LN3@thousands_:
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	c3		 ret	 0
$LN7@thousands_:

; 129  : 		return (do_thousands_sep());

  00021	ff 50 20	 call	 QWORD PTR [rax+32]
  00024	eb f6		 jmp	 SHORT $LN3@thousands_
?thousands_sep@?$numpunct@_W@std@@QEBA_WXZ ENDP		; std::numpunct<wchar_t>::thousands_sep
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?decimal_point@?$numpunct@_W@std@@QEBA_WXZ
_TEXT	SEGMENT
this$ = 48
?decimal_point@?$numpunct@_W@std@@QEBA_WXZ PROC		; std::numpunct<wchar_t>::decimal_point, COMDAT

; 123  : 		{	// return decimal point

$LN8:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  0000e	48 3b c2	 cmp	 rax, rdx
  00011	75 0e		 jne	 SHORT $LN7@decimal_po

; 124  : 		return (do_decimal_point());

  00013	0f b7 41 18	 movzx	 eax, WORD PTR [rcx+24]

; 125  : 		}

  00017	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001b	c3		 ret	 0
$LN3@decimal_po:
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	c3		 ret	 0
$LN7@decimal_po:

; 124  : 		return (do_decimal_point());

  00021	ff 50 18	 call	 QWORD PTR [rax+24]
  00024	eb f6		 jmp	 SHORT $LN3@decimal_po
?decimal_point@?$numpunct@_W@std@@QEBA_WXZ ENDP		; std::numpunct<wchar_t>::decimal_point
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??E?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator++, COMDAT

; 652  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 653  : 		}

  00003	c3		 ret	 0
??E?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??D?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??D?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ PROC ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator*, COMDAT

; 647  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 648  : 		}

  00003	c3		 ret	 0
??D?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@XZ ENDP ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ??4?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_W@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_W@Z PROC ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator=, COMDAT

; 637  : 		{	// store element and increment

$LN30:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	44 0f b7 c2	 movzx	 r8d, dx

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  0000d	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00011	48 85 c9	 test	 rcx, rcx
  00014	74 45		 je	 SHORT $LN3@operator

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00016	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  0001a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0001e	74 22		 je	 SHORT $LN7@operator
  00020	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00024	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00026	85 c0		 test	 eax, eax
  00028	7e 18		 jle	 SHORT $LN7@operator

; 308  : 		--*_IPcount;

  0002a	ff c8		 dec	 eax
  0002c	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0002e	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00032	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00035	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0003c	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00040	eb 0e		 jmp	 SHORT $LN8@operator
$LN7@operator:
  00042	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00045	41 0f b7 d0	 movzx	 edx, r8w
  00049	ff 50 18	 call	 QWORD PTR [rax+24]
  0004c	44 0f b7 c0	 movzx	 r8d, ax
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00050	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00055	66 41 3b c0	 cmp	 ax, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 639  : 			|| traits_type::eq_int_type(_Traits::eof(),

  00059	75 03		 jne	 SHORT $LN28@operator
$LN3@operator:

; 640  : 				_Strbuf->sputc(_Right)))
; 641  : 			_Failed = true;

  0005b	c6 03 01	 mov	 BYTE PTR [rbx], 1
$LN28@operator:

; 642  : 		return (*this);

  0005e	48 8b c3	 mov	 rax, rbx

; 643  : 		}

  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5b		 pop	 rbx
  00066	c3		 ret	 0
??4?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@_W@Z ENDP ; std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second, COMDAT

; 314  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 315  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 906  : 		return (_Mytraits::max_size(*this));

  00000	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH

; 907  : 		}

  0000a	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate, COMDAT

; 873  : 		{	// allocate array of _Count elements

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN6@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN5@allocate:

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN6@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0001a	48 3b d0	 cmp	 rdx, rax
  0001d	77 43		 ja	 SHORT $LN17@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  0001f	48 c1 e2 05	 shl	 rdx, 5

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00023	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0002a	72 27		 jb	 SHORT $LN8@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002c	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  00030	48 3b ca	 cmp	 rcx, rdx
  00033	76 33		 jbe	 SHORT $LN19@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003a	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0003d	48 85 c0	 test	 rax, rax
  00040	74 2c		 je	 SHORT $LN20@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00042	48 83 c0 27	 add	 rax, 39			; 00000027H
  00046	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0004a	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
$LN8@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00053	48 8b ca	 mov	 rcx, rdx
  00056	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0005b	48 85 c0	 test	 rax, rax
  0005e	75 ab		 jne	 SHORT $LN5@allocate
  00060	eb 12		 jmp	 SHORT $LN21@allocate
$LN17@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00062	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00067	cc		 int	 3
$LN19@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00068	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006d	cc		 int	 3
$LN20@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN21@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00074	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00079	cc		 int	 3
$LN16@allocate:
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend, COMDAT

; 671  : 		return (_Get_data()._Myend);

  00000	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]

; 672  : 		}

  00004	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal, COMDAT

; 631  : 		return (_Mypair._Get_first());

  00000	48 8b c1	 mov	 rax, rcx

; 632  : 		}

  00003	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity, COMDAT

; 1046 : 		return (this->_Myend() - this->_Myfirst());

  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  00007	48 c1 f8 05	 sar	 rax, 5

; 1047 : 		}

  0000b	c3		 ret	 0
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate, COMDAT

; 619  : 		{	// deallocate object at _Ptr

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 39		 ja	 SHORT $LN13@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	49 c1 e0 05	 shl	 r8, 5

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  0001e	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00020	f6 c2 1f	 test	 dl, 31
  00023	75 2d		 jne	 SHORT $LN15@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00025	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00029	48 3b c2	 cmp	 rax, rdx
  0002c	73 2a		 jae	 SHORT $LN16@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002e	48 2b d0	 sub	 rdx, rax
  00031	48 83 fa 08	 cmp	 rdx, 8
  00035	72 27		 jb	 SHORT $LN17@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00037	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003b	77 27		 ja	 SHORT $LN18@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003d	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00040	48 8b ca	 mov	 rcx, rdx

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 621  : 		}

  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00047	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00051	cc		 int	 3
$LN15@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00052	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00057	cc		 int	 3
$LN16@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00058	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005d	cc		 int	 3
$LN17@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00063	cc		 int	 3
$LN18@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00064	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00069	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEBAAEBQEADXZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEBAAEBQEADXZ PROC ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_second, COMDAT

; 319  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 320  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEBAAEBQEADXZ ENDP ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAPEADXZ PROC ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_second, COMDAT

; 314  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 315  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAAAEAPEADXZ ENDP ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT

; 319  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 320  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 319  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 320  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT

; 314  : 		return (_Myval2);

  00000	48 8b c1	 mov	 rax, rcx

; 315  : 		}

  00003	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT

; 2178 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN486:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	53		 push	 rbx
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	41 56		 push	 r14
  00014	41 57		 push	 r15
  00016	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0001a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00023	4d 8b f8	 mov	 r15, r8
  00026	48 8b d9	 mov	 rbx, rcx

; 2179 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00029	48 8b f2	 mov	 rsi, rdx
  0002c	48 83 ce 07	 or	 rsi, 7

; 2180 : 		if (max_size() < _Newres)

  00030	49 b9 fe ff ff
	ff ff ff ff 7f	 mov	 r9, 9223372036854775806	; 7ffffffffffffffeH
  0003a	49 3b f1	 cmp	 rsi, r9
  0003d	76 05		 jbe	 SHORT $LN2@Copy

; 2181 : 			_Newres = _Newsize;	// undo roundup if too big

  0003f	48 8b f2	 mov	 rsi, rdx

; 2182 : 		else if (this->_Myres() / 2 <= _Newres / 3)

  00042	eb 31		 jmp	 SHORT $LN108@Copy
$LN2@Copy:
  00044	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00048	49 8b c8	 mov	 rcx, r8
  0004b	48 d1 e9	 shr	 rcx, 1
  0004e	48 b8 ab aa aa
	aa aa aa aa aa	 mov	 rax, -6148914691236517205 ; aaaaaaaaaaaaaaabH
  00058	48 f7 e6	 mul	 rsi
  0005b	48 d1 ea	 shr	 rdx, 1
  0005e	48 3b ca	 cmp	 rcx, rdx
  00061	76 12		 jbe	 SHORT $LN108@Copy

; 2183 : 			;
; 2184 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00063	49 8b c1	 mov	 rax, r9
  00066	48 2b c1	 sub	 rax, rcx
  00069	4c 3b c0	 cmp	 r8, rax

; 2185 : 			_Newres = this->_Myres()

  0006c	49 8d 34 08	 lea	 rsi, QWORD PTR [r8+rcx]

; 2183 : 			;
; 2184 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00070	76 03		 jbe	 SHORT $LN108@Copy

; 1748 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00072	49 8b f1	 mov	 rsi, r9
$LN108@Copy:

; 2186 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2187 : 		else
; 2188 : 			_Newres = max_size();	// settle for max_size()
; 2189 : 
; 2190 : 		_Elem *_Ptr;
; 2191 : 		_TRY_BEGIN
; 2192 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

  00075	48 8d 4e 01	 lea	 rcx, QWORD PTR [rsi+1]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 51   : 	if (_Count == 0)

  00079	48 85 c9	 test	 rcx, rcx
  0007c	75 08		 jne	 SHORT $LN136@Copy

; 52   : 		return (_Ptr);

  0007e	45 33 f6	 xor	 r14d, r14d
  00081	41 8b fe	 mov	 edi, r14d
  00084	eb 65		 jmp	 SHORT $LN135@Copy
$LN136@Copy:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00086	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00090	48 3b c8	 cmp	 rcx, rax
  00093	76 05		 jbe	 SHORT $LN137@Copy

; 56   : 		_Xbad_alloc();	// report no memory

  00095	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN137@Copy:

; 57   : 	const size_t _User_size = _Count * _Sz;

  0009a	48 03 c9	 add	 rcx, rcx

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  0009d	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  000a4	72 2f		 jb	 SHORT $LN138@Copy

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  000a6	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  000aa	48 3b c1	 cmp	 rax, rcx
  000ad	77 05		 ja	 SHORT $LN140@Copy

; 67   : 			_Xbad_alloc();	// report no memory

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN140@Copy:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  000b4	48 8b c8	 mov	 rcx, rax
  000b7	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  000bc	48 85 c0	 test	 rax, rax
  000bf	75 06		 jne	 SHORT $LN141@Copy
  000c1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c6	cc		 int	 3
$LN141@Copy:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  000c7	48 8d 78 27	 lea	 rdi, QWORD PTR [rax+39]
  000cb	48 83 e7 e0	 and	 rdi, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  000cf	48 89 47 f8	 mov	 QWORD PTR [rdi-8], rax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  000d3	eb 13		 jmp	 SHORT $LN142@Copy
$LN138@Copy:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  000d5	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000da	48 8b f8	 mov	 rdi, rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  000dd	48 85 c0	 test	 rax, rax
  000e0	75 06		 jne	 SHORT $LN142@Copy
  000e2	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000e7	cc		 int	 3
$LN142@Copy:

; 85   : 		}
; 86   : 	return (_Ptr);

  000e8	45 33 f6	 xor	 r14d, r14d
$LN135@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
  000eb	eb 17		 jmp	 SHORT $LN18@Copy
$LN19@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
  000ed	45 33 f6	 xor	 r14d, r14d
  000f0	48 8b 5c 24 60	 mov	 rbx, QWORD PTR this$[rsp]
  000f5	4c 8b 7c 24 70	 mov	 r15, QWORD PTR _Oldlen$[rsp]
  000fa	48 8b 74 24 68	 mov	 rsi, QWORD PTR _Newres$[rsp]
  000ff	48 8b 7c 24 78	 mov	 rdi, QWORD PTR _Ptr$[rsp]
$LN18@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2203 : 		if (0 < _Oldlen)

  00104	4d 85 ff	 test	 r15, r15
  00107	74 20		 je	 SHORT $LN290@Copy

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00109	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0010e	72 05		 jb	 SHORT $LN279@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00110	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00113	eb 03		 jmp	 SHORT $LN280@Copy
$LN279@Copy:
  00115	48 8b d3	 mov	 rdx, rbx
$LN280@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 310  : 		return (_Count == 0 ? _First1

  00118	4d 85 ff	 test	 r15, r15
  0011b	74 0c		 je	 SHORT $LN290@Copy
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  0011d	4f 8d 04 3f	 lea	 r8, QWORD PTR [r15+r15]
  00121	48 8b cf	 mov	 rcx, rdi
  00124	e8 00 00 00 00	 call	 memcpy
$LN290@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00129	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  0012d	49 83 f8 08	 cmp	 r8, 8
  00131	72 0e		 jb	 SHORT $LN296@Copy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00133	49 ff c0	 inc	 r8
  00136	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00139	48 8b cb	 mov	 rcx, rbx
  0013c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN296@Copy:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00141	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00149	4c 89 73 10	 mov	 QWORD PTR [rbx+16], r14

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0014d	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00152	72 05		 jb	 SHORT $LN398@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00154	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00157	eb 03		 jmp	 SHORT $LN399@Copy
$LN398@Copy:
  00159	48 8b c3	 mov	 rax, rbx
$LN399@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0015c	66 44 89 30	 mov	 WORD PTR [rax], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00160	48 89 3b	 mov	 QWORD PTR [rbx], rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2208 : 		this->_Myres() = _Newres;

  00163	48 89 73 18	 mov	 QWORD PTR [rbx+24], rsi

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00167	4c 89 7b 10	 mov	 QWORD PTR [rbx+16], r15

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0016b	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00170	72 03		 jb	 SHORT $LN474@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00172	48 8b df	 mov	 rbx, rdi
$LN474@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00175	66 46 89 34 7b	 mov	 WORD PTR [rbx+r15*2], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2210 : 		}

  0017a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0017e	41 5f		 pop	 r15
  00180	41 5e		 pop	 r14
  00182	5f		 pop	 rdi
  00183	5e		 pop	 rsi
  00184	5b		 pop	 rbx
  00185	c3		 ret	 0
$LN484@Copy:
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1

; 2193 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$0:

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;
; 2200 : 			_CATCH_END
; 2201 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00049	49 83 f8 08	 cmp	 r8, 8
  0004d	72 0e		 jb	 SHORT $LN156@catch$0

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	49 ff c0	 inc	 r8
  00052	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00055	48 8b cb	 mov	 rcx, rbx
  00058	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN156@catch$0:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0005d	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00065	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006d	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00072	72 03		 jb	 SHORT $LN259@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00074	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN259@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00077	33 c0		 xor	 eax, eax
  00079	66 89 03	 mov	 WORD PTR [rbx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;

  0007c	33 d2		 xor	 edx, edx
  0007e	33 c9		 xor	 ecx, ecx
  00080	e8 00 00 00 00	 call	 _CxxThrowException
  00085	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1

; 2193 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$0:

; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;
; 2200 : 			_CATCH_END
; 2201 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0

; 729  : 		}
; 730  : 
; 731  : 	const size_type& _Myres() const _NOEXCEPT
; 732  : 		{	// return const reference to _Myres
; 733  : 		return (_Get_data()._Myres);
; 734  : 		}
; 735  : 
; 736  : private:
; 737  : 	_Compressed_pair<_Alty, _String_val<_Val_types> > _Mypair;
; 738  : 	};
; 739  : 
; 740  : 		// TEMPLATE CLASS basic_string
; 741  : template<class _Elem,
; 742  : 	class _Traits,
; 743  : 	class _Alloc>
; 744  : 	class basic_string
; 745  : 		: public _String_alloc<_String_base_types<_Elem, _Alloc> >
; 746  : 	{	// null-terminated transparent array of elements
; 747  : public:
; 748  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Myt;
; 749  : 	typedef _String_alloc<_String_base_types<_Elem, _Alloc> > _Mybase;
; 750  : 	typedef _Traits traits_type;
; 751  : 	typedef _Alloc allocator_type;
; 752  : 
; 753  : 	typedef typename _Mybase::_Alty _Alty;
; 754  : 
; 755  : 	typedef typename _Mybase::value_type value_type;
; 756  : 	typedef typename _Mybase::size_type size_type;
; 757  : 	typedef typename _Mybase::difference_type difference_type;
; 758  : 	typedef typename _Mybase::pointer pointer;
; 759  : 	typedef typename _Mybase::const_pointer const_pointer;
; 760  : 	typedef typename _Mybase::reference reference;
; 761  : 	typedef typename _Mybase::const_reference const_reference;
; 762  : 
; 763  : 	typedef typename _Mybase::iterator iterator;
; 764  : 	typedef typename _Mybase::const_iterator const_iterator;
; 765  : 
; 766  : 	typedef _STD reverse_iterator<iterator> reverse_iterator;
; 767  : 	typedef _STD reverse_iterator<const_iterator> const_reverse_iterator;
; 768  : 
; 769  : 	basic_string(const _Myt& _Right)
; 770  : 
; 771  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())
; 772  : 
; 773  : 
; 774  : 		{	// construct by copying _Right
; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);
; 777  : 		}
; 778  : 
; 779  : 	basic_string(const _Myt& _Right, const _Alloc& _Al)
; 780  : 		: _Mybase(_Al)
; 781  : 		{	// construct by copying with allocator
; 782  : 		_Tidy();
; 783  : 		assign(_Right, 0, npos);
; 784  : 		}
; 785  : 
; 786  : 	basic_string() _NOEXCEPT_OP(is_nothrow_default_constructible<_Alloc>::value)
; 787  : 		: _Mybase()
; 788  : 		{	// construct empty string
; 789  : 		_Tidy();
; 790  : 		}
; 791  : 
; 792  : 	explicit basic_string(const _Alloc& _Al) _NOEXCEPT
; 793  : 		: _Mybase(_Al)
; 794  : 		{	// construct empty string with allocator
; 795  : 		_Tidy();
; 796  : 		}
; 797  : 
; 798  : 	basic_string(const _Myt& _Right, size_type _Roff,
; 799  : 		size_type _Count = npos)
; 800  : 		: _Mybase(_Right._Getal())
; 801  : 		{	// construct from _Right [_Roff, _Roff + _Count)
; 802  : 		_Tidy();
; 803  : 		assign(_Right, _Roff, _Count);
; 804  : 		}
; 805  : 
; 806  : 	basic_string(const _Myt& _Right, size_type _Roff, size_type _Count,
; 807  : 		const _Alloc& _Al)
; 808  : 		: _Mybase(_Al)
; 809  : 		{	// construct from _Right [_Roff, _Roff + _Count) with allocator
; 810  : 		_Tidy();
; 811  : 		assign(_Right, _Roff, _Count);
; 812  : 		}
; 813  : 
; 814  : 	basic_string(const _Elem *_Ptr, size_type _Count)
; 815  : 		: _Mybase()
; 816  : 		{	// construct from [_Ptr, _Ptr + _Count)
; 817  : 		_Tidy();
; 818  : 		assign(_Ptr, _Count);
; 819  : 		}
; 820  : 
; 821  : 	basic_string(const _Elem *_Ptr, size_type _Count, const _Alloc& _Al)
; 822  : 		: _Mybase(_Al)
; 823  : 		{	// construct from [_Ptr, _Ptr + _Count) with allocator
; 824  : 		_Tidy();
; 825  : 		assign(_Ptr, _Count);
; 826  : 		}
; 827  : 
; 828  : 	basic_string(const _Elem *_Ptr)
; 829  : 		: _Mybase()
; 830  : 		{	// construct from [_Ptr, <null>)
; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}
; 834  : 
; 835  : 	basic_string(const _Elem *_Ptr, const _Alloc& _Al)
; 836  : 		: _Mybase(_Al)
; 837  : 		{	// construct from [_Ptr, <null>) with allocator
; 838  : 		_Tidy();
; 839  : 		assign(_Ptr);
; 840  : 		}
; 841  : 
; 842  : 	basic_string(size_type _Count, _Elem _Ch)
; 843  : 		: _Mybase()
; 844  : 		{	// construct from _Count * _Ch
; 845  : 		_Tidy();
; 846  : 		assign(_Count, _Ch);
; 847  : 		}
; 848  : 
; 849  : 	basic_string(size_type _Count, _Elem _Ch, const _Alloc& _Al)
; 850  : 		: _Mybase(_Al)
; 851  : 		{	// construct from _Count * _Ch with allocator
; 852  : 		_Tidy();
; 853  : 		assign(_Count, _Ch);
; 854  : 		}
; 855  : 
; 856  : 	template<class _Iter,
; 857  : 		class = typename enable_if<_Is_iterator<_Iter>::value,
; 858  : 			void>::type>
; 859  : 		basic_string(_Iter _First, _Iter _Last, const _Alloc& _Al = _Alloc())
; 860  : 		: _Mybase(_Al)
; 861  : 		{	// construct from [_First, _Last) with optional allocator
; 862  : 		_DEBUG_RANGE(_First, _Last);
; 863  : 		_Tidy();
; 864  : 		_Construct(_Unchecked(_First), _Unchecked(_Last), _Iter_cat(_First));
; 865  : 		}
; 866  : 
; 867  : 	template<class _Iter>
; 868  : 		void _Construct(_Iter _First,
; 869  : 			_Iter _Last, input_iterator_tag)
; 870  : 		{	// initialize from [_First, _Last), input iterators
; 871  : 		_TRY_BEGIN
; 872  : 		for (; _First != _Last; ++_First)
; 873  : 			append((size_type)1, (_Elem)*_First);
; 874  : 		_CATCH_ALL
; 875  : 		_Tidy(true);
; 876  : 		_RERAISE;
; 877  : 		_CATCH_END
; 878  : 		}
; 879  : 
; 880  : 	template<class _Iter>
; 881  : 		void _Construct(_Iter _First,
; 882  : 			_Iter _Last, forward_iterator_tag)
; 883  : 		{	// initialize from [_First, _Last), forward iterators
; 884  : 		size_type _Count = 0;
; 885  : 		_Distance(_First, _Last, _Count);
; 886  : 		reserve(_Count);
; 887  : 		_Construct(_First, _Last, input_iterator_tag());
; 888  : 		}
; 889  : 
; 890  : 	void _Construct(_Elem *_First,
; 891  : 		_Elem *_Last, random_access_iterator_tag)
; 892  : 		{	// initialize from [_First, _Last), pointers
; 893  : 		if (_First != _Last)
; 894  : 			assign(_First, _Last - _First);
; 895  : 		}
; 896  : 
; 897  : 	void _Construct(const _Elem *_First,
; 898  : 		const _Elem *_Last, random_access_iterator_tag)
; 899  : 		{	// initialize from [_First, _Last), const pointers
; 900  : 		if (_First != _Last)
; 901  : 			assign(_First, _Last - _First);
; 902  : 		}
; 903  : 
; 904  : 	basic_string(_Myt&& _Right) _NOEXCEPT
; 905  : 		: _Mybase(_STD move(_Right._Getal()))
; 906  : 		{	// construct by moving _Right
; 907  : 		_Tidy();
; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));
; 909  : 		}
; 910  : 
; 911  : 	basic_string(_Myt&& _Right, const _Alloc& _Al)
; 912  : 		: _Mybase(_Al)
; 913  : 		{	// construct by moving _Right, allocator
; 914  : 		if (this->_Getal() != _Right._Getal())
; 915  : 			assign(_Right.begin(), _Right.end());
; 916  : 		else
; 917  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 918  : 		}
; 919  : 
; 920  : 	_Myt& operator=(_Myt&& _Right)
; 921  : 		_NOEXCEPT_OP(_Alty::propagate_on_container_move_assignment::value
; 922  : 			|| _Alty::is_always_equal::value)
; 923  : 		{	// assign by moving _Right
; 924  : 		if (this != &_Right)
; 925  : 			{	// different, assign it
; 926  : 			_Tidy(true);
; 927  : 
; 928  : 			if (_Alty::propagate_on_container_move_assignment::value
; 929  : 				&& this->_Getal() != _Right._Getal())
; 930  : 				this->_Move_alloc(_Right._Getal());
; 931  : 
; 932  : 			if (this->_Getal() != _Right._Getal())
; 933  : 				assign(_Right.begin(), _Right.end());
; 934  : 			else
; 935  : 				_Assign_rv(_STD forward<_Myt>(_Right));
; 936  : 			}
; 937  : 		return (*this);
; 938  : 		}
; 939  : 
; 940  : 	_Myt& assign(_Myt&& _Right) _NOEXCEPT
; 941  : 		{	// assign by moving _Right
; 942  : 		if (this == &_Right)
; 943  : 			;
; 944  : 		else if (get_allocator() != _Right.get_allocator()
; 945  : 			&& this->_BUF_SIZE <= _Right._Myres())
; 946  : 			*this = _Right;
; 947  : 		else
; 948  : 			{	// not same, clear this and steal from _Right
; 949  : 			_Tidy(true);
; 950  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 951  : 			}
; 952  : 		return (*this);
; 953  : 		}
; 954  : 
; 955  : 	void _Assign_rv(_Myt&& _Right)
; 956  : 		{	// assign by moving _Right
; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)
; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,
; 959  : 				_Right._Mysize() + 1);
; 960  : 		else
; 961  : 			{	// copy pointer
; 962  : 			this->_Getal().construct(&this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 963  : 			_Right._Bx()._Ptr = pointer();
; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();
; 966  : 		this->_Myres() = _Right._Myres();
; 967  : 		_Right._Tidy();
; 968  : 		}
; 969  : 
; 970  : 	basic_string(_XSTD initializer_list<_Elem> _Ilist,
; 971  : 		const _Alloc& _Al = allocator_type())
; 972  : 		: _Mybase(_Al)
; 973  : 		{	// construct from initializer_list
; 974  : 		_Tidy();
; 975  : 		assign(_Ilist.begin(), _Ilist.end());
; 976  : 		}
; 977  : 
; 978  : 	_Myt& operator=(_XSTD initializer_list<_Elem> _Ilist)
; 979  : 		{	// assign initializer_list
; 980  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 981  : 		}
; 982  : 
; 983  : 	_Myt& operator+=(_XSTD initializer_list<_Elem> _Ilist)
; 984  : 		{	// append initializer_list
; 985  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 986  : 		}
; 987  : 
; 988  : 	_Myt& assign(_XSTD initializer_list<_Elem> _Ilist)
; 989  : 		{	// assign initializer_list
; 990  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 991  : 		}
; 992  : 
; 993  : 	_Myt& append(_XSTD initializer_list<_Elem> _Ilist)
; 994  : 		{	// append initializer_list
; 995  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 996  : 		}
; 997  : 
; 998  : 	iterator insert(const_iterator _Where,
; 999  : 		_XSTD initializer_list<_Elem> _Ilist)
; 1000 : 		{	// insert initializer_list
; 1001 : 		return (insert(_Where, _Ilist.begin(), _Ilist.end()));
; 1002 : 		}
; 1003 : 
; 1004 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1005 : 		_XSTD initializer_list<_Elem> _Ilist)
; 1006 : 		{	// replace with initializer_list
; 1007 : 		return (replace(_First, _Last, _Ilist.begin(), _Ilist.end()));
; 1008 : 		}
; 1009 : 
; 1010 : 	~basic_string() _NOEXCEPT
; 1011 : 		{	// destroy the string
; 1012 : 		_Tidy(true);
; 1013 : 		}
; 1014 : 
; 1015 : 	_PGLOBAL static const size_type npos;	// bad/missing length/position
; 1016 : 
; 1017 : 	_Myt& operator=(const _Myt& _Right)
; 1018 : 		{	// assign _Right
; 1019 : 		if (this != &_Right)
; 1020 : 			{	// different, assign it
; 1021 : 			if (this->_Getal() != _Right._Getal()
; 1022 : 				&& _Alty::propagate_on_container_copy_assignment::value)
; 1023 : 				{	// change allocator before copying
; 1024 : 				_Tidy(true);
; 1025 : 				this->_Copy_alloc(_Right._Getal());
; 1026 : 				}
; 1027 : 
; 1028 : 			assign(_Right);
; 1029 : 			}
; 1030 : 		return (*this);
; 1031 : 		}
; 1032 : 
; 1033 : 	_Myt& operator=(const _Elem *_Ptr)
; 1034 : 		{	// assign [_Ptr, <null>)
; 1035 : 		return (assign(_Ptr));
; 1036 : 		}
; 1037 : 
; 1038 : 	_Myt& operator=(_Elem _Ch)
; 1039 : 		{	// assign 1 * _Ch
; 1040 : 		return (assign(1, _Ch));
; 1041 : 		}
; 1042 : 
; 1043 : 	_Myt& operator+=(const _Myt& _Right)
; 1044 : 		{	// append _Right
; 1045 : 		return (append(_Right));
; 1046 : 		}
; 1047 : 
; 1048 : 	_Myt& operator+=(const _Elem *_Ptr)
; 1049 : 		{	// append [_Ptr, <null>)
; 1050 : 		return (append(_Ptr));
; 1051 : 		}
; 1052 : 
; 1053 : 	_Myt& operator+=(_Elem _Ch)
; 1054 : 		{	// append 1 * _Ch
; 1055 : 		return (append((size_type)1, _Ch));
; 1056 : 		}
; 1057 : 
; 1058 : 	_Myt& append(const _Myt& _Right)
; 1059 : 		{	// append _Right
; 1060 : 		return (append(_Right, 0, npos));
; 1061 : 		}
; 1062 : 
; 1063 : 	_Myt& append(const _Myt& _Right,
; 1064 : 		size_type _Roff, size_type _Count = npos)
; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)
; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)
; 1069 : 			_Xlen();	// result too long
; 1070 : 
; 1071 : 		const size_type _Num = this->_Mysize() + _Count;
; 1072 : 		if (0 < _Count && _Grow(_Num))
; 1073 : 			{	// make room and append new stuff
; 1074 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),
; 1075 : 				_Right._Myptr() + _Roff, _Count);
; 1076 : 			_Eos(_Num);
; 1077 : 			}
; 1078 : 		return (*this);
; 1079 : 		}
; 1080 : 
; 1081 : 	_Myt& append(const _Elem *_Ptr, size_type _Count)
; 1082 : 		{	// append [_Ptr, _Ptr + _Count)
; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,
; 1086 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1087 : 		if (npos - this->_Mysize() <= _Count)
; 1088 : 			_Xlen();	// result too long
; 1089 : 
; 1090 : 		const size_type _Num = this->_Mysize() + _Count;
; 1091 : 		if (0 < _Count && _Grow(_Num))
; 1092 : 			{	// make room and append new stuff
; 1093 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);
; 1094 : 			_Eos(_Num);
; 1095 : 			}
; 1096 : 		return (*this);
; 1097 : 		}
; 1098 : 
; 1099 : 	_Myt& append(const _Elem *_Ptr)
; 1100 : 		{	// append [_Ptr, <null>)
; 1101 : 		_DEBUG_POINTER(_Ptr);
; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));
; 1103 : 		}
; 1104 : 
; 1105 : 	_Myt& append(size_type _Count, _Elem _Ch)
; 1106 : 		{	// append _Count * _Ch
; 1107 : 		if (npos - this->_Mysize() <= _Count)
; 1108 : 			_Xlen();	// result too long
; 1109 : 
; 1110 : 		const size_type _Num = this->_Mysize() + _Count;
; 1111 : 		if (0 < _Count && _Grow(_Num))
; 1112 : 			{	// make room and append new stuff using assign
; 1113 : 			_Chassign(this->_Mysize(), _Count, _Ch);
; 1114 : 			_Eos(_Num);
; 1115 : 			}
; 1116 : 		return (*this);
; 1117 : 		}
; 1118 : 
; 1119 : 	template<class _Iter>
; 1120 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1121 : 			_Myt&>::type
; 1122 : 		append(_Iter _First, _Iter _Last)
; 1123 : 		{	// append [_First, _Last), input iterators
; 1124 : 		return (replace(end(), end(), _First, _Last));
; 1125 : 		}
; 1126 : 
; 1127 : 	_Myt& append(const_pointer _First, const_pointer _Last)
; 1128 : 		{	// append [_First, _Last), const pointers
; 1129 : 		return (replace(end(), end(), _First, _Last));
; 1130 : 		}
; 1131 : 
; 1132 : 	_Myt& append(const_iterator _First, const_iterator _Last)
; 1133 : 		{	// append [_First, _Last), const_iterators
; 1134 : 		return (replace(end(), end(), _First, _Last));
; 1135 : 		}
; 1136 : 
; 1137 : 	_Myt& assign(const _Myt& _Right)
; 1138 : 		{	// assign _Right
; 1139 : 		return (assign(_Right, 0, npos));
; 1140 : 		}
; 1141 : 
; 1142 : 	_Myt& assign(const _Myt& _Right,
; 1143 : 		size_type _Roff, size_type _Count = npos)
; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)
; 1145 : 		_Right._Check_offset(_Roff);
; 1146 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1147 : 
; 1148 : 		if (this == &_Right)
; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring
; 1150 : 		else if (_Grow(_Count))
; 1151 : 			{	// make room and assign new stuff
; 1152 : 			_Traits::copy(this->_Myptr(),
; 1153 : 				_Right._Myptr() + _Roff, _Count);
; 1154 : 			_Eos(_Count);
; 1155 : 			}
; 1156 : 		return (*this);
; 1157 : 		}
; 1158 : 
; 1159 : 	_Myt& assign(const _Elem *_Ptr, size_type _Count)
; 1160 : 		{	// assign [_Ptr, _Ptr + _Count)
; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,
; 1164 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1165 : 
; 1166 : 		if (_Grow(_Count))
; 1167 : 			{	// make room and assign new stuff
; 1168 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);
; 1169 : 			_Eos(_Count);
; 1170 : 			}
; 1171 : 		return (*this);
; 1172 : 		}
; 1173 : 
; 1174 : 	_Myt& assign(const _Elem *_Ptr)
; 1175 : 		{	// assign [_Ptr, <null>)
; 1176 : 		_DEBUG_POINTER(_Ptr);
; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));
; 1178 : 		}
; 1179 : 
; 1180 : 	_Myt& assign(size_type _Count, _Elem _Ch)
; 1181 : 		{	// assign _Count * _Ch
; 1182 : 		if (_Count == npos)
; 1183 : 			_Xlen();	// result too long
; 1184 : 
; 1185 : 		if (_Grow(_Count))
; 1186 : 			{	// make room and assign new stuff
; 1187 : 			_Chassign(0, _Count, _Ch);
; 1188 : 			_Eos(_Count);
; 1189 : 			}
; 1190 : 		return (*this);
; 1191 : 		}
; 1192 : 
; 1193 : 	template<class _Iter>
; 1194 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1195 : 			_Myt&>::type
; 1196 : 		assign(_Iter _First, _Iter _Last)
; 1197 : 		{	// assign [_First, _Last), input iterators
; 1198 : 		return (replace(begin(), end(), _First, _Last));
; 1199 : 		}
; 1200 : 
; 1201 : 	_Myt& assign(const_pointer _First, const_pointer _Last)
; 1202 : 		{	// assign [_First, _Last), const pointers
; 1203 : 		return (replace(begin(), end(), _First, _Last));
; 1204 : 		}
; 1205 : 
; 1206 : 	_Myt& assign(const_iterator _First, const_iterator _Last)
; 1207 : 		{	// assign [_First, _Last), const_iterators
; 1208 : 		return (replace(begin(), end(), _First, _Last));
; 1209 : 		}
; 1210 : 
; 1211 : 	_Myt& insert(size_type _Off, const _Myt& _Right)
; 1212 : 		{	// insert _Right at _Off
; 1213 : 		return (insert(_Off, _Right, 0, npos));
; 1214 : 		}
; 1215 : 
; 1216 : 	_Myt& insert(size_type _Off,
; 1217 : 		const _Myt& _Right, size_type _Roff, size_type _Count = npos)
; 1218 : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off
; 1219 : 		_Check_offset(_Off);
; 1220 : 		_Right._Check_offset(_Roff);
; 1221 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1222 : 		if (npos - this->_Mysize() <= _Count)
; 1223 : 			_Xlen();	// result too long
; 1224 : 
; 1225 : 		const size_type _Num = this->_Mysize() + _Count;
; 1226 : 		if (0 < _Count && _Grow(_Num))
; 1227 : 			{	// make room and insert new stuff
; 1228 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1229 : 				this->_Myptr() + _Off,
; 1230 : 				this->_Mysize() - _Off);	// empty out hole
; 1231 : 			if (this == &_Right)
; 1232 : 				_Traits::move(this->_Myptr() + _Off,
; 1233 : 					this->_Myptr() + (_Off < _Roff ? _Roff + _Count : _Roff),
; 1234 : 						_Count);	// substring
; 1235 : 			else
; 1236 : 				_Traits::copy(this->_Myptr() + _Off,
; 1237 : 					_Right._Myptr() + _Roff, _Count);	// fill hole
; 1238 : 			_Eos(_Num);
; 1239 : 			}
; 1240 : 		return (*this);
; 1241 : 		}
; 1242 : 
; 1243 : 	_Myt& insert(size_type _Off,
; 1244 : 		const _Elem *_Ptr, size_type _Count)
; 1245 : 		{	// insert [_Ptr, _Ptr + _Count) at _Off
; 1246 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1247 : 		if (_Inside(_Ptr))
; 1248 : 			return (insert(_Off, *this,
; 1249 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1250 : 		_Check_offset(_Off);
; 1251 : 		if (npos - this->_Mysize() <= _Count)
; 1252 : 			_Xlen();	// result too long
; 1253 : 		const size_type _Num = this->_Mysize() + _Count;
; 1254 : 		if (0 < _Count && _Grow(_Num))
; 1255 : 			{	// make room and insert new stuff
; 1256 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1257 : 				this->_Myptr() + _Off,
; 1258 : 				this->_Mysize() - _Off);	// empty out hole
; 1259 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1260 : 			_Eos(_Num);
; 1261 : 			}
; 1262 : 		return (*this);
; 1263 : 		}
; 1264 : 
; 1265 : 	_Myt& insert(size_type _Off, const _Elem *_Ptr)
; 1266 : 		{	// insert [_Ptr, <null>) at _Off
; 1267 : 		_DEBUG_POINTER(_Ptr);
; 1268 : 		return (insert(_Off, _Ptr, _Traits::length(_Ptr)));
; 1269 : 		}
; 1270 : 
; 1271 : 	_Myt& insert(size_type _Off,
; 1272 : 		size_type _Count, _Elem _Ch)
; 1273 : 		{	// insert _Count * _Ch at _Off
; 1274 : 		_Check_offset(_Off);
; 1275 : 		if (npos - this->_Mysize() <= _Count)
; 1276 : 			_Xlen();	// result too long
; 1277 : 		const size_type _Num = this->_Mysize() + _Count;
; 1278 : 		if (0 < _Count && _Grow(_Num))
; 1279 : 			{	// make room and insert new stuff
; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1281 : 				this->_Myptr() + _Off,
; 1282 : 				this->_Mysize() - _Off);	// empty out hole
; 1283 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1284 : 			_Eos(_Num);
; 1285 : 			}
; 1286 : 		return (*this);
; 1287 : 		}
; 1288 : 
; 1289 : 	iterator insert(const_iterator _Where)
; 1290 : 		{	// insert <null> at _Where
; 1291 : 		return (insert(_Where, _Elem()));
; 1292 : 		}
; 1293 : 
; 1294 : 	iterator insert(const_iterator _Where, _Elem _Ch)
; 1295 : 		{	// insert _Ch at _Where
; 1296 : 		size_type _Off = _Where - begin();
; 1297 : 		insert(_Off, 1, _Ch);
; 1298 : 		return (begin() + _Off);
; 1299 : 		}
; 1300 : 
; 1301 : 	iterator insert(const_iterator _Where, size_type _Count, _Elem _Ch)
; 1302 : 		{	// insert _Count * _Elem at _Where
; 1303 : 		size_type _Off = _Where - begin();
; 1304 : 		insert(_Off, _Count, _Ch);
; 1305 : 		return (begin() + _Off);
; 1306 : 		}
; 1307 : 
; 1308 : 	template<class _Iter>
; 1309 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1310 : 			iterator>::type
; 1311 : 		insert(const_iterator _Where, _Iter _First, _Iter _Last)
; 1312 : 		{	// insert [_First, _Last) at _Where, input iterators
; 1313 : 		size_type _Off = _Where - begin();
; 1314 : 		replace(_Where, _Where, _First, _Last);
; 1315 : 		return (begin() + _Off);
; 1316 : 		}
; 1317 : 
; 1318 : 	iterator insert(const_iterator _Where,
; 1319 : 		const_pointer _First, const_pointer _Last)
; 1320 : 		{	// insert [_First, _Last) at _Where, const pointers
; 1321 : 		size_type _Off = _Where - begin();
; 1322 : 		replace(_Where, _Where, _First, _Last);
; 1323 : 		return (begin() + _Off);
; 1324 : 		}
; 1325 : 
; 1326 : 	iterator insert(const_iterator _Where,
; 1327 : 		const_iterator _First, const_iterator _Last)
; 1328 : 		{	// insert [_First, _Last) at _Where, const_iterators
; 1329 : 		size_type _Off = _Where - begin();
; 1330 : 		replace(_Where, _Where, _First, _Last);
; 1331 : 		return (begin() + _Off);
; 1332 : 		}
; 1333 : 
; 1334 : 	_Myt& erase(size_type _Off = 0)
; 1335 : 		{	// erase elements [_Off, ...)
; 1336 : 		_Check_offset(_Off);
; 1337 : 		_Eos(_Off);
; 1338 : 		return (*this);
; 1339 : 		}
; 1340 : 
; 1341 : 	_Myt& erase(size_type _Off, size_type _Count)
; 1342 : 		{	// erase elements [_Off, _Off + _Count)
; 1343 : 		_Check_offset(_Off);
; 1344 : 		if (this->_Mysize() - _Off <= _Count)
; 1345 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1346 : 		else if (0 < _Count)
; 1347 : 			{	// move elements down
; 1348 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1349 : 			size_type _Newsize = this->_Mysize() - _Count;
; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);
; 1351 : 			_Eos(_Newsize);
; 1352 : 			}
; 1353 : 		return (*this);
; 1354 : 		}
; 1355 : 
; 1356 : 	iterator erase(const_iterator _Where)
; 1357 : 		{	// erase element at _Where
; 1358 : 		size_type _Count = _Where - begin();
; 1359 : 		erase(_Count, 1);
; 1360 : 		return (begin() + _Count);
; 1361 : 		}
; 1362 : 
; 1363 : 	iterator erase(const_iterator _First, const_iterator _Last)
; 1364 : 		{	// erase substring [_First, _Last)
; 1365 : 		_DEBUG_RANGE(_First, _Last);
; 1366 : 		size_type _Count = _First - begin();
; 1367 : 		erase(_Count, _Last - _First);
; 1368 : 		return (begin() + _Count);
; 1369 : 		}
; 1370 : 
; 1371 : 	void clear() _NOEXCEPT
; 1372 : 		{	// erase all
; 1373 : 		_Eos(0);
; 1374 : 		}
; 1375 : 
; 1376 : 	_Myt& replace(size_type _Off, size_type _N0, const _Myt& _Right)
; 1377 : 		{	// replace [_Off, _Off + _N0) with _Right
; 1378 : 		return (replace(_Off, _N0, _Right, 0, npos));
; 1379 : 		}
; 1380 : 
; 1381 : 	_Myt& replace(size_type _Off,
; 1382 : 		size_type _N0, const _Myt& _Right, size_type _Roff,
; 1383 : 			size_type _Count = npos)
; 1384 : 		{	// replace [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 1385 : 		_Check_offset(_Off);
; 1386 : 		_Right._Check_offset(_Roff);
; 1387 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1388 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1389 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1390 : 			_Xlen();	// result too long
; 1391 : 
; 1392 : 		const size_type _Nm = this->_Mysize() - _N0 - _Off;	// length of kept tail
; 1393 : 		const size_type _Newsize = this->_Mysize() + _Count - _N0;
; 1394 : 		if (this->_Mysize() < _Newsize)
; 1395 : 			_Grow(_Newsize);
; 1396 : 
; 1397 : 		if (_Count == _N0)
; 1398 : 			{	// only one movement required, so _Traits::move handles any overlap
; 1399 : 			_Traits::move(this->_Myptr() + _Off,
; 1400 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1401 : 			}
; 1402 : 		else if (this != &_Right)
; 1403 : 			{	// no overlap, just move down and copy in new stuff
; 1404 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1405 : 				this->_Myptr() + _Off + _N0, _Nm);	// empty hole
; 1406 : 			_Traits::copy(this->_Myptr() + _Off,
; 1407 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1408 : 			}
; 1409 : 		else if (_Count < _N0)
; 1410 : 			{	// hole doesn't get larger, just copy in substring
; 1411 : 			_Traits::move(this->_Myptr() + _Off,
; 1412 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1413 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1414 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1415 : 			}
; 1416 : 		else if (_Roff <= _Off)
; 1417 : 			{	// hole gets larger, substring begins before hole
; 1418 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1419 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1420 : 			_Traits::move(this->_Myptr() + _Off,
; 1421 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1422 : 			}
; 1423 : 		else if (_Off + _N0 <= _Roff)
; 1424 : 			{	// hole gets larger, substring begins after hole
; 1425 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1426 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1427 : 			_Traits::move(this->_Myptr() + _Off,
; 1428 : 				this->_Myptr() + (_Roff + _Count - _N0),
; 1429 : 				_Count);	// fill hole
; 1430 : 			}
; 1431 : 		else
; 1432 : 			{	// hole gets larger, substring begins in hole
; 1433 : 			_Traits::move(this->_Myptr() + _Off,
; 1434 : 				this->_Myptr() + _Roff, _N0);	// fill old hole
; 1435 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1436 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1437 : 			_Traits::move(this->_Myptr() + _Off + _N0,
; 1438 : 				this->_Myptr() + _Roff + _Count,
; 1439 : 				_Count - _N0);	// fill rest of new hole
; 1440 : 			}
; 1441 : 
; 1442 : 		_Eos(_Newsize);
; 1443 : 		return (*this);
; 1444 : 		}
; 1445 : 
; 1446 : 	_Myt& replace(size_type _Off,
; 1447 : 		size_type _N0, const _Elem *_Ptr, size_type _Count)
; 1448 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 1449 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1450 : 		if (_Inside(_Ptr))
; 1451 : 			return (replace(_Off, _N0, *this,
; 1452 : 				_Ptr - this->_Myptr(),
; 1453 : 				_Count));	// substring, replace carefully
; 1454 : 		_Check_offset(_Off);
; 1455 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1456 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1457 : 			_Xlen();	// result too long
; 1458 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1459 : 
; 1460 : 		if (_Count < _N0)
; 1461 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1462 : 				this->_Myptr() + _Off + _N0,
; 1463 : 				_Nm);	// smaller hole, move tail up
; 1464 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1465 : 		if ((0 < _Count || 0 < _N0)
; 1466 : 			&& _Grow(_Num))
; 1467 : 			{	// make room and rearrange
; 1468 : 			if (_N0 < _Count)
; 1469 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1470 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1471 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1472 : 			_Eos(_Num);
; 1473 : 			}
; 1474 : 		return (*this);
; 1475 : 		}
; 1476 : 
; 1477 : 	_Myt& replace(size_type _Off, size_type _N0, const _Elem *_Ptr)
; 1478 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, <null>)
; 1479 : 		_DEBUG_POINTER(_Ptr);
; 1480 : 		return (replace(_Off, _N0, _Ptr, _Traits::length(_Ptr)));
; 1481 : 		}
; 1482 : 
; 1483 : 	_Myt& replace(size_type _Off,
; 1484 : 		size_type _N0, size_type _Count, _Elem _Ch)
; 1485 : 		{	// replace [_Off, _Off + _N0) with _Count * _Ch
; 1486 : 		_Check_offset(_Off);
; 1487 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1488 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1489 : 			_Xlen();	// result too long
; 1490 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1491 : 
; 1492 : 		if (_Count < _N0)
; 1493 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1494 : 				this->_Myptr() + _Off + _N0,
; 1495 : 				_Nm);	// smaller hole, move tail up
; 1496 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1497 : 		if ((0 < _Count || 0 < _N0)
; 1498 : 			&& _Grow(_Num))
; 1499 : 			{	// make room and rearrange
; 1500 : 			if (_N0 < _Count)
; 1501 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1502 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1503 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1504 : 			_Eos(_Num);
; 1505 : 			}
; 1506 : 		return (*this);
; 1507 : 		}
; 1508 : 
; 1509 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1510 : 		const _Myt& _Right)
; 1511 : 		{	// replace [_First, _Last) with _Right
; 1512 : 		return (replace(_First - begin(), _Last - _First, _Right));
; 1513 : 		}
; 1514 : 
; 1515 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1516 : 		const _Elem *_Ptr, size_type _Count)
; 1517 : 		{	// replace [_First, _Last) with [_Ptr, _Ptr + _Count)
; 1518 : 		return (replace(_First - begin(), _Last - _First, _Ptr, _Count));
; 1519 : 		}
; 1520 : 
; 1521 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1522 : 		const _Elem *_Ptr)
; 1523 : 		{	// replace [_First, _Last) with [_Ptr, <null>)
; 1524 : 		return (replace(_First - begin(), _Last - _First, _Ptr));
; 1525 : 		}
; 1526 : 
; 1527 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1528 : 		size_type _Count, _Elem _Ch)
; 1529 : 		{	// replace [_First, _Last) with _Count * _Ch
; 1530 : 		return (replace(_First - begin(), _Last - _First, _Count, _Ch));
; 1531 : 		}
; 1532 : 
; 1533 : 	template<class _Iter>
; 1534 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1535 : 			_Myt&>::type
; 1536 : 		replace(const_iterator _First, const_iterator _Last,
; 1537 : 			_Iter _First2, _Iter _Last2)
; 1538 : 		{	// replace [_First, _Last) with [_First2, _Last2), input iterators
; 1539 : 		_Myt _Right(_First2, _Last2);
; 1540 : 		replace(_First, _Last, _Right);
; 1541 : 		return (*this);
; 1542 : 		}
; 1543 : 
; 1544 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1545 : 		const_pointer _First2, const_pointer _Last2)
; 1546 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1547 : 		if (_First2 == _Last2)
; 1548 : 			erase(_First - begin(), _Last - _First);
; 1549 : 		else
; 1550 : 			replace(_First - begin(), _Last - _First,
; 1551 : 				&*_First2, _Last2 - _First2);
; 1552 : 		return (*this);
; 1553 : 		}
; 1554 : 
; 1555 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1556 : 		pointer _First2, pointer _Last2)
; 1557 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1558 : 		if (_First2 == _Last2)
; 1559 : 			erase(_First - begin(), _Last - _First);
; 1560 : 		else
; 1561 : 			replace(_First - begin(), _Last - _First,
; 1562 : 				&*_First2, _Last2 - _First2);
; 1563 : 		return (*this);
; 1564 : 		}
; 1565 : 
; 1566 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1567 : 		const_iterator _First2, const_iterator _Last2)
; 1568 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1569 : 		if (_First2 == _Last2)
; 1570 : 			erase(_First - begin(), _Last - _First);
; 1571 : 		else
; 1572 : 			replace(_First - begin(), _Last - _First,
; 1573 : 				&*_First2, _Last2 - _First2);
; 1574 : 		return (*this);
; 1575 : 		}
; 1576 : 
; 1577 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1578 : 		iterator _First2, iterator _Last2)
; 1579 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1580 : 		if (_First2 == _Last2)
; 1581 : 			erase(_First - begin(), _Last - _First);
; 1582 : 		else
; 1583 : 			replace(_First - begin(), _Last - _First,
; 1584 : 				&*_First2, _Last2 - _First2);
; 1585 : 		return (*this);
; 1586 : 		}
; 1587 : 
; 1588 : 	iterator begin() _NOEXCEPT
; 1589 : 		{	// return iterator for beginning of mutable sequence
; 1590 : 		return (iterator(this->_Myptr(), &this->_Get_data()));
; 1591 : 		}
; 1592 : 
; 1593 : 	const_iterator begin() const _NOEXCEPT
; 1594 : 		{	// return iterator for beginning of nonmutable sequence
; 1595 : 		return (const_iterator(this->_Myptr(), &this->_Get_data()));
; 1596 : 		}
; 1597 : 
; 1598 : 	iterator end() _NOEXCEPT
; 1599 : 		{	// return iterator for end of mutable sequence
; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1601 : 		}
; 1602 : 
; 1603 : 	const_iterator end() const _NOEXCEPT
; 1604 : 		{	// return iterator for end of nonmutable sequence
; 1605 : 		return (const_iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1606 : 		}
; 1607 : 
; 1608 : 	reverse_iterator rbegin() _NOEXCEPT
; 1609 : 		{	// return iterator for beginning of reversed mutable sequence
; 1610 : 		return (reverse_iterator(end()));
; 1611 : 		}
; 1612 : 
; 1613 : 	const_reverse_iterator rbegin() const _NOEXCEPT
; 1614 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1615 : 		return (const_reverse_iterator(end()));
; 1616 : 		}
; 1617 : 
; 1618 : 	reverse_iterator rend() _NOEXCEPT
; 1619 : 		{	// return iterator for end of reversed mutable sequence
; 1620 : 		return (reverse_iterator(begin()));
; 1621 : 		}
; 1622 : 
; 1623 : 	const_reverse_iterator rend() const _NOEXCEPT
; 1624 : 		{	// return iterator for end of reversed nonmutable sequence
; 1625 : 		return (const_reverse_iterator(begin()));
; 1626 : 		}
; 1627 : 
; 1628 : 	const_iterator cbegin() const _NOEXCEPT
; 1629 : 		{	// return iterator for beginning of nonmutable sequence
; 1630 : 		return (begin());
; 1631 : 		}
; 1632 : 
; 1633 : 	const_iterator cend() const _NOEXCEPT
; 1634 : 		{	// return iterator for end of nonmutable sequence
; 1635 : 		return (end());
; 1636 : 		}
; 1637 : 
; 1638 : 	const_reverse_iterator crbegin() const _NOEXCEPT
; 1639 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1640 : 		return (rbegin());
; 1641 : 		}
; 1642 : 
; 1643 : 	const_reverse_iterator crend() const _NOEXCEPT
; 1644 : 		{	// return iterator for end of reversed nonmutable sequence
; 1645 : 		return (rend());
; 1646 : 		}
; 1647 : 
; 1648 : 	void shrink_to_fit()
; 1649 : 		{	// reduce capacity
; 1650 : 		if ((size() | this->_ALLOC_MASK) < capacity())
; 1651 : 			{	// worth shrinking, do it
; 1652 : 			_Myt _Tmp(*this);
; 1653 : 			swap(_Tmp);
; 1654 : 			}
; 1655 : 		}
; 1656 : 
; 1657 : 	reference at(size_type _Off)
; 1658 : 		{	// subscript mutable sequence with checking
; 1659 : 		_Check_offset_exclusive(_Off);
; 1660 : 		return (this->_Myptr()[_Off]);
; 1661 : 		}
; 1662 : 
; 1663 : 	const_reference at(size_type _Off) const
; 1664 : 		{	// subscript nonmutable sequence with checking
; 1665 : 		_Check_offset_exclusive(_Off);
; 1666 : 		return (this->_Myptr()[_Off]);
; 1667 : 		}
; 1668 : 
; 1669 : 	reference operator[](size_type _Off)
; 1670 : 		{	// subscript mutable sequence
; 1671 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1672 : 		if (this->_Mysize() < _Off)	// sic
; 1673 : 			_DEBUG_ERROR("string subscript out of range");
; 1674 : 
; 1675 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1676 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1677 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1678 : 
; 1679 : 		return (this->_Myptr()[_Off]);
; 1680 : 		}
; 1681 : 
; 1682 : 	const_reference operator[](size_type _Off) const
; 1683 : 		{	// subscript nonmutable sequence
; 1684 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1685 : 		if (this->_Mysize() < _Off)	// sic
; 1686 : 			_DEBUG_ERROR("string subscript out of range");
; 1687 : 
; 1688 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1689 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1690 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1691 : 
; 1692 : 		return (this->_Myptr()[_Off]);
; 1693 : 		}
; 1694 : 
; 1695 : 	void push_back(_Elem _Ch)
; 1696 : 		{	// insert element at end
; 1697 : 		append(1, _Ch);
; 1698 : 		}
; 1699 : 
; 1700 : 	void pop_back()
; 1701 : 		{	// erase element at end
; 1702 : 		erase(this->_Mysize() - 1);	// throws if _Mysize() == 0
; 1703 : 		}
; 1704 : 
; 1705 : 	reference front()
; 1706 : 		{	// return first element of mutable sequence
; 1707 : 		return (*begin());
; 1708 : 		}
; 1709 : 
; 1710 : 	const_reference front() const
; 1711 : 		{	// return first element of nonmutable sequence
; 1712 : 		return (*begin());
; 1713 : 		}
; 1714 : 
; 1715 : 	reference back()
; 1716 : 		{	// return last element of mutable sequence
; 1717 : 		return (*(end() - 1));
; 1718 : 		}
; 1719 : 
; 1720 : 	const_reference back() const
; 1721 : 		{	// return last element of nonmutable sequence
; 1722 : 		return (*(end() - 1));
; 1723 : 		}
; 1724 : 
; 1725 : 	const _Elem *c_str() const _NOEXCEPT
; 1726 : 		{	// return pointer to null-terminated nonmutable array
; 1727 : 		return (this->_Myptr());
; 1728 : 		}
; 1729 : 
; 1730 : 	const _Elem *data() const _NOEXCEPT
; 1731 : 		{	// return pointer to nonmutable array
; 1732 : 		return (c_str());
; 1733 : 		}
; 1734 : 
; 1735 : 	size_type length() const _NOEXCEPT
; 1736 : 		{	// return length of sequence
; 1737 : 		return (this->_Mysize());
; 1738 : 		}
; 1739 : 
; 1740 : 	size_type size() const _NOEXCEPT
; 1741 : 		{	// return length of sequence
; 1742 : 		return (this->_Mysize());
; 1743 : 		}
; 1744 : 
; 1745 : 	size_type max_size() const _NOEXCEPT
; 1746 : 		{	// return maximum possible length of sequence
; 1747 : 		const size_type _Num = this->_Getal().max_size();
; 1748 : 		return (_Num <= 1 ? 1 : _Num - 1);
; 1749 : 		}
; 1750 : 
; 1751 : 	void resize(size_type _Newsize)
; 1752 : 		{	// determine new length, padding with null elements as needed
; 1753 : 		resize(_Newsize, _Elem());
; 1754 : 		}
; 1755 : 
; 1756 : 	void resize(size_type _Newsize, _Elem _Ch)
; 1757 : 		{	// determine new length, padding with _Ch elements as needed
; 1758 : 		if (_Newsize <= this->_Mysize())
; 1759 : 			_Eos(_Newsize);
; 1760 : 		else
; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);
; 1762 : 		}
; 1763 : 
; 1764 : 	size_type capacity() const _NOEXCEPT
; 1765 : 		{	// return current length of allocated storage
; 1766 : 		return (this->_Myres());
; 1767 : 		}
; 1768 : 
; 1769 : 	void reserve(size_type _Newcap = 0)
; 1770 : 		{	// determine new minimum length of allocated storage
; 1771 : 		if (this->_Mysize() <= _Newcap && this->_Myres() != _Newcap)
; 1772 : 			{	// change reservation
; 1773 : 			size_type _Size = this->_Mysize();
; 1774 : 			if (_Grow(_Newcap, true))
; 1775 : 				_Eos(_Size);
; 1776 : 			}
; 1777 : 		}
; 1778 : 
; 1779 : 	bool empty() const _NOEXCEPT
; 1780 : 		{	// test if sequence is empty
; 1781 : 		return (this->_Mysize() == 0);
; 1782 : 		}
; 1783 : 
; 1784 : 	_SCL_INSECURE_DEPRECATE
; 1785 : 
; 1786 : 	size_type copy(_Elem *_Ptr,
; 1787 : 		size_type _Count, size_type _Off = 0) const
; 1788 : 		{	// copy [_Off, _Off + _Count) to [_Ptr, _Ptr + _Count)
; 1789 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1790 : 		_Check_offset(_Off);
; 1791 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1792 : 		_Traits::copy(_Ptr, this->_Myptr() + _Off, _Count);
; 1793 : 		return (_Count);
; 1794 : 		}
; 1795 : 
; 1796 : 	size_type _Copy_s(_Elem *_Dest, size_type _Dest_size,
; 1797 : 		size_type _Count, size_type _Off = 0) const
; 1798 : 		{	// copy [_Off, _Off + _Count) to [_Dest, _Dest + _Count)
; 1799 : 		_DEBUG_POINTER_IF(_Count != 0, _Dest);
; 1800 : 		_Check_offset(_Off);
; 1801 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1802 : 		_Traits::_Copy_s(_Dest, _Dest_size, this->_Myptr() + _Off, _Count);
; 1803 : 		return (_Count);
; 1804 : 		}
; 1805 : 
; 1806 : 	void _Swap_bx(_Myt& _Right)
; 1807 : 		{	// exchange _Bx() with _Right._Bx()
; 1808 : 		if (this->_BUF_SIZE <= this->_Myres())
; 1809 : 			if (this->_BUF_SIZE <= _Right._Myres())
; 1810 : 				_Swap_adl(this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 1811 : 			else
; 1812 : 				{	// swap large with small
; 1813 : 				pointer _Ptr = this->_Bx()._Ptr;
; 1814 : 				this->_Getal().destroy(&this->_Bx()._Ptr);
; 1815 : 				_Traits::copy(this->_Bx()._Buf,
; 1816 : 					_Right._Bx()._Buf, _Right._Mysize() + 1);
; 1817 : 				this->_Getal().construct(&_Right._Bx()._Ptr, _Ptr);
; 1818 : 				}
; 1819 : 		else
; 1820 : 			if (_Right._Myres() < this->_BUF_SIZE)
; 1821 : 				_STD swap(this->_Bx()._Buf, _Right._Bx()._Buf);
; 1822 : 			else
; 1823 : 				{	// swap small with large
; 1824 : 				pointer _Ptr = _Right._Bx()._Ptr;
; 1825 : 				this->_Getal().destroy(&_Right._Bx()._Ptr);
; 1826 : 				_Traits::copy(_Right._Bx()._Buf,
; 1827 : 					this->_Bx()._Buf, this->_Mysize() + 1);
; 1828 : 				this->_Getal().construct(&this->_Bx()._Ptr, _Ptr);
; 1829 : 				}
; 1830 : 		}
; 1831 : 
; 1832 : 	void swap(_Myt& _Right)
; 1833 : 		_NOEXCEPT_OP(_Alty::propagate_on_container_swap::value
; 1834 : 			|| _Alty::is_always_equal::value)
; 1835 : 		{	// exchange contents with _Right
; 1836 : 		if (this == &_Right)
; 1837 : 			;	// same object, do nothing
; 1838 : 		else if (this->_Getal() == _Right._Getal())
; 1839 : 			{	// same allocator, swap control information
; 1840 : 			this->_Swap_all(_Right);
; 1841 : 			_Swap_bx(_Right);
; 1842 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1843 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1844 : 			}
; 1845 : 
; 1846 : 		else if (_Alty::propagate_on_container_swap::value)
; 1847 : 			{	// swap allocators and control information
; 1848 : 				// assumes pointer is bitwise copyable
; 1849 : 			this->_Swap_alloc(_Right);
; 1850 : 			_Swap_bx(_Right);
; 1851 : 			_STD swap(this->_Bx(), _Right._Bx());
; 1852 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1853 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1854 : 			}
; 1855 : 
; 1856 : 		else
; 1857 : 			{	// different allocator, do multiple assigns
; 1858 : 			_Myt _Tmp = *this;
; 1859 : 
; 1860 : 			*this = _Right;
; 1861 : 			_Right = _Tmp;
; 1862 : 			}
; 1863 : 		}
; 1864 : 
; 1865 : 	size_type find(const _Myt& _Right, size_type _Off = 0) const _NOEXCEPT
; 1866 : 		{	// look for _Right beginning at or after _Off
; 1867 : 		return (find(_Right._Myptr(), _Off, _Right.size()));
; 1868 : 		}
; 1869 : 
; 1870 : 	size_type find(const _Elem *_Ptr,
; 1871 : 		size_type _Off, size_type _Count) const
; 1872 : 		{	// look for [_Ptr, _Ptr + _Count) beginning at or after _Off
; 1873 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1874 : 		if (_Count == 0 && _Off <= this->_Mysize())
; 1875 : 			return (_Off);	// null string always matches (if inside string)
; 1876 : 
; 1877 : 		size_type _Nm;
; 1878 : 		if (_Off < this->_Mysize() && _Count <= (_Nm = this->_Mysize() - _Off))
; 1879 : 			{	// room for match, look for it
; 1880 : 			const _Elem *_Uptr, *_Vptr;
; 1881 : 			for (_Nm -= _Count - 1, _Vptr = this->_Myptr() + _Off;
; 1882 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1883 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)
; 1884 : 				if (_Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1885 : 					return (_Uptr - this->_Myptr());	// found a match
; 1886 : 			}
; 1887 : 
; 1888 : 		return (npos);	// no match
; 1889 : 		}
; 1890 : 
; 1891 : 	size_type find(const _Elem *_Ptr, size_type _Off = 0) const
; 1892 : 		{	// look for [_Ptr, <null>) beginning at or after _Off
; 1893 : 		_DEBUG_POINTER(_Ptr);
; 1894 : 		return (find(_Ptr, _Off, _Traits::length(_Ptr)));
; 1895 : 		}
; 1896 : 
; 1897 : 	size_type find(_Elem _Ch, size_type _Off = 0) const
; 1898 : 		{	// look for _Ch at or after _Off
; 1899 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1900 : 		}
; 1901 : 
; 1902 : 	size_type rfind(const _Myt& _Right, size_type _Off = npos) const _NOEXCEPT
; 1903 : 		{	// look for _Right beginning before _Off
; 1904 : 		return (rfind(_Right._Myptr(), _Off, _Right.size()));
; 1905 : 		}
; 1906 : 
; 1907 : 	size_type rfind(const _Elem *_Ptr,
; 1908 : 		size_type _Off, size_type _Count) const
; 1909 : 		{	// look for [_Ptr, _Ptr + _Count) beginning before _Off
; 1910 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1911 : 		if (_Count == 0)
; 1912 : 			return (_Off < this->_Mysize() ? _Off
; 1913 : 				: this->_Mysize());	// null always matches
; 1914 : 		if (_Count <= this->_Mysize())
; 1915 : 			{	// room for match, look for it
; 1916 : 			const _Elem *_Uptr = this->_Myptr() +
; 1917 : 				(_Off < this->_Mysize() - _Count ? _Off
; 1918 : 					: this->_Mysize() - _Count);
; 1919 : 			for (; ; --_Uptr)
; 1920 : 				if (_Traits::eq(*_Uptr, *_Ptr)
; 1921 : 					&& _Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1922 : 					return (_Uptr - this->_Myptr());	// found a match
; 1923 : 				else if (_Uptr == this->_Myptr())
; 1924 : 					break;	// at beginning, no more chance for match
; 1925 : 			}
; 1926 : 
; 1927 : 		return (npos);	// no match
; 1928 : 		}
; 1929 : 
; 1930 : 	size_type rfind(const _Elem *_Ptr, size_type _Off = npos) const
; 1931 : 		{	// look for [_Ptr, <null>) beginning before _Off
; 1932 : 		_DEBUG_POINTER(_Ptr);
; 1933 : 		return (rfind(_Ptr, _Off, _Traits::length(_Ptr)));
; 1934 : 		}
; 1935 : 
; 1936 : 	size_type rfind(_Elem _Ch, size_type _Off = npos) const
; 1937 : 		{	// look for _Ch before _Off
; 1938 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 1939 : 		}
; 1940 : 
; 1941 : 	size_type find_first_of(const _Myt& _Right,
; 1942 : 		size_type _Off = 0) const _NOEXCEPT
; 1943 : 		{	// look for one of _Right at or after _Off
; 1944 : 		return (find_first_of(_Right._Myptr(), _Off, _Right.size()));
; 1945 : 		}
; 1946 : 
; 1947 : 	size_type find_first_of(const _Elem *_Ptr,
; 1948 : 		size_type _Off, size_type _Count) const
; 1949 : 		{	// look for one of [_Ptr, _Ptr + _Count) at or after _Off
; 1950 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1951 : 		if (0 < _Count && _Off < this->_Mysize())
; 1952 : 			{	// room for match, look for it
; 1953 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 1954 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 1955 : 				_Uptr < _Vptr; ++_Uptr)
; 1956 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1957 : 					return (_Uptr - this->_Myptr());	// found a match
; 1958 : 			}
; 1959 : 
; 1960 : 		return (npos);	// no match
; 1961 : 		}
; 1962 : 
; 1963 : 	size_type find_first_of(const _Elem *_Ptr,
; 1964 : 		size_type _Off = 0) const
; 1965 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 1966 : 		_DEBUG_POINTER(_Ptr);
; 1967 : 		return (find_first_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 1968 : 		}
; 1969 : 
; 1970 : 	size_type find_first_of(_Elem _Ch,
; 1971 : 		size_type _Off = 0) const
; 1972 : 		{	// look for _Ch at or after _Off
; 1973 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1974 : 		}
; 1975 : 
; 1976 : 	size_type find_last_of(const _Myt& _Right,
; 1977 : 		size_type _Off = npos) const _NOEXCEPT
; 1978 : 		{	// look for one of _Right before _Off
; 1979 : 		return (find_last_of(_Right._Myptr(), _Off, _Right.size()));
; 1980 : 		}
; 1981 : 
; 1982 : 	size_type find_last_of(const _Elem *_Ptr,
; 1983 : 		size_type _Off, size_type _Count) const
; 1984 : 		{	// look for one of [_Ptr, _Ptr + _Count) before _Off
; 1985 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1986 : 		if (0 < _Count && 0 < this->_Mysize())
; 1987 : 			{	// worth searching, do it
; 1988 : 			const _Elem *_Uptr = this->_Myptr()
; 1989 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 1990 : 			for (; ; --_Uptr)
; 1991 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1992 : 					return (_Uptr - this->_Myptr());	// found a match
; 1993 : 				else if (_Uptr == this->_Myptr())
; 1994 : 					break;	// at beginning, no more chance for match
; 1995 : 			}
; 1996 : 
; 1997 : 		return (npos);	// no match
; 1998 : 		}
; 1999 : 
; 2000 : 	size_type find_last_of(const _Elem *_Ptr,
; 2001 : 		size_type _Off = npos) const
; 2002 : 		{	// look for one of [_Ptr, <null>) before _Off
; 2003 : 		_DEBUG_POINTER(_Ptr);
; 2004 : 		return (find_last_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2005 : 		}
; 2006 : 
; 2007 : 	size_type find_last_of(_Elem _Ch,
; 2008 : 		size_type _Off = npos) const
; 2009 : 		{	// look for _Ch before _Off
; 2010 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 2011 : 		}
; 2012 : 
; 2013 : 	size_type find_first_not_of(const _Myt& _Right,
; 2014 : 		size_type _Off = 0) const _NOEXCEPT
; 2015 : 		{	// look for none of _Right at or after _Off
; 2016 : 		return (find_first_not_of(_Right._Myptr(), _Off,
; 2017 : 			_Right.size()));
; 2018 : 		}
; 2019 : 
; 2020 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2021 : 		size_type _Off, size_type _Count) const
; 2022 : 		{	// look for none of [_Ptr, _Ptr + _Count) at or after _Off
; 2023 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2024 : 		if (_Off < this->_Mysize())
; 2025 : 			{	// room for match, look for it
; 2026 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 2027 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 2028 : 				_Uptr < _Vptr; ++_Uptr)
; 2029 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2030 : 					return (_Uptr - this->_Myptr());
; 2031 : 			}
; 2032 : 		return (npos);
; 2033 : 		}
; 2034 : 
; 2035 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2036 : 		size_type _Off = 0) const
; 2037 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 2038 : 		_DEBUG_POINTER(_Ptr);
; 2039 : 		return (find_first_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2040 : 		}
; 2041 : 
; 2042 : 	size_type find_first_not_of(_Elem _Ch,
; 2043 : 		size_type _Off = 0) const
; 2044 : 		{	// look for non _Ch at or after _Off
; 2045 : 		return (find_first_not_of((const _Elem *)&_Ch, _Off, 1));
; 2046 : 		}
; 2047 : 
; 2048 : 	size_type find_last_not_of(const _Myt& _Right,
; 2049 : 		size_type _Off = npos) const _NOEXCEPT
; 2050 : 		{	// look for none of _Right before _Off
; 2051 : 		return (find_last_not_of(_Right._Myptr(), _Off, _Right.size()));
; 2052 : 		}
; 2053 : 
; 2054 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2055 : 		size_type _Off, size_type _Count) const
; 2056 : 		{	// look for none of [_Ptr, _Ptr + _Count) before _Off
; 2057 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2058 : 		if (0 < this->_Mysize())
; 2059 : 			{	// worth searching, do it
; 2060 : 			const _Elem *_Uptr = this->_Myptr()
; 2061 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 2062 : 			for (; ; --_Uptr)
; 2063 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2064 : 					return (_Uptr - this->_Myptr());
; 2065 : 				else if (_Uptr == this->_Myptr())
; 2066 : 					break;
; 2067 : 			}
; 2068 : 		return (npos);
; 2069 : 		}
; 2070 : 
; 2071 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2072 : 		size_type _Off = npos) const
; 2073 : 		{	// look for none of [_Ptr, <null>) before _Off
; 2074 : 		_DEBUG_POINTER(_Ptr);
; 2075 : 		return (find_last_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2076 : 		}
; 2077 : 
; 2078 : 	size_type find_last_not_of(_Elem _Ch,
; 2079 : 		size_type _Off = npos) const
; 2080 : 		{	// look for non _Ch before _Off
; 2081 : 		return (find_last_not_of((const _Elem *)&_Ch, _Off, 1));
; 2082 : 		}
; 2083 : 
; 2084 : 	_Myt substr(size_type _Off = 0, size_type _Count = npos) const
; 2085 : 		{	// return [_Off, _Off + _Count) as new string
; 2086 : 		return (_Myt(*this, _Off, _Count, get_allocator()));
; 2087 : 		}
; 2088 : 
; 2089 : 	static int _Traits_compare(const _Elem * const _Left, const size_type _Left_size,
; 2090 : 		const _Elem * const _Right, const size_type _Right_size)
; 2091 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 2092 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;
; 2093 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);
; 2094 : 
; 2095 : 		if (_Ans != 0)
; 2096 : 			return (_Ans);
; 2097 : 
; 2098 : 		if (_Left_size < _Right_size)
; 2099 : 			return (-1);
; 2100 : 
; 2101 : 		if (_Left_size > _Right_size)
; 2102 : 			return (1);
; 2103 : 
; 2104 : 		return (0);
; 2105 : 		}
; 2106 : 
; 2107 : 	size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const
; 2108 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off
; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;
; 2110 : 		if (_Size <= _Max_effective_size)
; 2111 : 			return (_Size);
; 2112 : 		else
; 2113 : 			return (_Max_effective_size);
; 2114 : 		}
; 2115 : 
; 2116 : 	int compare(const _Myt& _Right) const _NOEXCEPT
; 2117 : 		{	// compare [0, _Mysize()) with _Right
; 2118 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2119 : 			_Right._Myptr(), _Right._Mysize()));
; 2120 : 		}
; 2121 : 
; 2122 : 	int compare(size_type _Off,
; 2123 : 		size_type _N0, const _Myt& _Right) const
; 2124 : 		{	// compare [_Off, _Off + _N0) with _Right
; 2125 : 		_Check_offset(_Off);
; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2127 : 			_Right._Myptr(), _Right._Mysize()));
; 2128 : 		}
; 2129 : 
; 2130 : 	int compare(size_type _Off,
; 2131 : 		size_type _N0, const _Myt& _Right,
; 2132 : 		size_type _Roff, size_type _Count = npos) const
; 2133 : 		{	// compare [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 2134 : 		_Check_offset(_Off);
; 2135 : 		_Right._Check_offset(_Roff);
; 2136 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2137 : 			_Right._Myptr() + _Roff, _Right._Clamp_suffix_size(_Roff, _Count)));
; 2138 : 		}
; 2139 : 
; 2140 : 	int compare(const _Elem *_Ptr) const
; 2141 : 		{	// compare [0, _Mysize()) with [_Ptr, <null>)
; 2142 : 		_DEBUG_POINTER(_Ptr);
; 2143 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2144 : 			_Ptr, _Traits::length(_Ptr)));
; 2145 : 		}
; 2146 : 
; 2147 : 	int compare(size_type _Off, size_type _N0, const _Elem *_Ptr) const
; 2148 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, <null>)
; 2149 : 		_DEBUG_POINTER(_Ptr);
; 2150 : 		_Check_offset(_Off);
; 2151 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2152 : 			_Ptr, _Traits::length(_Ptr)));
; 2153 : 		}
; 2154 : 
; 2155 : 	int compare(size_type _Off,
; 2156 : 		size_type _N0, const _Elem *_Ptr, size_type _Count) const
; 2157 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 2158 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2159 : 		_Check_offset(_Off);
; 2160 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2161 : 			_Ptr, _Count));
; 2162 : 		}
; 2163 : 
; 2164 : 	allocator_type get_allocator() const _NOEXCEPT
; 2165 : 		{	// return allocator object for values
; 2166 : 		return (this->_Getal());
; 2167 : 		}
; 2168 : 
; 2169 : 	void _Chassign(size_type _Off, size_type _Count, _Elem _Ch)
; 2170 : 		{	// assign _Count copies of _Ch beginning at _Off
; 2171 : 		if (_Count == 1)
; 2172 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);
; 2173 : 		else
; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);
; 2175 : 		}
; 2176 : 
; 2177 : 	void _Copy(size_type _Newsize, size_type _Oldlen)
; 2178 : 		{	// copy _Oldlen elements to newly allocated buffer
; 2179 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;
; 2180 : 		if (max_size() < _Newres)
; 2181 : 			_Newres = _Newsize;	// undo roundup if too big
; 2182 : 		else if (this->_Myres() / 2 <= _Newres / 3)
; 2183 : 			;
; 2184 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)
; 2185 : 			_Newres = this->_Myres()
; 2186 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2187 : 		else
; 2188 : 			_Newres = max_size();	// settle for max_size()
; 2189 : 
; 2190 : 		_Elem *_Ptr;
; 2191 : 		_TRY_BEGIN
; 2192 : 			_Ptr = this->_Getal().allocate(_Newres + 1);
; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00049	49 83 f8 08	 cmp	 r8, 8
  0004d	72 0e		 jb	 SHORT $LN156@catch$0

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	49 ff c0	 inc	 r8
  00052	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00055	48 8b cb	 mov	 rcx, rbx
  00058	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN156@catch$0:

; 2254 : 			}
; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0005d	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00065	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006d	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00072	72 03		 jb	 SHORT $LN259@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00074	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN259@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00077	33 c0		 xor	 eax, eax
  00079	66 89 03	 mov	 WORD PTR [rbx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2199 : 			_RERAISE;

  0007c	33 d2		 xor	 edx, edx
  0007e	33 c9		 xor	 ecx, ecx
  00080	e8 00 00 00 00	 call	 _CxxThrowException
  00085	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator, COMDAT

; 2166 : 		return (this->_Getal());

  00000	48 8b c2	 mov	 rax, rdx

; 2167 : 		}

  00003	c3		 ret	 0
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT

; 1747 : 		const size_type _Num = this->_Getal().max_size();
; 1748 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH

; 1749 : 		}

  0000a	c3		 ret	 0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEA_W_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEA_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[], COMDAT

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00005	72 08		 jb	 SHORT $LN13@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1679 : 		return (this->_Myptr()[_Off]);

  0000a	48 8d 04 50	 lea	 rax, QWORD PTR [rax+rdx*2]

; 1680 : 		}

  0000e	c3		 ret	 0
$LN13@operator:

; 1679 : 		return (this->_Myptr()[_Off]);

  0000f	48 8d 04 51	 lea	 rax, QWORD PTR [rcx+rdx*2]

; 1680 : 		}

  00013	c3		 ret	 0
??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEA_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Count$ = 64
_Ch$ = 72
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert, COMDAT

; 1273 : 		{	// insert _Count * _Ch at _Off

$LN287:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00015	49 8b e8	 mov	 rbp, r8
  00018	45 0f b7 f1	 movzx	 r14d, r9w

; 2266 : 		if (this->_Mysize() < _Off)

  0001c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]

; 1273 : 		{	// insert _Count * _Ch at _Off

  00020	48 8b fa	 mov	 rdi, rdx
  00023	48 8b d9	 mov	 rbx, rcx

; 2266 : 		if (this->_Mysize() < _Off)

  00026	4c 3b c2	 cmp	 r8, rdx
  00029	0f 82 1b 01 00
	00		 jb	 $LN283@insert

; 1274 : 		_Check_offset(_Off);
; 1275 : 		if (npos - this->_Mysize() <= _Count)

  0002f	48 83 c8 ff	 or	 rax, -1
  00033	49 2b c0	 sub	 rax, r8
  00036	48 3b c5	 cmp	 rax, rbp
  00039	0f 86 18 01 00
	00		 jbe	 $LN285@insert

; 1276 : 			_Xlen();	// result too long
; 1277 : 		const size_type _Num = this->_Mysize() + _Count;

  0003f	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  00044	49 8d 34 28	 lea	 rsi, QWORD PTR [r8+rbp]

; 1278 : 		if (0 < _Count && _Grow(_Num))

  00048	48 85 ed	 test	 rbp, rbp
  0004b	0f 84 db 00 00
	00		 je	 $LN273@insert

; 2220 : 		if (max_size() < _Newsize)

  00051	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  0005b	48 3b f0	 cmp	 rsi, rax
  0005e	0f 87 00 01 00
	00		 ja	 $LN286@insert

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00064	48 39 71 18	 cmp	 QWORD PTR [rcx+24], rsi
  00068	73 20		 jae	 SHORT $LN43@insert

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0006a	48 8b d6	 mov	 rdx, rsi
  0006d	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00072	48 85 f6	 test	 rsi, rsi

; 1278 : 		if (0 < _Count && _Grow(_Num))

  00075	0f 84 b1 00 00
	00		 je	 $LN273@insert
$LN282@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0007b	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  0007f	48 83 f8 08	 cmp	 rax, 8
  00083	72 22		 jb	 SHORT $LN161@insert
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00085	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00088	eb 20		 jmp	 SHORT $LN162@insert
$LN43@insert:

; 2227 : 		else if (_Newsize == 0)

  0008a	48 85 f6	 test	 rsi, rsi
  0008d	75 ec		 jne	 SHORT $LN282@insert

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0008f	33 c0		 xor	 eax, eax
  00091	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00095	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  0009a	72 03		 jb	 SHORT $LN132@insert
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0009c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN132@insert:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0009f	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  000a2	e9 85 00 00 00	 jmp	 $LN273@insert
$LN161@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a7	48 8b d3	 mov	 rdx, rbx
$LN162@insert:
  000aa	48 83 f8 08	 cmp	 rax, 8
  000ae	72 05		 jb	 SHORT $LN179@insert
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000b0	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b3	eb 03		 jmp	 SHORT $LN180@insert
$LN179@insert:
  000b5	48 8b cb	 mov	 rcx, rbx
$LN180@insert:

; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  000b8	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  000bc	4c 2b c7	 sub	 r8, rdi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 333  : 		return (_Count == 0 ? _First1

  000bf	74 14		 je	 SHORT $LN190@insert
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  000c1	48 8d 04 2f	 lea	 rax, QWORD PTR [rdi+rbp]
  000c5	4d 03 c0	 add	 r8, r8
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,

  000c8	48 8d 0c 41	 lea	 rcx, QWORD PTR [rcx+rax*2]
  000cc	48 8d 14 7a	 lea	 rdx, QWORD PTR [rdx+rdi*2]
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  000d0	e8 00 00 00 00	 call	 memmove
$LN190@insert:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2171 : 		if (_Count == 1)

  000d5	48 83 fd 01	 cmp	 rbp, 1
  000d9	75 1b		 jne	 SHORT $LN194@insert

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000db	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000e0	72 0a		 jb	 SHORT $LN207@insert
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000e2	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000e5	66 44 89 34 78	 mov	 WORD PTR [rax+rdi*2], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  000ea	eb 27		 jmp	 SHORT $LN241@insert
$LN207@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ec	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000ef	66 44 89 34 7b	 mov	 WORD PTR [rbx+rdi*2], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  000f4	eb 1d		 jmp	 SHORT $LN241@insert
$LN194@insert:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000f6	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000fb	72 05		 jb	 SHORT $LN228@insert
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000fd	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00100	eb 03		 jmp	 SHORT $LN229@insert
$LN228@insert:
  00102	48 8b c3	 mov	 rax, rbx
$LN229@insert:

; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);

  00105	48 8d 3c 78	 lea	 rdi, QWORD PTR [rax+rdi*2]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 340  : 		return ((_Elem *)_CSTD wmemset(_First, _Ch, _Count));

  00109	48 8b cd	 mov	 rcx, rbp
  0010c	41 0f b7 c6	 movzx	 eax, r14w
  00110	66 f3 ab	 rep stosw
$LN241@insert:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00113	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00117	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0011c	72 05		 jb	 SHORT $LN264@insert
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0011e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00121	eb 03		 jmp	 SHORT $LN265@insert
$LN264@insert:
  00123	48 8b cb	 mov	 rcx, rbx
$LN265@insert:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00126	33 c0		 xor	 eax, eax
  00128	66 89 04 71	 mov	 WORD PTR [rcx+rsi*2], ax
$LN273@insert:
  0012c	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1286 : 		return (*this);

  00131	48 8b c3	 mov	 rax, rbx

; 1287 : 		}

  00134	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00139	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0013e	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  00143	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00147	41 5e		 pop	 r14
  00149	c3		 ret	 0
$LN283@insert:

; 2278 : 		_Xout_of_range("invalid string position");

  0014a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00151	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00156	cc		 int	 3
$LN285@insert:

; 2261 : 		_Xlength_error("string too long");

  00157	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0015e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00163	cc		 int	 3
$LN286@insert:
  00164	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0016b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00170	cc		 int	 3
$LN280@insert:
?insert@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::insert
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT

; 1018 : 		{	// assign _Right

$LN152:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 1019 : 		if (this != &_Right)

  00009	48 3b ca	 cmp	 rcx, rdx
  0000c	74 0c		 je	 SHORT $LN150@operator

; 1139 : 		return (assign(_Right, 0, npos));

  0000e	49 83 c9 ff	 or	 r9, -1
  00012	45 33 c0	 xor	 r8d, r8d
  00015	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
$LN150@operator:

; 1020 : 			{	// different, assign it
; 1021 : 			if (this->_Getal() != _Right._Getal()
; 1022 : 				&& _Alty::propagate_on_container_copy_assignment::value)
; 1023 : 				{	// change allocator before copying
; 1024 : 				_Tidy(true);
; 1025 : 				this->_Copy_alloc(_Right._Getal());
; 1026 : 				}
; 1027 : 
; 1028 : 			assign(_Right);
; 1029 : 			}
; 1030 : 		return (*this);

  0001a	48 8b c3	 mov	 rax, rbx

; 1031 : 		}

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5b		 pop	 rbx
  00022	c3		 ret	 0
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@_K_W@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@_K_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 844  : 		{	// construct from _Count * _Ch

$LN126:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00006	33 c0		 xor	 eax, eax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00008	48 c7 41 18 07
	00 00 00	 mov	 QWORD PTR [rcx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00010	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 844  : 		{	// construct from _Count * _Ch

  00014	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00017	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 846  : 		assign(_Count, _Ch);

  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 847  : 		}

  0001f	48 8b c3	 mov	 rax, rbx
  00022	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00026	5b		 pop	 rbx
  00027	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@_K_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT

; 2277 : 		{	// report an out_of_range error

$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2278 : 		_Xout_of_range("invalid string position");

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0000b	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  00010	cc		 int	 3
$LN3@Xran:
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT

; 2178 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN510:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	53		 push	 rbx
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	41 56		 push	 r14
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00018	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00021	4d 8b f0	 mov	 r14, r8
  00024	48 8b d9	 mov	 rbx, rcx

; 2179 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00027	48 8b fa	 mov	 rdi, rdx
  0002a	48 83 cf 0f	 or	 rdi, 15

; 2180 : 		if (max_size() < _Newres)

  0002e	48 83 ff fe	 cmp	 rdi, -2
  00032	76 05		 jbe	 SHORT $LN2@Copy

; 2181 : 			_Newres = _Newsize;	// undo roundup if too big

  00034	48 8b fa	 mov	 rdi, rdx

; 2182 : 		else if (this->_Myres() / 2 <= _Newres / 3)

  00037	eb 35		 jmp	 SHORT $LN108@Copy
$LN2@Copy:
  00039	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  0003d	49 8b c8	 mov	 rcx, r8
  00040	48 d1 e9	 shr	 rcx, 1
  00043	48 b8 ab aa aa
	aa aa aa aa aa	 mov	 rax, -6148914691236517205 ; aaaaaaaaaaaaaaabH
  0004d	48 f7 e7	 mul	 rdi
  00050	48 d1 ea	 shr	 rdx, 1
  00053	48 3b ca	 cmp	 rcx, rdx
  00056	76 16		 jbe	 SHORT $LN108@Copy

; 2183 : 			;
; 2184 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

  00058	48 c7 c7 fe ff
	ff ff		 mov	 rdi, -2
  0005f	48 8b c7	 mov	 rax, rdi
  00062	48 2b c1	 sub	 rax, rcx
  00065	4c 3b c0	 cmp	 r8, rax
  00068	77 04		 ja	 SHORT $LN108@Copy

; 2185 : 			_Newres = this->_Myres()

  0006a	49 8d 3c 08	 lea	 rdi, QWORD PTR [r8+rcx]
$LN108@Copy:

; 2186 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2187 : 		else
; 2188 : 			_Newres = max_size();	// settle for max_size()
; 2189 : 
; 2190 : 		_Elem *_Ptr;
; 2191 : 		_TRY_BEGIN
; 2192 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

  0006e	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 51   : 	if (_Count == 0)

  00072	48 85 c9	 test	 rcx, rcx
  00075	75 04		 jne	 SHORT $LN136@Copy

; 52   : 		return (_Ptr);

  00077	33 f6		 xor	 esi, esi
  00079	eb 56		 jmp	 SHORT $LN135@Copy
$LN136@Copy:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  0007b	48 83 f9 ff	 cmp	 rcx, -1
  0007f	76 05		 jbe	 SHORT $LN137@Copy

; 56   : 		_Xbad_alloc();	// report no memory

  00081	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN137@Copy:

; 57   : 	const size_t _User_size = _Count * _Sz;
; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00086	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0008d	72 2f		 jb	 SHORT $LN138@Copy

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0008f	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00093	48 3b c1	 cmp	 rax, rcx
  00096	77 05		 ja	 SHORT $LN140@Copy

; 67   : 			_Xbad_alloc();	// report no memory

  00098	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN140@Copy:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  0009d	48 8b c8	 mov	 rcx, rax
  000a0	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  000a5	48 85 c0	 test	 rax, rax
  000a8	75 06		 jne	 SHORT $LN141@Copy
  000aa	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000af	cc		 int	 3
$LN141@Copy:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  000b0	48 8d 70 27	 lea	 rsi, QWORD PTR [rax+39]
  000b4	48 83 e6 e0	 and	 rsi, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  000b8	48 89 46 f8	 mov	 QWORD PTR [rsi-8], rax

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;
; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

  000bc	eb 13		 jmp	 SHORT $LN135@Copy
$LN138@Copy:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

  000be	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  000c3	48 8b f0	 mov	 rsi, rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  000c6	48 85 c0	 test	 rax, rax
  000c9	75 06		 jne	 SHORT $LN135@Copy
  000cb	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d0	90		 npad	 1
$LN135@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
  000d1	eb 14		 jmp	 SHORT $LN18@Copy
$LN19@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
  000d3	48 8b 5c 24 60	 mov	 rbx, QWORD PTR this$[rsp]
  000d8	4c 8b 74 24 70	 mov	 r14, QWORD PTR _Oldlen$[rsp]
  000dd	48 8b 7c 24 68	 mov	 rdi, QWORD PTR _Newres$[rsp]
  000e2	48 8b 74 24 78	 mov	 rsi, QWORD PTR _Ptr$[rsp]
$LN18@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2203 : 		if (0 < _Oldlen)

  000e7	4d 85 f6	 test	 r14, r14
  000ea	74 1f		 je	 SHORT $LN303@Copy

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000ec	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000f1	72 05		 jb	 SHORT $LN292@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  000f3	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000f6	eb 03		 jmp	 SHORT $LN293@Copy
$LN292@Copy:
  000f8	48 8b d3	 mov	 rdx, rbx
$LN293@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 530  : 		return (_Count == 0 ? _First1

  000fb	4d 85 f6	 test	 r14, r14
  000fe	74 0b		 je	 SHORT $LN303@Copy
  00100	4d 8b c6	 mov	 r8, r14
  00103	48 8b ce	 mov	 rcx, rsi
  00106	e8 00 00 00 00	 call	 memcpy
$LN303@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0010b	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  0010f	48 83 f8 10	 cmp	 rax, 16
  00113	72 57		 jb	 SHORT $LN388@Copy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00115	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00118	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0011b	48 83 f8 ff	 cmp	 rax, -1
  0011f	76 06		 jbe	 SHORT $LN382@Copy
  00121	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00126	cc		 int	 3
$LN382@Copy:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00127	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0012d	72 38		 jb	 SHORT $LN383@Copy

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0012f	f6 c1 1f	 test	 cl, 31
  00132	74 06		 je	 SHORT $LN384@Copy
  00134	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00139	cc		 int	 3
$LN384@Copy:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0013a	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0013e	48 3b c1	 cmp	 rax, rcx
  00141	72 06		 jb	 SHORT $LN385@Copy
  00143	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00148	cc		 int	 3
$LN385@Copy:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00149	48 2b c8	 sub	 rcx, rax
  0014c	48 83 f9 08	 cmp	 rcx, 8
  00150	73 06		 jae	 SHORT $LN386@Copy
  00152	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00157	cc		 int	 3
$LN386@Copy:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00158	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0015c	76 06		 jbe	 SHORT $LN387@Copy
  0015e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00163	cc		 int	 3
$LN387@Copy:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00164	48 8b c8	 mov	 rcx, rax
$LN383@Copy:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00167	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN388@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0016c	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00174	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0017c	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  00181	72 05		 jb	 SHORT $LN422@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00183	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00186	eb 03		 jmp	 SHORT $LN423@Copy
$LN422@Copy:
  00188	48 8b c3	 mov	 rax, rbx
$LN423@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  0018b	c6 00 00	 mov	 BYTE PTR [rax], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0018e	48 89 33	 mov	 QWORD PTR [rbx], rsi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2208 : 		this->_Myres() = _Newres;

  00191	48 89 7b 18	 mov	 QWORD PTR [rbx+24], rdi

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00195	4c 89 73 10	 mov	 QWORD PTR [rbx+16], r14

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00199	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  0019e	72 03		 jb	 SHORT $LN498@Copy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  001a0	48 8b de	 mov	 rbx, rsi
$LN498@Copy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  001a3	42 c6 04 33 00	 mov	 BYTE PTR [rbx+r14], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2210 : 		}

  001a8	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001ac	41 5e		 pop	 r14
  001ae	5f		 pop	 rdi
  001af	5e		 pop	 rsi
  001b0	5b		 pop	 rbx
  001b1	c3		 ret	 0
$LN508@Copy:
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2193 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;
; 2200 : 			_CATCH_END
; 2201 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00049	48 83 f8 10	 cmp	 rax, 16
  0004d	72 57		 jb	 SHORT $LN237@catch$0

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00052	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00055	48 83 f8 ff	 cmp	 rax, -1
  00059	76 06		 jbe	 SHORT $LN231@catch$0
  0005b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00060	cc		 int	 3
$LN231@catch$0:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00061	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00067	72 38		 jb	 SHORT $LN232@catch$0

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00069	f6 c1 1f	 test	 cl, 31
  0006c	74 06		 je	 SHORT $LN233@catch$0
  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN233@catch$0:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00074	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00078	48 3b c1	 cmp	 rax, rcx
  0007b	72 06		 jb	 SHORT $LN234@catch$0
  0007d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00082	cc		 int	 3
$LN234@catch$0:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00083	48 2b c8	 sub	 rcx, rax
  00086	48 83 f9 08	 cmp	 rcx, 8
  0008a	73 06		 jae	 SHORT $LN235@catch$0
  0008c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00091	cc		 int	 3
$LN235@catch$0:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00092	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00096	76 06		 jbe	 SHORT $LN236@catch$0
  00098	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0009d	cc		 int	 3
$LN236@catch$0:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0009e	48 8b c8	 mov	 rcx, rax
$LN232@catch$0:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000a1	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN237@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000a6	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ae	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b6	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000bb	72 03		 jb	 SHORT $LN272@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000bd	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN272@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000c0	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;

  000c3	33 d2		 xor	 edx, edx
  000c5	33 c9		 xor	 ecx, ecx
  000c7	e8 00 00 00 00	 call	 _CxxThrowException
  000cc	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1

; 2193 : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$0:

; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  0000d	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00011	48 89 55 68	 mov	 QWORD PTR _Newres$[rbp], rdx

; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

  00015	48 ff c2	 inc	 rdx
  00018	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  00021	48 89 45 78	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2197 : 			_CATCH_ALL
; 2198 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2199 : 			_RERAISE;
; 2200 : 			_CATCH_END
; 2201 : 		_CATCH_END

  00025	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
  00032	cc		 int	 3
?catch$1@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
_Newres$ = 104
_Newsize$ = 104
_Oldlen$ = 112
_Ptr$ = 120
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0

; 729  : 		}
; 730  : 
; 731  : 	const size_type& _Myres() const _NOEXCEPT
; 732  : 		{	// return const reference to _Myres
; 733  : 		return (_Get_data()._Myres);
; 734  : 		}
; 735  : 
; 736  : private:
; 737  : 	_Compressed_pair<_Alty, _String_val<_Val_types> > _Mypair;
; 738  : 	};
; 739  : 
; 740  : 		// TEMPLATE CLASS basic_string
; 741  : template<class _Elem,
; 742  : 	class _Traits,
; 743  : 	class _Alloc>
; 744  : 	class basic_string
; 745  : 		: public _String_alloc<_String_base_types<_Elem, _Alloc> >
; 746  : 	{	// null-terminated transparent array of elements
; 747  : public:
; 748  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Myt;
; 749  : 	typedef _String_alloc<_String_base_types<_Elem, _Alloc> > _Mybase;
; 750  : 	typedef _Traits traits_type;
; 751  : 	typedef _Alloc allocator_type;
; 752  : 
; 753  : 	typedef typename _Mybase::_Alty _Alty;
; 754  : 
; 755  : 	typedef typename _Mybase::value_type value_type;
; 756  : 	typedef typename _Mybase::size_type size_type;
; 757  : 	typedef typename _Mybase::difference_type difference_type;
; 758  : 	typedef typename _Mybase::pointer pointer;
; 759  : 	typedef typename _Mybase::const_pointer const_pointer;
; 760  : 	typedef typename _Mybase::reference reference;
; 761  : 	typedef typename _Mybase::const_reference const_reference;
; 762  : 
; 763  : 	typedef typename _Mybase::iterator iterator;
; 764  : 	typedef typename _Mybase::const_iterator const_iterator;
; 765  : 
; 766  : 	typedef _STD reverse_iterator<iterator> reverse_iterator;
; 767  : 	typedef _STD reverse_iterator<const_iterator> const_reverse_iterator;
; 768  : 
; 769  : 	basic_string(const _Myt& _Right)
; 770  : 
; 771  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())
; 772  : 
; 773  : 
; 774  : 		{	// construct by copying _Right
; 775  : 		_Tidy();
; 776  : 		assign(_Right, 0, npos);
; 777  : 		}
; 778  : 
; 779  : 	basic_string(const _Myt& _Right, const _Alloc& _Al)
; 780  : 		: _Mybase(_Al)
; 781  : 		{	// construct by copying with allocator
; 782  : 		_Tidy();
; 783  : 		assign(_Right, 0, npos);
; 784  : 		}
; 785  : 
; 786  : 	basic_string() _NOEXCEPT_OP(is_nothrow_default_constructible<_Alloc>::value)
; 787  : 		: _Mybase()
; 788  : 		{	// construct empty string
; 789  : 		_Tidy();
; 790  : 		}
; 791  : 
; 792  : 	explicit basic_string(const _Alloc& _Al) _NOEXCEPT
; 793  : 		: _Mybase(_Al)
; 794  : 		{	// construct empty string with allocator
; 795  : 		_Tidy();
; 796  : 		}
; 797  : 
; 798  : 	basic_string(const _Myt& _Right, size_type _Roff,
; 799  : 		size_type _Count = npos)
; 800  : 		: _Mybase(_Right._Getal())
; 801  : 		{	// construct from _Right [_Roff, _Roff + _Count)
; 802  : 		_Tidy();
; 803  : 		assign(_Right, _Roff, _Count);
; 804  : 		}
; 805  : 
; 806  : 	basic_string(const _Myt& _Right, size_type _Roff, size_type _Count,
; 807  : 		const _Alloc& _Al)
; 808  : 		: _Mybase(_Al)
; 809  : 		{	// construct from _Right [_Roff, _Roff + _Count) with allocator
; 810  : 		_Tidy();
; 811  : 		assign(_Right, _Roff, _Count);
; 812  : 		}
; 813  : 
; 814  : 	basic_string(const _Elem *_Ptr, size_type _Count)
; 815  : 		: _Mybase()
; 816  : 		{	// construct from [_Ptr, _Ptr + _Count)
; 817  : 		_Tidy();
; 818  : 		assign(_Ptr, _Count);
; 819  : 		}
; 820  : 
; 821  : 	basic_string(const _Elem *_Ptr, size_type _Count, const _Alloc& _Al)
; 822  : 		: _Mybase(_Al)
; 823  : 		{	// construct from [_Ptr, _Ptr + _Count) with allocator
; 824  : 		_Tidy();
; 825  : 		assign(_Ptr, _Count);
; 826  : 		}
; 827  : 
; 828  : 	basic_string(const _Elem *_Ptr)
; 829  : 		: _Mybase()
; 830  : 		{	// construct from [_Ptr, <null>)
; 831  : 		_Tidy();
; 832  : 		assign(_Ptr);
; 833  : 		}
; 834  : 
; 835  : 	basic_string(const _Elem *_Ptr, const _Alloc& _Al)
; 836  : 		: _Mybase(_Al)
; 837  : 		{	// construct from [_Ptr, <null>) with allocator
; 838  : 		_Tidy();
; 839  : 		assign(_Ptr);
; 840  : 		}
; 841  : 
; 842  : 	basic_string(size_type _Count, _Elem _Ch)
; 843  : 		: _Mybase()
; 844  : 		{	// construct from _Count * _Ch
; 845  : 		_Tidy();
; 846  : 		assign(_Count, _Ch);
; 847  : 		}
; 848  : 
; 849  : 	basic_string(size_type _Count, _Elem _Ch, const _Alloc& _Al)
; 850  : 		: _Mybase(_Al)
; 851  : 		{	// construct from _Count * _Ch with allocator
; 852  : 		_Tidy();
; 853  : 		assign(_Count, _Ch);
; 854  : 		}
; 855  : 
; 856  : 	template<class _Iter,
; 857  : 		class = typename enable_if<_Is_iterator<_Iter>::value,
; 858  : 			void>::type>
; 859  : 		basic_string(_Iter _First, _Iter _Last, const _Alloc& _Al = _Alloc())
; 860  : 		: _Mybase(_Al)
; 861  : 		{	// construct from [_First, _Last) with optional allocator
; 862  : 		_DEBUG_RANGE(_First, _Last);
; 863  : 		_Tidy();
; 864  : 		_Construct(_Unchecked(_First), _Unchecked(_Last), _Iter_cat(_First));
; 865  : 		}
; 866  : 
; 867  : 	template<class _Iter>
; 868  : 		void _Construct(_Iter _First,
; 869  : 			_Iter _Last, input_iterator_tag)
; 870  : 		{	// initialize from [_First, _Last), input iterators
; 871  : 		_TRY_BEGIN
; 872  : 		for (; _First != _Last; ++_First)
; 873  : 			append((size_type)1, (_Elem)*_First);
; 874  : 		_CATCH_ALL
; 875  : 		_Tidy(true);
; 876  : 		_RERAISE;
; 877  : 		_CATCH_END
; 878  : 		}
; 879  : 
; 880  : 	template<class _Iter>
; 881  : 		void _Construct(_Iter _First,
; 882  : 			_Iter _Last, forward_iterator_tag)
; 883  : 		{	// initialize from [_First, _Last), forward iterators
; 884  : 		size_type _Count = 0;
; 885  : 		_Distance(_First, _Last, _Count);
; 886  : 		reserve(_Count);
; 887  : 		_Construct(_First, _Last, input_iterator_tag());
; 888  : 		}
; 889  : 
; 890  : 	void _Construct(_Elem *_First,
; 891  : 		_Elem *_Last, random_access_iterator_tag)
; 892  : 		{	// initialize from [_First, _Last), pointers
; 893  : 		if (_First != _Last)
; 894  : 			assign(_First, _Last - _First);
; 895  : 		}
; 896  : 
; 897  : 	void _Construct(const _Elem *_First,
; 898  : 		const _Elem *_Last, random_access_iterator_tag)
; 899  : 		{	// initialize from [_First, _Last), const pointers
; 900  : 		if (_First != _Last)
; 901  : 			assign(_First, _Last - _First);
; 902  : 		}
; 903  : 
; 904  : 	basic_string(_Myt&& _Right) _NOEXCEPT
; 905  : 		: _Mybase(_STD move(_Right._Getal()))
; 906  : 		{	// construct by moving _Right
; 907  : 		_Tidy();
; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));
; 909  : 		}
; 910  : 
; 911  : 	basic_string(_Myt&& _Right, const _Alloc& _Al)
; 912  : 		: _Mybase(_Al)
; 913  : 		{	// construct by moving _Right, allocator
; 914  : 		if (this->_Getal() != _Right._Getal())
; 915  : 			assign(_Right.begin(), _Right.end());
; 916  : 		else
; 917  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 918  : 		}
; 919  : 
; 920  : 	_Myt& operator=(_Myt&& _Right)
; 921  : 		_NOEXCEPT_OP(_Alty::propagate_on_container_move_assignment::value
; 922  : 			|| _Alty::is_always_equal::value)
; 923  : 		{	// assign by moving _Right
; 924  : 		if (this != &_Right)
; 925  : 			{	// different, assign it
; 926  : 			_Tidy(true);
; 927  : 
; 928  : 			if (_Alty::propagate_on_container_move_assignment::value
; 929  : 				&& this->_Getal() != _Right._Getal())
; 930  : 				this->_Move_alloc(_Right._Getal());
; 931  : 
; 932  : 			if (this->_Getal() != _Right._Getal())
; 933  : 				assign(_Right.begin(), _Right.end());
; 934  : 			else
; 935  : 				_Assign_rv(_STD forward<_Myt>(_Right));
; 936  : 			}
; 937  : 		return (*this);
; 938  : 		}
; 939  : 
; 940  : 	_Myt& assign(_Myt&& _Right) _NOEXCEPT
; 941  : 		{	// assign by moving _Right
; 942  : 		if (this == &_Right)
; 943  : 			;
; 944  : 		else if (get_allocator() != _Right.get_allocator()
; 945  : 			&& this->_BUF_SIZE <= _Right._Myres())
; 946  : 			*this = _Right;
; 947  : 		else
; 948  : 			{	// not same, clear this and steal from _Right
; 949  : 			_Tidy(true);
; 950  : 			_Assign_rv(_STD forward<_Myt>(_Right));
; 951  : 			}
; 952  : 		return (*this);
; 953  : 		}
; 954  : 
; 955  : 	void _Assign_rv(_Myt&& _Right)
; 956  : 		{	// assign by moving _Right
; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)
; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,
; 959  : 				_Right._Mysize() + 1);
; 960  : 		else
; 961  : 			{	// copy pointer
; 962  : 			this->_Getal().construct(&this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 963  : 			_Right._Bx()._Ptr = pointer();
; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();
; 966  : 		this->_Myres() = _Right._Myres();
; 967  : 		_Right._Tidy();
; 968  : 		}
; 969  : 
; 970  : 	basic_string(_XSTD initializer_list<_Elem> _Ilist,
; 971  : 		const _Alloc& _Al = allocator_type())
; 972  : 		: _Mybase(_Al)
; 973  : 		{	// construct from initializer_list
; 974  : 		_Tidy();
; 975  : 		assign(_Ilist.begin(), _Ilist.end());
; 976  : 		}
; 977  : 
; 978  : 	_Myt& operator=(_XSTD initializer_list<_Elem> _Ilist)
; 979  : 		{	// assign initializer_list
; 980  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 981  : 		}
; 982  : 
; 983  : 	_Myt& operator+=(_XSTD initializer_list<_Elem> _Ilist)
; 984  : 		{	// append initializer_list
; 985  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 986  : 		}
; 987  : 
; 988  : 	_Myt& assign(_XSTD initializer_list<_Elem> _Ilist)
; 989  : 		{	// assign initializer_list
; 990  : 		return (assign(_Ilist.begin(), _Ilist.end()));
; 991  : 		}
; 992  : 
; 993  : 	_Myt& append(_XSTD initializer_list<_Elem> _Ilist)
; 994  : 		{	// append initializer_list
; 995  : 		return (append(_Ilist.begin(), _Ilist.end()));
; 996  : 		}
; 997  : 
; 998  : 	iterator insert(const_iterator _Where,
; 999  : 		_XSTD initializer_list<_Elem> _Ilist)
; 1000 : 		{	// insert initializer_list
; 1001 : 		return (insert(_Where, _Ilist.begin(), _Ilist.end()));
; 1002 : 		}
; 1003 : 
; 1004 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1005 : 		_XSTD initializer_list<_Elem> _Ilist)
; 1006 : 		{	// replace with initializer_list
; 1007 : 		return (replace(_First, _Last, _Ilist.begin(), _Ilist.end()));
; 1008 : 		}
; 1009 : 
; 1010 : 	~basic_string() _NOEXCEPT
; 1011 : 		{	// destroy the string
; 1012 : 		_Tidy(true);
; 1013 : 		}
; 1014 : 
; 1015 : 	_PGLOBAL static const size_type npos;	// bad/missing length/position
; 1016 : 
; 1017 : 	_Myt& operator=(const _Myt& _Right)
; 1018 : 		{	// assign _Right
; 1019 : 		if (this != &_Right)
; 1020 : 			{	// different, assign it
; 1021 : 			if (this->_Getal() != _Right._Getal()
; 1022 : 				&& _Alty::propagate_on_container_copy_assignment::value)
; 1023 : 				{	// change allocator before copying
; 1024 : 				_Tidy(true);
; 1025 : 				this->_Copy_alloc(_Right._Getal());
; 1026 : 				}
; 1027 : 
; 1028 : 			assign(_Right);
; 1029 : 			}
; 1030 : 		return (*this);
; 1031 : 		}
; 1032 : 
; 1033 : 	_Myt& operator=(const _Elem *_Ptr)
; 1034 : 		{	// assign [_Ptr, <null>)
; 1035 : 		return (assign(_Ptr));
; 1036 : 		}
; 1037 : 
; 1038 : 	_Myt& operator=(_Elem _Ch)
; 1039 : 		{	// assign 1 * _Ch
; 1040 : 		return (assign(1, _Ch));
; 1041 : 		}
; 1042 : 
; 1043 : 	_Myt& operator+=(const _Myt& _Right)
; 1044 : 		{	// append _Right
; 1045 : 		return (append(_Right));
; 1046 : 		}
; 1047 : 
; 1048 : 	_Myt& operator+=(const _Elem *_Ptr)
; 1049 : 		{	// append [_Ptr, <null>)
; 1050 : 		return (append(_Ptr));
; 1051 : 		}
; 1052 : 
; 1053 : 	_Myt& operator+=(_Elem _Ch)
; 1054 : 		{	// append 1 * _Ch
; 1055 : 		return (append((size_type)1, _Ch));
; 1056 : 		}
; 1057 : 
; 1058 : 	_Myt& append(const _Myt& _Right)
; 1059 : 		{	// append _Right
; 1060 : 		return (append(_Right, 0, npos));
; 1061 : 		}
; 1062 : 
; 1063 : 	_Myt& append(const _Myt& _Right,
; 1064 : 		size_type _Roff, size_type _Count = npos)
; 1065 : 		{	// append _Right [_Roff, _Roff + _Count)
; 1066 : 		_Right._Check_offset(_Roff);
; 1067 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1068 : 		if (npos - this->_Mysize() <= _Count)
; 1069 : 			_Xlen();	// result too long
; 1070 : 
; 1071 : 		const size_type _Num = this->_Mysize() + _Count;
; 1072 : 		if (0 < _Count && _Grow(_Num))
; 1073 : 			{	// make room and append new stuff
; 1074 : 			_Traits::copy(this->_Myptr() + this->_Mysize(),
; 1075 : 				_Right._Myptr() + _Roff, _Count);
; 1076 : 			_Eos(_Num);
; 1077 : 			}
; 1078 : 		return (*this);
; 1079 : 		}
; 1080 : 
; 1081 : 	_Myt& append(const _Elem *_Ptr, size_type _Count)
; 1082 : 		{	// append [_Ptr, _Ptr + _Count)
; 1083 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1084 : 		if (_Inside(_Ptr))
; 1085 : 			return (append(*this,
; 1086 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1087 : 		if (npos - this->_Mysize() <= _Count)
; 1088 : 			_Xlen();	// result too long
; 1089 : 
; 1090 : 		const size_type _Num = this->_Mysize() + _Count;
; 1091 : 		if (0 < _Count && _Grow(_Num))
; 1092 : 			{	// make room and append new stuff
; 1093 : 			_Traits::copy(this->_Myptr() + this->_Mysize(), _Ptr, _Count);
; 1094 : 			_Eos(_Num);
; 1095 : 			}
; 1096 : 		return (*this);
; 1097 : 		}
; 1098 : 
; 1099 : 	_Myt& append(const _Elem *_Ptr)
; 1100 : 		{	// append [_Ptr, <null>)
; 1101 : 		_DEBUG_POINTER(_Ptr);
; 1102 : 		return (append(_Ptr, _Traits::length(_Ptr)));
; 1103 : 		}
; 1104 : 
; 1105 : 	_Myt& append(size_type _Count, _Elem _Ch)
; 1106 : 		{	// append _Count * _Ch
; 1107 : 		if (npos - this->_Mysize() <= _Count)
; 1108 : 			_Xlen();	// result too long
; 1109 : 
; 1110 : 		const size_type _Num = this->_Mysize() + _Count;
; 1111 : 		if (0 < _Count && _Grow(_Num))
; 1112 : 			{	// make room and append new stuff using assign
; 1113 : 			_Chassign(this->_Mysize(), _Count, _Ch);
; 1114 : 			_Eos(_Num);
; 1115 : 			}
; 1116 : 		return (*this);
; 1117 : 		}
; 1118 : 
; 1119 : 	template<class _Iter>
; 1120 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1121 : 			_Myt&>::type
; 1122 : 		append(_Iter _First, _Iter _Last)
; 1123 : 		{	// append [_First, _Last), input iterators
; 1124 : 		return (replace(end(), end(), _First, _Last));
; 1125 : 		}
; 1126 : 
; 1127 : 	_Myt& append(const_pointer _First, const_pointer _Last)
; 1128 : 		{	// append [_First, _Last), const pointers
; 1129 : 		return (replace(end(), end(), _First, _Last));
; 1130 : 		}
; 1131 : 
; 1132 : 	_Myt& append(const_iterator _First, const_iterator _Last)
; 1133 : 		{	// append [_First, _Last), const_iterators
; 1134 : 		return (replace(end(), end(), _First, _Last));
; 1135 : 		}
; 1136 : 
; 1137 : 	_Myt& assign(const _Myt& _Right)
; 1138 : 		{	// assign _Right
; 1139 : 		return (assign(_Right, 0, npos));
; 1140 : 		}
; 1141 : 
; 1142 : 	_Myt& assign(const _Myt& _Right,
; 1143 : 		size_type _Roff, size_type _Count = npos)
; 1144 : 		{	// assign _Right [_Roff, _Roff + _Count)
; 1145 : 		_Right._Check_offset(_Roff);
; 1146 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1147 : 
; 1148 : 		if (this == &_Right)
; 1149 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring
; 1150 : 		else if (_Grow(_Count))
; 1151 : 			{	// make room and assign new stuff
; 1152 : 			_Traits::copy(this->_Myptr(),
; 1153 : 				_Right._Myptr() + _Roff, _Count);
; 1154 : 			_Eos(_Count);
; 1155 : 			}
; 1156 : 		return (*this);
; 1157 : 		}
; 1158 : 
; 1159 : 	_Myt& assign(const _Elem *_Ptr, size_type _Count)
; 1160 : 		{	// assign [_Ptr, _Ptr + _Count)
; 1161 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1162 : 		if (_Inside(_Ptr))
; 1163 : 			return (assign(*this,
; 1164 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1165 : 
; 1166 : 		if (_Grow(_Count))
; 1167 : 			{	// make room and assign new stuff
; 1168 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);
; 1169 : 			_Eos(_Count);
; 1170 : 			}
; 1171 : 		return (*this);
; 1172 : 		}
; 1173 : 
; 1174 : 	_Myt& assign(const _Elem *_Ptr)
; 1175 : 		{	// assign [_Ptr, <null>)
; 1176 : 		_DEBUG_POINTER(_Ptr);
; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));
; 1178 : 		}
; 1179 : 
; 1180 : 	_Myt& assign(size_type _Count, _Elem _Ch)
; 1181 : 		{	// assign _Count * _Ch
; 1182 : 		if (_Count == npos)
; 1183 : 			_Xlen();	// result too long
; 1184 : 
; 1185 : 		if (_Grow(_Count))
; 1186 : 			{	// make room and assign new stuff
; 1187 : 			_Chassign(0, _Count, _Ch);
; 1188 : 			_Eos(_Count);
; 1189 : 			}
; 1190 : 		return (*this);
; 1191 : 		}
; 1192 : 
; 1193 : 	template<class _Iter>
; 1194 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1195 : 			_Myt&>::type
; 1196 : 		assign(_Iter _First, _Iter _Last)
; 1197 : 		{	// assign [_First, _Last), input iterators
; 1198 : 		return (replace(begin(), end(), _First, _Last));
; 1199 : 		}
; 1200 : 
; 1201 : 	_Myt& assign(const_pointer _First, const_pointer _Last)
; 1202 : 		{	// assign [_First, _Last), const pointers
; 1203 : 		return (replace(begin(), end(), _First, _Last));
; 1204 : 		}
; 1205 : 
; 1206 : 	_Myt& assign(const_iterator _First, const_iterator _Last)
; 1207 : 		{	// assign [_First, _Last), const_iterators
; 1208 : 		return (replace(begin(), end(), _First, _Last));
; 1209 : 		}
; 1210 : 
; 1211 : 	_Myt& insert(size_type _Off, const _Myt& _Right)
; 1212 : 		{	// insert _Right at _Off
; 1213 : 		return (insert(_Off, _Right, 0, npos));
; 1214 : 		}
; 1215 : 
; 1216 : 	_Myt& insert(size_type _Off,
; 1217 : 		const _Myt& _Right, size_type _Roff, size_type _Count = npos)
; 1218 : 		{	// insert _Right [_Roff, _Roff + _Count) at _Off
; 1219 : 		_Check_offset(_Off);
; 1220 : 		_Right._Check_offset(_Roff);
; 1221 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1222 : 		if (npos - this->_Mysize() <= _Count)
; 1223 : 			_Xlen();	// result too long
; 1224 : 
; 1225 : 		const size_type _Num = this->_Mysize() + _Count;
; 1226 : 		if (0 < _Count && _Grow(_Num))
; 1227 : 			{	// make room and insert new stuff
; 1228 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1229 : 				this->_Myptr() + _Off,
; 1230 : 				this->_Mysize() - _Off);	// empty out hole
; 1231 : 			if (this == &_Right)
; 1232 : 				_Traits::move(this->_Myptr() + _Off,
; 1233 : 					this->_Myptr() + (_Off < _Roff ? _Roff + _Count : _Roff),
; 1234 : 						_Count);	// substring
; 1235 : 			else
; 1236 : 				_Traits::copy(this->_Myptr() + _Off,
; 1237 : 					_Right._Myptr() + _Roff, _Count);	// fill hole
; 1238 : 			_Eos(_Num);
; 1239 : 			}
; 1240 : 		return (*this);
; 1241 : 		}
; 1242 : 
; 1243 : 	_Myt& insert(size_type _Off,
; 1244 : 		const _Elem *_Ptr, size_type _Count)
; 1245 : 		{	// insert [_Ptr, _Ptr + _Count) at _Off
; 1246 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1247 : 		if (_Inside(_Ptr))
; 1248 : 			return (insert(_Off, *this,
; 1249 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1250 : 		_Check_offset(_Off);
; 1251 : 		if (npos - this->_Mysize() <= _Count)
; 1252 : 			_Xlen();	// result too long
; 1253 : 		const size_type _Num = this->_Mysize() + _Count;
; 1254 : 		if (0 < _Count && _Grow(_Num))
; 1255 : 			{	// make room and insert new stuff
; 1256 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1257 : 				this->_Myptr() + _Off,
; 1258 : 				this->_Mysize() - _Off);	// empty out hole
; 1259 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1260 : 			_Eos(_Num);
; 1261 : 			}
; 1262 : 		return (*this);
; 1263 : 		}
; 1264 : 
; 1265 : 	_Myt& insert(size_type _Off, const _Elem *_Ptr)
; 1266 : 		{	// insert [_Ptr, <null>) at _Off
; 1267 : 		_DEBUG_POINTER(_Ptr);
; 1268 : 		return (insert(_Off, _Ptr, _Traits::length(_Ptr)));
; 1269 : 		}
; 1270 : 
; 1271 : 	_Myt& insert(size_type _Off,
; 1272 : 		size_type _Count, _Elem _Ch)
; 1273 : 		{	// insert _Count * _Ch at _Off
; 1274 : 		_Check_offset(_Off);
; 1275 : 		if (npos - this->_Mysize() <= _Count)
; 1276 : 			_Xlen();	// result too long
; 1277 : 		const size_type _Num = this->_Mysize() + _Count;
; 1278 : 		if (0 < _Count && _Grow(_Num))
; 1279 : 			{	// make room and insert new stuff
; 1280 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1281 : 				this->_Myptr() + _Off,
; 1282 : 				this->_Mysize() - _Off);	// empty out hole
; 1283 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1284 : 			_Eos(_Num);
; 1285 : 			}
; 1286 : 		return (*this);
; 1287 : 		}
; 1288 : 
; 1289 : 	iterator insert(const_iterator _Where)
; 1290 : 		{	// insert <null> at _Where
; 1291 : 		return (insert(_Where, _Elem()));
; 1292 : 		}
; 1293 : 
; 1294 : 	iterator insert(const_iterator _Where, _Elem _Ch)
; 1295 : 		{	// insert _Ch at _Where
; 1296 : 		size_type _Off = _Where - begin();
; 1297 : 		insert(_Off, 1, _Ch);
; 1298 : 		return (begin() + _Off);
; 1299 : 		}
; 1300 : 
; 1301 : 	iterator insert(const_iterator _Where, size_type _Count, _Elem _Ch)
; 1302 : 		{	// insert _Count * _Elem at _Where
; 1303 : 		size_type _Off = _Where - begin();
; 1304 : 		insert(_Off, _Count, _Ch);
; 1305 : 		return (begin() + _Off);
; 1306 : 		}
; 1307 : 
; 1308 : 	template<class _Iter>
; 1309 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1310 : 			iterator>::type
; 1311 : 		insert(const_iterator _Where, _Iter _First, _Iter _Last)
; 1312 : 		{	// insert [_First, _Last) at _Where, input iterators
; 1313 : 		size_type _Off = _Where - begin();
; 1314 : 		replace(_Where, _Where, _First, _Last);
; 1315 : 		return (begin() + _Off);
; 1316 : 		}
; 1317 : 
; 1318 : 	iterator insert(const_iterator _Where,
; 1319 : 		const_pointer _First, const_pointer _Last)
; 1320 : 		{	// insert [_First, _Last) at _Where, const pointers
; 1321 : 		size_type _Off = _Where - begin();
; 1322 : 		replace(_Where, _Where, _First, _Last);
; 1323 : 		return (begin() + _Off);
; 1324 : 		}
; 1325 : 
; 1326 : 	iterator insert(const_iterator _Where,
; 1327 : 		const_iterator _First, const_iterator _Last)
; 1328 : 		{	// insert [_First, _Last) at _Where, const_iterators
; 1329 : 		size_type _Off = _Where - begin();
; 1330 : 		replace(_Where, _Where, _First, _Last);
; 1331 : 		return (begin() + _Off);
; 1332 : 		}
; 1333 : 
; 1334 : 	_Myt& erase(size_type _Off = 0)
; 1335 : 		{	// erase elements [_Off, ...)
; 1336 : 		_Check_offset(_Off);
; 1337 : 		_Eos(_Off);
; 1338 : 		return (*this);
; 1339 : 		}
; 1340 : 
; 1341 : 	_Myt& erase(size_type _Off, size_type _Count)
; 1342 : 		{	// erase elements [_Off, _Off + _Count)
; 1343 : 		_Check_offset(_Off);
; 1344 : 		if (this->_Mysize() - _Off <= _Count)
; 1345 : 			_Eos(_Off);	// erase elements [_Off, ...)
; 1346 : 		else if (0 < _Count)
; 1347 : 			{	// move elements down
; 1348 : 			value_type *_Ptr = this->_Myptr() + _Off;
; 1349 : 			size_type _Newsize = this->_Mysize() - _Count;
; 1350 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);
; 1351 : 			_Eos(_Newsize);
; 1352 : 			}
; 1353 : 		return (*this);
; 1354 : 		}
; 1355 : 
; 1356 : 	iterator erase(const_iterator _Where)
; 1357 : 		{	// erase element at _Where
; 1358 : 		size_type _Count = _Where - begin();
; 1359 : 		erase(_Count, 1);
; 1360 : 		return (begin() + _Count);
; 1361 : 		}
; 1362 : 
; 1363 : 	iterator erase(const_iterator _First, const_iterator _Last)
; 1364 : 		{	// erase substring [_First, _Last)
; 1365 : 		_DEBUG_RANGE(_First, _Last);
; 1366 : 		size_type _Count = _First - begin();
; 1367 : 		erase(_Count, _Last - _First);
; 1368 : 		return (begin() + _Count);
; 1369 : 		}
; 1370 : 
; 1371 : 	void clear() _NOEXCEPT
; 1372 : 		{	// erase all
; 1373 : 		_Eos(0);
; 1374 : 		}
; 1375 : 
; 1376 : 	_Myt& replace(size_type _Off, size_type _N0, const _Myt& _Right)
; 1377 : 		{	// replace [_Off, _Off + _N0) with _Right
; 1378 : 		return (replace(_Off, _N0, _Right, 0, npos));
; 1379 : 		}
; 1380 : 
; 1381 : 	_Myt& replace(size_type _Off,
; 1382 : 		size_type _N0, const _Myt& _Right, size_type _Roff,
; 1383 : 			size_type _Count = npos)
; 1384 : 		{	// replace [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 1385 : 		_Check_offset(_Off);
; 1386 : 		_Right._Check_offset(_Roff);
; 1387 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1388 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);
; 1389 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1390 : 			_Xlen();	// result too long
; 1391 : 
; 1392 : 		const size_type _Nm = this->_Mysize() - _N0 - _Off;	// length of kept tail
; 1393 : 		const size_type _Newsize = this->_Mysize() + _Count - _N0;
; 1394 : 		if (this->_Mysize() < _Newsize)
; 1395 : 			_Grow(_Newsize);
; 1396 : 
; 1397 : 		if (_Count == _N0)
; 1398 : 			{	// only one movement required, so _Traits::move handles any overlap
; 1399 : 			_Traits::move(this->_Myptr() + _Off,
; 1400 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1401 : 			}
; 1402 : 		else if (this != &_Right)
; 1403 : 			{	// no overlap, just move down and copy in new stuff
; 1404 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1405 : 				this->_Myptr() + _Off + _N0, _Nm);	// empty hole
; 1406 : 			_Traits::copy(this->_Myptr() + _Off,
; 1407 : 				_Right._Myptr() + _Roff, _Count);	// fill hole
; 1408 : 			}
; 1409 : 		else if (_Count < _N0)
; 1410 : 			{	// hole doesn't get larger, just copy in substring
; 1411 : 			_Traits::move(this->_Myptr() + _Off,
; 1412 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1413 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1414 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1415 : 			}
; 1416 : 		else if (_Roff <= _Off)
; 1417 : 			{	// hole gets larger, substring begins before hole
; 1418 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1419 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1420 : 			_Traits::move(this->_Myptr() + _Off,
; 1421 : 				this->_Myptr() + _Roff, _Count);	// fill hole
; 1422 : 			}
; 1423 : 		else if (_Off + _N0 <= _Roff)
; 1424 : 			{	// hole gets larger, substring begins after hole
; 1425 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1426 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1427 : 			_Traits::move(this->_Myptr() + _Off,
; 1428 : 				this->_Myptr() + (_Roff + _Count - _N0),
; 1429 : 				_Count);	// fill hole
; 1430 : 			}
; 1431 : 		else
; 1432 : 			{	// hole gets larger, substring begins in hole
; 1433 : 			_Traits::move(this->_Myptr() + _Off,
; 1434 : 				this->_Myptr() + _Roff, _N0);	// fill old hole
; 1435 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1436 : 				this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1437 : 			_Traits::move(this->_Myptr() + _Off + _N0,
; 1438 : 				this->_Myptr() + _Roff + _Count,
; 1439 : 				_Count - _N0);	// fill rest of new hole
; 1440 : 			}
; 1441 : 
; 1442 : 		_Eos(_Newsize);
; 1443 : 		return (*this);
; 1444 : 		}
; 1445 : 
; 1446 : 	_Myt& replace(size_type _Off,
; 1447 : 		size_type _N0, const _Elem *_Ptr, size_type _Count)
; 1448 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 1449 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1450 : 		if (_Inside(_Ptr))
; 1451 : 			return (replace(_Off, _N0, *this,
; 1452 : 				_Ptr - this->_Myptr(),
; 1453 : 				_Count));	// substring, replace carefully
; 1454 : 		_Check_offset(_Off);
; 1455 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1456 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1457 : 			_Xlen();	// result too long
; 1458 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1459 : 
; 1460 : 		if (_Count < _N0)
; 1461 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1462 : 				this->_Myptr() + _Off + _N0,
; 1463 : 				_Nm);	// smaller hole, move tail up
; 1464 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1465 : 		if ((0 < _Count || 0 < _N0)
; 1466 : 			&& _Grow(_Num))
; 1467 : 			{	// make room and rearrange
; 1468 : 			if (_N0 < _Count)
; 1469 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1470 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1471 : 			_Traits::copy(this->_Myptr() + _Off, _Ptr, _Count);	// fill hole
; 1472 : 			_Eos(_Num);
; 1473 : 			}
; 1474 : 		return (*this);
; 1475 : 		}
; 1476 : 
; 1477 : 	_Myt& replace(size_type _Off, size_type _N0, const _Elem *_Ptr)
; 1478 : 		{	// replace [_Off, _Off + _N0) with [_Ptr, <null>)
; 1479 : 		_DEBUG_POINTER(_Ptr);
; 1480 : 		return (replace(_Off, _N0, _Ptr, _Traits::length(_Ptr)));
; 1481 : 		}
; 1482 : 
; 1483 : 	_Myt& replace(size_type _Off,
; 1484 : 		size_type _N0, size_type _Count, _Elem _Ch)
; 1485 : 		{	// replace [_Off, _Off + _N0) with _Count * _Ch
; 1486 : 		_Check_offset(_Off);
; 1487 : 		_N0 = _Clamp_suffix_size(_Off, _N0);
; 1488 : 		if (npos - _Count <= this->_Mysize() - _N0)
; 1489 : 			_Xlen();	// result too long
; 1490 : 		size_type _Nm = this->_Mysize() - _N0 - _Off;
; 1491 : 
; 1492 : 		if (_Count < _N0)
; 1493 : 			_Traits::move(this->_Myptr() + _Off + _Count,
; 1494 : 				this->_Myptr() + _Off + _N0,
; 1495 : 				_Nm);	// smaller hole, move tail up
; 1496 : 		const size_type _Num = this->_Mysize() + _Count - _N0;
; 1497 : 		if ((0 < _Count || 0 < _N0)
; 1498 : 			&& _Grow(_Num))
; 1499 : 			{	// make room and rearrange
; 1500 : 			if (_N0 < _Count)
; 1501 : 				_Traits::move(this->_Myptr() + _Off + _Count,
; 1502 : 					this->_Myptr() + _Off + _N0, _Nm);	// move tail down
; 1503 : 			_Chassign(_Off, _Count, _Ch);	// fill hole
; 1504 : 			_Eos(_Num);
; 1505 : 			}
; 1506 : 		return (*this);
; 1507 : 		}
; 1508 : 
; 1509 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1510 : 		const _Myt& _Right)
; 1511 : 		{	// replace [_First, _Last) with _Right
; 1512 : 		return (replace(_First - begin(), _Last - _First, _Right));
; 1513 : 		}
; 1514 : 
; 1515 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1516 : 		const _Elem *_Ptr, size_type _Count)
; 1517 : 		{	// replace [_First, _Last) with [_Ptr, _Ptr + _Count)
; 1518 : 		return (replace(_First - begin(), _Last - _First, _Ptr, _Count));
; 1519 : 		}
; 1520 : 
; 1521 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1522 : 		const _Elem *_Ptr)
; 1523 : 		{	// replace [_First, _Last) with [_Ptr, <null>)
; 1524 : 		return (replace(_First - begin(), _Last - _First, _Ptr));
; 1525 : 		}
; 1526 : 
; 1527 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1528 : 		size_type _Count, _Elem _Ch)
; 1529 : 		{	// replace [_First, _Last) with _Count * _Ch
; 1530 : 		return (replace(_First - begin(), _Last - _First, _Count, _Ch));
; 1531 : 		}
; 1532 : 
; 1533 : 	template<class _Iter>
; 1534 : 		typename enable_if<_Is_iterator<_Iter>::value,
; 1535 : 			_Myt&>::type
; 1536 : 		replace(const_iterator _First, const_iterator _Last,
; 1537 : 			_Iter _First2, _Iter _Last2)
; 1538 : 		{	// replace [_First, _Last) with [_First2, _Last2), input iterators
; 1539 : 		_Myt _Right(_First2, _Last2);
; 1540 : 		replace(_First, _Last, _Right);
; 1541 : 		return (*this);
; 1542 : 		}
; 1543 : 
; 1544 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1545 : 		const_pointer _First2, const_pointer _Last2)
; 1546 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1547 : 		if (_First2 == _Last2)
; 1548 : 			erase(_First - begin(), _Last - _First);
; 1549 : 		else
; 1550 : 			replace(_First - begin(), _Last - _First,
; 1551 : 				&*_First2, _Last2 - _First2);
; 1552 : 		return (*this);
; 1553 : 		}
; 1554 : 
; 1555 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1556 : 		pointer _First2, pointer _Last2)
; 1557 : 		{	// replace [_First, _Last) with [_First2, _Last2), const pointers
; 1558 : 		if (_First2 == _Last2)
; 1559 : 			erase(_First - begin(), _Last - _First);
; 1560 : 		else
; 1561 : 			replace(_First - begin(), _Last - _First,
; 1562 : 				&*_First2, _Last2 - _First2);
; 1563 : 		return (*this);
; 1564 : 		}
; 1565 : 
; 1566 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1567 : 		const_iterator _First2, const_iterator _Last2)
; 1568 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1569 : 		if (_First2 == _Last2)
; 1570 : 			erase(_First - begin(), _Last - _First);
; 1571 : 		else
; 1572 : 			replace(_First - begin(), _Last - _First,
; 1573 : 				&*_First2, _Last2 - _First2);
; 1574 : 		return (*this);
; 1575 : 		}
; 1576 : 
; 1577 : 	_Myt& replace(const_iterator _First, const_iterator _Last,
; 1578 : 		iterator _First2, iterator _Last2)
; 1579 : 		{	// replace [_First, _Last) with [_First2, _Last2), const_iterators
; 1580 : 		if (_First2 == _Last2)
; 1581 : 			erase(_First - begin(), _Last - _First);
; 1582 : 		else
; 1583 : 			replace(_First - begin(), _Last - _First,
; 1584 : 				&*_First2, _Last2 - _First2);
; 1585 : 		return (*this);
; 1586 : 		}
; 1587 : 
; 1588 : 	iterator begin() _NOEXCEPT
; 1589 : 		{	// return iterator for beginning of mutable sequence
; 1590 : 		return (iterator(this->_Myptr(), &this->_Get_data()));
; 1591 : 		}
; 1592 : 
; 1593 : 	const_iterator begin() const _NOEXCEPT
; 1594 : 		{	// return iterator for beginning of nonmutable sequence
; 1595 : 		return (const_iterator(this->_Myptr(), &this->_Get_data()));
; 1596 : 		}
; 1597 : 
; 1598 : 	iterator end() _NOEXCEPT
; 1599 : 		{	// return iterator for end of mutable sequence
; 1600 : 		return (iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1601 : 		}
; 1602 : 
; 1603 : 	const_iterator end() const _NOEXCEPT
; 1604 : 		{	// return iterator for end of nonmutable sequence
; 1605 : 		return (const_iterator(this->_Myptr() + this->_Mysize(), &this->_Get_data()));
; 1606 : 		}
; 1607 : 
; 1608 : 	reverse_iterator rbegin() _NOEXCEPT
; 1609 : 		{	// return iterator for beginning of reversed mutable sequence
; 1610 : 		return (reverse_iterator(end()));
; 1611 : 		}
; 1612 : 
; 1613 : 	const_reverse_iterator rbegin() const _NOEXCEPT
; 1614 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1615 : 		return (const_reverse_iterator(end()));
; 1616 : 		}
; 1617 : 
; 1618 : 	reverse_iterator rend() _NOEXCEPT
; 1619 : 		{	// return iterator for end of reversed mutable sequence
; 1620 : 		return (reverse_iterator(begin()));
; 1621 : 		}
; 1622 : 
; 1623 : 	const_reverse_iterator rend() const _NOEXCEPT
; 1624 : 		{	// return iterator for end of reversed nonmutable sequence
; 1625 : 		return (const_reverse_iterator(begin()));
; 1626 : 		}
; 1627 : 
; 1628 : 	const_iterator cbegin() const _NOEXCEPT
; 1629 : 		{	// return iterator for beginning of nonmutable sequence
; 1630 : 		return (begin());
; 1631 : 		}
; 1632 : 
; 1633 : 	const_iterator cend() const _NOEXCEPT
; 1634 : 		{	// return iterator for end of nonmutable sequence
; 1635 : 		return (end());
; 1636 : 		}
; 1637 : 
; 1638 : 	const_reverse_iterator crbegin() const _NOEXCEPT
; 1639 : 		{	// return iterator for beginning of reversed nonmutable sequence
; 1640 : 		return (rbegin());
; 1641 : 		}
; 1642 : 
; 1643 : 	const_reverse_iterator crend() const _NOEXCEPT
; 1644 : 		{	// return iterator for end of reversed nonmutable sequence
; 1645 : 		return (rend());
; 1646 : 		}
; 1647 : 
; 1648 : 	void shrink_to_fit()
; 1649 : 		{	// reduce capacity
; 1650 : 		if ((size() | this->_ALLOC_MASK) < capacity())
; 1651 : 			{	// worth shrinking, do it
; 1652 : 			_Myt _Tmp(*this);
; 1653 : 			swap(_Tmp);
; 1654 : 			}
; 1655 : 		}
; 1656 : 
; 1657 : 	reference at(size_type _Off)
; 1658 : 		{	// subscript mutable sequence with checking
; 1659 : 		_Check_offset_exclusive(_Off);
; 1660 : 		return (this->_Myptr()[_Off]);
; 1661 : 		}
; 1662 : 
; 1663 : 	const_reference at(size_type _Off) const
; 1664 : 		{	// subscript nonmutable sequence with checking
; 1665 : 		_Check_offset_exclusive(_Off);
; 1666 : 		return (this->_Myptr()[_Off]);
; 1667 : 		}
; 1668 : 
; 1669 : 	reference operator[](size_type _Off)
; 1670 : 		{	// subscript mutable sequence
; 1671 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1672 : 		if (this->_Mysize() < _Off)	// sic
; 1673 : 			_DEBUG_ERROR("string subscript out of range");
; 1674 : 
; 1675 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1676 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1677 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1678 : 
; 1679 : 		return (this->_Myptr()[_Off]);
; 1680 : 		}
; 1681 : 
; 1682 : 	const_reference operator[](size_type _Off) const
; 1683 : 		{	// subscript nonmutable sequence
; 1684 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1685 : 		if (this->_Mysize() < _Off)	// sic
; 1686 : 			_DEBUG_ERROR("string subscript out of range");
; 1687 : 
; 1688 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1689 : 		_SCL_SECURE_VALIDATE_RANGE(_Off <= this->_Mysize());	// sic
; 1690 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1691 : 
; 1692 : 		return (this->_Myptr()[_Off]);
; 1693 : 		}
; 1694 : 
; 1695 : 	void push_back(_Elem _Ch)
; 1696 : 		{	// insert element at end
; 1697 : 		append(1, _Ch);
; 1698 : 		}
; 1699 : 
; 1700 : 	void pop_back()
; 1701 : 		{	// erase element at end
; 1702 : 		erase(this->_Mysize() - 1);	// throws if _Mysize() == 0
; 1703 : 		}
; 1704 : 
; 1705 : 	reference front()
; 1706 : 		{	// return first element of mutable sequence
; 1707 : 		return (*begin());
; 1708 : 		}
; 1709 : 
; 1710 : 	const_reference front() const
; 1711 : 		{	// return first element of nonmutable sequence
; 1712 : 		return (*begin());
; 1713 : 		}
; 1714 : 
; 1715 : 	reference back()
; 1716 : 		{	// return last element of mutable sequence
; 1717 : 		return (*(end() - 1));
; 1718 : 		}
; 1719 : 
; 1720 : 	const_reference back() const
; 1721 : 		{	// return last element of nonmutable sequence
; 1722 : 		return (*(end() - 1));
; 1723 : 		}
; 1724 : 
; 1725 : 	const _Elem *c_str() const _NOEXCEPT
; 1726 : 		{	// return pointer to null-terminated nonmutable array
; 1727 : 		return (this->_Myptr());
; 1728 : 		}
; 1729 : 
; 1730 : 	const _Elem *data() const _NOEXCEPT
; 1731 : 		{	// return pointer to nonmutable array
; 1732 : 		return (c_str());
; 1733 : 		}
; 1734 : 
; 1735 : 	size_type length() const _NOEXCEPT
; 1736 : 		{	// return length of sequence
; 1737 : 		return (this->_Mysize());
; 1738 : 		}
; 1739 : 
; 1740 : 	size_type size() const _NOEXCEPT
; 1741 : 		{	// return length of sequence
; 1742 : 		return (this->_Mysize());
; 1743 : 		}
; 1744 : 
; 1745 : 	size_type max_size() const _NOEXCEPT
; 1746 : 		{	// return maximum possible length of sequence
; 1747 : 		const size_type _Num = this->_Getal().max_size();
; 1748 : 		return (_Num <= 1 ? 1 : _Num - 1);
; 1749 : 		}
; 1750 : 
; 1751 : 	void resize(size_type _Newsize)
; 1752 : 		{	// determine new length, padding with null elements as needed
; 1753 : 		resize(_Newsize, _Elem());
; 1754 : 		}
; 1755 : 
; 1756 : 	void resize(size_type _Newsize, _Elem _Ch)
; 1757 : 		{	// determine new length, padding with _Ch elements as needed
; 1758 : 		if (_Newsize <= this->_Mysize())
; 1759 : 			_Eos(_Newsize);
; 1760 : 		else
; 1761 : 			append(_Newsize - this->_Mysize(), _Ch);
; 1762 : 		}
; 1763 : 
; 1764 : 	size_type capacity() const _NOEXCEPT
; 1765 : 		{	// return current length of allocated storage
; 1766 : 		return (this->_Myres());
; 1767 : 		}
; 1768 : 
; 1769 : 	void reserve(size_type _Newcap = 0)
; 1770 : 		{	// determine new minimum length of allocated storage
; 1771 : 		if (this->_Mysize() <= _Newcap && this->_Myres() != _Newcap)
; 1772 : 			{	// change reservation
; 1773 : 			size_type _Size = this->_Mysize();
; 1774 : 			if (_Grow(_Newcap, true))
; 1775 : 				_Eos(_Size);
; 1776 : 			}
; 1777 : 		}
; 1778 : 
; 1779 : 	bool empty() const _NOEXCEPT
; 1780 : 		{	// test if sequence is empty
; 1781 : 		return (this->_Mysize() == 0);
; 1782 : 		}
; 1783 : 
; 1784 : 	_SCL_INSECURE_DEPRECATE
; 1785 : 
; 1786 : 	size_type copy(_Elem *_Ptr,
; 1787 : 		size_type _Count, size_type _Off = 0) const
; 1788 : 		{	// copy [_Off, _Off + _Count) to [_Ptr, _Ptr + _Count)
; 1789 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1790 : 		_Check_offset(_Off);
; 1791 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1792 : 		_Traits::copy(_Ptr, this->_Myptr() + _Off, _Count);
; 1793 : 		return (_Count);
; 1794 : 		}
; 1795 : 
; 1796 : 	size_type _Copy_s(_Elem *_Dest, size_type _Dest_size,
; 1797 : 		size_type _Count, size_type _Off = 0) const
; 1798 : 		{	// copy [_Off, _Off + _Count) to [_Dest, _Dest + _Count)
; 1799 : 		_DEBUG_POINTER_IF(_Count != 0, _Dest);
; 1800 : 		_Check_offset(_Off);
; 1801 : 		_Count = _Clamp_suffix_size(_Off, _Count);
; 1802 : 		_Traits::_Copy_s(_Dest, _Dest_size, this->_Myptr() + _Off, _Count);
; 1803 : 		return (_Count);
; 1804 : 		}
; 1805 : 
; 1806 : 	void _Swap_bx(_Myt& _Right)
; 1807 : 		{	// exchange _Bx() with _Right._Bx()
; 1808 : 		if (this->_BUF_SIZE <= this->_Myres())
; 1809 : 			if (this->_BUF_SIZE <= _Right._Myres())
; 1810 : 				_Swap_adl(this->_Bx()._Ptr, _Right._Bx()._Ptr);
; 1811 : 			else
; 1812 : 				{	// swap large with small
; 1813 : 				pointer _Ptr = this->_Bx()._Ptr;
; 1814 : 				this->_Getal().destroy(&this->_Bx()._Ptr);
; 1815 : 				_Traits::copy(this->_Bx()._Buf,
; 1816 : 					_Right._Bx()._Buf, _Right._Mysize() + 1);
; 1817 : 				this->_Getal().construct(&_Right._Bx()._Ptr, _Ptr);
; 1818 : 				}
; 1819 : 		else
; 1820 : 			if (_Right._Myres() < this->_BUF_SIZE)
; 1821 : 				_STD swap(this->_Bx()._Buf, _Right._Bx()._Buf);
; 1822 : 			else
; 1823 : 				{	// swap small with large
; 1824 : 				pointer _Ptr = _Right._Bx()._Ptr;
; 1825 : 				this->_Getal().destroy(&_Right._Bx()._Ptr);
; 1826 : 				_Traits::copy(_Right._Bx()._Buf,
; 1827 : 					this->_Bx()._Buf, this->_Mysize() + 1);
; 1828 : 				this->_Getal().construct(&this->_Bx()._Ptr, _Ptr);
; 1829 : 				}
; 1830 : 		}
; 1831 : 
; 1832 : 	void swap(_Myt& _Right)
; 1833 : 		_NOEXCEPT_OP(_Alty::propagate_on_container_swap::value
; 1834 : 			|| _Alty::is_always_equal::value)
; 1835 : 		{	// exchange contents with _Right
; 1836 : 		if (this == &_Right)
; 1837 : 			;	// same object, do nothing
; 1838 : 		else if (this->_Getal() == _Right._Getal())
; 1839 : 			{	// same allocator, swap control information
; 1840 : 			this->_Swap_all(_Right);
; 1841 : 			_Swap_bx(_Right);
; 1842 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1843 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1844 : 			}
; 1845 : 
; 1846 : 		else if (_Alty::propagate_on_container_swap::value)
; 1847 : 			{	// swap allocators and control information
; 1848 : 				// assumes pointer is bitwise copyable
; 1849 : 			this->_Swap_alloc(_Right);
; 1850 : 			_Swap_bx(_Right);
; 1851 : 			_STD swap(this->_Bx(), _Right._Bx());
; 1852 : 			_STD swap(this->_Mysize(), _Right._Mysize());
; 1853 : 			_STD swap(this->_Myres(), _Right._Myres());
; 1854 : 			}
; 1855 : 
; 1856 : 		else
; 1857 : 			{	// different allocator, do multiple assigns
; 1858 : 			_Myt _Tmp = *this;
; 1859 : 
; 1860 : 			*this = _Right;
; 1861 : 			_Right = _Tmp;
; 1862 : 			}
; 1863 : 		}
; 1864 : 
; 1865 : 	size_type find(const _Myt& _Right, size_type _Off = 0) const _NOEXCEPT
; 1866 : 		{	// look for _Right beginning at or after _Off
; 1867 : 		return (find(_Right._Myptr(), _Off, _Right.size()));
; 1868 : 		}
; 1869 : 
; 1870 : 	size_type find(const _Elem *_Ptr,
; 1871 : 		size_type _Off, size_type _Count) const
; 1872 : 		{	// look for [_Ptr, _Ptr + _Count) beginning at or after _Off
; 1873 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1874 : 		if (_Count == 0 && _Off <= this->_Mysize())
; 1875 : 			return (_Off);	// null string always matches (if inside string)
; 1876 : 
; 1877 : 		size_type _Nm;
; 1878 : 		if (_Off < this->_Mysize() && _Count <= (_Nm = this->_Mysize() - _Off))
; 1879 : 			{	// room for match, look for it
; 1880 : 			const _Elem *_Uptr, *_Vptr;
; 1881 : 			for (_Nm -= _Count - 1, _Vptr = this->_Myptr() + _Off;
; 1882 : 				(_Uptr = _Traits::find(_Vptr, _Nm, *_Ptr)) != 0;
; 1883 : 				_Nm -= _Uptr - _Vptr + 1, _Vptr = _Uptr + 1)
; 1884 : 				if (_Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1885 : 					return (_Uptr - this->_Myptr());	// found a match
; 1886 : 			}
; 1887 : 
; 1888 : 		return (npos);	// no match
; 1889 : 		}
; 1890 : 
; 1891 : 	size_type find(const _Elem *_Ptr, size_type _Off = 0) const
; 1892 : 		{	// look for [_Ptr, <null>) beginning at or after _Off
; 1893 : 		_DEBUG_POINTER(_Ptr);
; 1894 : 		return (find(_Ptr, _Off, _Traits::length(_Ptr)));
; 1895 : 		}
; 1896 : 
; 1897 : 	size_type find(_Elem _Ch, size_type _Off = 0) const
; 1898 : 		{	// look for _Ch at or after _Off
; 1899 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1900 : 		}
; 1901 : 
; 1902 : 	size_type rfind(const _Myt& _Right, size_type _Off = npos) const _NOEXCEPT
; 1903 : 		{	// look for _Right beginning before _Off
; 1904 : 		return (rfind(_Right._Myptr(), _Off, _Right.size()));
; 1905 : 		}
; 1906 : 
; 1907 : 	size_type rfind(const _Elem *_Ptr,
; 1908 : 		size_type _Off, size_type _Count) const
; 1909 : 		{	// look for [_Ptr, _Ptr + _Count) beginning before _Off
; 1910 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1911 : 		if (_Count == 0)
; 1912 : 			return (_Off < this->_Mysize() ? _Off
; 1913 : 				: this->_Mysize());	// null always matches
; 1914 : 		if (_Count <= this->_Mysize())
; 1915 : 			{	// room for match, look for it
; 1916 : 			const _Elem *_Uptr = this->_Myptr() +
; 1917 : 				(_Off < this->_Mysize() - _Count ? _Off
; 1918 : 					: this->_Mysize() - _Count);
; 1919 : 			for (; ; --_Uptr)
; 1920 : 				if (_Traits::eq(*_Uptr, *_Ptr)
; 1921 : 					&& _Traits::compare(_Uptr, _Ptr, _Count) == 0)
; 1922 : 					return (_Uptr - this->_Myptr());	// found a match
; 1923 : 				else if (_Uptr == this->_Myptr())
; 1924 : 					break;	// at beginning, no more chance for match
; 1925 : 			}
; 1926 : 
; 1927 : 		return (npos);	// no match
; 1928 : 		}
; 1929 : 
; 1930 : 	size_type rfind(const _Elem *_Ptr, size_type _Off = npos) const
; 1931 : 		{	// look for [_Ptr, <null>) beginning before _Off
; 1932 : 		_DEBUG_POINTER(_Ptr);
; 1933 : 		return (rfind(_Ptr, _Off, _Traits::length(_Ptr)));
; 1934 : 		}
; 1935 : 
; 1936 : 	size_type rfind(_Elem _Ch, size_type _Off = npos) const
; 1937 : 		{	// look for _Ch before _Off
; 1938 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 1939 : 		}
; 1940 : 
; 1941 : 	size_type find_first_of(const _Myt& _Right,
; 1942 : 		size_type _Off = 0) const _NOEXCEPT
; 1943 : 		{	// look for one of _Right at or after _Off
; 1944 : 		return (find_first_of(_Right._Myptr(), _Off, _Right.size()));
; 1945 : 		}
; 1946 : 
; 1947 : 	size_type find_first_of(const _Elem *_Ptr,
; 1948 : 		size_type _Off, size_type _Count) const
; 1949 : 		{	// look for one of [_Ptr, _Ptr + _Count) at or after _Off
; 1950 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1951 : 		if (0 < _Count && _Off < this->_Mysize())
; 1952 : 			{	// room for match, look for it
; 1953 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 1954 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 1955 : 				_Uptr < _Vptr; ++_Uptr)
; 1956 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1957 : 					return (_Uptr - this->_Myptr());	// found a match
; 1958 : 			}
; 1959 : 
; 1960 : 		return (npos);	// no match
; 1961 : 		}
; 1962 : 
; 1963 : 	size_type find_first_of(const _Elem *_Ptr,
; 1964 : 		size_type _Off = 0) const
; 1965 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 1966 : 		_DEBUG_POINTER(_Ptr);
; 1967 : 		return (find_first_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 1968 : 		}
; 1969 : 
; 1970 : 	size_type find_first_of(_Elem _Ch,
; 1971 : 		size_type _Off = 0) const
; 1972 : 		{	// look for _Ch at or after _Off
; 1973 : 		return (find((const _Elem *)&_Ch, _Off, 1));
; 1974 : 		}
; 1975 : 
; 1976 : 	size_type find_last_of(const _Myt& _Right,
; 1977 : 		size_type _Off = npos) const _NOEXCEPT
; 1978 : 		{	// look for one of _Right before _Off
; 1979 : 		return (find_last_of(_Right._Myptr(), _Off, _Right.size()));
; 1980 : 		}
; 1981 : 
; 1982 : 	size_type find_last_of(const _Elem *_Ptr,
; 1983 : 		size_type _Off, size_type _Count) const
; 1984 : 		{	// look for one of [_Ptr, _Ptr + _Count) before _Off
; 1985 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 1986 : 		if (0 < _Count && 0 < this->_Mysize())
; 1987 : 			{	// worth searching, do it
; 1988 : 			const _Elem *_Uptr = this->_Myptr()
; 1989 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 1990 : 			for (; ; --_Uptr)
; 1991 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)
; 1992 : 					return (_Uptr - this->_Myptr());	// found a match
; 1993 : 				else if (_Uptr == this->_Myptr())
; 1994 : 					break;	// at beginning, no more chance for match
; 1995 : 			}
; 1996 : 
; 1997 : 		return (npos);	// no match
; 1998 : 		}
; 1999 : 
; 2000 : 	size_type find_last_of(const _Elem *_Ptr,
; 2001 : 		size_type _Off = npos) const
; 2002 : 		{	// look for one of [_Ptr, <null>) before _Off
; 2003 : 		_DEBUG_POINTER(_Ptr);
; 2004 : 		return (find_last_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2005 : 		}
; 2006 : 
; 2007 : 	size_type find_last_of(_Elem _Ch,
; 2008 : 		size_type _Off = npos) const
; 2009 : 		{	// look for _Ch before _Off
; 2010 : 		return (rfind((const _Elem *)&_Ch, _Off, 1));
; 2011 : 		}
; 2012 : 
; 2013 : 	size_type find_first_not_of(const _Myt& _Right,
; 2014 : 		size_type _Off = 0) const _NOEXCEPT
; 2015 : 		{	// look for none of _Right at or after _Off
; 2016 : 		return (find_first_not_of(_Right._Myptr(), _Off,
; 2017 : 			_Right.size()));
; 2018 : 		}
; 2019 : 
; 2020 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2021 : 		size_type _Off, size_type _Count) const
; 2022 : 		{	// look for none of [_Ptr, _Ptr + _Count) at or after _Off
; 2023 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2024 : 		if (_Off < this->_Mysize())
; 2025 : 			{	// room for match, look for it
; 2026 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();
; 2027 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;
; 2028 : 				_Uptr < _Vptr; ++_Uptr)
; 2029 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2030 : 					return (_Uptr - this->_Myptr());
; 2031 : 			}
; 2032 : 		return (npos);
; 2033 : 		}
; 2034 : 
; 2035 : 	size_type find_first_not_of(const _Elem *_Ptr,
; 2036 : 		size_type _Off = 0) const
; 2037 : 		{	// look for one of [_Ptr, <null>) at or after _Off
; 2038 : 		_DEBUG_POINTER(_Ptr);
; 2039 : 		return (find_first_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2040 : 		}
; 2041 : 
; 2042 : 	size_type find_first_not_of(_Elem _Ch,
; 2043 : 		size_type _Off = 0) const
; 2044 : 		{	// look for non _Ch at or after _Off
; 2045 : 		return (find_first_not_of((const _Elem *)&_Ch, _Off, 1));
; 2046 : 		}
; 2047 : 
; 2048 : 	size_type find_last_not_of(const _Myt& _Right,
; 2049 : 		size_type _Off = npos) const _NOEXCEPT
; 2050 : 		{	// look for none of _Right before _Off
; 2051 : 		return (find_last_not_of(_Right._Myptr(), _Off, _Right.size()));
; 2052 : 		}
; 2053 : 
; 2054 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2055 : 		size_type _Off, size_type _Count) const
; 2056 : 		{	// look for none of [_Ptr, _Ptr + _Count) before _Off
; 2057 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2058 : 		if (0 < this->_Mysize())
; 2059 : 			{	// worth searching, do it
; 2060 : 			const _Elem *_Uptr = this->_Myptr()
; 2061 : 				+ (_Off < this->_Mysize() ? _Off : this->_Mysize() - 1);
; 2062 : 			for (; ; --_Uptr)
; 2063 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)
; 2064 : 					return (_Uptr - this->_Myptr());
; 2065 : 				else if (_Uptr == this->_Myptr())
; 2066 : 					break;
; 2067 : 			}
; 2068 : 		return (npos);
; 2069 : 		}
; 2070 : 
; 2071 : 	size_type find_last_not_of(const _Elem *_Ptr,
; 2072 : 		size_type _Off = npos) const
; 2073 : 		{	// look for none of [_Ptr, <null>) before _Off
; 2074 : 		_DEBUG_POINTER(_Ptr);
; 2075 : 		return (find_last_not_of(_Ptr, _Off, _Traits::length(_Ptr)));
; 2076 : 		}
; 2077 : 
; 2078 : 	size_type find_last_not_of(_Elem _Ch,
; 2079 : 		size_type _Off = npos) const
; 2080 : 		{	// look for non _Ch before _Off
; 2081 : 		return (find_last_not_of((const _Elem *)&_Ch, _Off, 1));
; 2082 : 		}
; 2083 : 
; 2084 : 	_Myt substr(size_type _Off = 0, size_type _Count = npos) const
; 2085 : 		{	// return [_Off, _Off + _Count) as new string
; 2086 : 		return (_Myt(*this, _Off, _Count, get_allocator()));
; 2087 : 		}
; 2088 : 
; 2089 : 	static int _Traits_compare(const _Elem * const _Left, const size_type _Left_size,
; 2090 : 		const _Elem * const _Right, const size_type _Right_size)
; 2091 : 		{	// compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 2092 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;
; 2093 : 		const int _Ans = _Traits::compare(_Left, _Right, _Min_size);
; 2094 : 
; 2095 : 		if (_Ans != 0)
; 2096 : 			return (_Ans);
; 2097 : 
; 2098 : 		if (_Left_size < _Right_size)
; 2099 : 			return (-1);
; 2100 : 
; 2101 : 		if (_Left_size > _Right_size)
; 2102 : 			return (1);
; 2103 : 
; 2104 : 		return (0);
; 2105 : 		}
; 2106 : 
; 2107 : 	size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const
; 2108 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off
; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;
; 2110 : 		if (_Size <= _Max_effective_size)
; 2111 : 			return (_Size);
; 2112 : 		else
; 2113 : 			return (_Max_effective_size);
; 2114 : 		}
; 2115 : 
; 2116 : 	int compare(const _Myt& _Right) const _NOEXCEPT
; 2117 : 		{	// compare [0, _Mysize()) with _Right
; 2118 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2119 : 			_Right._Myptr(), _Right._Mysize()));
; 2120 : 		}
; 2121 : 
; 2122 : 	int compare(size_type _Off,
; 2123 : 		size_type _N0, const _Myt& _Right) const
; 2124 : 		{	// compare [_Off, _Off + _N0) with _Right
; 2125 : 		_Check_offset(_Off);
; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2127 : 			_Right._Myptr(), _Right._Mysize()));
; 2128 : 		}
; 2129 : 
; 2130 : 	int compare(size_type _Off,
; 2131 : 		size_type _N0, const _Myt& _Right,
; 2132 : 		size_type _Roff, size_type _Count = npos) const
; 2133 : 		{	// compare [_Off, _Off + _N0) with _Right [_Roff, _Roff + _Count)
; 2134 : 		_Check_offset(_Off);
; 2135 : 		_Right._Check_offset(_Roff);
; 2136 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2137 : 			_Right._Myptr() + _Roff, _Right._Clamp_suffix_size(_Roff, _Count)));
; 2138 : 		}
; 2139 : 
; 2140 : 	int compare(const _Elem *_Ptr) const
; 2141 : 		{	// compare [0, _Mysize()) with [_Ptr, <null>)
; 2142 : 		_DEBUG_POINTER(_Ptr);
; 2143 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),
; 2144 : 			_Ptr, _Traits::length(_Ptr)));
; 2145 : 		}
; 2146 : 
; 2147 : 	int compare(size_type _Off, size_type _N0, const _Elem *_Ptr) const
; 2148 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, <null>)
; 2149 : 		_DEBUG_POINTER(_Ptr);
; 2150 : 		_Check_offset(_Off);
; 2151 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2152 : 			_Ptr, _Traits::length(_Ptr)));
; 2153 : 		}
; 2154 : 
; 2155 : 	int compare(size_type _Off,
; 2156 : 		size_type _N0, const _Elem *_Ptr, size_type _Count) const
; 2157 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 2158 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);
; 2159 : 		_Check_offset(_Off);
; 2160 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),
; 2161 : 			_Ptr, _Count));
; 2162 : 		}
; 2163 : 
; 2164 : 	allocator_type get_allocator() const _NOEXCEPT
; 2165 : 		{	// return allocator object for values
; 2166 : 		return (this->_Getal());
; 2167 : 		}
; 2168 : 
; 2169 : 	void _Chassign(size_type _Off, size_type _Count, _Elem _Ch)
; 2170 : 		{	// assign _Count copies of _Ch beginning at _Off
; 2171 : 		if (_Count == 1)
; 2172 : 			_Traits::assign(*(this->_Myptr() + _Off), _Ch);
; 2173 : 		else
; 2174 : 			_Traits::assign(this->_Myptr() + _Off, _Count, _Ch);
; 2175 : 		}
; 2176 : 
; 2177 : 	void _Copy(size_type _Newsize, size_type _Oldlen)
; 2178 : 		{	// copy _Oldlen elements to newly allocated buffer
; 2179 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;
; 2180 : 		if (max_size() < _Newres)
; 2181 : 			_Newres = _Newsize;	// undo roundup if too big
; 2182 : 		else if (this->_Myres() / 2 <= _Newres / 3)
; 2183 : 			;
; 2184 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)
; 2185 : 			_Newres = this->_Myres()
; 2186 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2187 : 		else
; 2188 : 			_Newres = max_size();	// settle for max_size()
; 2189 : 
; 2190 : 		_Elem *_Ptr;
; 2191 : 		_TRY_BEGIN
; 2192 : 			_Ptr = this->_Getal().allocate(_Newres + 1);
; 2193 : 		_CATCH_ALL
; 2194 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2195 : 			_TRY_BEGIN
; 2196 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2197 : 			_CATCH_ALL

  00033	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00038	53		 push	 rbx
  00039	55		 push	 rbp
  0003a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003e	48 8b ea	 mov	 rbp, rdx
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z$1:

; 728  : 		return (_Get_data()._Myres);

  00041	48 8b 5d 60	 mov	 rbx, QWORD PTR this$[rbp]

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00045	48 8b 43 18	 mov	 rax, QWORD PTR [rbx+24]
  00049	48 83 f8 10	 cmp	 rax, 16
  0004d	72 57		 jb	 SHORT $LN237@catch$0

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0004f	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00052	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00055	48 83 f8 ff	 cmp	 rax, -1
  00059	76 06		 jbe	 SHORT $LN231@catch$0
  0005b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00060	cc		 int	 3
$LN231@catch$0:

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00061	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00067	72 38		 jb	 SHORT $LN232@catch$0

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00069	f6 c1 1f	 test	 cl, 31
  0006c	74 06		 je	 SHORT $LN233@catch$0
  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN233@catch$0:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00074	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00078	48 3b c1	 cmp	 rax, rcx
  0007b	72 06		 jb	 SHORT $LN234@catch$0
  0007d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00082	cc		 int	 3
$LN234@catch$0:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00083	48 2b c8	 sub	 rcx, rax
  00086	48 83 f9 08	 cmp	 rcx, 8
  0008a	73 06		 jae	 SHORT $LN235@catch$0
  0008c	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00091	cc		 int	 3
$LN235@catch$0:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00092	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00096	76 06		 jbe	 SHORT $LN236@catch$0
  00098	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0009d	cc		 int	 3
$LN236@catch$0:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0009e	48 8b c8	 mov	 rcx, rax
$LN232@catch$0:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  000a1	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN237@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000a6	48 c7 43 18 0f
	00 00 00	 mov	 QWORD PTR [rbx+24], 15

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000ae	48 c7 43 10 00
	00 00 00	 mov	 QWORD PTR [rbx+16], 0

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000b6	48 83 7b 18 10	 cmp	 QWORD PTR [rbx+24], 16
  000bb	72 03		 jb	 SHORT $LN272@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000bd	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
$LN272@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 565  : 		_Left = _Right;

  000c0	c6 03 00	 mov	 BYTE PTR [rbx], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2199 : 			_RERAISE;

  000c3	33 d2		 xor	 edx, edx
  000c5	33 c9		 xor	 ecx, ecx
  000c7	e8 00 00 00 00	 call	 _CxxThrowException
  000cc	90		 npad	 1
?catch$0@?0??_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 1747 : 		const size_type _Num = this->_Getal().max_size();
; 1748 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	48 c7 c0 fe ff
	ff ff		 mov	 rax, -2

; 1749 : 		}

  00007	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 10	 cmp	 QWORD PTR [rcx+24], 16
  00005	72 07		 jb	 SHORT $LN13@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00007	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1692 : 		return (this->_Myptr()[_Off]);

  0000a	48 03 c2	 add	 rax, rdx

; 1693 : 		}

  0000d	c3		 ret	 0
$LN13@operator:

; 1692 : 		return (this->_Myptr()[_Off]);

  0000e	48 8d 04 11	 lea	 rax, QWORD PTR [rcx+rdx]

; 1693 : 		}

  00012	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 619  : 		{	// deallocate object at _Ptr

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0000e	4c 3b c0	 cmp	 r8, rax
  00011	77 38		 ja	 SHORT $LN13@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;

  00013	4b 8d 04 00	 lea	 rax, QWORD PTR [r8+r8]

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  00017	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  0001d	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  0001f	f6 c2 1f	 test	 dl, 31
  00022	75 2d		 jne	 SHORT $LN15@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00024	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00028	48 3b c2	 cmp	 rax, rdx
  0002b	73 2a		 jae	 SHORT $LN16@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0002d	48 2b d0	 sub	 rdx, rax
  00030	48 83 fa 08	 cmp	 rdx, 8
  00034	72 27		 jb	 SHORT $LN17@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00036	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0003a	77 27		 ja	 SHORT $LN18@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  0003c	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  0003f	48 8b ca	 mov	 rcx, rdx

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 621  : 		}

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  00046	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN15@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN16@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN17@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0005d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00062	cc		 int	 3
$LN18@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00063	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00068	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@_W@std@@QEAA@AEBV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 604  : 		{	// construct by copying (do nothing)
; 605  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@_W@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAHXZ PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::pubsync, COMDAT

; 145  : 		return (sync());

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 68	 rex_jmp QWORD PTR [rax+104]
?pubsync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAHXZ ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::pubsync
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 619  : 		{	// deallocate object at _Ptr

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00004	49 83 f8 ff	 cmp	 r8, -1
  00008	77 35		 ja	 SHORT $LN13@deallocate

; 95   : 	const size_t _User_size = _Count * _Sz;
; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0000a	49 81 f8 00 10
	00 00		 cmp	 r8, 4096		; 00001000H
  00011	72 20		 jb	 SHORT $LN5@deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00013	f6 c2 1f	 test	 dl, 31
  00016	75 2d		 jne	 SHORT $LN15@deallocate

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00018	48 8b 42 f8	 mov	 rax, QWORD PTR [rdx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0001c	48 3b c2	 cmp	 rax, rdx
  0001f	73 2a		 jae	 SHORT $LN16@deallocate

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00021	48 2b d0	 sub	 rdx, rax
  00024	48 83 fa 08	 cmp	 rdx, 8
  00028	72 27		 jb	 SHORT $LN17@deallocate

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0002a	48 83 fa 27	 cmp	 rdx, 39			; 00000027H
  0002e	77 27		 ja	 SHORT $LN18@deallocate

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00030	48 8b d0	 mov	 rdx, rax
$LN5@deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00033	48 8b ca	 mov	 rcx, rdx

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));
; 621  : 		}

  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H

; 132  : 	::operator delete(_Ptr);

  0003a	e9 00 00 00 00	 jmp	 ??3@YAXPEAX@Z		; operator delete
$LN13@deallocate:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0003f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00044	cc		 int	 3
$LN15@deallocate:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00045	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0004a	cc		 int	 3
$LN16@deallocate:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0004b	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00050	cc		 int	 3
$LN17@deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00051	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00056	cc		 int	 3
$LN18@deallocate:

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00057	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0005c	cc		 int	 3
$LN12@deallocate:
?deallocate@?$allocator@D@std@@QEAAXPEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@D@std@@QEAA@AEBV01@@Z PROC		; std::allocator<char>::allocator<char>, COMDAT

; 604  : 		{	// construct by copying (do nothing)
; 605  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first, COMDAT

; 299  : 		return (*this);

  00000	48 8b c1	 mov	 rax, rcx

; 300  : 		}

  00003	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 767  : 		return (_Al.max_size());

  00000	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH

; 768  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate, COMDAT

; 624  : 		{	// allocate array of _Count elements

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN3@allocate:

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN4@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0001a	48 3b d0	 cmp	 rdx, rax
  0001d	77 43		 ja	 SHORT $LN14@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  0001f	48 c1 e2 05	 shl	 rdx, 5

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00023	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0002a	72 27		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002c	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  00030	48 3b ca	 cmp	 rcx, rdx
  00033	76 33		 jbe	 SHORT $LN16@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003a	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0003d	48 85 c0	 test	 rax, rax
  00040	74 2c		 je	 SHORT $LN17@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00042	48 83 c0 27	 add	 rax, 39			; 00000027H
  00046	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0004a	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00053	48 8b ca	 mov	 rcx, rdx
  00056	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0005b	48 85 c0	 test	 rax, rax
  0005e	75 ab		 jne	 SHORT $LN3@allocate
  00060	eb 12		 jmp	 SHORT $LN18@allocate
$LN14@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00062	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00067	cc		 int	 3
$LN16@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00068	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006d	cc		 int	 3
$LN17@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN18@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00074	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00079	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT

; 906  : 		return (_Mytraits::max_size(*this));

  00000	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 907  : 		}

  0000a	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT

; 873  : 		{	// allocate array of _Count elements

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN6@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN5@allocate:

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN6@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0001a	48 3b d0	 cmp	 rdx, rax
  0001d	77 43		 ja	 SHORT $LN17@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  0001f	48 8d 0c 12	 lea	 rcx, QWORD PTR [rdx+rdx]

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00023	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0002a	72 2a		 jb	 SHORT $LN8@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002c	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00030	48 3b c1	 cmp	 rax, rcx
  00033	76 33		 jbe	 SHORT $LN19@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003d	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00040	48 85 c0	 test	 rax, rax
  00043	74 29		 je	 SHORT $LN20@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00045	48 83 c0 27	 add	 rax, 39			; 00000027H
  00049	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0004d	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  00051	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00055	c3		 ret	 0
$LN8@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00056	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0005b	48 85 c0	 test	 rax, rax
  0005e	75 ab		 jne	 SHORT $LN5@allocate
  00060	eb 12		 jmp	 SHORT $LN21@allocate
$LN17@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00062	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00067	cc		 int	 3
$LN19@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00068	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006d	cc		 int	 3
$LN20@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN21@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00074	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00079	cc		 int	 3
$LN16@allocate:
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z
_TEXT	SEGMENT
this$ = 8
_Al$ = 16
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc, COMDAT

; 585  : 		_Pocca(_Getal(), _Al);
; 586  : 		}

  00000	c2 00 00	 ret	 0
?_Copy_alloc@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Copy_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT

; 906  : 		return (_Mytraits::max_size(*this));

  00000	48 83 c8 ff	 or	 rax, -1

; 907  : 		}

  00004	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT

; 873  : 		{	// allocate array of _Count elements

$LN22:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN6@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN5@allocate:

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN6@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 83 fa ff	 cmp	 rdx, -1
  00014	77 3f		 ja	 SHORT $LN17@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;
; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00016	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0001d	72 27		 jb	 SHORT $LN8@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0001f	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  00023	48 3b ca	 cmp	 rcx, rdx
  00026	76 33		 jbe	 SHORT $LN19@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00028	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0002d	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00030	48 85 c0	 test	 rax, rax
  00033	74 2c		 je	 SHORT $LN20@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00035	48 83 c0 27	 add	 rax, 39			; 00000027H
  00039	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0003d	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 874  : 		return (_Mybase::allocate(_Count));
; 875  : 		}

  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
$LN8@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00046	48 8b ca	 mov	 rcx, rdx
  00049	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0004e	48 85 c0	 test	 rax, rax
  00051	75 b8		 jne	 SHORT $LN5@allocate
  00053	eb 12		 jmp	 SHORT $LN21@allocate
$LN17@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00055	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0005a	cc		 int	 3
$LN19@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0005b	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00060	cc		 int	 3
$LN20@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00061	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00066	cc		 int	 3
$LN21@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00067	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006c	cc		 int	 3
$LN16@allocate:
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAPEAD_K@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1181 : 		{	// assign _Count * _Ch

$LN199:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	41 0f b7 e8	 movzx	 ebp, r8w
  00013	48 8b f2	 mov	 rsi, rdx
  00016	48 8b d9	 mov	 rbx, rcx

; 1182 : 		if (_Count == npos)

  00019	48 83 fa ff	 cmp	 rdx, -1
  0001d	0f 84 c1 00 00
	00		 je	 $LN196@assign

; 2220 : 		if (max_size() < _Newsize)

  00023	48 b8 fe ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775806 ; 7ffffffffffffffeH
  0002d	48 3b d0	 cmp	 rdx, rax
  00030	0f 87 bb 00 00
	00		 ja	 $LN198@assign

; 2221 : 			_Xlen();	// result too long
; 2222 : 		if (this->_Myres() < _Newsize)

  00036	48 39 51 18	 cmp	 QWORD PTR [rcx+24], rdx
  0003a	73 27		 jae	 SHORT $LN10@assign

; 2223 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

  0003c	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00040	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
$LN107@assign:

; 2228 : 			_Eos(0);	// new size is zero, just null terminate
; 2229 : 		return (0 < _Newsize);	// return true only if more work to do

  00045	48 85 f6	 test	 rsi, rsi

; 1183 : 			_Xlen();	// result too long
; 1184 : 
; 1185 : 		if (_Grow(_Count))

  00048	0f 84 83 00 00
	00		 je	 $LN189@assign

; 2171 : 		if (_Count == 1)

  0004e	48 83 fe 01	 cmp	 rsi, 1
  00052	75 42		 jne	 SHORT $LN110@assign

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00054	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00059	72 33		 jb	 SHORT $LN123@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0005b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0005e	66 89 28	 mov	 WORD PTR [rax], bp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  00061	eb 55		 jmp	 SHORT $LN157@assign
$LN10@assign:

; 2227 : 		else if (_Newsize == 0)

  00063	48 85 d2	 test	 rdx, rdx
  00066	75 dd		 jne	 SHORT $LN107@assign

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00068	33 c0		 xor	 eax, eax
  0006a	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0006e	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8
  00073	72 03		 jb	 SHORT $LN99@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00075	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN99@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00078	66 89 01	 mov	 WORD PTR [rcx], ax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1190 : 		return (*this);

  0007b	48 8b c3	 mov	 rax, rbx

; 1191 : 		}

  0007e	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00083	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00088	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008c	5e		 pop	 rsi
  0008d	c3		 ret	 0
$LN123@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008e	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00091	66 89 2b	 mov	 WORD PTR [rbx], bp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2173 : 		else

  00094	eb 22		 jmp	 SHORT $LN157@assign
$LN110@assign:

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00096	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  0009b	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  000a0	72 05		 jb	 SHORT $LN144@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000a2	48 8b 3b	 mov	 rdi, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000a5	eb 03		 jmp	 SHORT $LN145@assign
$LN144@assign:
  000a7	48 8b fb	 mov	 rdi, rbx
$LN145@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 340  : 		return ((_Elem *)_CSTD wmemset(_First, _Ch, _Count));

  000aa	0f b7 c5	 movzx	 eax, bp
  000ad	48 8b ce	 mov	 rcx, rsi
  000b0	66 f3 ab	 rep stosw
  000b3	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
$LN157@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000b8	48 89 73 10	 mov	 QWORD PTR [rbx+16], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000bc	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  000c1	72 05		 jb	 SHORT $LN180@assign
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  000c3	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  000c6	eb 03		 jmp	 SHORT $LN181@assign
$LN180@assign:
  000c8	48 8b cb	 mov	 rcx, rbx
$LN181@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000cb	33 c0		 xor	 eax, eax
  000cd	66 89 04 71	 mov	 WORD PTR [rcx+rsi*2], ax
$LN189@assign:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1191 : 		}

  000d1	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000d6	48 8b c3	 mov	 rax, rbx
  000d9	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000de	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e2	5e		 pop	 rsi
  000e3	c3		 ret	 0
$LN196@assign:

; 2261 : 		_Xlength_error("string too long");

  000e4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000eb	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000f0	cc		 int	 3
$LN198@assign:
  000f1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  000f8	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  000fd	cc		 int	 3
$LN195@assign:
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1139 : 		return (assign(_Right, 0, npos));

  00000	49 83 c9 ff	 or	 r9, -1
  00004	45 33 c0	 xor	 r8d, r8d
  00007	e9 00 00 00 00	 jmp	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBA_JXZ PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pnavail, COMDAT

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00000	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  00004	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00008	74 08		 je	 SHORT $LN3@Pnavail
  0000a	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  0000e	48 63 00	 movsxd	 rax, DWORD PTR [rax]

; 315  : 		}

  00011	c3		 ret	 0
$LN3@Pnavail:

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00012	33 c0		 xor	 eax, eax
  00014	48 98		 cdqe

; 315  : 		}

  00016	c3		 ret	 0
?_Pnavail@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBA_JXZ ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pnavail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputc, COMDAT

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00000	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]

; 199  : 		{	// put a character

  00004	44 0f b7 c2	 movzx	 r8d, dx

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00008	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0000c	74 25		 je	 SHORT $LN3@sputc
  0000e	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00012	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00014	85 c0		 test	 eax, eax
  00016	7e 1b		 jle	 SHORT $LN3@sputc

; 308  : 		--*_IPcount;

  00018	ff c8		 dec	 eax
  0001a	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0001c	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00020	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00023	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  00027	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0002a	41 0f b7 c0	 movzx	 eax, r8w
  0002e	66 44 89 02	 mov	 WORD PTR [rdx], r8w

; 201  : 			? _Traits::to_int_type(*_Pninc() = _Ch)
; 202  : 			: overflow(_Traits::to_int_type(_Ch)));
; 203  : 		}

  00032	c3		 ret	 0
$LN3@sputc:

; 200  : 		return (0 < _Pnavail()

  00033	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00036	41 0f b7 d0	 movzx	 edx, r8w
  0003a	48 ff 60 18	 rex_jmp QWORD PTR [rax+24]
?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAG_W@Z ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size, COMDAT

; 649  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH

; 650  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
_TEXT	SEGMENT
_Al$ = 8
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 767  : 		return (_Al.max_size());

  00000	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 768  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
_Al$ = 8
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 767  : 		return (_Al.max_size());

  00000	48 83 c8 ff	 or	 rax, -1

; 768  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 624  : 		{	// allocate array of _Count elements

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN3@allocate:

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN4@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0001a	48 3b d0	 cmp	 rdx, rax
  0001d	77 43		 ja	 SHORT $LN14@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;

  0001f	48 8d 0c 12	 lea	 rcx, QWORD PTR [rdx+rdx]

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00023	48 81 f9 00 10
	00 00		 cmp	 rcx, 4096		; 00001000H
  0002a	72 2a		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0002c	48 8d 41 27	 lea	 rax, QWORD PTR [rcx+39]

; 66   : 		if (_Block_size <= _User_size)

  00030	48 3b c1	 cmp	 rax, rcx
  00033	76 33		 jbe	 SHORT $LN16@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003d	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00040	48 85 c0	 test	 rax, rax
  00043	74 29		 je	 SHORT $LN17@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00045	48 83 c0 27	 add	 rax, 39			; 00000027H
  00049	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0004d	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  00051	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00055	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00056	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0005b	48 85 c0	 test	 rax, rax
  0005e	75 ab		 jne	 SHORT $LN3@allocate
  00060	eb 12		 jmp	 SHORT $LN18@allocate
$LN14@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00062	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00067	cc		 int	 3
$LN16@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  00068	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0006d	cc		 int	 3
$LN17@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  0006e	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00073	cc		 int	 3
$LN18@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00074	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00079	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pninc, COMDAT

; 308  : 		--*_IPcount;

  00000	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00004	ff 08		 dec	 DWORD PTR [rax]

; 309  : 		return ((*_IPnext)++);

  00006	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  0000a	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0000d	48 8d 48 02	 lea	 rcx, QWORD PTR [rax+2]
  00011	48 89 0a	 mov	 QWORD PTR [rdx], rcx

; 310  : 		}

  00014	c3		 ret	 0
?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Pninc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 624  : 		{	// allocate array of _Count elements

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 51   : 	if (_Count == 0)

  00004	48 85 d2	 test	 rdx, rdx
  00007	75 07		 jne	 SHORT $LN4@allocate

; 52   : 		return (_Ptr);

  00009	33 c0		 xor	 eax, eax
$LN3@allocate:

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
$LN4@allocate:

; 55   : 	if ((size_t)(-1) / _Sz < _Count)

  00010	48 83 fa ff	 cmp	 rdx, -1
  00014	77 3f		 ja	 SHORT $LN14@allocate

; 57   : 	const size_t _User_size = _Count * _Sz;
; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

  00016	48 81 fa 00 10
	00 00		 cmp	 rdx, 4096		; 00001000H
  0001d	72 27		 jb	 SHORT $LN6@allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

  0001f	48 8d 4a 27	 lea	 rcx, QWORD PTR [rdx+39]

; 66   : 		if (_Block_size <= _User_size)

  00023	48 3b ca	 cmp	 rcx, rdx
  00026	76 33		 jbe	 SHORT $LN16@allocate

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00028	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0002d	48 8b c8	 mov	 rcx, rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00030	48 85 c0	 test	 rax, rax
  00033	74 2c		 je	 SHORT $LN17@allocate

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

  00035	48 83 c0 27	 add	 rax, 39			; 00000027H
  00039	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0003d	48 89 48 f8	 mov	 QWORD PTR [rax-8], rcx

; 625  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));
; 626  : 		}

  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
$LN6@allocate:

; 83   : 		_Ptr = ::operator new(_User_size);

  00046	48 8b ca	 mov	 rcx, rdx
  00049	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  0004e	48 85 c0	 test	 rax, rax
  00051	75 b8		 jne	 SHORT $LN3@allocate
  00053	eb 12		 jmp	 SHORT $LN18@allocate
$LN14@allocate:

; 56   : 		_Xbad_alloc();	// report no memory

  00055	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  0005a	cc		 int	 3
$LN16@allocate:

; 67   : 			_Xbad_alloc();	// report no memory

  0005b	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00060	cc		 int	 3
$LN17@allocate:

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00061	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00066	cc		 int	 3
$LN18@allocate:

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

  00067	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0006c	cc		 int	 3
$LN13@allocate:
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@_W@std@@QEBA_KXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT

; 649  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 650  : 		}

  0000a	c3		 ret	 0
?max_size@?$allocator@_W@std@@QEBA_KXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@D@std@@QEBA_KXZ PROC		; std::allocator<char>::max_size, COMDAT

; 649  : 		return ((size_t)(-1) / sizeof (_Ty));

  00000	48 83 c8 ff	 or	 rax, -1

; 650  : 		}

  00004	c3		 ret	 0
?max_size@?$allocator@D@std@@QEBA_KXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c2 00 00	 ret	 0
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ
_TEXT	SEGMENT
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ PROC ; std::_Immortalize<std::_Iostream_error_category>, COMDAT

; 697  : 	{	// return a reference to an object that will live forever

$LN23:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 698  : 	static _Immortalizer<_Ty> _Static;

  00004	65 48 8b 04 25
	58 00 00 00	 mov	 rax, QWORD PTR gs:88
  0000d	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:_Init_thread_epoch
  00012	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00015	8b 04 0a	 mov	 eax, DWORD PTR [rdx+rcx]
  00018	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, eax ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0001e	7f 0c		 jg	 SHORT $LN21@Immortaliz
$LN19@Immortaliz:

; 699  : 	return (*reinterpret_cast<_Ty *>(&_Static._Storage));

  00020	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::_Static

; 700  : 	}

  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	c3		 ret	 0
$LN21@Immortaliz:

; 698  : 	static _Immortalizer<_Ty> _Static;

  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  00033	e8 00 00 00 00	 call	 _Init_thread_header
  00038	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA, -1 ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0003f	75 df		 jne	 SHORT $LN19@Immortaliz

; 616  : 		{	// default constructor

  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  00048	48 c7 05 08 00
	00 00 05 00 00
	00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A+8, 5

; 698  : 	static _Immortalizer<_Ty> _Static;

  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''

; 616  : 		{	// default constructor

  0005a	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4U?$_Immortalizer@V_Iostream_error_category@std@@@1@A, rax

; 698  : 	static _Immortalizer<_Ty> _Static;

  00061	e8 00 00 00 00	 call	 atexit
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@1@XZ@4HA ; TSS0<`template-parameter-2',unsigned int,std::V_Iostream_error_category::mortalize>
  0006d	e8 00 00 00 00	 call	 _Init_thread_footer
  00072	eb ac		 jmp	 SHORT $LN19@Immortaliz
??$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ ENDP ; std::_Immortalize<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$dead$ = 56
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z PROC ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2504 : 	{	// test for string vs. NTCS inequality

$LN39:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00004	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8

; 723  : 		return (_Get_data()._Mysize);

  00009	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	72 03		 jb	 SHORT $LN31@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN31@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2143 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),

  00012	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00015	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG4294967196
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	e8 00 00 00 00	 call	 ?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare

; 2475 : 	return (_Left.compare(_Right) == 0);

  00024	85 c0		 test	 eax, eax

; 2505 : 	return (!(_Left == _Right));

  00026	0f 95 c0	 setne	 al

; 2506 : 	}

  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z ENDP ; std::operator!=<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$cbegin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$cbegin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z PROC ; std::cbegin<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 1347 : 	return (_STD begin(_Cont));

  00006	48 8b c1	 mov	 rax, rcx

; 1348 : 	}

  00009	c3		 ret	 0
??$cbegin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ENDP ; std::cbegin<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$cend@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$cend@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z PROC ; std::cend<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 1355 : 	return (_STD end(_Cont));

  00007	48 8b c1	 mov	 rax, rcx

; 1356 : 	}

  0000a	c3		 ret	 0
??$cend@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ENDP ; std::cend<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
;	COMDAT ??$any_of@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Pred$ = 64
??$any_of@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z PROC ; std::any_of<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >,<lambda_12cb8001b77ee58a89c74fac176e6240> >, COMDAT

; 304  : 	{	// test if any element satisfies _Pred

$LN12:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 305  : 	_DEBUG_RANGE_PTR(_First, _Last, _Pred);
; 306  : 	return (_Any_of(_Unchecked(_First), _Unchecked(_Last), _Pred));

  00004	e8 00 00 00 00	 call	 ??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z ; std::_Any_of<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,<lambda_12cb8001b77ee58a89c74fac176e6240> >

; 307  : 	}

  00009	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000d	c3		 ret	 0
??$any_of@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z ENDP ; std::any_of<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >,<lambda_12cb8001b77ee58a89c74fac176e6240> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z
_TEXT	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 866  : 	{	// insert NTCS

$LN1066:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00010	48 c7 40 c8 fe
	ff ff ff	 mov	 QWORD PTR [rax-56], -2
  00018	48 89 58 18	 mov	 QWORD PTR [rax+24], rbx
  0001c	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  00020	4c 8b e2	 mov	 r12, rdx
  00023	48 8b f1	 mov	 rsi, rcx
  00026	48 89 4c 24 28	 mov	 QWORD PTR _Ostr$GSCopy$[rsp], rcx

; 867  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 868  : 
; 869  : 	ios_base::iostate _State = ios_base::goodbit;

  0002b	33 db		 xor	 ebx, ebx
  0002d	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 303  : 		return (*_First == 0 ? 0

  00031	66 39 1a	 cmp	 WORD PTR [rdx], bx
  00034	75 05		 jne	 SHORT $LN26@operator
  00036	45 33 f6	 xor	 r14d, r14d
  00039	eb 0f		 jmp	 SHORT $LN27@operator
$LN26@operator:
  0003b	49 83 ce ff	 or	 r14, -1
  0003f	90		 npad	 1
$LL1059@operator:
  00040	49 ff c6	 inc	 r14
  00043	66 42 39 1c 72	 cmp	 WORD PTR [rdx+r14*2], bx
  00048	75 f6		 jne	 SHORT $LL1059@operator
$LN27@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 871  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  0004a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0004d	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 423  : 		return (_Wide);

  00051	48 8b 7c 31 28	 mov	 rdi, QWORD PTR [rcx+rsi+40]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 871  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

  00056	48 85 ff	 test	 rdi, rdi
  00059	7e 0a		 jle	 SHORT $LN17@operator
  0005b	49 3b fe	 cmp	 rdi, r14
  0005e	7e 05		 jle	 SHORT $LN17@operator
  00060	49 2b fe	 sub	 rdi, r14
  00063	eb 02		 jmp	 SHORT $LN18@operator
$LN17@operator:
  00065	33 ff		 xor	 edi, edi
$LN18@operator:

; 99   : 			: _Myostr(_Ostr)

  00067	4c 8b ee	 mov	 r13, rsi
  0006a	48 89 74 24 30	 mov	 QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0006f	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  00074	48 85 c9	 test	 rcx, rcx
  00077	74 07		 je	 SHORT $LN39@operator

; 102  : 				_Myostr.rdbuf()->_Lock();

  00079	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0007c	ff 50 08	 call	 QWORD PTR [rax+8]
  0007f	90		 npad	 1
$LN39@operator:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00080	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00083	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00087	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0008c	75 14		 jne	 SHORT $LN35@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  0008e	48 8b 4c 31 50	 mov	 rcx, QWORD PTR [rcx+rsi+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00093	48 85 c9	 test	 rcx, rcx
  00096	74 0a		 je	 SHORT $LN35@operator
  00098	48 3b ce	 cmp	 rcx, rsi
  0009b	74 05		 je	 SHORT $LN35@operator

; 125  : 				_Ostr.tie()->flush();

  0009d	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
$LN35@operator:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  000a2	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000a5	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  000a9	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
  000ae	0f 94 c0	 sete	 al
  000b1	88 44 24 38	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 875  : 	if (!_Ok)

  000b5	84 c0		 test	 al, al
  000b7	75 0a		 jne	 SHORT $LN8@operator

; 876  : 		_State |= ios_base::badbit;

  000b9	bb 04 00 00 00	 mov	 ebx, 4

; 877  : 	else

  000be	e9 2a 01 00 00	 jmp	 $LN22@operator
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  000c3	8b 44 31 18	 mov	 eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 880  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  000c7	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  000cc	41 bf ff ff 00
	00		 mov	 r15d, 65535		; 0000ffffH
  000d2	83 f8 40	 cmp	 eax, 64			; 00000040H
  000d5	74 6d		 je	 SHORT $LN1056@operator
$LL4@operator:

; 881  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  000d7	48 85 ff	 test	 rdi, rdi
  000da	7e 60		 jle	 SHORT $LN3@operator

; 882  : 				if (_Traits::eq_int_type(_Traits::eof(),

  000dc	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000df	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  000e3	44 0f b7 44 31
	58		 movzx	 r8d, WORD PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  000e9	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  000ee	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  000f2	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000f6	74 22		 je	 SHORT $LN69@operator
  000f8	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  000fc	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  000fe	85 c0		 test	 eax, eax
  00100	7e 18		 jle	 SHORT $LN69@operator

; 308  : 		--*_IPcount;

  00102	ff c8		 dec	 eax
  00104	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  00106	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0010a	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0010d	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  00111	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  00114	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00118	eb 0e		 jmp	 SHORT $LN70@operator
$LN69@operator:
  0011a	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0011d	41 0f b7 d0	 movzx	 edx, r8w
  00121	ff 50 18	 call	 QWORD PTR [rax+24]
  00124	44 0f b7 c0	 movzx	 r8d, ax
$LN70@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00128	66 45 3b f8	 cmp	 r15w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 882  : 				if (_Traits::eq_int_type(_Traits::eof(),

  0012c	75 09		 jne	 SHORT $LN2@operator

; 883  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 884  : 					{	// insertion failed, quit
; 885  : 					_State |= ios_base::badbit;

  0012e	83 cb 04	 or	 ebx, 4
  00131	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx

; 886  : 					break;

  00135	eb 05		 jmp	 SHORT $LN3@operator
$LN2@operator:

; 881  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  00137	48 ff cf	 dec	 rdi
  0013a	eb 9b		 jmp	 SHORT $LL4@operator
$LN3@operator:

; 890  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  0013c	85 db		 test	 ebx, ebx
  0013e	0f 85 89 00 00
	00		 jne	 $LN6@operator
$LN1056@operator:
  00144	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00147	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0014b	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 208  : 		return (xsputn(_Ptr, _Count));

  00150	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00153	4d 8b c6	 mov	 r8, r14
  00156	49 8b d4	 mov	 rdx, r12
  00159	ff 50 48	 call	 QWORD PTR [rax+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 890  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

  0015c	49 3b c6	 cmp	 rax, r14
  0015f	74 07		 je	 SHORT $LL1060@operator

; 891  : 			_State |= ios_base::badbit;

  00161	bb 04 00 00 00	 mov	 ebx, 4

; 892  : 
; 893  : 		if (_State == ios_base::goodbit)

  00166	eb 61		 jmp	 SHORT $LN1064@operator
$LL1060@operator:

; 894  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00168	48 85 ff	 test	 rdi, rdi
  0016b	7e 60		 jle	 SHORT $LN6@operator

; 895  : 				if (_Traits::eq_int_type(_Traits::eof(),

  0016d	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00170	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  00174	44 0f b7 44 31
	58		 movzx	 r8d, WORD PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  0017a	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0017f	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  00183	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00187	74 22		 je	 SHORT $LN99@operator
  00189	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  0018d	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  0018f	85 c0		 test	 eax, eax
  00191	7e 18		 jle	 SHORT $LN99@operator

; 308  : 		--*_IPcount;

  00193	ff c8		 dec	 eax
  00195	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  00197	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  0019b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0019e	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  001a2	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  001a5	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  001a9	eb 0e		 jmp	 SHORT $LN100@operator
$LN99@operator:
  001ab	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  001ae	41 0f b7 d0	 movzx	 edx, r8w
  001b2	ff 50 18	 call	 QWORD PTR [rax+24]
  001b5	44 0f b7 c0	 movzx	 r8d, ax
$LN100@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  001b9	66 45 3b f8	 cmp	 r15w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 895  : 				if (_Traits::eq_int_type(_Traits::eof(),

  001bd	75 05		 jne	 SHORT $LN5@operator

; 896  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 897  : 					{	// insertion failed, quit
; 898  : 					_State |= ios_base::badbit;

  001bf	83 cb 04	 or	 ebx, 4

; 899  : 					break;

  001c2	eb 05		 jmp	 SHORT $LN1064@operator
$LN5@operator:

; 894  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  001c4	48 ff cf	 dec	 rdi
  001c7	eb 9f		 jmp	 SHORT $LL1060@operator
$LN1064@operator:

; 891  : 			_State |= ios_base::badbit;

  001c9	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
$LN6@operator:

; 900  : 					}
; 901  : 		_Ostr.width(0);

  001cd	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001d0	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  001d4	48 c7 44 31 28
	00 00 00 00	 mov	 QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
  001dd	eb 0e		 jmp	 SHORT $LN22@operator
$LN23@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
  001df	8b 5c 24 20	 mov	 ebx, DWORD PTR _State$[rsp]
  001e3	4c 8b 6c 24 30	 mov	 r13, QWORD PTR _Ok$[rsp]
  001e8	48 8b 74 24 28	 mov	 rsi, QWORD PTR _Ostr$GSCopy$[rsp]
$LN22@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 905  : 	_Ostr.setstate(_State);

  001ed	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001f0	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  001f4	48 03 ce	 add	 rcx, rsi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 59   : 		if (_State != goodbit)

  001f7	85 db		 test	 ebx, ebx
  001f9	74 18		 je	 SHORT $LN1030@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  001fb	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  001fe	0b d3		 or	 edx, ebx

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00200	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  00205	75 03		 jne	 SHORT $LN1036@operator
  00207	83 ca 04	 or	 edx, 4
$LN1036@operator:
  0020a	45 33 c0	 xor	 r8d, r8d
  0020d	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  00212	90		 npad	 1
$LN1030@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  00213	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00218	84 c0		 test	 al, al
  0021a	75 09		 jne	 SHORT $LN1039@operator

; 133  : 				this->_Myostr._Osfx();

  0021c	49 8b cd	 mov	 rcx, r13
  0021f	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
  00224	90		 npad	 1
$LN1039@operator:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00225	49 8b 4d 00	 mov	 rcx, QWORD PTR [r13]
  00229	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0022d	4a 8b 4c 2a 48	 mov	 rcx, QWORD PTR [rdx+r13+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  00232	48 85 c9	 test	 rcx, rcx
  00235	74 07		 je	 SHORT $LN1043@operator

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00237	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0023a	ff 52 10	 call	 QWORD PTR [rdx+16]
  0023d	90		 npad	 1
$LN1043@operator:

; 906  : 	return (_Ostr);

  0023e	48 8b c6	 mov	 rax, rsi

; 907  : 	}

  00241	4c 8d 5c 24 50	 lea	 r11, QWORD PTR [rsp+80]
  00246	49 8b 5b 40	 mov	 rbx, QWORD PTR [r11+64]
  0024a	49 8b 73 48	 mov	 rsi, QWORD PTR [r11+72]
  0024e	49 8b e3	 mov	 rsp, r11
  00251	41 5f		 pop	 r15
  00253	41 5e		 pop	 r14
  00255	41 5d		 pop	 r13
  00257	41 5c		 pop	 r12
  00259	5f		 pop	 rdi
  0025a	c3		 ret	 0
$LN1063@operator:
??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$0

; 902  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN128@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN128@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN131@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 902  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1065@catch$0
$LN131@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1065@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$220@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$220
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$220@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$220
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$221@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$221
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$221@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$221
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 902  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN128@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN128@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN131@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 902  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1065@catch$0
$LN131@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1065@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$220@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$220
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$220@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$220
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Val$ = 136
?dtor$221@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$221
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$221@?0???$?6_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@PEB_W@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t> >'::`1'::dtor$221
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
;	COMDAT ??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 170  : 	{	// insert a string

$LN1097:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	41 54		 push	 r12
  00006	41 55		 push	 r13
  00008	41 56		 push	 r14
  0000a	41 57		 push	 r15
  0000c	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00010	48 c7 40 c8 fe
	ff ff ff	 mov	 QWORD PTR [rax-56], -2
  00018	48 89 58 18	 mov	 QWORD PTR [rax+24], rbx
  0001c	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  00020	4c 8b fa	 mov	 r15, rdx
  00023	48 8b f1	 mov	 rsi, rcx
  00026	48 89 4c 24 28	 mov	 QWORD PTR _Ostr$GSCopy$[rsp], rcx

; 171  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 172  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 173  : 	typedef typename _Mystr::size_type _Mysizt;
; 174  : 
; 175  : 	ios_base::iostate _State = ios_base::goodbit;

  0002b	33 db		 xor	 ebx, ebx
  0002d	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1742 : 		return (this->_Mysize());

  00031	4c 8b 62 10	 mov	 r12, QWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 177  : 	_Mysizt _Pad = _Ostr.width() <= 0 || (_Mysizt)_Ostr.width() <= _Size

  00035	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00038	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 423  : 		return (_Wide);

  0003c	48 8b 7c 31 28	 mov	 rdi, QWORD PTR [rcx+rsi+40]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 177  : 	_Mysizt _Pad = _Ostr.width() <= 0 || (_Mysizt)_Ostr.width() <= _Size

  00041	48 85 ff	 test	 rdi, rdi
  00044	7e 0a		 jle	 SHORT $LN17@operator
  00046	49 3b fc	 cmp	 rdi, r12
  00049	76 05		 jbe	 SHORT $LN17@operator
  0004b	49 2b fc	 sub	 rdi, r12
  0004e	eb 02		 jmp	 SHORT $LN18@operator
$LN17@operator:
  00050	33 ff		 xor	 edi, edi
$LN18@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 99   : 			: _Myostr(_Ostr)

  00052	4c 8b ee	 mov	 r13, rsi
  00055	48 89 74 24 30	 mov	 QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0005a	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0005f	48 85 c9	 test	 rcx, rcx
  00062	74 07		 je	 SHORT $LN47@operator

; 102  : 				_Myostr.rdbuf()->_Lock();

  00064	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00067	ff 50 08	 call	 QWORD PTR [rax+8]
  0006a	90		 npad	 1
$LN47@operator:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0006b	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  0006e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00072	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00077	75 14		 jne	 SHORT $LN43@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  00079	48 8b 4c 31 50	 mov	 rcx, QWORD PTR [rcx+rsi+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0007e	48 85 c9	 test	 rcx, rcx
  00081	74 0a		 je	 SHORT $LN43@operator
  00083	48 3b ce	 cmp	 rcx, rsi
  00086	74 05		 je	 SHORT $LN43@operator

; 125  : 				_Ostr.tie()->flush();

  00088	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
$LN43@operator:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  0008d	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00090	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00094	83 7c 31 10 00	 cmp	 DWORD PTR [rcx+rsi+16], 0
  00099	0f 94 c0	 sete	 al
  0009c	88 44 24 38	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 181  : 	if (!_Ok)

  000a0	84 c0		 test	 al, al
  000a2	75 0a		 jne	 SHORT $LN8@operator

; 182  : 		_State |= ios_base::badbit;

  000a4	bb 04 00 00 00	 mov	 ebx, 4

; 183  : 	else

  000a9	e9 37 01 00 00	 jmp	 $LN22@operator
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 378  : 		return (_Fmtfl);

  000ae	8b 44 31 18	 mov	 eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 186  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

  000b2	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  000b7	41 be ff ff 00
	00		 mov	 r14d, 65535		; 0000ffffH
  000bd	83 f8 40	 cmp	 eax, 64			; 00000040H
  000c0	74 69		 je	 SHORT $LN1088@operator
$LL4@operator:

; 187  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  000c2	48 85 ff	 test	 rdi, rdi
  000c5	74 60		 je	 SHORT $LN3@operator

; 188  : 				if (_Traits::eq_int_type(_Traits::eof(),

  000c7	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  000ca	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  000ce	44 0f b7 44 31
	58		 movzx	 r8d, WORD PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  000d4	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  000d9	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  000dd	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000e1	74 22		 je	 SHORT $LN77@operator
  000e3	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  000e7	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  000e9	85 c0		 test	 eax, eax
  000eb	7e 18		 jle	 SHORT $LN77@operator

; 308  : 		--*_IPcount;

  000ed	ff c8		 dec	 eax
  000ef	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  000f1	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  000f5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000f8	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  000fc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  000ff	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  00103	eb 0e		 jmp	 SHORT $LN78@operator
$LN77@operator:
  00105	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00108	41 0f b7 d0	 movzx	 edx, r8w
  0010c	ff 50 18	 call	 QWORD PTR [rax+24]
  0010f	44 0f b7 c0	 movzx	 r8d, ax
$LN78@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  00113	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 188  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00117	75 09		 jne	 SHORT $LN2@operator

; 189  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 190  : 					{	// insertion failed, quit
; 191  : 					_State |= ios_base::badbit;

  00119	83 cb 04	 or	 ebx, 4
  0011c	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx

; 192  : 					break;

  00120	eb 05		 jmp	 SHORT $LN3@operator
$LN2@operator:

; 187  : 			for (; 0 < _Pad; --_Pad)	// pad on left

  00122	48 ff cf	 dec	 rdi
  00125	eb 9b		 jmp	 SHORT $LL4@operator
$LN3@operator:

; 196  : 			&& _Ostr.rdbuf()->sputn(_Str.c_str(), (streamsize)_Size)

  00127	85 db		 test	 ebx, ebx
  00129	75 35		 jne	 SHORT $LL1091@operator
$LN1088@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0012b	49 83 7f 18 08	 cmp	 QWORD PTR [r15+24], 8
  00130	72 03		 jb	 SHORT $LN111@operator
  00132	4d 8b 3f	 mov	 r15, QWORD PTR [r15]
$LN111@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 196  : 			&& _Ostr.rdbuf()->sputn(_Str.c_str(), (streamsize)_Size)

  00135	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00138	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  0013c	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 208  : 		return (xsputn(_Ptr, _Count));

  00141	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00144	4d 8b c4	 mov	 r8, r12
  00147	49 8b d7	 mov	 rdx, r15
  0014a	ff 50 48	 call	 QWORD PTR [rax+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 196  : 			&& _Ostr.rdbuf()->sputn(_Str.c_str(), (streamsize)_Size)

  0014d	49 3b c4	 cmp	 rax, r12
  00150	74 0e		 je	 SHORT $LL1091@operator

; 197  : 				!= (streamsize)_Size)
; 198  : 				_State |= ios_base::badbit;

  00152	bb 04 00 00 00	 mov	 ebx, 4

; 199  : 		else

  00157	eb 68		 jmp	 SHORT $LN1095@operator
  00159	0f 1f 80 00 00
	00 00		 npad	 7
$LL1091@operator:

; 200  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  00160	48 85 ff	 test	 rdi, rdi
  00163	74 60		 je	 SHORT $LN6@operator

; 201  : 				if (_Traits::eq_int_type(_Traits::eof(),

  00165	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00168	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 113  : 		return (_Fillch);

  0016c	44 0f b7 44 31
	58		 movzx	 r8d, WORD PTR [rcx+rsi+88]

; 92   : 		return (_Mystrbuf);

  00172	48 8b 4c 31 48	 mov	 rcx, QWORD PTR [rcx+rsi+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  00177	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  0017b	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0017f	74 22		 je	 SHORT $LN128@operator
  00181	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00185	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  00187	85 c0		 test	 eax, eax
  00189	7e 18		 jle	 SHORT $LN128@operator

; 308  : 		--*_IPcount;

  0018b	ff c8		 dec	 eax
  0018d	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  0018f	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00193	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00196	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  0019a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  : 		return (0 < _Pnavail()

  0019d	66 44 89 02	 mov	 WORD PTR [rdx], r8w
  001a1	eb 0e		 jmp	 SHORT $LN129@operator
$LN128@operator:
  001a3	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  001a6	41 0f b7 d0	 movzx	 edx, r8w
  001aa	ff 50 18	 call	 QWORD PTR [rax+24]
  001ad	44 0f b7 c0	 movzx	 r8d, ax
$LN129@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  001b1	66 45 3b f0	 cmp	 r14w, r8w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 201  : 				if (_Traits::eq_int_type(_Traits::eof(),

  001b5	75 05		 jne	 SHORT $LN5@operator

; 202  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 203  : 					{	// insertion failed, quit
; 204  : 					_State |= ios_base::badbit;

  001b7	83 cb 04	 or	 ebx, 4

; 205  : 					break;

  001ba	eb 05		 jmp	 SHORT $LN1095@operator
$LN5@operator:

; 200  : 			for (; 0 < _Pad; --_Pad)	// pad on right

  001bc	48 ff cf	 dec	 rdi
  001bf	eb 9f		 jmp	 SHORT $LL1091@operator
$LN1095@operator:

; 197  : 				!= (streamsize)_Size)
; 198  : 				_State |= ios_base::badbit;

  001c1	89 5c 24 20	 mov	 DWORD PTR _State$[rsp], ebx
$LN6@operator:

; 206  : 					}
; 207  : 		_Ostr.width(0);

  001c5	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001c8	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 429  : 		_Wide = _Newwidth;

  001cc	48 c7 44 31 28
	00 00 00 00	 mov	 QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
  001d5	eb 0e		 jmp	 SHORT $LN22@operator
$LN23@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
  001d7	8b 5c 24 20	 mov	 ebx, DWORD PTR _State$[rsp]
  001db	4c 8b 6c 24 30	 mov	 r13, QWORD PTR _Ok$[rsp]
  001e0	48 8b 74 24 28	 mov	 rsi, QWORD PTR _Ostr$GSCopy$[rsp]
$LN22@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 211  : 	_Ostr.setstate(_State);

  001e5	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001e8	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  001ec	48 03 ce	 add	 rcx, rsi
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 59   : 		if (_State != goodbit)

  001ef	85 db		 test	 ebx, ebx
  001f1	74 18		 je	 SHORT $LN1059@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  001f3	8b 51 10	 mov	 edx, DWORD PTR [rcx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  001f6	0b d3		 or	 edx, ebx

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  001f8	48 83 79 48 00	 cmp	 QWORD PTR [rcx+72], 0
  001fd	75 03		 jne	 SHORT $LN1065@operator
  001ff	83 ca 04	 or	 edx, 4
$LN1065@operator:
  00202	45 33 c0	 xor	 r8d, r8d
  00205	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  0020a	90		 npad	 1
$LN1059@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  0020b	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00210	84 c0		 test	 al, al
  00212	75 09		 jne	 SHORT $LN1068@operator

; 133  : 				this->_Myostr._Osfx();

  00214	49 8b cd	 mov	 rcx, r13
  00217	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
  0021c	90		 npad	 1
$LN1068@operator:

; 107  : 			if (_Myostr.rdbuf() != 0)

  0021d	49 8b 4d 00	 mov	 rcx, QWORD PTR [r13]
  00221	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00225	4a 8b 4c 2a 48	 mov	 rcx, QWORD PTR [rdx+r13+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  0022a	48 85 c9	 test	 rcx, rcx
  0022d	74 07		 je	 SHORT $LN1072@operator

; 108  : 				_Myostr.rdbuf()->_Unlock();

  0022f	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00232	ff 52 10	 call	 QWORD PTR [rdx+16]
  00235	90		 npad	 1
$LN1072@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 212  : 	return (_Ostr);

  00236	48 8b c6	 mov	 rax, rsi

; 213  : 	}

  00239	4c 8d 5c 24 50	 lea	 r11, QWORD PTR [rsp+80]
  0023e	49 8b 5b 40	 mov	 rbx, QWORD PTR [r11+64]
  00242	49 8b 73 48	 mov	 rsi, QWORD PTR [r11+72]
  00246	49 8b e3	 mov	 rsp, r11
  00249	41 5f		 pop	 r15
  0024b	41 5e		 pop	 r14
  0024d	41 5d		 pop	 r13
  0024f	41 5c		 pop	 r12
  00251	5f		 pop	 rdi
  00252	c3		 ret	 0
$LN1094@operator:
??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$5@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$5
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$5@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$5
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::catch$0

; 208  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN157@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN157@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN160@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 208  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1096@catch$0
$LN160@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1096@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::catch$0
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$229@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$229
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$229@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$229
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$230@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$230
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$230@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$230
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$5@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$5
  00000	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$5@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  0000c	48 8d 8a 30 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 208  : 		_CATCH_IO_(_Ostr)

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$??$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ostr$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN157@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN157@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN160@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\string

; 208  : 		_CATCH_IO_(_Ostr)

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$0
  00055	eb 0a		 jmp	 SHORT $LN1096@catch$0
$LN160@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN1096@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$229@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$229
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$229@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$229
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Ostr$GSCopy$ = 40
_Ok$ = 48
_Ostr$ = 128
_Str$ = 136
?dtor$230@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$230
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$230@?0???$?6_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::operator<<<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$230
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 48
??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z PROC ; std::endl<wchar_t,std::char_traits<wchar_t> >, COMDAT

; 991  : 	{	// insert newline and flush stream

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 992  : 	_Ostr.put(_Ostr.widen('\n'));

  00006	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	b2 0a		 mov	 dl, 10
  0000e	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
  00012	48 03 cb	 add	 rcx, rbx
  00015	e8 00 00 00 00	 call	 ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
  0001a	0f b7 d0	 movzx	 edx, ax
  0001d	48 8b cb	 mov	 rcx, rbx
  00020	e8 00 00 00 00	 call	 ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put

; 993  : 	_Ostr.flush();

  00025	48 8b cb	 mov	 rcx, rbx
  00028	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush

; 994  : 	return (_Ostr);

  0002d	48 8b c3	 mov	 rax, rbx

; 995  : 	}

  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5b		 pop	 rbx
  00035	c3		 ret	 0
??$endl@_WU?$char_traits@_W@std@@@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AEAV10@@Z ENDP ; std::endl<wchar_t,std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$?0PEAPEA_WX@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@PEAPEA_W0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
??$?0PEAPEA_WX@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@PEAPEA_W0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > ><wchar_t * __ptr64 * __ptr64,void>, COMDAT

; 780  : 		{	// construct from [_First, _Last)

$LN14:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 480  : 		_Myfirst = pointer();

  00006	33 c0		 xor	 eax, eax

; 780  : 		{	// construct from [_First, _Last)

  00008	48 8b d9	 mov	 rbx, rcx

; 480  : 		_Myfirst = pointer();

  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  0000e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00012	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 796  : 		_Construct(_First, _Last, _Iter_cat(_First));

  00016	e8 00 00 00 00	 call	 ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>

; 781  : 		_Construct(_First, _Last);
; 782  : 		}

  0001b	48 8b c3	 mov	 rax, rbx
  0001e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00022	5b		 pop	 rbx
  00023	c3		 ret	 0
??$?0PEAPEA_WX@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@PEAPEA_W0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > ><wchar_t * __ptr64 * __ptr64,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z
_TEXT	SEGMENT
dwBytesReturned$ = 64
$T1 = 72
changedPath$2 = 80
$T3 = 80
__$ArrayPad$ = 120
this$ = 176
handler$ = 184
??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z PROC ; wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >, COMDAT

; 53   :   template <class THandler> unsigned poll(THandler handler) {

$LN328:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	41 56		 push	 r14
  00006	41 57		 push	 r15
  00008	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000f	48 c7 44 24 48
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00018	48 89 9c 24 c0
	00 00 00	 mov	 QWORD PTR [rsp+192], rbx
  00020	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00027	48 33 c4	 xor	 rax, rsp
  0002a	48 89 44 24 78	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002f	4c 8b f2	 mov	 r14, rdx
  00032	48 8b f9	 mov	 rdi, rcx

; 54   :     ::memset(buffer_.get(), 0, bufferSize_);

  00035	44 8b 41 10	 mov	 r8d, DWORD PTR [rcx+16]
  00039	33 d2		 xor	 edx, edx
  0003b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003f	e8 00 00 00 00	 call	 memset

; 55   :     DWORD dwBytesReturned = 0;

  00044	33 ed		 xor	 ebp, ebp
  00046	89 6c 24 40	 mov	 DWORD PTR dwBytesReturned$[rsp], ebp

; 56   :     if (::ReadDirectoryChangesW(directory_, static_cast<LPVOID>(buffer_.get()),
; 57   :                                 bufferSize_, FALSE, FILE_NOTIFY_CHANGE_SIZE,
; 58   :                                 &dwBytesReturned, NULL, NULL) == FALSE) {

  0004a	48 89 6c 24 38	 mov	 QWORD PTR [rsp+56], rbp
  0004f	48 89 6c 24 30	 mov	 QWORD PTR [rsp+48], rbp
  00054	48 8d 44 24 40	 lea	 rax, QWORD PTR dwBytesReturned$[rsp]
  00059	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005e	c7 44 24 20 08
	00 00 00	 mov	 DWORD PTR [rsp+32], 8
  00066	45 33 c9	 xor	 r9d, r9d
  00069	44 8b 47 10	 mov	 r8d, DWORD PTR [rdi+16]
  0006d	48 8b 57 08	 mov	 rdx, QWORD PTR [rdi+8]
  00071	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00074	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ReadDirectoryChangesW
  0007a	85 c0		 test	 eax, eax
  0007c	75 1c		 jne	 SHORT $LN5@poll

; 59   :       throw Win32Error::GetLastWin32Error();

  0007e	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T3[rsp]
  00083	e8 00 00 00 00	 call	 ?GetLastWin32Error@Win32Error@wwatch@@SA?AV12@XZ ; wwatch::Win32Error::GetLastWin32Error
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI1?AVWin32Error@wwatch@@
  0008f	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T3[rsp]
  00094	e8 00 00 00 00	 call	 _CxxThrowException
  00099	cc		 int	 3
$LN5@poll:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1412 : 		return (this->_Myptr());

  0009a	48 8b 5f 08	 mov	 rbx, QWORD PTR [rdi+8]
; File c:\users\alist_000\cppmisc\wwatch.cc

; 63   :       size_t localIteration = 0;

  0009e	48 8b f5	 mov	 rsi, rbp
  000a1	49 bf ff ff ff
	ff ff ff ff 7f	 mov	 r15, 9223372036854775807 ; 7fffffffffffffffH
  000ab	0f 1f 44 00 00	 npad	 5
$LL4@poll:

; 65   :         const std::wstring changedPath(notifications->FileName,

  000b0	44 8b 43 08	 mov	 r8d, DWORD PTR [rbx+8]
  000b4	49 d1 e8	 shr	 r8, 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  000b7	48 c7 44 24 68
	07 00 00 00	 mov	 QWORD PTR changedPath$2[rsp+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  000c0	48 89 6c 24 60	 mov	 QWORD PTR changedPath$2[rsp+16], rbp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  000c5	66 89 6c 24 50	 mov	 WORD PTR changedPath$2[rsp], bp
; File c:\users\alist_000\cppmisc\wwatch.cc

; 65   :         const std::wstring changedPath(notifications->FileName,

  000ca	48 8d 53 0c	 lea	 rdx, QWORD PTR [rbx+12]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 818  : 		assign(_Ptr, _Count);

  000ce	48 8d 4c 24 50	 lea	 rcx, QWORD PTR changedPath$2[rsp]
  000d3	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  000d8	90		 npad	 1
; File c:\users\alist_000\cppmisc\wwatch.cc

; 67   :         handler(++iterations_, ++localIteration, notifications->Action,

  000d9	48 ff c6	 inc	 rsi
  000dc	48 8b 4f 18	 mov	 rcx, QWORD PTR [rdi+24]
  000e0	48 ff c1	 inc	 rcx
  000e3	48 89 4f 18	 mov	 QWORD PTR [rdi+24], rcx

; 143  :         handle(gi, li, action, path, subcommand, extensions);

  000e7	49 8b 46 08	 mov	 rax, QWORD PTR [r14+8]
  000eb	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000f0	49 8b 06	 mov	 rax, QWORD PTR [r14]
  000f3	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000f8	4c 8d 4c 24 50	 lea	 r9, QWORD PTR changedPath$2[rsp]
  000fd	44 8b 43 04	 mov	 r8d, DWORD PTR [rbx+4]
  00101	48 8b d6	 mov	 rdx, rsi
  00104	e8 00 00 00 00	 call	 ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z ; handle

; 68   :                 changedPath);
; 69   :         notifications += notifications->NextEntryOffset;

  00109	8b 03		 mov	 eax, DWORD PTR [rbx]
  0010b	48 c1 e0 04	 shl	 rax, 4
  0010f	48 03 d8	 add	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00112	48 8b 44 24 68	 mov	 rax, QWORD PTR changedPath$2[rsp+24]
  00117	48 83 f8 08	 cmp	 rax, 8
  0011b	72 3d		 jb	 SHORT $LN268@poll

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0011d	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00120	48 8b 4c 24 50	 mov	 rcx, QWORD PTR changedPath$2[rsp]

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00125	49 3b c7	 cmp	 rax, r15
  00128	77 65		 ja	 SHORT $LN320@poll

; 95   : 	const size_t _User_size = _Count * _Sz;

  0012a	48 03 c0	 add	 rax, rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0012d	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00133	72 20		 jb	 SHORT $LN263@poll

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00135	f6 c1 1f	 test	 cl, 31
  00138	75 4f		 jne	 SHORT $LN321@poll

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  0013a	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0013e	48 3b c1	 cmp	 rax, rcx
  00141	73 40		 jae	 SHORT $LN322@poll

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00143	48 2b c8	 sub	 rcx, rax
  00146	48 83 f9 08	 cmp	 rcx, 8
  0014a	72 31		 jb	 SHORT $LN323@poll

; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0014c	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  00150	77 25		 ja	 SHORT $LN324@poll

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00152	48 8b c8	 mov	 rcx, rax
$LN263@poll:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00155	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN268@poll:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0015a	48 c7 44 24 68
	07 00 00 00	 mov	 QWORD PTR changedPath$2[rsp+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00163	48 89 6c 24 60	 mov	 QWORD PTR changedPath$2[rsp+16], rbp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00168	66 89 6c 24 50	 mov	 WORD PTR changedPath$2[rsp], bp
; File c:\users\alist_000\cppmisc\wwatch.cc

; 70   :       } while (notifications->NextEntryOffset != 0);

  0016d	83 3b 00	 cmp	 DWORD PTR [rbx], 0
  00170	74 23		 je	 SHORT $LN3@poll
  00172	e9 39 ff ff ff	 jmp	 $LL4@poll
$LN324@poll:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  00177	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0017c	cc		 int	 3
$LN323@poll:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  0017d	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00182	cc		 int	 3
$LN322@poll:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  00183	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00188	cc		 int	 3
$LN321@poll:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00189	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  0018e	cc		 int	 3
$LN320@poll:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  0018f	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  00194	cc		 int	 3
$LN3@poll:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 72   :     return dwBytesReturned;

  00195	8b 44 24 40	 mov	 eax, DWORD PTR dwBytesReturned$[rsp]

; 73   :   }

  00199	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0019e	48 33 cc	 xor	 rcx, rsp
  001a1	e8 00 00 00 00	 call	 __security_check_cookie
  001a6	48 8b 9c 24 c0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+192]
  001ae	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001b5	41 5f		 pop	 r15
  001b7	41 5e		 pop	 r14
  001b9	5f		 pop	 rdi
  001ba	5e		 pop	 rsi
  001bb	5d		 pop	 rbp
  001bc	c3		 ret	 0
$LN327@poll:
??$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z ENDP ; wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
dwBytesReturned$ = 64
$T1 = 72
changedPath$2 = 80
$T3 = 80
__$ArrayPad$ = 120
this$ = 176
handler$ = 184
?dtor$0@?0???$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z@4HA PROC ; `wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >'::`1'::dtor$0
  00000	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR changedPath$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z@4HA ENDP ; `wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
dwBytesReturned$ = 64
$T1 = 72
changedPath$2 = 80
$T3 = 80
__$ArrayPad$ = 120
this$ = 176
handler$ = 184
?dtor$0@?0???$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z@4HA PROC ; `wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >'::`1'::dtor$0
  00000	48 8d 8a 50 00
	00 00		 lea	 rcx, QWORD PTR changedPath$2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0???$poll@V<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@FileWatcher@wwatch@@QEAAIV<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@@Z@4HA ENDP ; `wwatch::FileWatcher::poll<<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
this$ = 64
gi$ = 72
li$ = 80
action$ = 88
path$ = 96
??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; <lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>::operator()<unsigned __int64,unsigned __int64,unsigned long,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 142  :       watcher.poll([&](auto gi, auto li, auto action, const auto &path) {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 143  :         handle(gi, li, action, path, subcommand, extensions);

  00006	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  0000a	45 8b d1	 mov	 r10d, r9d
  0000d	4c 8b 4c 24 60	 mov	 r9, QWORD PTR path$[rsp]
  00012	4d 8b d8	 mov	 r11, r8
  00015	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0001a	48 8b da	 mov	 rbx, rdx
  0001d	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00020	45 8b c2	 mov	 r8d, r10d
  00023	48 8b cb	 mov	 rcx, rbx
  00026	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0002b	49 8b d3	 mov	 rdx, r11
  0002e	e8 00 00 00 00	 call	 ?handle@@YAX_K0IAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@1AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@@Z ; handle

; 144  :       });

  00033	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00037	5b		 pop	 rbx
  00038	c3		 ret	 0
??$?R_K_KKV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>@@QEBAX_K0KAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; <lambda_9bbc0c7fad977ddc7acd88016c0b7cd2>::operator()<unsigned __int64,unsigned __int64,unsigned long,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >, COMDAT

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00000	48 8b c1	 mov	 rax, rcx

; 717  : 	}

  00003	c3		 ret	 0
??$addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>, COMDAT

; 892  : 		{	// construct _Ty(_Types...) at _Ptr

$LN165:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	4d 8b d0	 mov	 r10, r8
  0001a	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001d	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  00022	48 85 d2	 test	 rdx, rdx
  00025	74 33		 je	 SHORT $LN164@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	33 d2		 xor	 edx, edx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00029	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00031	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00035	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003a	72 05		 jb	 SHORT $LN153@construct
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	eb 03		 jmp	 SHORT $LN154@construct
$LN153@construct:
  00041	48 8b c8	 mov	 rcx, rax
$LN154@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00044	66 89 11	 mov	 WORD PTR [rcx], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  00047	49 83 c9 ff	 or	 r9, -1
  0004b	45 33 c0	 xor	 r8d, r8d
  0004e	49 8b d2	 mov	 rdx, r10
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00059	90		 npad	 1
$LN164@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 895  : 		}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>, COMDAT

; 892  : 		{	// construct _Ty(_Types...) at _Ptr

$LN165:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	4d 8b d0	 mov	 r10, r8
  0001a	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001d	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  00022	48 85 d2	 test	 rdx, rdx
  00025	74 33		 je	 SHORT $LN164@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	33 d2		 xor	 edx, edx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00029	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00031	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00035	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003a	72 05		 jb	 SHORT $LN153@construct
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	eb 03		 jmp	 SHORT $LN154@construct
$LN153@construct:
  00041	48 8b c8	 mov	 rcx, rax
$LN154@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00044	66 89 11	 mov	 WORD PTR [rcx], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  00047	49 83 c9 ff	 or	 r9, -1
  0004b	45 33 c0	 xor	 r8d, r8d
  0004e	49 8b d2	 mov	 rdx, r10
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00059	90		 npad	 1
$LN164@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 895  : 		}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > ><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>, COMDAT

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 522  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > ><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>, COMDAT

; 796  : 		_Construct(_First, _Last, _Iter_cat(_First));

  00000	e9 00 00 00 00	 jmp	 ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>, COMDAT

; 1315 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1316 : 	}

  00003	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 522  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@AEAV10@@Z PROC ; std::forward<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@AEAV10@@Z ENDP ; std::forward<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$default_delete@D@std@@@std@@YA$$QEAU?$default_delete@D@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$default_delete@D@std@@@std@@YA$$QEAU?$default_delete@D@0@AEAU10@@Z PROC ; std::forward<std::default_delete<char> >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@U?$default_delete@D@std@@@std@@YA$$QEAU?$default_delete@D@0@AEAU10@@Z ENDP ; std::forward<std::default_delete<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory
;	COMDAT ??$?0PEAD@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$?0PEAD@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z PROC ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Unique_ptr_base<char,std::default_delete<char> ><char * __ptr64>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\memory

; 1249 : 		}

  00003	48 8b c1	 mov	 rax, rcx
  00006	c3		 ret	 0
??$?0PEAD@?$_Unique_ptr_base@DU?$default_delete@D@std@@@std@@QEAA@PEAD@Z ENDP ; std::_Unique_ptr_base<char,std::default_delete<char> >::_Unique_ptr_base<char,std::default_delete<char> ><char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>, COMDAT

; 1315 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1316 : 	}

  00003	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$ = 16
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 581  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>, COMDAT

; 1315 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1316 : 	}

  00003	c3		 ret	 0
??$move@AEAU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<char> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$ = 16
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>, COMDAT

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 581  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::_Wrap_alloc<std::allocator<char> >,void>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN36:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00008	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00011	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00016	48 8b e9	 mov	 rbp, rcx

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00019	33 d2		 xor	 edx, edx
  0001b	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00026	48 8b 35 00 00
	00 00		 mov	 rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >::_Psave
  0002d	48 89 74 24 70	 mov	 QWORD PTR _Psave$5[rsp], rsi

; 115  : 			if (_Id == 0)

  00032	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?id@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::id
  00039	48 85 db	 test	 rbx, rbx
  0003c	75 3d		 jne	 SHORT $LN13@use_facet

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0003e	33 d2		 xor	 edx, edx
  00040	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00045	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0004a	48 39 1d 00 00
	00 00		 cmp	 QWORD PTR ?id@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@2V0locale@2@A, rbx ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::id
  00051	75 17		 jne	 SHORT $LN14@use_facet

; 119  : 						_Id = ++_Id_cnt;

  00053	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00059	ff c0		 inc	 eax
  0005b	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00061	48 98		 cdqe
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?id@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@2V0locale@2@A, rax ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::id
$LN14@use_facet:

; 120  : 				_END_LOCK()

  0006a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  0006f	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00074	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?id@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::id
$LN13@use_facet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0007b	48 8b 4d 08	 mov	 rcx, QWORD PTR [rbp+8]
  0007f	48 3b 59 18	 cmp	 rbx, QWORD PTR [rcx+24]
  00083	73 13		 jae	 SHORT $LN22@use_facet
  00085	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00089	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0008d	48 85 ff	 test	 rdi, rdi
  00090	0f 85 af 00 00
	00		 jne	 $LN7@use_facet
  00096	eb 02		 jmp	 SHORT $LN32@use_facet
$LN22@use_facet:

; 151  : 			}
; 152  : 
; 153  : 		virtual _Facet_base *__CLR_OR_THIS_CALL _Decref()
; 154  : 			{	// decrement use count
; 155  : 			if (_MT_DECR(_Myrefs) == 0)
; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}
; 160  : 
; 161  : 	private:
; 162  : 		_Atomic_counter_t _Myrefs;	// the reference count
; 163  : 
; 164  : 	protected:
; 165  : 		explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)
; 166  : 			{	// construct with initial reference count
; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}
; 169  : 
; 170  : 		virtual __CLR_OR_THIS_CALL ~facet() _NOEXCEPT
; 171  : 			{	// ensure that derived classes can be destroyed properly
; 172  : 			}
; 173  : 
; 174  : 	public:
; 175  : 		__CLR_OR_THIS_CALL facet(const facet&) = delete;
; 176  : 		facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 177  : 		};
; 178  : 
; 179  : 			// CLASS _Locimp
; 180  :  #pragma warning(push)
; 181  :  #pragma warning(disable: 4275)
; 182  : 
; 183  : 	class _CRTIMP2_PURE _Locimp
; 184  : 		: public facet
; 185  : 		{	// reference-counted actual implementation of a locale
; 186  : 	protected:
; 187  : 		__CLR_OR_THIS_CALL ~_Locimp() _NOEXCEPT
; 188  : 		{	// destroy the object
; 189  : 		_Locimp_dtor(this);
; 190  : 		}
; 191  : 
; 192  : 	private:
; 193  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 194  : 			_New_Locimp(bool _Transparent = false);
; 195  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 196  : 			_New_Locimp(const _Locimp& _Right);
; 197  : 
; 198  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 199  : 			_Locimp_dtor(_Locimp *);
; 200  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 201  : 			_Locimp_Addfac(_Locimp *, facet *, size_t);	// add a facet
; 202  : 		static void __CLRCALL_PURE_OR_CDECL
; 203  : 			_Locimp_ctor(_Locimp *, const _Locimp&);
; 204  : 
; 205  : 		friend class locale;
; 206  : 
; 207  : 		__CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 208  : 			: locale::facet(1), _Facetvec(0), _Facetcount(0),
; 209  : 				_Catmask(none), _Xparent(_Transparent),
; 210  : 					_Name("*")
; 211  : 			{	// construct an empty _Locimp
; 212  : 			}
; 213  : 
; 214  : 		__CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 215  : 			: locale::facet(1), _Facetvec(0), _Facetcount(_Right._Facetcount),
; 216  : 				_Catmask(_Right._Catmask), _Xparent(_Right._Xparent),
; 217  : 					_Name(_Right._Name.c_str())
; 218  : 			{	// construct by copying
; 219  : 			_Locimp_ctor(this, _Right);
; 220  : 			}
; 221  : 
; 222  : 		void __CLR_OR_THIS_CALL _Addfac(facet *_Pfacet, size_t _Id)
; 223  : 			{	// add a facet
; 224  : 			_Locimp_Addfac(this, _Pfacet, _Id);
; 225  : 			}
; 226  : 
; 227  : 		static _Locimp *__CLRCALL_OR_CDECL _Makeloc(const _Locinfo&,
; 228  : 			category, _Locimp *, const locale *);	// make essential facets
; 229  : 
; 230  : 		static void __CLRCALL_OR_CDECL _Makewloc(const _Locinfo&,
; 231  : 			category, _Locimp *, const locale *);	// make wchar_t facets
; 232  : 
; 233  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 234  : 		static void __CLRCALL_OR_CDECL _Makeushloc(const _Locinfo&,
; 235  : 			category, _Locimp *, const locale *);	// make ushort facets
; 236  :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 237  : 
; 238  : 		static void __CLRCALL_OR_CDECL _Makexloc(const _Locinfo&,
; 239  : 			category, _Locimp *, const locale *);	// make remaining facets
; 240  : 
; 241  : 		facet **_Facetvec;	// pointer to vector of facets
; 242  : 		size_t _Facetcount;	// size of vector of facets
; 243  : 		category _Catmask;	// mask describing implemented categories
; 244  : 		bool _Xparent;	// true if locale is transparent
; 245  : 		_Yarn<char> _Name;	// locale name, or "*" if not known
; 246  : 
; 247  : 		__PURE_APPDOMAIN_GLOBAL static _Locimp *_Clocptr;
; 248  : 
; 249  : public:
; 250  : 		_Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 251  : 		};
; 252  : 
; 253  :  #pragma warning(pop)
; 254  : 
; 255  : 	template<class _Elem,
; 256  : 		class _Traits,
; 257  : 		class _Alloc>
; 258  : 		bool operator()(const basic_string<_Elem, _Traits, _Alloc>& _Left,
; 259  : 			const basic_string<_Elem, _Traits, _Alloc>& _Right) const
; 260  : 		{	// compare _Left and _Right strings using collate facet in locale
; 261  : 		const _STD collate<_Elem>& _Coll_fac =
; 262  : 			use_facet< _STD collate<_Elem> >(*this);
; 263  : 
; 264  : 		return (_Coll_fac.compare(_Left.c_str(), _Left.c_str() + _Left.size(),
; 265  : 			_Right.c_str(), _Right.c_str() + _Right.size()) < 0);
; 266  : 		}
; 267  : 
; 268  : 	template<class _Facet>
; 269  : 		locale combine(const locale& _Loc) const
; 270  : 		{	// combine two locales
; 271  : 		_Facet *_Facptr;
; 272  : 
; 273  : 		_TRY_BEGIN
; 274  : 			_Facptr = (_Facet *)&use_facet<_Facet>(_Loc);
; 275  : 		_CATCH_ALL
; 276  : 			_Xruntime_error("locale::combine facet missing");
; 277  : 		_CATCH_END
; 278  : 
; 279  : 		_Locimp *_Newimp = _Locimp::_New_Locimp(*_Ptr);
; 280  : 		_Newimp->_Addfac(_Facptr, _Facet::id);
; 281  : 		_Newimp->_Catmask = none;
; 282  : 		_Newimp->_Name = "*";
; 283  : 		return (locale(_Newimp));
; 284  : 		}
; 285  : 
; 286  : 	template<class _Facet>
; 287  : 		locale(const locale& _Loc, const _Facet *_Facptr)
; 288  : 			: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 289  : 		{	// construct from _Loc, replacing facet with *_Facptr
; 290  : 		if (_Facptr != 0)
; 291  : 			{	// replace facet
; 292  : 			_Ptr->_Addfac((_Facet *)_Facptr, _Facet::id);
; 293  : 			_Ptr->_Catmask = none;
; 294  : 			_Ptr->_Name = "*";
; 295  : 			}
; 296  : 		}
; 297  : 
; 298  : 	locale(_Uninitialized)
; 299  : 		{	// defer construction
; 300  : 		}
; 301  : 
; 302  :  #if _NO_LOCALES
; 303  : 	locale(const locale& _Right) _THROW0()
; 304  : 		: _Ptr(0)
; 305  : 		{	// construct by copying
; 306  : 		}
; 307  : 
; 308  : 	locale() _THROW0()
; 309  : 		: _Ptr(0)
; 310  : 		{	// construct from current locale
; 311  : 		}
; 312  : 
; 313  : 	~locale() _NOEXCEPT
; 314  : 		{	// destroy the object
; 315  : 		}
; 316  : 
; 317  : 	locale& operator=(const locale& _Right) _THROW0()
; 318  : 		{	// assign a locale
; 319  : 		return (*this);
; 320  : 		}
; 321  : 
; 322  :  #else /* _NO_LOCALES */
; 323  : 	locale(const locale& _Right) _THROW0()
; 324  : 		: _Ptr(_Right._Ptr)
; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();
; 327  : 		}
; 328  : 
; 329  : 	locale() _THROW0()
; 330  : 		: _Ptr(_Init(true))
; 331  : 		{	// construct from current locale
; 332  : 		}
; 333  : 
; 334  :  #if !defined(MRTDLL) || !defined(_CRTBLD)
; 335  : 	locale(const locale& _Loc, const locale& _Other,
; 336  : 		category _Cat)
; 337  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 338  : 		{	// construct a locale by copying named facets
; 339  : 		if (_Cat != none)
; 340  : 			{	// worth adding, do it
; 341  : 			_TRY_BEGIN
; 342  : 				_BEGIN_LOCINFO(_Lobj)
; 343  : 					_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 344  : 					_Lobj._Addcats(_Loc._Ptr->_Catmask,
; 345  : 						_Loc.name().c_str());
; 346  : 					_Lobj._Addcats(_Other._Ptr->_Catmask,
; 347  : 						_Other.name().c_str());
; 348  : 					_Ptr->_Catmask = _Loc._Ptr->_Catmask
; 349  : 						| _Other._Ptr->_Catmask;
; 350  : 					_Ptr->_Name = _Lobj._Getname();
; 351  : 				_END_LOCINFO()
; 352  : 			_CATCH_ALL
; 353  : 			delete _Ptr->_Decref();
; 354  : 			_RERAISE;
; 355  : 			_CATCH_END
; 356  : 			}
; 357  : 		}
; 358  : 
; 359  : private:
; 360  : 	void _Construct(const string &_Str,
; 361  : 		category _Cat)
; 362  : 		{	// construct a locale with named facets
; 363  : 		bool _Bad = false;
; 364  : 		_Init();
; 365  : 		if (_Cat != none)
; 366  : 			{	// worth adding, do it
; 367  : 			_TRY_BEGIN
; 368  : 				_BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 369  : 					if (_Badname(_Lobj))
; 370  : 						_Bad = true;
; 371  : 					else
; 372  : 						{	// name okay, build the locale
; 373  : 						_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, 0);
; 374  : 						_Ptr->_Catmask = _Cat;
; 375  : 						_Ptr->_Name = _Str.c_str();
; 376  : 						}
; 377  : 				_END_LOCINFO()
; 378  : 			_CATCH_ALL
; 379  : 			delete _Ptr->_Decref();
; 380  : 			_RERAISE;
; 381  : 			_CATCH_END
; 382  : 			}
; 383  : 
; 384  : 		if (_Bad)
; 385  : 			{	// Don't throw within _BEGIN_LOCINFO if we can avoid it
; 386  : 			delete _Ptr->_Decref();
; 387  : 			_Xruntime_error("bad locale name");
; 388  : 			}
; 389  : 		}
; 390  : 
; 391  : public:
; 392  : 	explicit locale(const char *_Locname,
; 393  : 		category _Cat = all)
; 394  : 		: _Ptr(_Locimp::_New_Locimp())
; 395  : 		{	// construct a locale with named facets
; 396  : 		// _Locname might have been returned from setlocale().
; 397  : 		// Therefore, _Construct() takes const string&.
; 398  : 		if (_Locname == 0)
; 399  : 			_Xruntime_error("bad locale name");
; 400  : 		_Construct(_Locname, _Cat);
; 401  : 		}
; 402  : 
; 403  : 	locale(const locale& _Loc, const char *_Locname,
; 404  : 		category _Cat)
; 405  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 406  : 		{	// construct a locale by copying, replacing named facets
; 407  : 		// _Locname might have been returned from setlocale().
; 408  : 		// Therefore, _Construct() takes const string&.
; 409  : 		if (_Locname == 0)
; 410  : 			_Xruntime_error("bad locale name");
; 411  : 		_Construct(_Locname, _Cat);
; 412  : 		}
; 413  : 
; 414  : 	explicit locale(const string& _Str,
; 415  : 		category _Cat = all)
; 416  : 		: _Ptr(_Locimp::_New_Locimp())
; 417  : 		{	// construct a locale with named facets
; 418  : 		_Construct(_Str, _Cat);
; 419  : 		}
; 420  : 
; 421  : 	locale(const locale& _Loc, const string& _Str,
; 422  : 		category _Cat)
; 423  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 424  : 		{	// construct a locale by copying, replacing named facets
; 425  : 		_Construct(_Str, _Cat);
; 426  : 		}
; 427  :  #endif /* !MRTDLL || !_CRTBLD */
; 428  : 
; 429  : 	~locale() _NOEXCEPT
; 430  : 		{	// destroy the object
; 431  : 		if (_Ptr != 0)
; 432  : 			delete _Ptr->_Decref();
; 433  : 		}
; 434  : 
; 435  : 	locale& operator=(const locale& _Right) _THROW0()
; 436  : 		{	// assign a locale
; 437  : 		if (_Ptr != _Right._Ptr)
; 438  : 			{	// different implementation, point at new one
; 439  : 			delete _Ptr->_Decref();
; 440  : 			_Ptr = _Right._Ptr;
; 441  : 			_Ptr->_Incref();
; 442  : 			}
; 443  : 		return (*this);
; 444  : 		}
; 445  :  #endif /* _NO_LOCALES */
; 446  : 
; 447  : 	string name() const
; 448  : 		{	// return locale name
; 449  : 		return (_Ptr == 0 ? string() : _Ptr->_Name.c_str());
; 450  : 		}
; 451  : 
; 452  : 	const char *c_str() const
; 453  : 		{	// return locale name as NTBS
; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());
; 455  : 		}
; 456  : 
; 457  : 	const facet *_Getfacet(size_t _Id) const
; 458  : 		{	// look up a facet in locale object
; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00098	33 ff		 xor	 edi, edi
$LN32@use_facet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0009a	80 79 24 00	 cmp	 BYTE PTR [rcx+36], 0
  0009e	74 13		 je	 SHORT $LN19@use_facet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  000a0	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  000a5	48 3b 58 18	 cmp	 rbx, QWORD PTR [rax+24]
  000a9	73 11		 jae	 SHORT $LN33@use_facet
  000ab	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000af	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]
$LN19@use_facet:

; 562  : 
; 563  : 		size_t _Id = _Facet::id;
; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);
; 565  : 
; 566  : 		if (_Pf != 0)

  000b3	48 85 ff	 test	 rdi, rdi
  000b6	0f 85 89 00 00
	00		 jne	 $LN7@use_facet
$LN33@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  000bc	48 85 f6	 test	 rsi, rsi
  000bf	74 05		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  000c1	48 8b fe	 mov	 rdi, rsi
  000c4	eb 7f		 jmp	 SHORT $LN7@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  000c6	48 8b d5	 mov	 rdx, rbp
  000c9	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Psave$5[rsp]
  000ce	e8 00 00 00 00	 call	 ?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat
  000d3	48 83 f8 ff	 cmp	 rax, -1
  000d7	75 31		 jne	 SHORT $LN6@use_facet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 59   :         : _Data()

  000d9	33 c0		 xor	 eax, eax
  000db	48 89 44 24 38	 mov	 QWORD PTR $T2[rsp+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  000e0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  000e7	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h

; 125  :     {

  000ec	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  000f3	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  000f8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  000ff	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00104	e8 00 00 00 00	 call	 _CxxThrowException
  00109	cc		 int	 3
$LN6@use_facet:

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else
; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  0010a	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]
  0010f	48 8b fb	 mov	 rdi, rbx

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  00112	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >::_Psave
  00119	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0011c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Incref@facet@locale@std@@UEAAXXZ ; std::locale::facet::_Incref
  00127	48 3b d0	 cmp	 rdx, rax
  0012a	75 0b		 jne	 SHORT $LN10@use_facet

; 150  : 			_MT_INCR(_Myrefs);

  0012c	f0 ff 43 08	 lock inc DWORD PTR [rbx+8]
  00130	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]
  00135	eb 05		 jmp	 SHORT $LN9@use_facet
$LN10@use_facet:
  00137	48 8b cb	 mov	 rcx, rbx

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 586  : 			_Pfmod->_Incref();

  0013a	ff d2		 call	 rdx
$LN9@use_facet:

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  0013c	48 8b cb	 mov	 rcx, rbx
  0013f	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
  00144	90		 npad	 1
$LN7@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  00145	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  0014a	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  0014f	48 8b c7	 mov	 rax, rdi

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  00152	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  00157	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0015b	5f		 pop	 rdi
  0015c	5e		 pop	 rsi
  0015d	5d		 pop	 rbp
  0015e	c3		 ret	 0
$LN34@use_facet:
??$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@@std@@YAAEBV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::numpunct<wchar_t> >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN36:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00008	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00011	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00016	48 8b e9	 mov	 rbp, rcx

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00019	33 d2		 xor	 edx, edx
  0001b	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00026	48 8b 35 00 00
	00 00		 mov	 rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::numpunct<wchar_t> >::_Psave
  0002d	48 89 74 24 70	 mov	 QWORD PTR _Psave$5[rsp], rsi

; 115  : 			if (_Id == 0)

  00032	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
  00039	48 85 db	 test	 rbx, rbx
  0003c	75 3d		 jne	 SHORT $LN13@use_facet

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0003e	33 d2		 xor	 edx, edx
  00040	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00045	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0004a	48 39 1d 00 00
	00 00		 cmp	 QWORD PTR ?id@?$numpunct@_W@std@@2V0locale@2@A, rbx ; std::numpunct<wchar_t>::id
  00051	75 17		 jne	 SHORT $LN14@use_facet

; 119  : 						_Id = ++_Id_cnt;

  00053	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00059	ff c0		 inc	 eax
  0005b	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00061	48 98		 cdqe
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?id@?$numpunct@_W@std@@2V0locale@2@A, rax ; std::numpunct<wchar_t>::id
$LN14@use_facet:

; 120  : 				_END_LOCK()

  0006a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  0006f	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00074	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
$LN13@use_facet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0007b	48 8b 4d 08	 mov	 rcx, QWORD PTR [rbp+8]
  0007f	48 3b 59 18	 cmp	 rbx, QWORD PTR [rcx+24]
  00083	73 13		 jae	 SHORT $LN22@use_facet
  00085	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00089	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0008d	48 85 ff	 test	 rdi, rdi
  00090	0f 85 af 00 00
	00		 jne	 $LN7@use_facet
  00096	eb 02		 jmp	 SHORT $LN32@use_facet
$LN22@use_facet:

; 151  : 			}
; 152  : 
; 153  : 		virtual _Facet_base *__CLR_OR_THIS_CALL _Decref()
; 154  : 			{	// decrement use count
; 155  : 			if (_MT_DECR(_Myrefs) == 0)
; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}
; 160  : 
; 161  : 	private:
; 162  : 		_Atomic_counter_t _Myrefs;	// the reference count
; 163  : 
; 164  : 	protected:
; 165  : 		explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)
; 166  : 			{	// construct with initial reference count
; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}
; 169  : 
; 170  : 		virtual __CLR_OR_THIS_CALL ~facet() _NOEXCEPT
; 171  : 			{	// ensure that derived classes can be destroyed properly
; 172  : 			}
; 173  : 
; 174  : 	public:
; 175  : 		__CLR_OR_THIS_CALL facet(const facet&) = delete;
; 176  : 		facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 177  : 		};
; 178  : 
; 179  : 			// CLASS _Locimp
; 180  :  #pragma warning(push)
; 181  :  #pragma warning(disable: 4275)
; 182  : 
; 183  : 	class _CRTIMP2_PURE _Locimp
; 184  : 		: public facet
; 185  : 		{	// reference-counted actual implementation of a locale
; 186  : 	protected:
; 187  : 		__CLR_OR_THIS_CALL ~_Locimp() _NOEXCEPT
; 188  : 		{	// destroy the object
; 189  : 		_Locimp_dtor(this);
; 190  : 		}
; 191  : 
; 192  : 	private:
; 193  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 194  : 			_New_Locimp(bool _Transparent = false);
; 195  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 196  : 			_New_Locimp(const _Locimp& _Right);
; 197  : 
; 198  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 199  : 			_Locimp_dtor(_Locimp *);
; 200  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 201  : 			_Locimp_Addfac(_Locimp *, facet *, size_t);	// add a facet
; 202  : 		static void __CLRCALL_PURE_OR_CDECL
; 203  : 			_Locimp_ctor(_Locimp *, const _Locimp&);
; 204  : 
; 205  : 		friend class locale;
; 206  : 
; 207  : 		__CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 208  : 			: locale::facet(1), _Facetvec(0), _Facetcount(0),
; 209  : 				_Catmask(none), _Xparent(_Transparent),
; 210  : 					_Name("*")
; 211  : 			{	// construct an empty _Locimp
; 212  : 			}
; 213  : 
; 214  : 		__CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 215  : 			: locale::facet(1), _Facetvec(0), _Facetcount(_Right._Facetcount),
; 216  : 				_Catmask(_Right._Catmask), _Xparent(_Right._Xparent),
; 217  : 					_Name(_Right._Name.c_str())
; 218  : 			{	// construct by copying
; 219  : 			_Locimp_ctor(this, _Right);
; 220  : 			}
; 221  : 
; 222  : 		void __CLR_OR_THIS_CALL _Addfac(facet *_Pfacet, size_t _Id)
; 223  : 			{	// add a facet
; 224  : 			_Locimp_Addfac(this, _Pfacet, _Id);
; 225  : 			}
; 226  : 
; 227  : 		static _Locimp *__CLRCALL_OR_CDECL _Makeloc(const _Locinfo&,
; 228  : 			category, _Locimp *, const locale *);	// make essential facets
; 229  : 
; 230  : 		static void __CLRCALL_OR_CDECL _Makewloc(const _Locinfo&,
; 231  : 			category, _Locimp *, const locale *);	// make wchar_t facets
; 232  : 
; 233  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 234  : 		static void __CLRCALL_OR_CDECL _Makeushloc(const _Locinfo&,
; 235  : 			category, _Locimp *, const locale *);	// make ushort facets
; 236  :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 237  : 
; 238  : 		static void __CLRCALL_OR_CDECL _Makexloc(const _Locinfo&,
; 239  : 			category, _Locimp *, const locale *);	// make remaining facets
; 240  : 
; 241  : 		facet **_Facetvec;	// pointer to vector of facets
; 242  : 		size_t _Facetcount;	// size of vector of facets
; 243  : 		category _Catmask;	// mask describing implemented categories
; 244  : 		bool _Xparent;	// true if locale is transparent
; 245  : 		_Yarn<char> _Name;	// locale name, or "*" if not known
; 246  : 
; 247  : 		__PURE_APPDOMAIN_GLOBAL static _Locimp *_Clocptr;
; 248  : 
; 249  : public:
; 250  : 		_Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 251  : 		};
; 252  : 
; 253  :  #pragma warning(pop)
; 254  : 
; 255  : 	template<class _Elem,
; 256  : 		class _Traits,
; 257  : 		class _Alloc>
; 258  : 		bool operator()(const basic_string<_Elem, _Traits, _Alloc>& _Left,
; 259  : 			const basic_string<_Elem, _Traits, _Alloc>& _Right) const
; 260  : 		{	// compare _Left and _Right strings using collate facet in locale
; 261  : 		const _STD collate<_Elem>& _Coll_fac =
; 262  : 			use_facet< _STD collate<_Elem> >(*this);
; 263  : 
; 264  : 		return (_Coll_fac.compare(_Left.c_str(), _Left.c_str() + _Left.size(),
; 265  : 			_Right.c_str(), _Right.c_str() + _Right.size()) < 0);
; 266  : 		}
; 267  : 
; 268  : 	template<class _Facet>
; 269  : 		locale combine(const locale& _Loc) const
; 270  : 		{	// combine two locales
; 271  : 		_Facet *_Facptr;
; 272  : 
; 273  : 		_TRY_BEGIN
; 274  : 			_Facptr = (_Facet *)&use_facet<_Facet>(_Loc);
; 275  : 		_CATCH_ALL
; 276  : 			_Xruntime_error("locale::combine facet missing");
; 277  : 		_CATCH_END
; 278  : 
; 279  : 		_Locimp *_Newimp = _Locimp::_New_Locimp(*_Ptr);
; 280  : 		_Newimp->_Addfac(_Facptr, _Facet::id);
; 281  : 		_Newimp->_Catmask = none;
; 282  : 		_Newimp->_Name = "*";
; 283  : 		return (locale(_Newimp));
; 284  : 		}
; 285  : 
; 286  : 	template<class _Facet>
; 287  : 		locale(const locale& _Loc, const _Facet *_Facptr)
; 288  : 			: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 289  : 		{	// construct from _Loc, replacing facet with *_Facptr
; 290  : 		if (_Facptr != 0)
; 291  : 			{	// replace facet
; 292  : 			_Ptr->_Addfac((_Facet *)_Facptr, _Facet::id);
; 293  : 			_Ptr->_Catmask = none;
; 294  : 			_Ptr->_Name = "*";
; 295  : 			}
; 296  : 		}
; 297  : 
; 298  : 	locale(_Uninitialized)
; 299  : 		{	// defer construction
; 300  : 		}
; 301  : 
; 302  :  #if _NO_LOCALES
; 303  : 	locale(const locale& _Right) _THROW0()
; 304  : 		: _Ptr(0)
; 305  : 		{	// construct by copying
; 306  : 		}
; 307  : 
; 308  : 	locale() _THROW0()
; 309  : 		: _Ptr(0)
; 310  : 		{	// construct from current locale
; 311  : 		}
; 312  : 
; 313  : 	~locale() _NOEXCEPT
; 314  : 		{	// destroy the object
; 315  : 		}
; 316  : 
; 317  : 	locale& operator=(const locale& _Right) _THROW0()
; 318  : 		{	// assign a locale
; 319  : 		return (*this);
; 320  : 		}
; 321  : 
; 322  :  #else /* _NO_LOCALES */
; 323  : 	locale(const locale& _Right) _THROW0()
; 324  : 		: _Ptr(_Right._Ptr)
; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();
; 327  : 		}
; 328  : 
; 329  : 	locale() _THROW0()
; 330  : 		: _Ptr(_Init(true))
; 331  : 		{	// construct from current locale
; 332  : 		}
; 333  : 
; 334  :  #if !defined(MRTDLL) || !defined(_CRTBLD)
; 335  : 	locale(const locale& _Loc, const locale& _Other,
; 336  : 		category _Cat)
; 337  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 338  : 		{	// construct a locale by copying named facets
; 339  : 		if (_Cat != none)
; 340  : 			{	// worth adding, do it
; 341  : 			_TRY_BEGIN
; 342  : 				_BEGIN_LOCINFO(_Lobj)
; 343  : 					_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 344  : 					_Lobj._Addcats(_Loc._Ptr->_Catmask,
; 345  : 						_Loc.name().c_str());
; 346  : 					_Lobj._Addcats(_Other._Ptr->_Catmask,
; 347  : 						_Other.name().c_str());
; 348  : 					_Ptr->_Catmask = _Loc._Ptr->_Catmask
; 349  : 						| _Other._Ptr->_Catmask;
; 350  : 					_Ptr->_Name = _Lobj._Getname();
; 351  : 				_END_LOCINFO()
; 352  : 			_CATCH_ALL
; 353  : 			delete _Ptr->_Decref();
; 354  : 			_RERAISE;
; 355  : 			_CATCH_END
; 356  : 			}
; 357  : 		}
; 358  : 
; 359  : private:
; 360  : 	void _Construct(const string &_Str,
; 361  : 		category _Cat)
; 362  : 		{	// construct a locale with named facets
; 363  : 		bool _Bad = false;
; 364  : 		_Init();
; 365  : 		if (_Cat != none)
; 366  : 			{	// worth adding, do it
; 367  : 			_TRY_BEGIN
; 368  : 				_BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 369  : 					if (_Badname(_Lobj))
; 370  : 						_Bad = true;
; 371  : 					else
; 372  : 						{	// name okay, build the locale
; 373  : 						_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, 0);
; 374  : 						_Ptr->_Catmask = _Cat;
; 375  : 						_Ptr->_Name = _Str.c_str();
; 376  : 						}
; 377  : 				_END_LOCINFO()
; 378  : 			_CATCH_ALL
; 379  : 			delete _Ptr->_Decref();
; 380  : 			_RERAISE;
; 381  : 			_CATCH_END
; 382  : 			}
; 383  : 
; 384  : 		if (_Bad)
; 385  : 			{	// Don't throw within _BEGIN_LOCINFO if we can avoid it
; 386  : 			delete _Ptr->_Decref();
; 387  : 			_Xruntime_error("bad locale name");
; 388  : 			}
; 389  : 		}
; 390  : 
; 391  : public:
; 392  : 	explicit locale(const char *_Locname,
; 393  : 		category _Cat = all)
; 394  : 		: _Ptr(_Locimp::_New_Locimp())
; 395  : 		{	// construct a locale with named facets
; 396  : 		// _Locname might have been returned from setlocale().
; 397  : 		// Therefore, _Construct() takes const string&.
; 398  : 		if (_Locname == 0)
; 399  : 			_Xruntime_error("bad locale name");
; 400  : 		_Construct(_Locname, _Cat);
; 401  : 		}
; 402  : 
; 403  : 	locale(const locale& _Loc, const char *_Locname,
; 404  : 		category _Cat)
; 405  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 406  : 		{	// construct a locale by copying, replacing named facets
; 407  : 		// _Locname might have been returned from setlocale().
; 408  : 		// Therefore, _Construct() takes const string&.
; 409  : 		if (_Locname == 0)
; 410  : 			_Xruntime_error("bad locale name");
; 411  : 		_Construct(_Locname, _Cat);
; 412  : 		}
; 413  : 
; 414  : 	explicit locale(const string& _Str,
; 415  : 		category _Cat = all)
; 416  : 		: _Ptr(_Locimp::_New_Locimp())
; 417  : 		{	// construct a locale with named facets
; 418  : 		_Construct(_Str, _Cat);
; 419  : 		}
; 420  : 
; 421  : 	locale(const locale& _Loc, const string& _Str,
; 422  : 		category _Cat)
; 423  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 424  : 		{	// construct a locale by copying, replacing named facets
; 425  : 		_Construct(_Str, _Cat);
; 426  : 		}
; 427  :  #endif /* !MRTDLL || !_CRTBLD */
; 428  : 
; 429  : 	~locale() _NOEXCEPT
; 430  : 		{	// destroy the object
; 431  : 		if (_Ptr != 0)
; 432  : 			delete _Ptr->_Decref();
; 433  : 		}
; 434  : 
; 435  : 	locale& operator=(const locale& _Right) _THROW0()
; 436  : 		{	// assign a locale
; 437  : 		if (_Ptr != _Right._Ptr)
; 438  : 			{	// different implementation, point at new one
; 439  : 			delete _Ptr->_Decref();
; 440  : 			_Ptr = _Right._Ptr;
; 441  : 			_Ptr->_Incref();
; 442  : 			}
; 443  : 		return (*this);
; 444  : 		}
; 445  :  #endif /* _NO_LOCALES */
; 446  : 
; 447  : 	string name() const
; 448  : 		{	// return locale name
; 449  : 		return (_Ptr == 0 ? string() : _Ptr->_Name.c_str());
; 450  : 		}
; 451  : 
; 452  : 	const char *c_str() const
; 453  : 		{	// return locale name as NTBS
; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());
; 455  : 		}
; 456  : 
; 457  : 	const facet *_Getfacet(size_t _Id) const
; 458  : 		{	// look up a facet in locale object
; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00098	33 ff		 xor	 edi, edi
$LN32@use_facet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0009a	80 79 24 00	 cmp	 BYTE PTR [rcx+36], 0
  0009e	74 13		 je	 SHORT $LN19@use_facet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  000a0	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  000a5	48 3b 58 18	 cmp	 rbx, QWORD PTR [rax+24]
  000a9	73 11		 jae	 SHORT $LN33@use_facet
  000ab	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000af	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]
$LN19@use_facet:

; 562  : 
; 563  : 		size_t _Id = _Facet::id;
; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);
; 565  : 
; 566  : 		if (_Pf != 0)

  000b3	48 85 ff	 test	 rdi, rdi
  000b6	0f 85 89 00 00
	00		 jne	 $LN7@use_facet
$LN33@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  000bc	48 85 f6	 test	 rsi, rsi
  000bf	74 05		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  000c1	48 8b fe	 mov	 rdi, rsi
  000c4	eb 7f		 jmp	 SHORT $LN7@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  000c6	48 8b d5	 mov	 rdx, rbp
  000c9	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Psave$5[rsp]
  000ce	e8 00 00 00 00	 call	 ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::numpunct<wchar_t>::_Getcat
  000d3	48 83 f8 ff	 cmp	 rax, -1
  000d7	75 31		 jne	 SHORT $LN6@use_facet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 59   :         : _Data()

  000d9	33 c0		 xor	 eax, eax
  000db	48 89 44 24 38	 mov	 QWORD PTR $T2[rsp+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  000e0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  000e7	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h

; 125  :     {

  000ec	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  000f3	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  000f8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  000ff	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00104	e8 00 00 00 00	 call	 _CxxThrowException
  00109	cc		 int	 3
$LN6@use_facet:

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else
; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  0010a	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]
  0010f	48 8b fb	 mov	 rdi, rbx

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  00112	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$numpunct@_W@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::numpunct<wchar_t> >::_Psave
  00119	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0011c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Incref@facet@locale@std@@UEAAXXZ ; std::locale::facet::_Incref
  00127	48 3b d0	 cmp	 rdx, rax
  0012a	75 0b		 jne	 SHORT $LN10@use_facet

; 150  : 			_MT_INCR(_Myrefs);

  0012c	f0 ff 43 08	 lock inc DWORD PTR [rbx+8]
  00130	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]
  00135	eb 05		 jmp	 SHORT $LN9@use_facet
$LN10@use_facet:
  00137	48 8b cb	 mov	 rcx, rbx

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 586  : 			_Pfmod->_Incref();

  0013a	ff d2		 call	 rdx
$LN9@use_facet:

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  0013c	48 8b cb	 mov	 rcx, rbx
  0013f	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
  00144	90		 npad	 1
$LN7@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  00145	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  0014a	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  0014f	48 8b c7	 mov	 rax, rdi

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  00152	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  00157	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0015b	5f		 pop	 rdi
  0015c	5e		 pop	 rsi
  0015d	5d		 pop	 rbp
  0015e	c3		 ret	 0
$LN34@use_facet:
??$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::numpunct<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<wchar_t> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::numpunct<wchar_t> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$numpunct@_W@std@@@std@@YAAEBV?$numpunct@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::numpunct<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 280  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >, COMDAT

; 851  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 280  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >, COMDAT

; 851  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0V?$allocator@D@std@@@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> ><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 280  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>, COMDAT

; 901  : 		_Mytraits::destroy(*this, _Ptr);
; 902  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@_W@std@@YAPEA_WAEA_W@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@_W@std@@YAPEA_WAEA_W@Z PROC		; std::addressof<wchar_t>, COMDAT

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00000	48 8b c1	 mov	 rax, rcx

; 717  : 	}

  00003	c3		 ret	 0
??$addressof@_W@std@@YAPEA_WAEA_W@Z ENDP		; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN13@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN13@construct:

; 893  : 		_Mytraits::construct(*this, _Ptr,
; 894  : 			_STD forward<_Types>(_Args)...);
; 895  : 		}

  0000b	c3		 ret	 0
??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 901  : 		_Mytraits::destroy(*this, _Ptr);
; 902  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00000	48 8b c1	 mov	 rax, rcx

; 717  : 	}

  00003	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN13@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN13@construct:

; 893  : 		_Mytraits::construct(*this, _Ptr,
; 894  : 			_STD forward<_Types>(_Args)...);
; 895  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::ctype<wchar_t> >, COMDAT

; 553  : 	{	// get facet reference from locale

$LN36:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00008	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00011	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00016	48 8b e9	 mov	 rbp, rcx

; 554  :  #if _NO_LOCALES
; 555  : 	static _Wrap_facet<_Facet> _Wfac;
; 556  : 	return (*(_Facet *)&_Wfac);
; 557  : 
; 558  :  #else /* _NO_LOCALES */
; 559  : 	_BEGIN_LOCK(_LOCK_LOCALE)	// the thread lock, make get atomic

  00019	33 d2		 xor	 edx, edx
  0001b	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00020	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit
  00025	90		 npad	 1

; 560  : 		const locale::facet *_Psave =
; 561  : 			_Facetptr<_Facet>::_Psave;	// static pointer to lazy facet

  00026	48 8b 35 00 00
	00 00		 mov	 rsi, QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
  0002d	48 89 74 24 70	 mov	 QWORD PTR _Psave$5[rsp], rsi

; 115  : 			if (_Id == 0)

  00032	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A ; std::ctype<wchar_t>::id
  00039	48 85 db	 test	 rbx, rbx
  0003c	75 3d		 jne	 SHORT $LN13@use_facet

; 116  : 				{	// still zero, allocate stamp
; 117  : 				_BEGIN_LOCK(_LOCK_LOCALE)

  0003e	33 d2		 xor	 edx, edx
  00040	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  00045	e8 00 00 00 00	 call	 ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit

; 118  : 					if (_Id == 0)

  0004a	48 39 1d 00 00
	00 00		 cmp	 QWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A, rbx ; std::ctype<wchar_t>::id
  00051	75 17		 jne	 SHORT $LN14@use_facet

; 119  : 						_Id = ++_Id_cnt;

  00053	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
  00059	ff c0		 inc	 eax
  0005b	89 05 00 00 00
	00		 mov	 DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
  00061	48 98		 cdqe
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A, rax ; std::ctype<wchar_t>::id
$LN14@use_facet:

; 120  : 				_END_LOCK()

  0006a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR _Lock$3[rsp]
  0006f	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  00074	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ?id@?$ctype@_W@std@@2V0locale@2@A ; std::ctype<wchar_t>::id
$LN13@use_facet:

; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  0007b	48 8b 4d 08	 mov	 rcx, QWORD PTR [rbp+8]
  0007f	48 3b 59 18	 cmp	 rbx, QWORD PTR [rcx+24]
  00083	73 13		 jae	 SHORT $LN22@use_facet
  00085	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00089	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0008d	48 85 ff	 test	 rdi, rdi
  00090	0f 85 af 00 00
	00		 jne	 $LN7@use_facet
  00096	eb 02		 jmp	 SHORT $LN32@use_facet
$LN22@use_facet:

; 151  : 			}
; 152  : 
; 153  : 		virtual _Facet_base *__CLR_OR_THIS_CALL _Decref()
; 154  : 			{	// decrement use count
; 155  : 			if (_MT_DECR(_Myrefs) == 0)
; 156  : 				return (this);
; 157  : 			else
; 158  : 				return (0);
; 159  : 			}
; 160  : 
; 161  : 	private:
; 162  : 		_Atomic_counter_t _Myrefs;	// the reference count
; 163  : 
; 164  : 	protected:
; 165  : 		explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0)
; 166  : 			{	// construct with initial reference count
; 167  : 			_Init_atomic_counter(_Myrefs, (_Atomic_integral_t)_Initrefs);
; 168  : 			}
; 169  : 
; 170  : 		virtual __CLR_OR_THIS_CALL ~facet() _NOEXCEPT
; 171  : 			{	// ensure that derived classes can be destroyed properly
; 172  : 			}
; 173  : 
; 174  : 	public:
; 175  : 		__CLR_OR_THIS_CALL facet(const facet&) = delete;
; 176  : 		facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 177  : 		};
; 178  : 
; 179  : 			// CLASS _Locimp
; 180  :  #pragma warning(push)
; 181  :  #pragma warning(disable: 4275)
; 182  : 
; 183  : 	class _CRTIMP2_PURE _Locimp
; 184  : 		: public facet
; 185  : 		{	// reference-counted actual implementation of a locale
; 186  : 	protected:
; 187  : 		__CLR_OR_THIS_CALL ~_Locimp() _NOEXCEPT
; 188  : 		{	// destroy the object
; 189  : 		_Locimp_dtor(this);
; 190  : 		}
; 191  : 
; 192  : 	private:
; 193  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 194  : 			_New_Locimp(bool _Transparent = false);
; 195  : 		static _MRTIMP2_PURE_NPURE _Locimp *__CLRCALL_PURE_OR_CDECL
; 196  : 			_New_Locimp(const _Locimp& _Right);
; 197  : 
; 198  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 199  : 			_Locimp_dtor(_Locimp *);
; 200  : 		static _MRTIMP2_PURE_NPURE void __CLRCALL_PURE_OR_CDECL
; 201  : 			_Locimp_Addfac(_Locimp *, facet *, size_t);	// add a facet
; 202  : 		static void __CLRCALL_PURE_OR_CDECL
; 203  : 			_Locimp_ctor(_Locimp *, const _Locimp&);
; 204  : 
; 205  : 		friend class locale;
; 206  : 
; 207  : 		__CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 208  : 			: locale::facet(1), _Facetvec(0), _Facetcount(0),
; 209  : 				_Catmask(none), _Xparent(_Transparent),
; 210  : 					_Name("*")
; 211  : 			{	// construct an empty _Locimp
; 212  : 			}
; 213  : 
; 214  : 		__CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 215  : 			: locale::facet(1), _Facetvec(0), _Facetcount(_Right._Facetcount),
; 216  : 				_Catmask(_Right._Catmask), _Xparent(_Right._Xparent),
; 217  : 					_Name(_Right._Name.c_str())
; 218  : 			{	// construct by copying
; 219  : 			_Locimp_ctor(this, _Right);
; 220  : 			}
; 221  : 
; 222  : 		void __CLR_OR_THIS_CALL _Addfac(facet *_Pfacet, size_t _Id)
; 223  : 			{	// add a facet
; 224  : 			_Locimp_Addfac(this, _Pfacet, _Id);
; 225  : 			}
; 226  : 
; 227  : 		static _Locimp *__CLRCALL_OR_CDECL _Makeloc(const _Locinfo&,
; 228  : 			category, _Locimp *, const locale *);	// make essential facets
; 229  : 
; 230  : 		static void __CLRCALL_OR_CDECL _Makewloc(const _Locinfo&,
; 231  : 			category, _Locimp *, const locale *);	// make wchar_t facets
; 232  : 
; 233  :  #ifdef _NATIVE_WCHAR_T_DEFINED
; 234  : 		static void __CLRCALL_OR_CDECL _Makeushloc(const _Locinfo&,
; 235  : 			category, _Locimp *, const locale *);	// make ushort facets
; 236  :  #endif /* _NATIVE_WCHAR_T_DEFINED */
; 237  : 
; 238  : 		static void __CLRCALL_OR_CDECL _Makexloc(const _Locinfo&,
; 239  : 			category, _Locimp *, const locale *);	// make remaining facets
; 240  : 
; 241  : 		facet **_Facetvec;	// pointer to vector of facets
; 242  : 		size_t _Facetcount;	// size of vector of facets
; 243  : 		category _Catmask;	// mask describing implemented categories
; 244  : 		bool _Xparent;	// true if locale is transparent
; 245  : 		_Yarn<char> _Name;	// locale name, or "*" if not known
; 246  : 
; 247  : 		__PURE_APPDOMAIN_GLOBAL static _Locimp *_Clocptr;
; 248  : 
; 249  : public:
; 250  : 		_Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 251  : 		};
; 252  : 
; 253  :  #pragma warning(pop)
; 254  : 
; 255  : 	template<class _Elem,
; 256  : 		class _Traits,
; 257  : 		class _Alloc>
; 258  : 		bool operator()(const basic_string<_Elem, _Traits, _Alloc>& _Left,
; 259  : 			const basic_string<_Elem, _Traits, _Alloc>& _Right) const
; 260  : 		{	// compare _Left and _Right strings using collate facet in locale
; 261  : 		const _STD collate<_Elem>& _Coll_fac =
; 262  : 			use_facet< _STD collate<_Elem> >(*this);
; 263  : 
; 264  : 		return (_Coll_fac.compare(_Left.c_str(), _Left.c_str() + _Left.size(),
; 265  : 			_Right.c_str(), _Right.c_str() + _Right.size()) < 0);
; 266  : 		}
; 267  : 
; 268  : 	template<class _Facet>
; 269  : 		locale combine(const locale& _Loc) const
; 270  : 		{	// combine two locales
; 271  : 		_Facet *_Facptr;
; 272  : 
; 273  : 		_TRY_BEGIN
; 274  : 			_Facptr = (_Facet *)&use_facet<_Facet>(_Loc);
; 275  : 		_CATCH_ALL
; 276  : 			_Xruntime_error("locale::combine facet missing");
; 277  : 		_CATCH_END
; 278  : 
; 279  : 		_Locimp *_Newimp = _Locimp::_New_Locimp(*_Ptr);
; 280  : 		_Newimp->_Addfac(_Facptr, _Facet::id);
; 281  : 		_Newimp->_Catmask = none;
; 282  : 		_Newimp->_Name = "*";
; 283  : 		return (locale(_Newimp));
; 284  : 		}
; 285  : 
; 286  : 	template<class _Facet>
; 287  : 		locale(const locale& _Loc, const _Facet *_Facptr)
; 288  : 			: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 289  : 		{	// construct from _Loc, replacing facet with *_Facptr
; 290  : 		if (_Facptr != 0)
; 291  : 			{	// replace facet
; 292  : 			_Ptr->_Addfac((_Facet *)_Facptr, _Facet::id);
; 293  : 			_Ptr->_Catmask = none;
; 294  : 			_Ptr->_Name = "*";
; 295  : 			}
; 296  : 		}
; 297  : 
; 298  : 	locale(_Uninitialized)
; 299  : 		{	// defer construction
; 300  : 		}
; 301  : 
; 302  :  #if _NO_LOCALES
; 303  : 	locale(const locale& _Right) _THROW0()
; 304  : 		: _Ptr(0)
; 305  : 		{	// construct by copying
; 306  : 		}
; 307  : 
; 308  : 	locale() _THROW0()
; 309  : 		: _Ptr(0)
; 310  : 		{	// construct from current locale
; 311  : 		}
; 312  : 
; 313  : 	~locale() _NOEXCEPT
; 314  : 		{	// destroy the object
; 315  : 		}
; 316  : 
; 317  : 	locale& operator=(const locale& _Right) _THROW0()
; 318  : 		{	// assign a locale
; 319  : 		return (*this);
; 320  : 		}
; 321  : 
; 322  :  #else /* _NO_LOCALES */
; 323  : 	locale(const locale& _Right) _THROW0()
; 324  : 		: _Ptr(_Right._Ptr)
; 325  : 		{	// construct by copying
; 326  : 		_Ptr->_Incref();
; 327  : 		}
; 328  : 
; 329  : 	locale() _THROW0()
; 330  : 		: _Ptr(_Init(true))
; 331  : 		{	// construct from current locale
; 332  : 		}
; 333  : 
; 334  :  #if !defined(MRTDLL) || !defined(_CRTBLD)
; 335  : 	locale(const locale& _Loc, const locale& _Other,
; 336  : 		category _Cat)
; 337  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 338  : 		{	// construct a locale by copying named facets
; 339  : 		if (_Cat != none)
; 340  : 			{	// worth adding, do it
; 341  : 			_TRY_BEGIN
; 342  : 				_BEGIN_LOCINFO(_Lobj)
; 343  : 					_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 344  : 					_Lobj._Addcats(_Loc._Ptr->_Catmask,
; 345  : 						_Loc.name().c_str());
; 346  : 					_Lobj._Addcats(_Other._Ptr->_Catmask,
; 347  : 						_Other.name().c_str());
; 348  : 					_Ptr->_Catmask = _Loc._Ptr->_Catmask
; 349  : 						| _Other._Ptr->_Catmask;
; 350  : 					_Ptr->_Name = _Lobj._Getname();
; 351  : 				_END_LOCINFO()
; 352  : 			_CATCH_ALL
; 353  : 			delete _Ptr->_Decref();
; 354  : 			_RERAISE;
; 355  : 			_CATCH_END
; 356  : 			}
; 357  : 		}
; 358  : 
; 359  : private:
; 360  : 	void _Construct(const string &_Str,
; 361  : 		category _Cat)
; 362  : 		{	// construct a locale with named facets
; 363  : 		bool _Bad = false;
; 364  : 		_Init();
; 365  : 		if (_Cat != none)
; 366  : 			{	// worth adding, do it
; 367  : 			_TRY_BEGIN
; 368  : 				_BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 369  : 					if (_Badname(_Lobj))
; 370  : 						_Bad = true;
; 371  : 					else
; 372  : 						{	// name okay, build the locale
; 373  : 						_Locimp::_Makeloc(_Lobj, _Cat, _Ptr, 0);
; 374  : 						_Ptr->_Catmask = _Cat;
; 375  : 						_Ptr->_Name = _Str.c_str();
; 376  : 						}
; 377  : 				_END_LOCINFO()
; 378  : 			_CATCH_ALL
; 379  : 			delete _Ptr->_Decref();
; 380  : 			_RERAISE;
; 381  : 			_CATCH_END
; 382  : 			}
; 383  : 
; 384  : 		if (_Bad)
; 385  : 			{	// Don't throw within _BEGIN_LOCINFO if we can avoid it
; 386  : 			delete _Ptr->_Decref();
; 387  : 			_Xruntime_error("bad locale name");
; 388  : 			}
; 389  : 		}
; 390  : 
; 391  : public:
; 392  : 	explicit locale(const char *_Locname,
; 393  : 		category _Cat = all)
; 394  : 		: _Ptr(_Locimp::_New_Locimp())
; 395  : 		{	// construct a locale with named facets
; 396  : 		// _Locname might have been returned from setlocale().
; 397  : 		// Therefore, _Construct() takes const string&.
; 398  : 		if (_Locname == 0)
; 399  : 			_Xruntime_error("bad locale name");
; 400  : 		_Construct(_Locname, _Cat);
; 401  : 		}
; 402  : 
; 403  : 	locale(const locale& _Loc, const char *_Locname,
; 404  : 		category _Cat)
; 405  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 406  : 		{	// construct a locale by copying, replacing named facets
; 407  : 		// _Locname might have been returned from setlocale().
; 408  : 		// Therefore, _Construct() takes const string&.
; 409  : 		if (_Locname == 0)
; 410  : 			_Xruntime_error("bad locale name");
; 411  : 		_Construct(_Locname, _Cat);
; 412  : 		}
; 413  : 
; 414  : 	explicit locale(const string& _Str,
; 415  : 		category _Cat = all)
; 416  : 		: _Ptr(_Locimp::_New_Locimp())
; 417  : 		{	// construct a locale with named facets
; 418  : 		_Construct(_Str, _Cat);
; 419  : 		}
; 420  : 
; 421  : 	locale(const locale& _Loc, const string& _Str,
; 422  : 		category _Cat)
; 423  : 		: _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr))
; 424  : 		{	// construct a locale by copying, replacing named facets
; 425  : 		_Construct(_Str, _Cat);
; 426  : 		}
; 427  :  #endif /* !MRTDLL || !_CRTBLD */
; 428  : 
; 429  : 	~locale() _NOEXCEPT
; 430  : 		{	// destroy the object
; 431  : 		if (_Ptr != 0)
; 432  : 			delete _Ptr->_Decref();
; 433  : 		}
; 434  : 
; 435  : 	locale& operator=(const locale& _Right) _THROW0()
; 436  : 		{	// assign a locale
; 437  : 		if (_Ptr != _Right._Ptr)
; 438  : 			{	// different implementation, point at new one
; 439  : 			delete _Ptr->_Decref();
; 440  : 			_Ptr = _Right._Ptr;
; 441  : 			_Ptr->_Incref();
; 442  : 			}
; 443  : 		return (*this);
; 444  : 		}
; 445  :  #endif /* _NO_LOCALES */
; 446  : 
; 447  : 	string name() const
; 448  : 		{	// return locale name
; 449  : 		return (_Ptr == 0 ? string() : _Ptr->_Name.c_str());
; 450  : 		}
; 451  : 
; 452  : 	const char *c_str() const
; 453  : 		{	// return locale name as NTBS
; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());
; 455  : 		}
; 456  : 
; 457  : 	const facet *_Getfacet(size_t _Id) const
; 458  : 		{	// look up a facet in locale object
; 459  : 		const facet *_Facptr = _Id < _Ptr->_Facetcount

  00098	33 ff		 xor	 edi, edi
$LN32@use_facet:

; 460  : 			? _Ptr->_Facetvec[_Id] : 0;	// null if id off end
; 461  : 		if (_Facptr != 0 || !_Ptr->_Xparent)

  0009a	80 79 24 00	 cmp	 BYTE PTR [rcx+36], 0
  0009e	74 13		 je	 SHORT $LN19@use_facet

; 462  : 			return (_Facptr);	// found facet or not transparent
; 463  : 		else
; 464  : 			{	// look in current locale
; 465  : 			locale::_Locimp *_Ptr0 = _Getgloballocale();

  000a0	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 466  : 			return (_Id < _Ptr0->_Facetcount

  000a5	48 3b 58 18	 cmp	 rbx, QWORD PTR [rax+24]
  000a9	73 11		 jae	 SHORT $LN33@use_facet
  000ab	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000af	48 8b 3c d8	 mov	 rdi, QWORD PTR [rax+rbx*8]
$LN19@use_facet:

; 562  : 
; 563  : 		size_t _Id = _Facet::id;
; 564  : 		const locale::facet *_Pf = _Loc._Getfacet(_Id);
; 565  : 
; 566  : 		if (_Pf != 0)

  000b3	48 85 ff	 test	 rdi, rdi
  000b6	0f 85 89 00 00
	00		 jne	 $LN7@use_facet
$LN33@use_facet:

; 567  : 			;	// got facet from locale
; 568  : 		else if (_Psave != 0)

  000bc	48 85 f6	 test	 rsi, rsi
  000bf	74 05		 je	 SHORT $LN4@use_facet

; 569  : 			_Pf = _Psave;	// lazy facet already allocated

  000c1	48 8b fe	 mov	 rdi, rsi
  000c4	eb 7f		 jmp	 SHORT $LN7@use_facet
$LN4@use_facet:

; 570  : 		else if (_Facet::_Getcat(&_Psave, &_Loc) == (size_t)(-1))

  000c6	48 8b d5	 mov	 rdx, rbp
  000c9	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Psave$5[rsp]
  000ce	e8 00 00 00 00	 call	 ?_Getcat@?$ctype@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<wchar_t>::_Getcat
  000d3	48 83 f8 ff	 cmp	 rax, -1
  000d7	75 31		 jne	 SHORT $LN6@use_facet
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h

; 59   :         : _Data()

  000d9	33 c0		 xor	 eax, eax
  000db	48 89 44 24 38	 mov	 QWORD PTR $T2[rsp+16], rax

; 60   :     {
; 61   :         _Data._What = _Message;

  000e0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast?$AA@
  000e7	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp+8], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_typeinfo.h

; 125  :     {

  000ec	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  000f3	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 574  : 			_THROW_NCEE(_XSTD bad_cast, _EMPTY_ARGUMENT);	// lazy disallowed

  000f8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  000ff	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00104	e8 00 00 00 00	 call	 _CxxThrowException
  00109	cc		 int	 3
$LN6@use_facet:

; 575  : 
; 576  :  #else /* _HAS_EXCEPTIONS */
; 577  : 			abort();	// lazy disallowed
; 578  :  #endif /* _HAS_EXCEPTIONS */
; 579  : 
; 580  : 		else
; 581  : 			{	// queue up lazy facet for destruction
; 582  : 			_Pf = _Psave;

  0010a	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]
  0010f	48 8b fb	 mov	 rdi, rbx

; 583  : 			_Facetptr<_Facet>::_Psave = _Psave;

  00112	48 89 1d 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
  00119	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0011c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Incref@facet@locale@std@@UEAAXXZ ; std::locale::facet::_Incref
  00127	48 3b d0	 cmp	 rdx, rax
  0012a	75 0b		 jne	 SHORT $LN10@use_facet

; 150  : 			_MT_INCR(_Myrefs);

  0012c	f0 ff 43 08	 lock inc DWORD PTR [rbx+8]
  00130	48 8b 5c 24 70	 mov	 rbx, QWORD PTR _Psave$5[rsp]
  00135	eb 05		 jmp	 SHORT $LN9@use_facet
$LN10@use_facet:
  00137	48 8b cb	 mov	 rcx, rbx

; 584  : 
; 585  : 			locale::facet *_Pfmod = (_Facet *)_Psave;
; 586  : 			_Pfmod->_Incref();

  0013a	ff d2		 call	 rdx
$LN9@use_facet:

; 587  : 
; 588  :  #if defined(_M_CEE)
; 589  : 			_Facet_Register_m(_Pfmod);
; 590  : 
; 591  :  #else /* defined(_M_CEE) */
; 592  : 			_Facet_Register(_Pfmod);

  0013c	48 8b cb	 mov	 rcx, rbx
  0013f	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register
  00144	90		 npad	 1
$LN7@use_facet:

; 593  :  #endif /* defined(_M_CEE) */
; 594  : 			}
; 595  : 
; 596  : 		return ((const _Facet&)(*_Pf));	// should be dynamic_cast

  00145	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  0014a	e8 00 00 00 00	 call	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
  0014f	48 8b c7	 mov	 rax, rdi

; 597  : 	_END_LOCK()
; 598  :  #endif /* _NO_LOCALES */
; 599  : 	}	// end of use_facet body

  00152	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  00157	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0015b	5f		 pop	 rdi
  0015c	5e		 pop	 rsi
  0015d	5d		 pop	 rbp
  0015e	c3		 ret	 0
$LN34@use_facet:
??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::ctype<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Lock$3 = 96
_Loc$ = 96
_Lock$4 = 104
_Psave$5 = 112
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
  00000	48 8d 8a 68 00
	00 00		 lea	 rcx, QWORD PTR _Lock$4[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Lockit@std@@QEAA@XZ	; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z
_TEXT	SEGMENT
this$dead$ = 64
_First$ = 72
_Last$ = 80
_Ptr$ = 88
??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 1681 : 		{	// move initializing [_First, _Last), using allocator

$LN24:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	49 8b c0	 mov	 rax, r8
  00007	48 8b ca	 mov	 rcx, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  0000a	48 8b d0	 mov	 rdx, rax
  0000d	4d 8b c1	 mov	 r8, r9
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1684 : 		}

  00015	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00019	c3		 ret	 0
??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 163  : 	{	// destroy [_First, _Last)

$LN178:

; 164  : 	for (; _First != _Last; ++_First)

  00000	48 3b ca	 cmp	 rcx, rdx
  00003	0f 84 af 00 00
	00		 je	 $LN176@Destroy_ra
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx

; 163  : 	{	// destroy [_First, _Last)

  00013	48 8b fa	 mov	 rdi, rdx
  00016	48 89 6c 24 38	 mov	 QWORD PTR [rsp+56], rbp

; 164  : 	for (; _First != _Last; ++_First)

  0001b	48 8d 59 18	 lea	 rbx, QWORD PTR [rcx+24]
  0001f	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  00024	48 bd ff ff ff
	ff ff ff ff 7f	 mov	 rbp, 9223372036854775807 ; 7fffffffffffffffH
  0002e	33 f6		 xor	 esi, esi
$LL4@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00030	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00033	48 83 f8 08	 cmp	 rax, 8
  00037	72 40		 jb	 SHORT $LN111@Destroy_ra
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 620  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  00039	48 8b 4b e8	 mov	 rcx, QWORD PTR [rbx-24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  0003d	48 ff c0	 inc	 rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  00040	48 3b c5	 cmp	 rax, rbp
  00043	0f 87 88 00 00
	00		 ja	 $LN163@Destroy_ra

; 95   : 	const size_t _User_size = _Count * _Sz;

  00049	48 03 c0	 add	 rax, rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

  0004c	48 3d 00 10 00
	00		 cmp	 rax, 4096		; 00001000H
  00052	72 20		 jb	 SHORT $LN106@Destroy_ra

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  00054	f6 c1 1f	 test	 cl, 31
  00057	75 72		 jne	 SHORT $LN164@Destroy_ra

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);
; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00059	48 8b 41 f8	 mov	 rax, QWORD PTR [rcx-8]

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  0005d	48 3b c1	 cmp	 rax, rcx
  00060	73 63		 jae	 SHORT $LN165@Destroy_ra

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  00062	48 2b c8	 sub	 rcx, rax
  00065	48 83 f9 08	 cmp	 rcx, 8
  00069	72 54		 jb	 SHORT $LN166@Destroy_ra

; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  0006b	48 83 f9 27	 cmp	 rcx, 39			; 00000027H
  0006f	77 48		 ja	 SHORT $LN177@Destroy_ra

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00071	48 8b c8	 mov	 rcx, rax
$LN106@Destroy_ra:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

  00074	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete
$LN111@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00079	48 c7 03 07 00
	00 00		 mov	 QWORD PTR [rbx], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00080	48 89 73 f8	 mov	 QWORD PTR [rbx-8], rsi

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00084	48 83 3b 08	 cmp	 QWORD PTR [rbx], 8
  00088	72 06		 jb	 SHORT $LN145@Destroy_ra
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0008a	48 8b 43 e8	 mov	 rax, QWORD PTR [rbx-24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008e	eb 04		 jmp	 SHORT $LN146@Destroy_ra
$LN145@Destroy_ra:
  00090	48 8d 43 e8	 lea	 rax, QWORD PTR [rbx-24]
$LN146@Destroy_ra:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  00094	48 83 c3 20	 add	 rbx, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00098	66 89 30	 mov	 WORD PTR [rax], si
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 164  : 	for (; _First != _Last; ++_First)

  0009b	48 8d 43 e8	 lea	 rax, QWORD PTR [rbx-24]
  0009f	48 3b c7	 cmp	 rax, rdi
  000a2	75 8c		 jne	 SHORT $LL4@Destroy_ra
  000a4	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  000a9	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000ae	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]

; 165  : 		_Al.destroy(_STD addressof(*_First));
; 166  : 	}

  000b3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b7	5f		 pop	 rdi
$LN176@Destroy_ra:
  000b8	c3		 ret	 0
$LN177@Destroy_ra:

; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

  000b9	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000be	cc		 int	 3
$LN166@Destroy_ra:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)
; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)

  000bf	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000c4	cc		 int	 3
$LN165@Destroy_ra:

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(
; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

  000c5	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000ca	cc		 int	 3
$LN164@Destroy_ra:

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);
; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

  000cb	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d0	cc		 int	 3
$LN163@Destroy_ra:

; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

  000d1	e8 00 00 00 00	 call	 _invalid_parameter_noinfo_noreturn
  000d6	cc		 int	 3
$LN175@Destroy_ra:
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?9_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?9_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z PROC	; std::operator!=<wchar_t,wchar_t>, COMDAT

; 702  : 	return (false);

  00000	32 c0		 xor	 al, al

; 703  : 	}

  00002	c3		 ret	 0
??$?9_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z ENDP	; std::operator!=<wchar_t,wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?9V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?9V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z PROC ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 924  : 	return (!(_Left == _Right));

  00000	32 c0		 xor	 al, al

; 925  : 	}

  00002	c3		 ret	 0
??$?9V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 942  : 	typename _Alty::propagate_on_container_copy_assignment _Tag;
; 943  : 	_Pocca(_Left, _Right, _Tag);
; 944  : 	}

  00000	c2 00 00	 ret	 0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ
text$yd	SEGMENT
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ PROC ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static'', COMDAT
  00000	c2 00 00	 ret	 0
??__F_Static@?1???$_Immortalize@V_Iostream_error_category@std@@@std@@YAAEAV_Iostream_error_category@0@XZ@YAXXZ ENDP ; `std::_Immortalize<std::_Iostream_error_category>'::`2'::`dynamic atexit destructor for '_Static''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_exception.h
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
  00009	48 8b c2	 mov	 rax, rdx

; 65   :         : _Data()

  0000c	48 8d 53 08	 lea	 rdx, QWORD PTR [rbx+8]

; 66   :     {

  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00017	48 89 0b	 mov	 QWORD PTR [rbx], rcx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  0001f	48 89 4a 08	 mov	 QWORD PTR [rdx+8], rcx

; 67   :         __std_exception_copy(&_Other._Data, &_Data);

  00023	48 8d 48 08	 lea	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 __std_exception_copy
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7bad_cast@std@@6B@
  00033	48 89 03	 mov	 QWORD PTR [rbx], rax
  00036	48 8b c3	 mov	 rax, rbx
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>, COMDAT

; 687  : 		}

  00000	c2 00 00	 ret	 0
??1?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::~_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\system_error
;	COMDAT ??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ PROC ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>, COMDAT

; 681  : 		{	// construct _Ty inside _Storage
; 682  : 		::new (static_cast<void *>(&_Storage)) _Ty();

  00000	48 85 c9	 test	 rcx, rcx
  00003	74 12		 je	 SHORT $LN16@Immortaliz

; 616  : 		{	// default constructor

  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7_Iostream_error_category@std@@6B@

; 617  : 		_Addr = _Iostream_addr;

  0000c	48 c7 41 08 05
	00 00 00	 mov	 QWORD PTR [rcx+8], 5
  00014	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN16@Immortaliz:

; 683  : 		}

  00017	48 8b c1	 mov	 rax, rcx
  0001a	c3		 ret	 0
??0?$_Immortalizer@V_Iostream_error_category@std@@@std@@QEAA@XZ ENDP ; std::_Immortalizer<std::_Iostream_error_category>::_Immortalizer<std::_Iostream_error_category>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 40
$T2 = 160
_Ppf$ = 160
_Ploc$ = 168
$T3 = 176
?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::numpunct<wchar_t>::_Getcat, COMDAT

; 166  : 		{	// return locale category mask and construct standard facet

$LN30:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000b	48 c7 40 88 fe
	ff ff ff	 mov	 QWORD PTR [rax-120], -2
  00013	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00017	48 89 70 20	 mov	 QWORD PTR [rax+32], rsi
  0001b	48 8b f2	 mov	 rsi, rdx
  0001e	48 8b d9	 mov	 rbx, rcx
  00021	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 167  : 		if (_Ppf != 0 && *_Ppf == 0)

  00028	48 85 c9	 test	 rcx, rcx
  0002b	74 7d		 je	 SHORT $LN28@Getcat
  0002d	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  00031	75 77		 jne	 SHORT $LN28@Getcat

; 168  : 			*_Ppf = new numpunct<_Elem>(

  00033	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00038	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003d	48 8b f8	 mov	 rdi, rax
  00040	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR $T3[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  00048	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  0004c	48 85 c9	 test	 rcx, rcx
  0004f	75 09		 jne	 SHORT $LN12@Getcat
  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00058	eb 0d		 jmp	 SHORT $LN17@Getcat
$LN12@Getcat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 3673 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  0005a	48 8b 51 28	 mov	 rdx, QWORD PTR [rcx+40]
  0005e	48 85 d2	 test	 rdx, rdx
  00061	75 04		 jne	 SHORT $LN17@Getcat
  00063	48 8d 51 30	 lea	 rdx, QWORD PTR [rcx+48]
$LN17@Getcat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 168  : 			*_Ppf = new numpunct<_Elem>(

  00067	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  0006c	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
  00071	90		 npad	 1
  00072	c7 84 24 a0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T2[rsp], 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [rdi+8], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 160  : 		{	// construct from specified locale

  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  0008b	48 89 0f	 mov	 QWORD PTR [rdi], rcx

; 161  : 		_Init(_Lobj, _Isdef);

  0008e	41 b0 01	 mov	 r8b, 1
  00091	48 8b d0	 mov	 rdx, rax
  00094	48 8b cf	 mov	 rcx, rdi
  00097	e8 00 00 00 00	 call	 ?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<wchar_t>::_Init
  0009c	90		 npad	 1

; 168  : 			*_Ppf = new numpunct<_Elem>(

  0009d	48 89 3b	 mov	 QWORD PTR [rbx], rdi
  000a0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  000a5	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN28@Getcat:

; 169  : 				_Locinfo(_Ploc->c_str()), 0, true);
; 170  : 		return (_X_NUMERIC);

  000aa	b8 04 00 00 00	 mov	 eax, 4

; 171  : 		}

  000af	4c 8d 9c 24 90
	00 00 00	 lea	 r11, QWORD PTR [rsp+144]
  000b7	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000bb	49 8b 73 28	 mov	 rsi, QWORD PTR [r11+40]
  000bf	49 8b e3	 mov	 rsp, r11
  000c2	5f		 pop	 rdi
  000c3	c3		 ret	 0
?_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::numpunct<wchar_t>::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
_Ppf$ = 160
_Ploc$ = 168
$T3 = 176
?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$0
$T1 = 40
$T2 = 160
_Ppf$ = 160
_Ploc$ = 168
$T3 = 176
?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$1
  00020	40 55		 push	 rbp
  00022	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00026	48 8b ea	 mov	 rbp, rdx
  00029	8b 85 a0 00 00
	00		 mov	 eax, DWORD PTR $T2[rbp]
  0002f	83 e0 01	 and	 eax, 1
  00032	85 c0		 test	 eax, eax
  00034	74 10		 je	 SHORT $LN8@dtor$1
  00036	83 a5 a0 00 00
	00 fe		 and	 DWORD PTR $T2[rbp], -2
  0003d	48 8d 4d 28	 lea	 rcx, QWORD PTR $T1[rbp]
  00041	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$1
$T1 = 40
$T2 = 160
_Ppf$ = 160
_Ploc$ = 168
$T3 = 176
?dtor$2@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$2
  0004c	48 8b 8a b0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rdx]
  00053	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$2@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
_Ppf$ = 160
_Ploc$ = 168
$T3 = 176
?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
_Ppf$ = 160
_Ploc$ = 168
$T3 = 176
?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$1
  00020	40 55		 push	 rbp
  00022	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00026	48 8b ea	 mov	 rbp, rdx
  00029	8b 85 a0 00 00
	00		 mov	 eax, DWORD PTR $T2[rbp]
  0002f	83 e0 01	 and	 eax, 1
  00032	85 c0		 test	 eax, eax
  00034	74 10		 je	 SHORT $LN8@dtor$1
  00036	83 a5 a0 00 00
	00 fe		 and	 DWORD PTR $T2[rbp], -2
  0003d	48 8d 4d 28	 lea	 rcx, QWORD PTR $T1[rbp]
  00041	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN8@dtor$1:
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
_Ppf$ = 160
_Ploc$ = 168
$T3 = 176
?dtor$2@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$2
  0004c	48 8b 8a b0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rdx]
  00053	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$2@?0??_Getcat@?$numpunct@_W@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 40
$T2 = 160
$T3 = 160
_Ppf$ = 160
_Ploc$ = 168
?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat, COMDAT

; 1168 : 		{	// return locale category mask and construct standard facet

$LN31:
  00000	48 8b c4	 mov	 rax, rsp
  00003	57		 push	 rdi
  00004	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000b	48 c7 40 88 fe
	ff ff ff	 mov	 QWORD PTR [rax-120], -2
  00013	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  00017	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  0001b	48 8b f2	 mov	 rsi, rdx
  0001e	48 8b d9	 mov	 rbx, rcx
  00021	c7 84 24 a0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T2[rsp], 0

; 1169 : 		if (_Ppf != 0 && *_Ppf == 0)

  0002c	48 85 c9	 test	 rcx, rcx
  0002f	74 62		 je	 SHORT $LN29@Getcat
  00031	48 83 39 00	 cmp	 QWORD PTR [rcx], 0
  00035	75 5c		 jne	 SHORT $LN29@Getcat

; 1170 : 			*_Ppf = new num_put<_Elem, _OutIt>(

  00037	b9 10 00 00 00	 mov	 ecx, 16
  0003c	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00041	48 8b f8	 mov	 rdi, rax
  00044	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR $T3[rsp], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 454  : 		return (_Ptr == 0 ? "" : _Ptr->_Name.c_str());

  0004c	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00050	48 85 c9	 test	 rcx, rcx
  00053	75 09		 jne	 SHORT $LN12@Getcat
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  0005c	eb 0d		 jmp	 SHORT $LN17@Getcat
$LN12@Getcat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 3673 : 		return (_Myptr != 0 ? _Myptr : &_Nul);

  0005e	48 8b 51 28	 mov	 rdx, QWORD PTR [rcx+40]
  00062	48 85 d2	 test	 rdx, rdx
  00065	75 04		 jne	 SHORT $LN17@Getcat
  00067	48 8d 51 30	 lea	 rdx, QWORD PTR [rcx+48]
$LN17@Getcat:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1170 : 			*_Ppf = new num_put<_Elem, _OutIt>(

  0006b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  00070	e8 00 00 00 00	 call	 ??0_Locinfo@std@@QEAA@PEBD@Z ; std::_Locinfo::_Locinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00075	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [rdi+8], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1197 : 		{	// construct from specified locale

  0007c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@
  00083	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1170 : 			*_Ppf = new num_put<_Elem, _OutIt>(

  00086	48 89 3b	 mov	 QWORD PTR [rbx], rdi
  00089	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  0008e	e8 00 00 00 00	 call	 ??1_Locinfo@std@@QEAA@XZ ; std::_Locinfo::~_Locinfo
$LN29@Getcat:

; 1171 : 				_Locinfo(_Ploc->c_str()));
; 1172 : 		return (_X_NUMERIC);

  00093	b8 04 00 00 00	 mov	 eax, 4

; 1173 : 		}

  00098	4c 8d 9c 24 90
	00 00 00	 lea	 r11, QWORD PTR [rsp+144]
  000a0	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  000a4	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  000a8	49 8b e3	 mov	 rsp, r11
  000ab	5f		 pop	 rdi
  000ac	c3		 ret	 0
?_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
$T3 = 160
_Ppf$ = 160
_Ploc$ = 168
?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 10 00 00 00	 mov	 edx, 16
  0000e	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 160
$T3 = 160
_Ppf$ = 160
_Ploc$ = 168
?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	ba 10 00 00 00	 mov	 edx, 16
  0000e	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00015	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$0@?0??_Getcat@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 479  : 		{	// initialize values
; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 483  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 835  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT

; 487  : 		{	// initialize values
; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 490  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT

; 835  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 487  : 		{	// initialize values
; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 490  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 835  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@_W@std@@QEAA@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 600  : 		{	// construct default allocator (do nothing)
; 601  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@_W@std@@QEAA@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
;	COMDAT ?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z
_TEXT	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put, COMDAT

; 533  : 		{	// insert a character

$LN994:
  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 70	 mov	 QWORD PTR [rsp+112], rbx
  00014	48 89 74 24 78	 mov	 QWORD PTR [rsp+120], rsi
  00019	0f b7 fa	 movzx	 edi, dx
  0001c	48 8b d9	 mov	 rbx, rcx
  0001f	48 89 4c 24 28	 mov	 QWORD PTR this$GSCopy$[rsp], rcx

; 534  : 		ios_base::iostate _State = ios_base::goodbit;

  00024	33 f6		 xor	 esi, esi
  00026	89 74 24 20	 mov	 DWORD PTR _State$[rsp], esi

; 99   : 			: _Myostr(_Ostr)

  0002a	48 89 4c 24 38	 mov	 QWORD PTR _Ok$[rsp], rcx

; 101  : 			if (_Myostr.rdbuf() != 0)

  0002f	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00032	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00036	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 101  : 			if (_Myostr.rdbuf() != 0)

  0003b	48 85 c9	 test	 rcx, rcx
  0003e	74 07		 je	 SHORT $LN17@put

; 102  : 				_Myostr.rdbuf()->_Lock();

  00040	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00043	ff 50 08	 call	 QWORD PTR [rax+8]
  00046	90		 npad	 1
$LN17@put:

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00047	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0004a	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  0004e	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  00053	75 14		 jne	 SHORT $LN13@put
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 80   : 		return (_Tiestr);

  00055	48 8b 4c 19 50	 mov	 rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 124  : 			if (_Ostr.good() && _Ostr.tie() != 0 && _Ostr.tie() != &_Ostr)

  0005a	48 85 c9	 test	 rcx, rcx
  0005d	74 0a		 je	 SHORT $LN13@put
  0005f	48 3b cb	 cmp	 rcx, rbx
  00062	74 05		 je	 SHORT $LN13@put

; 125  : 				_Ostr.tie()->flush();

  00064	e8 00 00 00 00	 call	 ?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::flush
$LN13@put:

; 126  : 			_Ok = _Ostr.good();	// store test only after flushing tie

  00069	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0006c	48 63 48 04	 movsxd	 rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 339  : 		return (rdstate() == goodbit);

  00070	83 7c 19 10 00	 cmp	 DWORD PTR [rcx+rbx+16], 0
  00075	0f 94 c0	 sete	 al
  00078	88 44 24 40	 mov	 BYTE PTR _Ok$[rsp+8], al
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 537  : 		if (!_Ok)

  0007c	84 c0		 test	 al, al
  0007e	75 07		 jne	 SHORT $LN2@put

; 538  : 			_State |= ios_base::badbit;

  00080	b9 04 00 00 00	 mov	 ecx, 4

; 539  : 		else

  00085	eb 5d		 jmp	 SHORT $LN10@put
$LN2@put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00087	48 8b 4c 19 48	 mov	 rcx, QWORD PTR [rcx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf

; 314  : 		return (*_IPnext != 0 ? *_IPcount : 0);

  0008c	48 8b 41 40	 mov	 rax, QWORD PTR [rcx+64]
  00090	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00094	74 21		 je	 SHORT $LN43@put
  00096	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  0009a	8b 02		 mov	 eax, DWORD PTR [rdx]

; 200  : 		return (0 < _Pnavail()

  0009c	85 c0		 test	 eax, eax
  0009e	7e 17		 jle	 SHORT $LN43@put

; 308  : 		--*_IPcount;

  000a0	ff c8		 dec	 eax
  000a2	89 02		 mov	 DWORD PTR [rdx], eax

; 309  : 		return ((*_IPnext)++);

  000a4	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  000a8	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ab	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  000af	48 89 01	 mov	 QWORD PTR [rcx], rax
  000b2	66 89 3a	 mov	 WORD PTR [rdx], di

; 200  : 		return (0 < _Pnavail()

  000b5	eb 0c		 jmp	 SHORT $LN44@put
$LN43@put:
  000b7	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000ba	0f b7 d7	 movzx	 edx, di
  000bd	ff 50 18	 call	 QWORD PTR [rax+24]
  000c0	0f b7 f8	 movzx	 edi, ax
$LN44@put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 375  : 		return (_Left == _Right);

  000c3	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  000c8	66 3b c7	 cmp	 ax, di
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 542  : 			if (_Traits::eq_int_type(_Traits::eof(),

  000cb	b9 04 00 00 00	 mov	 ecx, 4
  000d0	0f 44 f1	 cmove	 esi, ecx
  000d3	8b ce		 mov	 ecx, esi
  000d5	89 4c 24 20	 mov	 DWORD PTR _State$[rsp], ecx
  000d9	eb 09		 jmp	 SHORT $LN10@put
$LN11@put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
  000db	8b 4c 24 20	 mov	 ecx, DWORD PTR _State$[rsp]
  000df	48 8b 5c 24 28	 mov	 rbx, QWORD PTR this$GSCopy$[rsp]
$LN10@put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 543  : 				_Myios::rdbuf()->sputc(_Ch)))
; 544  : 				_State |= ios_base::badbit;
; 545  : 			_CATCH_IO_END
; 546  : 			}
; 547  : 
; 548  : 		_Myios::setstate(_State);

  000e4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000e7	4c 63 48 04	 movsxd	 r9, DWORD PTR [rax+4]
  000eb	4c 03 cb	 add	 r9, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 59   : 		if (_State != goodbit)

  000ee	85 c9		 test	 ecx, ecx
  000f0	74 1c		 je	 SHORT $LN972@put
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  000f2	41 8b 51 10	 mov	 edx, DWORD PTR [r9+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  000f6	0b d1		 or	 edx, ecx

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  000f8	49 83 79 48 00	 cmp	 QWORD PTR [r9+72], 0
  000fd	75 03		 jne	 SHORT $LN978@put
  000ff	83 ca 04	 or	 edx, 4
$LN978@put:
  00102	45 33 c0	 xor	 r8d, r8d
  00105	49 8b c9	 mov	 rcx, r9
  00108	e8 00 00 00 00	 call	 ?clear@ios_base@std@@QEAAXH_N@Z ; std::ios_base::clear
  0010d	90		 npad	 1
$LN972@put:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 132  : 			if (!_XSTD uncaught_exception())

  0010e	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00113	84 c0		 test	 al, al
  00115	75 09		 jne	 SHORT $LN981@put

; 133  : 				this->_Myostr._Osfx();

  00117	48 8b cb	 mov	 rcx, rbx
  0011a	e8 00 00 00 00	 call	 ?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAXXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Osfx
  0011f	90		 npad	 1
$LN981@put:

; 107  : 			if (_Myostr.rdbuf() != 0)

  00120	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00123	48 63 51 04	 movsxd	 rdx, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 92   : 		return (_Mystrbuf);

  00127	48 8b 4c 1a 48	 mov	 rcx, QWORD PTR [rdx+rbx+72]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 107  : 			if (_Myostr.rdbuf() != 0)

  0012c	48 85 c9	 test	 rcx, rcx
  0012f	74 07		 je	 SHORT $LN985@put

; 108  : 				_Myostr.rdbuf()->_Unlock();

  00131	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00134	ff 52 10	 call	 QWORD PTR [rdx+16]
  00137	90		 npad	 1
$LN985@put:

; 549  : 		return (*this);

  00138	48 8b c3	 mov	 rax, rbx

; 550  : 		}

  0013b	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  00140	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  00145	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00149	5f		 pop	 rdi
  0014a	c3		 ret	 0
$LN992@put:
?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$1@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$1@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$1
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$0
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$0
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::catch$0

; 543  : 				_Myios::rdbuf()->sputc(_Ch)))
; 544  : 				_State |= ios_base::badbit;
; 545  : 			_CATCH_IO_END

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN70@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN70@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax


  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN73@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 543  : 				_Myios::rdbuf()->sputc(_Ch)))
; 544  : 				_State |= ios_base::badbit;
; 545  : 			_CATCH_IO_END

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$0
  00055	eb 0a		 jmp	 SHORT $LN993@catch$0
$LN73@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN993@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::catch$0
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$216@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$216
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$216@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$216
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$217@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$217
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$217@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$217
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$1@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$1
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
?dtor$1@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$0
  0000c	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR _Ok$[rdx]
  00013	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAA@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
?dtor$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 545  : 			_CATCH_IO_END

  00018	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0001d	55		 push	 rbp
  0001e	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00022	48 8b ea	 mov	 rbp, rdx
__catch$?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z$0:
  00025	48 8b 4d 28	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  00029	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0002c	48 63 50 04	 movsxd	 rdx, DWORD PTR [rax+4]
  00030	48 03 d1	 add	 rdx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 315  : 		return (_Mystate);

  00033	8b 42 10	 mov	 eax, DWORD PTR [rdx+16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 60   : 			clear((iostate)((int)rdstate() | (int)_State), _Reraise);

  00036	83 c8 04	 or	 eax, 4

; 45   : 		ios_base::clear((iostate)(_Mystrbuf == 0

  00039	48 83 7a 48 00	 cmp	 QWORD PTR [rdx+72], 0
  0003e	75 03		 jne	 SHORT $LN70@catch$0
  00040	83 c8 04	 or	 eax, 4
$LN70@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 288  : 		_Mystate = (iostate)(_State & _Statmask);

  00043	83 e0 17	 and	 eax, 23
  00046	89 42 10	 mov	 DWORD PTR [rdx+16], eax

; 289  : 		if ((_Mystate & _Except) == 0)

  00049	85 42 14	 test	 DWORD PTR [rdx+20], eax
  0004c	75 09		 jne	 SHORT $LN73@catch$0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ostream

; 545  : 			_CATCH_IO_END

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, $LN11@catch$0
  00055	eb 0a		 jmp	 SHORT $LN993@catch$0
$LN73@catch$0:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xiosbase

; 292  : 			_RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1
$LN993@catch$0:
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
  00067	cc		 int	 3
?catch$0@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$216@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$216
  00068	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$216@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$216
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
this$GSCopy$ = 40
$T1 = 48
_Ok$ = 56
this$ = 96
_Ch$ = 104
?dtor$217@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA PROC ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$217
  0006d	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$217@?0??put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV12@_W@Z@4HA ENDP ; `std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::put'::`1'::dtor$217
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\streambuf
;	COMDAT ?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAA_JPEB_W_J@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAA_JPEB_W_J@Z PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputn, COMDAT

; 208  : 		return (xsputn(_Ptr, _Count));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00003	48 ff 60 48	 rex_jmp QWORD PTR [rax+72]
?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAA_JPEB_W_J@Z ENDP ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sputn
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios
;	COMDAT ?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 56
this$ = 96
_Byte$3 = 104
_Byte$ = 104
_Wc$4 = 112
_Mbst$5 = 120
?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z PROC ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen, COMDAT

; 130  : 		{	// convert _Byte to character using imbued locale

$LN18:
  00000	40 57		 push	 rdi
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0000f	48 89 5c 24 60	 mov	 QWORD PTR [rsp+96], rbx
  00014	0f b6 fa	 movzx	 edi, dl

; 131  : 		const _Ctype& _Ctype_fac = _USE(getloc(), _Ctype);

  00017	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T2[rsp]
  0001c	e8 00 00 00 00	 call	 ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc
  00021	90		 npad	 1
  00022	48 8b c8	 mov	 rcx, rax
  00025	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@_W@std@@@std@@YAAEBV?$ctype@_W@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
  0002a	48 8b d8	 mov	 rbx, rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 431  : 		if (_Ptr != 0)

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR $T2[rsp+8]
  00032	48 85 c9	 test	 rcx, rcx
  00035	74 1a		 je	 SHORT $LN7@widen

; 432  : 			delete _Ptr->_Decref();

  00037	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003a	ff 52 10	 call	 QWORD PTR [rdx+16]
  0003d	48 85 c0	 test	 rax, rax
  00040	74 0f		 je	 SHORT $LN7@widen
  00042	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00045	ba 01 00 00 00	 mov	 edx, 1
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	41 ff 10	 call	 QWORD PTR [r8]
  00050	90		 npad	 1
$LN7@widen:
  00051	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$ctype@_W@std@@6B@
  0005b	48 3b c1	 cmp	 rax, rcx
  0005e	75 44		 jne	 SHORT $LN13@widen

; 2752 : 		return (_Dowiden(_Byte));

  00060	40 88 7c 24 68	 mov	 BYTE PTR _Byte$3[rsp], dil

; 2744 : 		_Mbstinit(_Mbst);

  00065	33 c0		 xor	 eax, eax
  00067	48 89 44 24 78	 mov	 QWORD PTR _Mbst$5[rsp], rax

; 2745 : 		wchar_t _Wc;
; 2746 : 		return (_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst, &_Cvt) < 0

  0006c	48 8d 43 30	 lea	 rax, QWORD PTR [rbx+48]
  00070	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00075	4c 8d 4c 24 78	 lea	 r9, QWORD PTR _Mbst$5[rsp]
  0007a	41 b8 01 00 00
	00		 mov	 r8d, 1
  00080	48 8d 54 24 68	 lea	 rdx, QWORD PTR _Byte$3[rsp]
  00085	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _Wc$4[rsp]
  0008a	e8 00 00 00 00	 call	 _Mbrtowc
  0008f	0f b7 4c 24 70	 movzx	 ecx, WORD PTR _Wc$4[rsp]
  00094	ba ff ff 00 00	 mov	 edx, 65535		; 0000ffffH
  00099	85 c0		 test	 eax, eax
  0009b	66 0f 48 ca	 cmovs	 cx, dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 132  : 		return (_Ctype_fac.widen(_Byte));

  0009f	0f b7 c1	 movzx	 eax, cx
  000a2	eb 0a		 jmp	 SHORT $LN12@widen
$LN13@widen:
  000a4	40 0f b6 d7	 movzx	 edx, dil
  000a8	48 8b cb	 mov	 rcx, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 2624 : 		return (do_widen(_Byte));

  000ab	ff 50 60	 call	 QWORD PTR [rax+96]
$LN12@widen:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\ios

; 133  : 		}

  000ae	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  000b3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z ENDP ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
this$ = 96
_Byte$3 = 104
_Byte$ = 104
_Wc$4 = 112
_Mbst$5 = 120
?dtor$0@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA PROC ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA ENDP ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$0
$T1 = 48
$T2 = 56
this$ = 96
_Byte$3 = 104
_Byte$ = 104
_Wc$4 = 112
_Mbst$5 = 120
?dtor$1@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA PROC ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$1
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA ENDP ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
this$ = 96
_Byte$3 = 104
_Byte$ = 104
_Wc$4 = 112
_Mbst$5 = 120
?dtor$0@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA PROC ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$0
  00000	48 8d 8a 38 00
	00 00		 lea	 rcx, QWORD PTR $T2[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
?dtor$0@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA ENDP ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
this$ = 96
_Byte$3 = 104
_Byte$ = 104
_Wc$4 = 112
_Mbst$5 = 120
?dtor$1@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA PROC ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$1
  0000c	e9 00 00 00 00	 jmp	 __std_terminate
?dtor$1@?0??widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QEBA_WD@Z@4HA ENDP ; `std::basic_ios<wchar_t,std::char_traits<wchar_t> >::widen'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 600  : 		{	// construct default allocator (do nothing)
; 601  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z PROC	; std::numpunct<wchar_t>::numpunct<wchar_t>, COMDAT

; 160  : 		{	// construct from specified locale

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00013	48 8b d9	 mov	 rbx, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00016	44 89 41 08	 mov	 DWORD PTR [rcx+8], r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 160  : 		{	// construct from specified locale

  0001a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$numpunct@_W@std@@6B@
  00021	48 89 01	 mov	 QWORD PTR [rcx], rax

; 161  : 		_Init(_Lobj, _Isdef);

  00024	45 0f b6 c1	 movzx	 r8d, r9b
  00028	e8 00 00 00 00	 call	 ?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z ; std::numpunct<wchar_t>::_Init
  0002d	90		 npad	 1

; 162  : 		}

  0002e	48 8b c3	 mov	 rax, rbx
  00031	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00035	5b		 pop	 rbx
  00036	c3		 ret	 0
??0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z ENDP	; std::numpunct<wchar_t>::numpunct<wchar_t>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
?dtor$0@?0???0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<wchar_t>::numpunct<wchar_t>'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$0@?0???0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<wchar_t>::numpunct<wchar_t>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Lobj$ = 72
_Refs$ = 80
_Isdef$ = 88
?dtor$0@?0???0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA PROC ; `std::numpunct<wchar_t>::numpunct<wchar_t>'::`1'::dtor$0
  00000	48 8b 8a 40 00
	00 00		 mov	 rcx, QWORD PTR this$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1facet@locale@std@@MEAA@XZ ; std::locale::facet::~facet
?dtor$0@?0???0?$numpunct@_W@std@@QEAA@AEBV_Locinfo@1@_K_N@Z@4HA ENDP ; `std::numpunct<wchar_t>::numpunct<wchar_t>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??0?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
this$ = 8
_Lobj$ = 16
_Refs$ = 24
??0?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >, COMDAT

; 1197 : 		{	// construct from specified locale

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_7?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@6B@
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xatomic0.h

; 63   : 	_Counter = _Value;

  00007	44 89 41 08	 mov	 DWORD PTR [rcx+8], r8d
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 1197 : 		{	// construct from specified locale

  0000b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1198 : 		_Init(_Lobj);
; 1199 : 		}

  0000e	48 8b c1	 mov	 rax, rcx
  00011	c3		 ret	 0
??0?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z
_TEXT	SEGMENT
_Byte$ = 48
_Byte$ = 48
_Wc$1 = 56
_Wc$2 = 56
_Mbst1$3 = 64
_Mbst1$4 = 64
this$GSCopy$ = 64
$T5 = 72
$T6 = 80
$T7 = 80
_Cvt$ = 128
__$ArrayPad$ = 176
this$ = 224
_Lobj$ = 232
_Isdef$ = 240
?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z PROC	; std::numpunct<wchar_t>::_Init, COMDAT

; 202  : 		{	// initialize from _Lobj

$LN41:
  00000	48 8b c4	 mov	 rax, rsp
  00003	41 54		 push	 r12
  00005	41 56		 push	 r14
  00007	41 57		 push	 r15
  00009	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00010	48 c7 44 24 48
	fe ff ff ff	 mov	 QWORD PTR $T5[rsp], -2
  00019	48 89 58 10	 mov	 QWORD PTR [rax+16], rbx
  0001d	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  00021	48 89 78 20	 mov	 QWORD PTR [rax+32], rdi
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00037	45 0f b6 f8	 movzx	 r15d, r8b
  0003b	48 8b f1	 mov	 rsi, rcx
  0003e	48 89 4c 24 40	 mov	 QWORD PTR this$GSCopy$[rsp], rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 127  : 		return (localeconv());

  00043	e8 00 00 00 00	 call	 localeconv
  00048	4c 8b f0	 mov	 r14, rax

; 122  : 		return (::_Getcvt());

  0004b	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T7[rsp]
  00050	e8 00 00 00 00	 call	 _Getcvt
  00055	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00058	0f 11 84 24 80
	00 00 00	 movups	 XMMWORD PTR _Cvt$[rsp], xmm0
  00060	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  00064	0f 11 8c 24 90
	00 00 00	 movups	 XMMWORD PTR _Cvt$[rsp+16], xmm1
  0006c	f2 0f 10 40 20	 movsd	 xmm0, QWORD PTR [rax+32]
  00071	f2 0f 11 84 24
	a0 00 00 00	 movsd	 QWORD PTR _Cvt$[rsp+32], xmm0
  0007a	8b 48 28	 mov	 ecx, DWORD PTR [rax+40]
  0007d	89 8c 24 a8 00
	00 00		 mov	 DWORD PTR _Cvt$[rsp+40], ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 206  : 		_Grouping = 0;

  00084	45 33 e4	 xor	 r12d, r12d
  00087	4c 89 66 10	 mov	 QWORD PTR [rsi+16], r12

; 207  : 		_Falsename = 0;

  0008b	4c 89 66 20	 mov	 QWORD PTR [rsi+32], r12

; 208  : 		_Truename = 0;

  0008f	4c 89 66 28	 mov	 QWORD PTR [rsi+40], r12

; 211  : 		_Grouping = _MAKLOCSTR(char, _Isdef ? "" : _Ptr->grouping,

  00093	45 84 ff	 test	 r15b, r15b
  00096	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  0009d	75 04		 jne	 SHORT $LN7@Init
  0009f	49 8b 7e 10	 mov	 rdi, QWORD PTR [r14+16]
$LN7@Init:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocinfo

; 122  : 		return (::_Getcvt());

  000a3	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  000a8	e8 00 00 00 00	 call	 _Getcvt
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 720  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  000ad	48 83 cb ff	 or	 rbx, -1
$LL39@Init:
  000b1	48 ff c3	 inc	 rbx
  000b4	80 3c 1f 00	 cmp	 BYTE PTR [rdi+rbx], 0
  000b8	75 f7		 jne	 SHORT $LL39@Init
  000ba	48 ff c3	 inc	 rbx

; 721  : 
; 722  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  000bd	ba 01 00 00 00	 mov	 edx, 1
  000c2	48 8b cb	 mov	 rcx, rbx
  000c5	e8 00 00 00 00	 call	 calloc
  000ca	48 8b d0	 mov	 rdx, rax

; 723  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 724  : 
; 725  : 	if (!_Ptrdest)

  000cd	48 85 c0	 test	 rax, rax
  000d0	75 05		 jne	 SHORT $LN22@Init

; 726  : 		_Xbad_alloc();

  000d2	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN22@Init:

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  000d7	48 85 db	 test	 rbx, rbx
  000da	74 24		 je	 SHORT $LN20@Init
  000dc	48 8b c8	 mov	 rcx, rax
  000df	48 2b cf	 sub	 rcx, rdi
  000e2	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL21@Init:

; 731  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  000f0	0f b6 07	 movzx	 eax, BYTE PTR [rdi]
  000f3	88 04 39	 mov	 BYTE PTR [rcx+rdi], al

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  000f6	48 8d 7f 01	 lea	 rdi, QWORD PTR [rdi+1]
  000fa	48 83 eb 01	 sub	 rbx, 1
  000fe	75 f0		 jne	 SHORT $LL21@Init
$LN20@Init:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 211  : 		_Grouping = _MAKLOCSTR(char, _Isdef ? "" : _Ptr->grouping,

  00100	48 89 56 10	 mov	 QWORD PTR [rsi+16], rdx

; 212  : 			_Lobj._Getcvt());
; 213  : 		_Falsename = _MAKLOCSTR(_Elem, _Lobj._Getfalse(), _Cvt);

  00104	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR _Cvt$[rsp]
  0010c	33 d2		 xor	 edx, edx
  0010e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05LAPONLG@false?$AA@
  00115	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  0011a	48 89 46 20	 mov	 QWORD PTR [rsi+32], rax

; 214  : 		_Truename = _MAKLOCSTR(_Elem, _Lobj._Gettrue(), _Cvt);

  0011e	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR _Cvt$[rsp]
  00126	33 d2		 xor	 edx, edx
  00128	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04LOAJBDKD@true?$AA@
  0012f	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00134	48 89 46 28	 mov	 QWORD PTR [rsi+40], rax

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();
; 217  : 		_RERAISE;
; 218  : 		_CATCH_END
; 219  : 
; 220  : 		if (_Isdef)

  00138	45 84 ff	 test	 r15b, r15b
  0013b	0f 84 86 00 00
	00		 je	 $LN3@Init

; 223  : 			_Dp = _MAKLOCCHR(_Elem, '.', _Cvt);

  00141	c6 44 24 30 2e	 mov	 BYTE PTR _Byte$[rsp], 46 ; 0000002eH
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 694  : 	wchar_t _Wc = L'\0';

  00146	66 44 89 64 24
	38		 mov	 WORD PTR _Wc$2[rsp], r12w

; 695  : 	_Mbstinit(_Mbst1);

  0014c	33 c0		 xor	 eax, eax
  0014e	48 89 44 24 40	 mov	 QWORD PTR _Mbst1$4[rsp], rax

; 696  : 	_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst1, &_Cvt);

  00153	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR _Cvt$[rsp]
  0015b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00160	4c 8d 4c 24 40	 lea	 r9, QWORD PTR _Mbst1$4[rsp]
  00165	41 b8 01 00 00
	00		 mov	 r8d, 1
  0016b	48 8d 54 24 30	 lea	 rdx, QWORD PTR _Byte$[rsp]
  00170	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Wc$2[rsp]
  00175	e8 00 00 00 00	 call	 _Mbrtowc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 223  : 			_Dp = _MAKLOCCHR(_Elem, '.', _Cvt);

  0017a	0f b7 44 24 38	 movzx	 eax, WORD PTR _Wc$2[rsp]
  0017f	66 89 46 18	 mov	 WORD PTR [rsi+24], ax

; 224  : 			_Kseparator = _MAKLOCCHR(_Elem, ',', _Cvt);

  00183	c6 44 24 30 2c	 mov	 BYTE PTR _Byte$[rsp], 44 ; 0000002cH
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale

; 694  : 	wchar_t _Wc = L'\0';

  00188	66 44 89 64 24
	38		 mov	 WORD PTR _Wc$1[rsp], r12w

; 695  : 	_Mbstinit(_Mbst1);

  0018e	33 c0		 xor	 eax, eax
  00190	48 89 44 24 40	 mov	 QWORD PTR _Mbst1$3[rsp], rax

; 696  : 	_Mbrtowc(&_Wc, &_Byte, 1, &_Mbst1, &_Cvt);

  00195	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR _Cvt$[rsp]
  0019d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001a2	4c 8d 4c 24 40	 lea	 r9, QWORD PTR _Mbst1$3[rsp]
  001a7	41 b8 01 00 00
	00		 mov	 r8d, 1
  001ad	48 8d 54 24 30	 lea	 rdx, QWORD PTR _Byte$[rsp]
  001b2	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Wc$1[rsp]
  001b7	e8 00 00 00 00	 call	 _Mbrtowc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum

; 224  : 			_Kseparator = _MAKLOCCHR(_Elem, ',', _Cvt);

  001bc	0f b7 44 24 38	 movzx	 eax, WORD PTR _Wc$1[rsp]
  001c1	66 89 46 1a	 mov	 WORD PTR [rsi+26], ax

; 225  : 			}
; 226  : 		else

  001c5	eb 16		 jmp	 SHORT $LN4@Init
$LN3@Init:

; 197  : 		_Dp = (_Elem)_Ptr->_W_decimal_point[0];

  001c7	49 8b 46 58	 mov	 rax, QWORD PTR [r14+88]
  001cb	0f b7 08	 movzx	 ecx, WORD PTR [rax]
  001ce	66 89 4e 18	 mov	 WORD PTR [rsi+24], cx

; 198  : 		_Kseparator = (_Elem)_Ptr->_W_thousands_sep[0];

  001d2	49 8b 46 60	 mov	 rax, QWORD PTR [r14+96]
  001d6	0f b7 08	 movzx	 ecx, WORD PTR [rax]
  001d9	66 89 4e 1a	 mov	 WORD PTR [rsi+26], cx
$LN4@Init:

; 227  : 			_Getvals((_Elem)0, _Ptr, _Cvt);
; 228  : 		}

  001dd	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001e5	48 33 cc	 xor	 rcx, rsp
  001e8	e8 00 00 00 00	 call	 __security_check_cookie
  001ed	4c 8d 9c 24 c0
	00 00 00	 lea	 r11, QWORD PTR [rsp+192]
  001f5	49 8b 5b 28	 mov	 rbx, QWORD PTR [r11+40]
  001f9	49 8b 73 30	 mov	 rsi, QWORD PTR [r11+48]
  001fd	49 8b 7b 38	 mov	 rdi, QWORD PTR [r11+56]
  00201	49 8b e3	 mov	 rsp, r11
  00204	41 5f		 pop	 r15
  00206	41 5e		 pop	 r14
  00208	41 5c		 pop	 r12
  0020a	c3		 ret	 0
$LN40@Init:
?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z ENDP	; std::numpunct<wchar_t>::_Init
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Byte$ = 48
_Byte$ = 48
_Wc$1 = 56
_Wc$2 = 56
_Mbst1$3 = 64
_Mbst1$4 = 64
this$GSCopy$ = 64
$T5 = 72
$T6 = 80
$T7 = 80
_Cvt$ = 128
__$ArrayPad$ = 176
this$ = 224
_Lobj$ = 232
_Isdef$ = 240
?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA PROC ; `std::numpunct<wchar_t>::_Init'::`1'::catch$0

; 215  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z$0:

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();

  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$numpunct@_W@std@@AEAAXXZ ; std::numpunct<wchar_t>::_Tidy

; 215  : 		_CATCH_ALL
; 216  : 		_Tidy();
; 217  : 		_RERAISE;

  00016	33 d2		 xor	 edx, edx
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 _CxxThrowException
  0001f	90		 npad	 1
?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Init'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Byte$ = 48
_Byte$ = 48
_Wc$1 = 56
_Wc$2 = 56
_Mbst1$3 = 64
_Mbst1$4 = 64
this$GSCopy$ = 64
$T5 = 72
$T6 = 80
$T7 = 80
_Cvt$ = 128
__$ArrayPad$ = 176
this$ = 224
_Lobj$ = 232
_Isdef$ = 240
?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA PROC ; `std::numpunct<wchar_t>::_Init'::`1'::catch$0

; 215  : 		_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$?_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z$0:

; 216  : 		_Tidy();

  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR this$GSCopy$[rbp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$numpunct@_W@std@@AEAAXXZ ; std::numpunct<wchar_t>::_Tidy

; 217  : 		_RERAISE;

  00016	33 d2		 xor	 edx, edx
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 _CxxThrowException
  0001f	90		 npad	 1
?catch$0@?0??_Init@?$numpunct@_W@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA ENDP ; `std::numpunct<wchar_t>::_Init'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ?_Init@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?_Init@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z PROC ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Init, COMDAT

; 1184 : 		}

  00000	c2 00 00	 ret	 0
?_Init@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAXAEBV_Locinfo@2@@Z ENDP ; std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocnum
;	COMDAT ??$_Getvals@_W@?$numpunct@_W@std@@IEAAX_WPEBUlconv@@U_Cvtvec@@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Ptr$ = 24
__formal$ = 32
??$_Getvals@_W@?$numpunct@_W@std@@IEAAX_WPEBUlconv@@U_Cvtvec@@@Z PROC ; std::numpunct<wchar_t>::_Getvals<wchar_t>, COMDAT

; 197  : 		_Dp = (_Elem)_Ptr->_W_decimal_point[0];

  00000	49 8b 40 58	 mov	 rax, QWORD PTR [r8+88]
  00004	0f b7 10	 movzx	 edx, WORD PTR [rax]
  00007	66 89 51 18	 mov	 WORD PTR [rcx+24], dx

; 198  : 		_Kseparator = (_Elem)_Ptr->_W_thousands_sep[0];

  0000b	49 8b 40 60	 mov	 rax, QWORD PTR [r8+96]
  0000f	0f b7 10	 movzx	 edx, WORD PTR [rax]
  00012	66 89 51 1a	 mov	 WORD PTR [rcx+26], dx

; 199  : 		}

  00016	c3		 ret	 0
??$_Getvals@_W@?$numpunct@_W@std@@IEAAX_WPEBUlconv@@U_Cvtvec@@@Z ENDP ; std::numpunct<wchar_t>::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$begin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$begin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z PROC ; std::begin<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 1312 : 	return (_Cont.begin());

  00006	48 8b c1	 mov	 rax, rcx

; 1313 : 	}

  00009	c3		 ret	 0
??$begin@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ENDP ; std::begin<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$end@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Cont$ = 16
??$end@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z PROC ; std::end<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 46   : 		: _Ptr(_Parg)

  00000	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00004	48 89 01	 mov	 QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 1324 : 	return (_Cont.end());

  00007	48 8b c1	 mov	 rax, rcx

; 1325 : 	}

  0000a	c3		 ret	 0
??$end@V?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@AEBV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@0@@Z ENDP ; std::end<std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$dead$ = 56
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z PROC ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2474 : 	{	// test for string vs. NTCS equality

$LN37:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00004	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8

; 723  : 		return (_Get_data()._Mysize);

  00009	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0000d	72 03		 jb	 SHORT $LN29@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN29@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2143 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),

  00012	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00015	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG4294967196
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	e8 00 00 00 00	 call	 ?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare

; 2475 : 	return (_Left.compare(_Right) == 0);

  00024	85 c0		 test	 eax, eax
  00026	0f 94 c0	 sete	 al

; 2476 : 	}

  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEB_W@Z ENDP ; std::operator==<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_Iter$ = 8
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 266  : 	return (_Iter._Unchecked());

  00000	48 8b c1	 mov	 rax, rcx

; 267  : 	}

  00003	c3		 ret	 0
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm
;	COMDAT ??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Pred$ = 64
??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z PROC ; std::_Any_of<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,<lambda_12cb8001b77ee58a89c74fac176e6240> >, COMDAT

; 294  : 	{	// test if any element satisfies _Pred

$LN183:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b f2	 mov	 rsi, rdx

; 295  : 	for (; _First != _Last; ++_First)

  00017	48 3b ca	 cmp	 rcx, rdx
  0001a	0f 84 9d 00 00
	00		 je	 $LN3@Any_of
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1742 : 		return (this->_Mysize());

  00020	49 8b 78 10	 mov	 rdi, QWORD PTR [r8+16]

; 723  : 		return (_Get_data()._Mysize);

  00024	4c 8d 51 10	 lea	 r10, QWORD PTR [rcx+16]
  00028	83 cd ff	 or	 ebp, -1
  0002b	0f 1f 44 00 00	 npad	 5
$LL4@Any_of:
; File c:\users\alist_000\cppmisc\wwatch.cc

; 86   :   return str.size() >= suffix.size() &&

  00030	4d 8b 1a	 mov	 r11, QWORD PTR [r10]
  00033	49 3b fb	 cmp	 rdi, r11
  00036	72 74		 jb	 SHORT $LN149@Any_of
  00038	48 8b cf	 mov	 rcx, rdi
  0003b	49 2b cb	 sub	 rcx, r11
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2266 : 		if (this->_Mysize() < _Off)

  0003e	48 3b f9	 cmp	 rdi, rcx
  00041	0f 82 a0 00 00
	00		 jb	 $LN182@Any_of

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00047	49 83 7a 08 08	 cmp	 QWORD PTR [r10+8], 8
  0004c	72 06		 jb	 SHORT $LN110@Any_of
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0004e	49 8b 42 f0	 mov	 rax, QWORD PTR [r10-16]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00052	eb 04		 jmp	 SHORT $LN111@Any_of
$LN110@Any_of:
  00054	49 8d 42 f0	 lea	 rax, QWORD PTR [r10-16]
$LN111@Any_of:

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  00058	48 8b df	 mov	 rbx, rdi
  0005b	48 2b d9	 sub	 rbx, rcx

; 2110 : 		if (_Size <= _Max_effective_size)

  0005e	4c 3b db	 cmp	 r11, rbx
  00061	49 0f 46 db	 cmovbe	 rbx, r11

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00065	49 83 78 18 08	 cmp	 QWORD PTR [r8+24], 8
  0006a	72 05		 jb	 SHORT $LN141@Any_of
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0006c	49 8b 10	 mov	 rdx, QWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  0006f	eb 03		 jmp	 SHORT $LN142@Any_of
$LN141@Any_of:
  00071	49 8b d0	 mov	 rdx, r8
$LN142@Any_of:

; 2092 : 		const size_type _Min_size = _Left_size < _Right_size ? _Left_size : _Right_size;

  00074	49 3b db	 cmp	 rbx, r11
  00077	4d 8b cb	 mov	 r9, r11
  0007a	4c 0f 42 cb	 cmovb	 r9, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 297  : 		return (_Count == 0 ? 0

  0007e	4d 85 c9	 test	 r9, r9
  00081	74 1a		 je	 SHORT $LN160@Any_of
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),

  00083	48 8d 14 4a	 lea	 rdx, QWORD PTR [rdx+rcx*2]
$LL161@Any_of:
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 217  :             if (*_S1 != *_S2)

  00087	0f b7 08	 movzx	 ecx, WORD PTR [rax]
  0008a	66 39 0a	 cmp	 WORD PTR [rdx], cx
  0008d	75 45		 jne	 SHORT $LN169@Any_of

; 216  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  0008f	48 83 c2 02	 add	 rdx, 2
  00093	48 83 c0 02	 add	 rax, 2
  00097	49 83 e9 01	 sub	 r9, 1
  0009b	75 ea		 jne	 SHORT $LL161@Any_of
$LN160@Any_of:

; 219  : 
; 220  :         return 0;

  0009d	45 33 c9	 xor	 r9d, r9d
$LN158@Any_of:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2095 : 		if (_Ans != 0)

  000a0	45 85 c9	 test	 r9d, r9d
  000a3	75 07		 jne	 SHORT $LN149@Any_of

; 2096 : 			return (_Ans);
; 2097 : 
; 2098 : 		if (_Left_size < _Right_size)

  000a5	49 3b db	 cmp	 rbx, r11
  000a8	72 02		 jb	 SHORT $LN149@Any_of

; 2099 : 			return (-1);
; 2100 : 
; 2101 : 		if (_Left_size > _Right_size)

  000aa	76 37		 jbe	 SHORT $LN171@Any_of
$LN149@Any_of:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm

; 295  : 	for (; _First != _Last; ++_First)

  000ac	49 83 c2 20	 add	 r10, 32			; 00000020H
  000b0	49 8d 42 f0	 lea	 rax, QWORD PTR [r10-16]
  000b4	48 3b c6	 cmp	 rax, rsi
  000b7	0f 85 73 ff ff
	ff		 jne	 $LL4@Any_of
$LN3@Any_of:

; 298  : 	return (false);

  000bd	32 c0		 xor	 al, al
$LN1@Any_of:

; 299  : 	}

  000bf	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c4	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  000c9	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000ce	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
$LN169@Any_of:
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 218  :                 return *_S1 < *_S2 ? -1 : 1;

  000d4	66 39 0a	 cmp	 WORD PTR [rdx], cx
  000d7	41 b9 01 00 00
	00		 mov	 r9d, 1
  000dd	44 0f 42 cd	 cmovb	 r9d, ebp
  000e1	eb bd		 jmp	 SHORT $LN158@Any_of
$LN171@Any_of:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\algorithm

; 297  : 			return (true);

  000e3	b0 01		 mov	 al, 1
  000e5	eb d8		 jmp	 SHORT $LN1@Any_of
$LN182@Any_of:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2278 : 		_Xout_of_range("invalid string position");

  000e7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  000ee	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  000f3	cc		 int	 3
$LN181@Any_of:
??$_Any_of@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@std@@YA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0V<lambda_12cb8001b77ee58a89c74fac176e6240>@@@Z ENDP ; std::_Any_of<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,<lambda_12cb8001b77ee58a89c74fac176e6240> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\users\alist_000\cppmisc\wwatch.cc
;	COMDAT ??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
ext$ = 56
??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; <lambda_12cb8001b77ee58a89c74fac176e6240>::operator()<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 112  :                   [&](const auto &ext) { return wwatch::endsWith(name, ext); });

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00004	4c 8b 09	 mov	 r9, QWORD PTR [rcx]
  00007	4c 8b c2	 mov	 r8, rdx

; 86   :   return str.size() >= suffix.size() &&

  0000a	49 8b 51 10	 mov	 rdx, QWORD PTR [r9+16]
  0000e	4d 8b 50 10	 mov	 r10, QWORD PTR [r8+16]
  00012	49 3b d2	 cmp	 rdx, r10
  00015	72 40		 jb	 SHORT $LN5@operator
  00017	48 8b c2	 mov	 rax, rdx
  0001a	49 2b c2	 sub	 rax, r10
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2266 : 		if (this->_Mysize() < _Off)

  0001d	48 3b d0	 cmp	 rdx, rax
  00020	72 3c		 jb	 SHORT $LN146@operator

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00022	49 83 78 18 08	 cmp	 QWORD PTR [r8+24], 8
  00027	72 03		 jb	 SHORT $LN105@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00029	4d 8b 00	 mov	 r8, QWORD PTR [r8]
$LN105@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2109 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

  0002c	48 2b d0	 sub	 rdx, rax

; 2110 : 		if (_Size <= _Max_effective_size)

  0002f	4c 3b d2	 cmp	 r10, rdx
  00032	49 0f 46 d2	 cmovbe	 rdx, r10

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00036	49 83 79 18 08	 cmp	 QWORD PTR [r9+24], 8
  0003b	72 03		 jb	 SHORT $LN136@operator
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0003d	4d 8b 09	 mov	 r9, QWORD PTR [r9]
$LN136@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2126 : 		return (_Traits_compare(this->_Myptr() + _Off, _Clamp_suffix_size(_Off, _N0),

  00040	49 8d 0c 41	 lea	 rcx, QWORD PTR [r9+rax*2]
  00044	4d 8b ca	 mov	 r9, r10
  00047	e8 00 00 00 00	 call	 ?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare
; File c:\users\alist_000\cppmisc\wwatch.cc

; 86   :   return str.size() >= suffix.size() &&

  0004c	85 c0		 test	 eax, eax
  0004e	75 07		 jne	 SHORT $LN5@operator
  00050	b0 01		 mov	 al, 1

; 112  :                   [&](const auto &ext) { return wwatch::endsWith(name, ext); });

  00052	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00056	c3		 ret	 0
$LN5@operator:

; 86   :   return str.size() >= suffix.size() &&

  00057	32 c0		 xor	 al, al

; 112  :                   [&](const auto &ext) { return wwatch::endsWith(name, ext); });

  00059	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005d	c3		 ret	 0
$LN146@operator:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2278 : 		_Xout_of_range("invalid string position");

  0005e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00065	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
  0006a	cc		 int	 3
$LN145@operator:
??$?RV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@<lambda_12cb8001b77ee58a89c74fac176e6240>@@QEBA_NAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; <lambda_12cb8001b77ee58a89c74fac176e6240>::operator()<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>, COMDAT

; 796  : 		_Construct(_First, _Last, _Iter_cat(_First));

  00000	e9 00 00 00 00	 jmp	 ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>
??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Val$ = 8
__formal$dead$ = 16
??$_Addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >, COMDAT

; 708  : 	return (reinterpret_cast<_Ty *>(

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		&const_cast<char&>(
; 710  : 		reinterpret_cast<const volatile char&>(_Val))));
; 711  : 	}

  00003	c3		 ret	 0
??$_Addressof@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>, COMDAT

; 754  : 		{	// construct _Objty(_Types...) at _Ptr

$LN160:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	4d 8b d0	 mov	 r10, r8
  0001a	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001d	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  00022	48 85 d2	 test	 rdx, rdx
  00025	74 33		 je	 SHORT $LN159@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	33 d2		 xor	 edx, edx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00029	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00031	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00035	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003a	72 05		 jb	 SHORT $LN148@construct
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	eb 03		 jmp	 SHORT $LN149@construct
$LN148@construct:
  00041	48 8b c8	 mov	 rcx, rax
$LN149@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00044	66 89 11	 mov	 WORD PTR [rcx], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  00047	49 83 c9 ff	 or	 r9, -1
  0004b	45 33 c0	 xor	 r8d, r8d
  0004e	49 8b d2	 mov	 rdx, r10
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00059	90		 npad	 1
$LN159@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 756  : 		}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV31@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>, COMDAT

; 754  : 		{	// construct _Objty(_Types...) at _Ptr

$LN160:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	4d 8b d0	 mov	 r10, r8
  0001a	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001d	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  00022	48 85 d2	 test	 rdx, rdx
  00025	74 33		 je	 SHORT $LN159@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	33 d2		 xor	 edx, edx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00029	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00031	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00035	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003a	72 05		 jb	 SHORT $LN148@construct
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	eb 03		 jmp	 SHORT $LN149@construct
$LN148@construct:
  00041	48 8b c8	 mov	 rcx, rax
$LN149@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00044	66 89 11	 mov	 WORD PTR [rcx], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  00047	49 83 c9 ff	 or	 r9, -1
  0004b	45 33 c0	 xor	 r8d, r8d
  0004e	49 8b d2	 mov	 rdx, r10
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00059	90		 npad	 1
$LN159@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 756  : 		}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 289  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
??$_Iter_cat@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::_Iter_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>, COMDAT

; 640  : 	return {};

  00000	33 c0		 xor	 eax, eax
  00002	88 01		 mov	 BYTE PTR [rcx], al
  00004	48 8b c1	 mov	 rax, rcx

; 641  : 	}

  00007	c3		 ret	 0
??$_Iter_cat@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::_Iter_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
__formal$dead$ = 104
??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>, COMDAT

; 817  : 		{	// initialize with [_First, _Last), forward iterators

$LN163:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	41 56		 push	 r14
  00007	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000b	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00014	48 89 5c 24 58	 mov	 QWORD PTR [rsp+88], rbx
  00019	48 89 74 24 60	 mov	 QWORD PTR [rsp+96], rsi
  0001e	48 89 7c 24 68	 mov	 QWORD PTR [rsp+104], rdi
  00023	49 8b f0	 mov	 rsi, r8
  00026	4c 8b f2	 mov	 r14, rdx
  00029	48 8b f9	 mov	 rdi, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 1058 : 	_Off += _Last - _First;

  0002c	49 8b d8	 mov	 rbx, r8
  0002f	48 2b da	 sub	 rbx, rdx
  00032	48 c1 fb 05	 sar	 rbx, 5
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1585 : 		this->_Myfirst() = pointer();

  00036	33 c0		 xor	 eax, eax
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1586 : 		this->_Mylast() = pointer();

  0003b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1587 : 		this->_Myend() = pointer();

  0003f	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 1588 : 
; 1589 : 		if (_Capacity == 0)

  00043	48 85 db	 test	 rbx, rbx
  00046	74 48		 je	 SHORT $LN7@Construct

; 1590 : 			return (false);
; 1591 : 		else if (max_size() < _Capacity)

  00048	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  00052	48 3b d8	 cmp	 rbx, rax
  00055	76 0d		 jbe	 SHORT $LN18@Construct

; 1788 : 		_Xlength_error("vector<T> too long");

  00057	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0005e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00063	cc		 int	 3
$LN18@Construct:

; 1595 : 			this->_Myfirst() = this->_Getal().allocate(_Capacity);

  00064	48 8b d3	 mov	 rdx, rbx
  00067	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
  0006c	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1596 : 			this->_Mylast() = this->_Myfirst();

  0006f	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1597 : 			this->_Myend() = this->_Myfirst() + _Capacity;

  00073	48 c1 e3 05	 shl	 rbx, 5
  00077	48 03 1f	 add	 rbx, QWORD PTR [rdi]
  0007a	48 89 5f 10	 mov	 QWORD PTR [rdi+16], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  0007e	4c 8b c0	 mov	 r8, rax
  00081	48 8b d6	 mov	 rdx, rsi
  00084	49 8b ce	 mov	 rcx, r14
  00087	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 821  : 			this->_Mylast() = _Ucopy(_First, _Last, this->_Myfirst());

  0008c	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax
$LN7@Construct:

; 822  : 			_CATCH_ALL
; 823  : 			_Tidy();
; 824  : 			_RERAISE;
; 825  : 			_CATCH_END
; 826  : 			}
; 827  : 		}

  00090	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00095	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  0009a	48 8b 7c 24 68	 mov	 rdi, QWORD PTR [rsp+104]
  0009f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a3	41 5e		 pop	 r14
  000a5	c3		 ret	 0
$LN162@Construct:
??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
__formal$dead$ = 104
?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>'::`1'::catch$0

; 822  : 			_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z$0:

; 822  : 			_CATCH_ALL
; 823  : 			_Tidy();

  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy

; 822  : 			_CATCH_ALL
; 823  : 			_Tidy();
; 824  : 			_RERAISE;

  00016	33 d2		 xor	 edx, edx
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 _CxxThrowException
  0001f	90		 npad	 1
?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
__formal$dead$ = 104
?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>'::`1'::catch$0

; 822  : 			_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z$0:

; 823  : 			_Tidy();

  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy

; 824  : 			_RERAISE;

  00016	33 d2		 xor	 edx, edx
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 _CxxThrowException
  0001f	90		 npad	 1
?catch$0@?0???$_Construct@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 480  : 		_Myfirst = pointer();

  00000	33 c0		 xor	 eax, eax
  00002	48 89 01	 mov	 QWORD PTR [rcx], rax

; 481  : 		_Mylast = pointer();

  00005	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 482  : 		_Myend = pointer();

  00009	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 289  : 		}

  0000d	48 8b c1	 mov	 rax, rcx
  00010	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0AEAPEAD@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
<_Val2_0>$ = 24
??$?0AEAPEAD@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAD@Z PROC ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Compressed_pair<std::default_delete<char>,char * __ptr64,1><char * __ptr64 & __ptr64>, COMDAT

; 278  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00003	48 89 01	 mov	 QWORD PTR [rcx], rax

; 280  : 		}

  00006	48 8b c1	 mov	 rax, rcx
  00009	c3		 ret	 0
??$?0AEAPEAD@?$_Compressed_pair@U?$default_delete@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAD@Z ENDP ; std::_Compressed_pair<std::default_delete<char>,char * __ptr64,1>::_Compressed_pair<std::default_delete<char>,char * __ptr64,1><char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Val1$ = 24
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 289  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<char> > >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_Val1$ = 24
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00000	33 c0		 xor	 eax, eax
  00002	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 489  : 		_Myres = 0;

  00006	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 289  : 		}

  0000a	48 8b c1	 mov	 rax, rcx
  0000d	c3		 ret	 0
??$?0U?$_Wrap_alloc@V?$allocator@D@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@D@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<char> >,std::_String_val<std::_Simple_types<char> >,1><std::_Wrap_alloc<std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>, COMDAT

; 762  : 		_Al.destroy(_Ptr);
; 763  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@_W@std@@YAPEA_WAEA_WU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Val$ = 8
__formal$ = 16
??$_Addressof@_W@std@@YAPEA_WAEA_WU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<wchar_t>, COMDAT

; 708  : 	return (reinterpret_cast<_Ty *>(

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		&const_cast<char&>(
; 710  : 		reinterpret_cast<const volatile char&>(_Val))));
; 711  : 	}

  00003	c3		 ret	 0
??$_Addressof@_W@std@@YAPEA_WAEA_WU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z PROC	; std::forward<wchar_t * __ptr64 & __ptr64>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ENDP	; std::forward<wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN8@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN8@construct:

; 755  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 756  : 		}

  0000b	c3		 ret	 0
??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>, COMDAT

; 762  : 		_Al.destroy(_Ptr);
; 763  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Val$ = 8
__formal$ = 16
??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<char>, COMDAT

; 708  : 	return (reinterpret_cast<_Ty *>(

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		&const_cast<char&>(
; 710  : 		reinterpret_cast<const volatile char&>(_Val))));
; 711  : 	}

  00003	c3		 ret	 0
??$_Addressof@D@std@@YAPEADAEADU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z PROC		; std::forward<char * __ptr64 & __ptr64>, COMDAT

; 1299 : 	return (static_cast<_Ty&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1300 : 	}

  00003	c3		 ret	 0
??$forward@AEAPEAD@std@@YAAEAPEADAEAPEAD@Z ENDP		; std::forward<char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN8@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN8@construct:

; 755  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);
; 756  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@PEAPEADAEAPEAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 355  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN16:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 356  : 		// note: only called internally from elsewhere in the STL, debug checks
; 357  : 		// and deprecation warnings omitted
; 358  : 	return (_Rechecked(_Dest,
; 359  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 360  : 			_Unchecked(_Dest), _Al)));
; 361  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 716  : 	return (_Addressof(_Val, is_function<_Ty>()));

  00000	48 8b c1	 mov	 rax, rcx

; 717  : 	}

  00003	c3		 ret	 0
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 900  : 		{	// destroy object at _Ptr

$LN131:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	4c 8b 42 18	 mov	 r8, QWORD PTR [rdx+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 900  : 		{	// destroy object at _Ptr

  0000a	48 8b da	 mov	 rbx, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	49 83 f8 08	 cmp	 r8, 8
  00011	72 0e		 jb	 SHORT $LN17@destroy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00013	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00016	49 ff c0	 inc	 r8
  00019	48 8b cb	 mov	 rcx, rbx
  0001c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN17@destroy:

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00021	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00023	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002b	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002f	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00034	72 0c		 jb	 SHORT $LN119@destroy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00036	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00039	66 89 08	 mov	 WORD PTR [rax], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 902  : 		}

  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5b		 pop	 rbx
  00041	c3		 ret	 0
$LN119@destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00042	66 89 0b	 mov	 WORD PTR [rbx], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 902  : 		}

  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$?8V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z PROC ; std::operator==<std::allocator<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 915  : 	return (static_cast<const _Ty&>(_Left)

  00000	b0 01		 mov	 al, 1

; 916  : 		== static_cast<const _Other&>(_Right));
; 917  : 	}

  00002	c3		 ret	 0
??$?8V?$allocator@_W@std@@V01@@std@@YA_NAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z ENDP ; std::operator==<std::allocator<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
__formal$ = 24
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 937  : 	}

  00000	c2 00 00	 ret	 0
??$_Pocca@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAXAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEBU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Pocca<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Ptr$ = 48
__formal$ = 56
__formal$ = 64
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 719  : 	{	// convert C string to _Elem sequence using _Cvtvec

$LN15:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx

; 720  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  0000d	48 83 cb ff	 or	 rbx, -1
$LL11@Maklocstr:
  00011	48 ff c3	 inc	 rbx
  00014	80 3c 19 00	 cmp	 BYTE PTR [rcx+rbx], 0
  00018	75 f7		 jne	 SHORT $LL11@Maklocstr
  0001a	48 ff c3	 inc	 rbx

; 721  : 
; 722  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001d	ba 01 00 00 00	 mov	 edx, 1
  00022	48 8b cb	 mov	 rcx, rbx
  00025	e8 00 00 00 00	 call	 calloc
  0002a	48 8b d0	 mov	 rdx, rax

; 723  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 724  : 
; 725  : 	if (!_Ptrdest)

  0002d	48 85 c0	 test	 rax, rax
  00030	74 2c		 je	 SHORT $LN13@Maklocstr

; 727  : 
; 728  :  #pragma warning(push)
; 729  :  #pragma warning(disable: 6011)	/* quiet prefast noise */
; 730  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00032	48 85 db	 test	 rbx, rbx
  00035	74 19		 je	 SHORT $LN3@Maklocstr
  00037	48 8b c8	 mov	 rcx, rax
  0003a	48 2b cf	 sub	 rcx, rdi
  0003d	0f 1f 00	 npad	 3
$LL4@Maklocstr:

; 731  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  00040	0f b6 07	 movzx	 eax, BYTE PTR [rdi]
  00043	88 04 39	 mov	 BYTE PTR [rcx+rdi], al
  00046	48 8d 7f 01	 lea	 rdi, QWORD PTR [rdi+1]
  0004a	48 83 eb 01	 sub	 rbx, 1
  0004e	75 f0		 jne	 SHORT $LL4@Maklocstr
$LN3@Maklocstr:

; 732  :  #pragma warning(pop)
; 733  : 
; 734  : 	return (_Ptrdest);

  00050	48 8b c2	 mov	 rax, rdx

; 735  : 	}

  00053	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
$LN13@Maklocstr:

; 726  : 		_Xbad_alloc();

  0005e	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
  00063	cc		 int	 3
$LN12@Maklocstr:
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Unchecked, COMDAT

; 61   : 		return (_Unchecked_type(_Ptr));

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 62   : 		}

  00003	c3		 ret	 0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$dead$ = 16
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 845  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAA_N_K@Z
_TEXT	SEGMENT
this$ = 48
_Capacity$ = 56
?_Buy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAA_N_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Buy, COMDAT

; 1584 : 		{	// allocate array with _Capacity elements

$LN109:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 1585 : 		this->_Myfirst() = pointer();

  0000a	33 c0		 xor	 eax, eax
  0000c	48 8b da	 mov	 rbx, rdx
  0000f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00012	48 8b f9	 mov	 rdi, rcx

; 1586 : 		this->_Mylast() = pointer();

  00015	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1587 : 		this->_Myend() = pointer();

  00019	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 1588 : 
; 1589 : 		if (_Capacity == 0)

  0001d	48 85 d2	 test	 rdx, rdx
  00020	74 28		 je	 SHORT $LN1@Buy

; 1590 : 			return (false);
; 1591 : 		else if (max_size() < _Capacity)

  00022	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0002c	48 3b d0	 cmp	 rdx, rax
  0002f	77 24		 ja	 SHORT $LN107@Buy

; 1592 : 			_Xlen();	// result too long
; 1593 : 		else
; 1594 : 			{	// nonempty array, allocate storage
; 1595 : 			this->_Myfirst() = this->_Getal().allocate(_Capacity);

  00031	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
  00036	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1596 : 			this->_Mylast() = this->_Myfirst();

  00039	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1597 : 			this->_Myend() = this->_Myfirst() + _Capacity;
; 1598 : 			}
; 1599 : 		return (true);

  0003d	b0 01		 mov	 al, 1
  0003f	48 c1 e3 05	 shl	 rbx, 5
  00043	48 03 1f	 add	 rbx, QWORD PTR [rdi]
  00046	48 89 5f 10	 mov	 QWORD PTR [rdi+16], rbx
$LN1@Buy:

; 1600 : 		}

  0004a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
$LN107@Buy:

; 1788 : 		_Xlength_error("vector<T> too long");

  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0005c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00061	cc		 int	 3
$LN106@Buy:
?_Buy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAA_N_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Buy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT

; 845  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT

; 845  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAHPEB_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$dead$ = 16
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAHPEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare, COMDAT

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00000	48 83 79 18 08	 cmp	 QWORD PTR [rcx+24], 8

; 723  : 		return (_Get_data()._Mysize);

  00005	48 8d 51 10	 lea	 rdx, QWORD PTR [rcx+16]

; 512  : 		return (this->_BUF_SIZE <= this->_Myres

  00009	72 03		 jb	 SHORT $LN27@compare
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  0000b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN27@compare:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2143 : 		return (_Traits_compare(this->_Myptr(), this->_Mysize(),

  0000e	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00011	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG4294967196
  00018	45 33 c9	 xor	 r9d, r9d
  0001b	e9 00 00 00 00	 jmp	 ?_Traits_compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAHQEB_W_K01@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Traits_compare
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAHPEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::compare
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 604  : 		{	// construct by copying (do nothing)
; 605  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?8_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
??$?8_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z PROC	; std::operator==<wchar_t,wchar_t>, COMDAT

; 694  : 	return (true);

  00000	b0 01		 mov	 al, 1

; 695  : 	}

  00002	c3		 ret	 0
??$?8_W_W@std@@YA_NAEBV?$allocator@_W@0@0@Z ENDP	; std::operator==<wchar_t,wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PEAPEA_W@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEA_W@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
??$_Iter_cat@PEAPEA_W@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEA_W@Z PROC ; std::_Iter_cat<wchar_t * __ptr64 * __ptr64>, COMDAT

; 640  : 	return {};

  00000	33 c0		 xor	 eax, eax
  00002	88 01		 mov	 BYTE PTR [rcx], al
  00004	48 8b c1	 mov	 rax, rcx

; 641  : 	}

  00007	c3		 ret	 0
??$_Iter_cat@PEAPEA_W@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAPEA_W@Z ENDP ; std::_Iter_cat<wchar_t * __ptr64 * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
__formal$dead$ = 104
??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>, COMDAT

; 817  : 		{	// initialize with [_First, _Last), forward iterators

$LN163:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	41 56		 push	 r14
  00007	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000b	48 c7 44 24 30
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00014	48 89 5c 24 58	 mov	 QWORD PTR [rsp+88], rbx
  00019	48 89 74 24 60	 mov	 QWORD PTR [rsp+96], rsi
  0001e	48 89 7c 24 68	 mov	 QWORD PTR [rsp+104], rdi
  00023	49 8b f0	 mov	 rsi, r8
  00026	4c 8b f2	 mov	 r14, rdx
  00029	48 8b f9	 mov	 rdi, rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility

; 1058 : 	_Off += _Last - _First;

  0002c	49 8b d8	 mov	 rbx, r8
  0002f	48 2b da	 sub	 rbx, rdx
  00032	48 c1 fb 03	 sar	 rbx, 3
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1585 : 		this->_Myfirst() = pointer();

  00036	33 c0		 xor	 eax, eax
  00038	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1586 : 		this->_Mylast() = pointer();

  0003b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1587 : 		this->_Myend() = pointer();

  0003f	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 1588 : 
; 1589 : 		if (_Capacity == 0)

  00043	48 85 db	 test	 rbx, rbx
  00046	74 48		 je	 SHORT $LN7@Construct

; 1590 : 			return (false);
; 1591 : 		else if (max_size() < _Capacity)

  00048	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  00052	48 3b d8	 cmp	 rbx, rax
  00055	76 0d		 jbe	 SHORT $LN18@Construct

; 1788 : 		_Xlength_error("vector<T> too long");

  00057	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0005e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
  00063	cc		 int	 3
$LN18@Construct:

; 1595 : 			this->_Myfirst() = this->_Getal().allocate(_Capacity);

  00064	48 8b d3	 mov	 rdx, rbx
  00067	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
  0006c	48 89 07	 mov	 QWORD PTR [rdi], rax

; 1596 : 			this->_Mylast() = this->_Myfirst();

  0006f	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax

; 1597 : 			this->_Myend() = this->_Myfirst() + _Capacity;

  00073	48 c1 e3 05	 shl	 rbx, 5
  00077	48 03 1f	 add	 rbx, QWORD PTR [rdi]
  0007a	48 89 5f 10	 mov	 QWORD PTR [rdi+16], rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  0007e	4c 8b c0	 mov	 r8, rax
  00081	48 8b d6	 mov	 rdx, rsi
  00084	49 8b ce	 mov	 rcx, r14
  00087	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 821  : 			this->_Mylast() = _Ucopy(_First, _Last, this->_Myfirst());

  0008c	48 89 47 08	 mov	 QWORD PTR [rdi+8], rax
$LN7@Construct:

; 822  : 			_CATCH_ALL
; 823  : 			_Tidy();
; 824  : 			_RERAISE;
; 825  : 			_CATCH_END
; 826  : 			}
; 827  : 		}

  00090	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00095	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  0009a	48 8b 7c 24 68	 mov	 rdi, QWORD PTR [rsp+104]
  0009f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a3	41 5e		 pop	 r14
  000a5	c3		 ret	 0
$LN162@Construct:
??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
__formal$dead$ = 104
?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>'::`1'::catch$0

; 822  : 			_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z$0:

; 822  : 			_CATCH_ALL
; 823  : 			_Tidy();

  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy

; 822  : 			_CATCH_ALL
; 823  : 			_Tidy();
; 824  : 			_RERAISE;

  00016	33 d2		 xor	 edx, edx
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 _CxxThrowException
  0001f	90		 npad	 1
?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
__formal$dead$ = 104
?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>'::`1'::catch$0

; 822  : 			_CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b ea	 mov	 rbp, rdx
__catch$??$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z$0:

; 823  : 			_Tidy();

  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy

; 824  : 			_RERAISE;

  00016	33 d2		 xor	 edx, edx
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 _CxxThrowException
  0001f	90		 npad	 1
?catch$0@?0???$_Construct@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXPEAPEA_W0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Construct<wchar_t * __ptr64 * __ptr64>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z
_TEXT	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>, COMDAT

; 636  : 		{	// construct _Objty(_Types...) at _Ptr

$LN155:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	4d 8b d0	 mov	 r10, r8
  0001a	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001d	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  00022	48 85 d2	 test	 rdx, rdx
  00025	74 33		 je	 SHORT $LN154@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	33 d2		 xor	 edx, edx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00029	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00031	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00035	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003a	72 05		 jb	 SHORT $LN143@construct
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	eb 03		 jmp	 SHORT $LN144@construct
$LN143@construct:
  00041	48 8b c8	 mov	 rcx, rax
$LN144@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00044	66 89 11	 mov	 WORD PTR [rcx], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  00047	49 83 c9 ff	 or	 r9, -1
  0004b	45 33 c0	 xor	 r8d, r8d
  0004e	49 8b d2	 mov	 rdx, r10
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00059	90		 npad	 1
$LN154@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 638  : 		}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA PROC ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA ENDP ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA PROC ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV21@@Z@4HA ENDP ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z
_TEXT	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>, COMDAT

; 636  : 		{	// construct _Objty(_Types...) at _Ptr

$LN155:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	4d 8b d0	 mov	 r10, r8
  0001a	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001d	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  00022	48 85 d2	 test	 rdx, rdx
  00025	74 33		 je	 SHORT $LN154@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	33 d2		 xor	 edx, edx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00029	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00031	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00035	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003a	72 05		 jb	 SHORT $LN143@construct
  0003c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0003f	eb 03		 jmp	 SHORT $LN144@construct
$LN143@construct:
  00041	48 8b c8	 mov	 rcx, rax
$LN144@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00044	66 89 11	 mov	 WORD PTR [rcx], dx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  00047	49 83 c9 ff	 or	 r9, -1
  0004b	45 33 c0	 xor	 r8d, r8d
  0004e	49 8b d2	 mov	 rdx, r10
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00059	90		 npad	 1
$LN154@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 638  : 		}

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA PROC ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA ENDP ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA PROC ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV21@@Z@4HA ENDP ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$dead$ = 16
??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > ><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>, COMDAT

; 851  : 		}

  00000	48 8b c1	 mov	 rax, rcx
  00003	c3		 ret	 0
??$?0AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > ><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$distance@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA_JPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$distance@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA_JPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::distance<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>, COMDAT

; 1058 : 	_Off += _Last - _First;

  00000	48 2b d1	 sub	 rdx, rcx
  00003	48 c1 fa 05	 sar	 rdx, 5

; 1065 : 	typename iterator_traits<_InIt>::difference_type _Off = 0;
; 1066 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));
; 1067 : 	return (_Off);

  00007	48 8b c2	 mov	 rax, rdx

; 1068 : 	}

  0000a	c3		 ret	 0
??$distance@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA_JPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::distance<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Ucopy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBV21@0PEAV21@@Z
_TEXT	SEGMENT
this$dead$ = 64
_First$ = 72
_Last$ = 80
_Ptr$ = 88
??$_Ucopy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBV21@0PEAV21@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Ucopy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>, COMDAT

; 1674 : 		{	// copy initializing [_First, _Last), using allocator

$LN24:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	49 8b c0	 mov	 rax, r8
  00007	48 8b ca	 mov	 rcx, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  0000a	48 8b d0	 mov	 rdx, rax
  0000d	4d 8b c1	 mov	 r8, r9
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1677 : 		}

  00015	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00019	c3		 ret	 0
??$_Ucopy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEBV21@0PEAV21@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Ucopy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z PROC ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>, COMDAT

; 644  : 		_Ptr->~_Uty();
; 645  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ENDP ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN3@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN3@construct:

; 638  : 		}

  0000b	c3		 ret	 0
??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z PROC	; std::allocator<char>::destroy<char * __ptr64>, COMDAT

; 644  : 		_Ptr->~_Uty();
; 645  : 		}

  00000	c2 00 00	 ret	 0
??$destroy@PEAD@?$allocator@D@std@@QEAAXPEAPEAD@Z ENDP	; std::allocator<char>::destroy<char * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z PROC ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>, COMDAT

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00000	48 85 d2	 test	 rdx, rdx
  00003	74 06		 je	 SHORT $LN3@construct
  00005	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00008	48 89 02	 mov	 QWORD PTR [rdx], rax
$LN3@construct:

; 638  : 		}

  0000b	c3		 ret	 0
??$construct@PEADAEAPEAD@?$allocator@D@std@@QEAAXPEAPEADAEAPEAD@Z ENDP ; std::allocator<char>::construct<char * __ptr64,char * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z PROC ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 439  : 	return (_Src);

  00000	48 8b c1	 mov	 rax, rcx

; 440  : 	}

  00003	c3		 ret	 0
??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ENDP ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 345  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 346  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 347  : 		_Ptr_move_cat(_First, _Dest)));
; 348  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z PROC ; std::_Rechecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 466  : 	_Dest = _Src;

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx

; 467  : 	return (_Dest);

  00003	48 8b c1	 mov	 rax, rcx

; 468  : 	}

  00006	c3		 ret	 0
??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z ENDP ; std::_Rechecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Val$ = 8
__formal$dead$ = 16
??$_Addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 708  : 	return (reinterpret_cast<_Ty *>(

  00000	48 8b c1	 mov	 rax, rcx

; 709  : 		&const_cast<char&>(
; 710  : 		reinterpret_cast<const volatile char&>(_Val))));
; 711  : 	}

  00003	c3		 ret	 0
??$_Addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 761  : 		{	// destroy object at _Ptr

$LN129:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	4c 8b 42 18	 mov	 r8, QWORD PTR [rdx+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 761  : 		{	// destroy object at _Ptr

  0000a	48 8b da	 mov	 rbx, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	49 83 f8 08	 cmp	 r8, 8
  00011	72 0e		 jb	 SHORT $LN15@destroy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00013	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00016	49 ff c0	 inc	 r8
  00019	48 8b cb	 mov	 rcx, rbx
  0001c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN15@destroy:

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00021	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00023	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002b	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002f	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00034	72 0c		 jb	 SHORT $LN117@destroy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00036	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00039	66 89 08	 mov	 WORD PTR [rax], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 763  : 		}

  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5b		 pop	 rbx
  00041	c3		 ret	 0
$LN117@destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00042	66 89 0b	 mov	 WORD PTR [rbx], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 763  : 		}

  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$distance@PEAPEA_W@std@@YA_JPEAPEA_W0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$distance@PEAPEA_W@std@@YA_JPEAPEA_W0@Z PROC		; std::distance<wchar_t * __ptr64 * __ptr64>, COMDAT

; 1058 : 	_Off += _Last - _First;

  00000	48 2b d1	 sub	 rdx, rcx
  00003	48 c1 fa 03	 sar	 rdx, 3

; 1065 : 	typename iterator_traits<_InIt>::difference_type _Off = 0;
; 1066 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));
; 1067 : 	return (_Off);

  00007	48 8b c2	 mov	 rax, rdx

; 1068 : 	}

  0000a	c3		 ret	 0
??$distance@PEAPEA_W@std@@YA_JPEAPEA_W0@Z ENDP		; std::distance<wchar_t * __ptr64 * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Ucopy@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAPEA_W0PEAV21@@Z
_TEXT	SEGMENT
this$dead$ = 64
_First$ = 72
_Last$ = 80
_Ptr$ = 88
??$_Ucopy@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAPEA_W0PEAV21@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Ucopy<wchar_t * __ptr64 * __ptr64>, COMDAT

; 1674 : 		{	// copy initializing [_First, _Last), using allocator

$LN24:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	49 8b c0	 mov	 rax, r8
  00007	48 8b ca	 mov	 rcx, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  0000a	48 8b d0	 mov	 rdx, rax
  0000d	4d 8b c1	 mov	 r8, r9
  00010	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector

; 1677 : 		}

  00015	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00019	c3		 ret	 0
??$_Ucopy@PEAPEA_W@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAPEA_W0PEAV21@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Ucopy<wchar_t * __ptr64 * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Distance2@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_J@std@@YAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEA_JUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Off$ = 24
__formal$dead$ = 32
??$_Distance2@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_J@std@@YAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEA_JUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,__int64>, COMDAT

; 1050 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1051 : 	if (_First != _Last)
; 1052 : 		{	// check for null pointers
; 1053 : 		_DEBUG_POINTER(_First);
; 1054 : 		_DEBUG_POINTER(_Last);
; 1055 : 		}
; 1056 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1057 : 
; 1058 : 	_Off += _Last - _First;

  00000	48 2b d1	 sub	 rdx, rcx
  00003	48 c1 fa 05	 sar	 rdx, 5
  00007	49 01 10	 add	 QWORD PTR [r8], rdx

; 1059 : 	}

  0000a	c3		 ret	 0
??$_Distance2@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_J@std@@YAXPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEA_JUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_copy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 303  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN16:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 304  : 		// note: only called internally from elsewhere in the STL, debug checks
; 305  : 		// and deprecation warnings omitted
; 306  : 	return (_Rechecked(_Dest,
; 307  : 		_Uninitialized_copy_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 308  : 			_Unchecked(_Dest), _Al)));
; 309  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_copy@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::_Ptr_move_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 726  : 	return {};

  00000	33 c0		 xor	 eax, eax

; 727  : 	}

  00002	c3		 ret	 0
??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::_Ptr_move_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
__formal$dead$ = 80
??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 317  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

$LN480:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  0000b	48 8b f2	 mov	 rsi, rdx
  0000e	49 8b f8	 mov	 rdi, r8

; 321  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00011	48 3b ca	 cmp	 rcx, rdx
  00014	0f 84 9e 00 00
	00		 je	 $LN3@Uninitiali
  0001a	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  0001f	48 8d 59 18	 lea	 rbx, QWORD PTR [rcx+24]
  00023	48 89 6c 24 38	 mov	 QWORD PTR [rsp+56], rbp
  00028	33 ed		 xor	 ebp, ebp
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00030	48 85 ff	 test	 rdi, rdi
  00033	74 68		 je	 SHORT $LN2@Uninitiali
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00035	48 c7 47 18 07
	00 00 00	 mov	 QWORD PTR [rdi+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0003d	48 89 6f 10	 mov	 QWORD PTR [rdi+16], rbp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00041	66 89 2f	 mov	 WORD PTR [rdi], bp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 957  : 		if (_Right._Myres() < this->_BUF_SIZE)

  00044	48 83 3b 08	 cmp	 QWORD PTR [rbx], 8
  00048	73 1b		 jae	 SHORT $LN196@Uninitiali

; 958  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

  0004a	4c 8b 43 f8	 mov	 r8, QWORD PTR [rbx-8]
  0004e	49 83 c0 01	 add	 r8, 1
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 333  : 		return (_Count == 0 ? _First1

  00052	74 1c		 je	 SHORT $LN197@Uninitiali
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h

; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00054	4d 03 c0	 add	 r8, r8
  00057	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
  0005b	48 8b cf	 mov	 rcx, rdi
  0005e	e8 00 00 00 00	 call	 memmove
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 960  : 		else

  00063	eb 0b		 jmp	 SHORT $LN197@Uninitiali
$LN196@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00065	48 8b 43 e8	 mov	 rax, QWORD PTR [rbx-24]
  00069	48 89 07	 mov	 QWORD PTR [rdi], rax
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 963  : 			_Right._Bx()._Ptr = pointer();

  0006c	48 89 6b e8	 mov	 QWORD PTR [rbx-24], rbp
$LN197@Uninitiali:

; 964  : 			}
; 965  : 		this->_Mysize() = _Right._Mysize();

  00070	48 8b 43 f8	 mov	 rax, QWORD PTR [rbx-8]
  00074	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax

; 966  : 		this->_Myres() = _Right._Myres();

  00078	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0007b	48 89 47 18	 mov	 QWORD PTR [rdi+24], rax

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0007f	48 c7 03 07 00
	00 00		 mov	 QWORD PTR [rbx], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00086	48 89 6b f8	 mov	 QWORD PTR [rbx-8], rbp

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0008a	48 83 3b 08	 cmp	 QWORD PTR [rbx], 8
  0008e	72 06		 jb	 SHORT $LN449@Uninitiali
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00090	48 8b 43 e8	 mov	 rax, QWORD PTR [rbx-24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00094	eb 04		 jmp	 SHORT $LN450@Uninitiali
$LN449@Uninitiali:
  00096	48 8d 43 e8	 lea	 rax, QWORD PTR [rbx-24]
$LN450@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0009a	66 89 28	 mov	 WORD PTR [rax], bp
$LN2@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 321  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  0009d	48 83 c3 20	 add	 rbx, 32			; 00000020H
  000a1	48 83 c7 20	 add	 rdi, 32			; 00000020H
  000a5	48 8d 43 e8	 lea	 rax, QWORD PTR [rbx-24]
  000a9	48 3b c6	 cmp	 rax, rsi
  000ac	75 82		 jne	 SHORT $LL4@Uninitiali
  000ae	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  000b3	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
$LN3@Uninitiali:
  000b8	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]

; 322  : 		_Al.construct(_Dest, _STD move(*_First));
; 323  : 	_CATCH_ALL
; 324  : 	for (; _Next != _Dest; ++_Next)
; 325  : 		_Al.destroy(_Next);
; 326  : 	_RERAISE;
; 327  : 	_CATCH_END
; 328  : 
; 329  : 	return (_Dest);

  000bd	48 8b c7	 mov	 rax, rdi

; 330  : 	}

  000c0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 643  : 		{	// destroy object at _Ptr

$LN127:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	4c 8b 42 18	 mov	 r8, QWORD PTR [rdx+24]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 643  : 		{	// destroy object at _Ptr

  0000a	48 8b da	 mov	 rbx, rdx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  0000d	49 83 f8 08	 cmp	 r8, 8
  00011	72 0e		 jb	 SHORT $LN13@destroy

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00013	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00016	49 ff c0	 inc	 r8
  00019	48 8b cb	 mov	 rcx, rbx
  0001c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN13@destroy:

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00021	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00023	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0002b	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002f	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00034	72 0c		 jb	 SHORT $LN115@destroy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00036	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00039	66 89 08	 mov	 WORD PTR [rax], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 645  : 		}

  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5b		 pop	 rbx
  00041	c3		 ret	 0
$LN115@destroy:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00042	66 89 0b	 mov	 WORD PTR [rbx], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 645  : 		}

  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5b		 pop	 rbx
  0004a	c3		 ret	 0
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
$LN124:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2246 : 		else if (this->_BUF_SIZE <= this->_Myres())

  00006	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	49 83 f8 08	 cmp	 r8, 8
  00011	72 0b		 jb	 SHORT $LN10@scalar

; 2247 : 			{	// copy any leftovers to small buffer and deallocate
; 2248 : 			pointer _Ptr = this->_Bx()._Ptr;
; 2249 : 			this->_Getal().destroy(&this->_Bx()._Ptr);
; 2250 : 			if (0 < _Newsize)
; 2251 : 				_Traits::copy(this->_Bx()._Buf,
; 2252 : 					_STD addressof(*_Ptr), _Newsize);
; 2253 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

  00013	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00016	49 ff c0	 inc	 r8
  00019	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN10@scalar:

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0001e	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00020	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00028	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0002c	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00031	72 0f		 jb	 SHORT $LN112@scalar
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef

; 708  : 	return (reinterpret_cast<_Ty *>(

  00033	48 8b 03	 mov	 rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00036	66 89 08	 mov	 WORD PTR [rax], cx
  00039	48 8b c3	 mov	 rax, rbx
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5b		 pop	 rbx
  00041	c3		 ret	 0
$LN112@scalar:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00042	48 8b c3	 mov	 rax, rbx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00045	66 89 0b	 mov	 WORD PTR [rbx], cx
  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5b		 pop	 rbx
  0004d	c3		 ret	 0
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Distance2@PEAPEA_W_J@std@@YAXPEAPEA_W0AEA_JUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Off$ = 24
__formal$dead$ = 32
??$_Distance2@PEAPEA_W_J@std@@YAXPEAPEA_W0AEA_JUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<wchar_t * __ptr64 * __ptr64,__int64>, COMDAT

; 1050 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1051 : 	if (_First != _Last)
; 1052 : 		{	// check for null pointers
; 1053 : 		_DEBUG_POINTER(_First);
; 1054 : 		_DEBUG_POINTER(_Last);
; 1055 : 		}
; 1056 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1057 : 
; 1058 : 	_Off += _Last - _First;

  00000	48 2b d1	 sub	 rdx, rcx
  00003	48 c1 fa 03	 sar	 rdx, 3
  00007	49 01 10	 add	 QWORD PTR [r8], rdx

; 1059 : 	}

  0000a	c3		 ret	 0
??$_Distance2@PEAPEA_W_J@std@@YAXPEAPEA_W0AEA_JUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<wchar_t * __ptr64 * __ptr64,__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_copy@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 303  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN16:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 304  : 		// note: only called internally from elsewhere in the STL, debug checks
; 305  : 		// and deprecation warnings omitted
; 306  : 	return (_Rechecked(_Dest,
; 307  : 		_Uninitialized_copy_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 308  : 			_Unchecked(_Dest), _Al)));
; 309  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_copy@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@@Z PROC ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>, COMDAT

; 439  : 	return (_Src);

  00000	48 8b c1	 mov	 rax, rcx

; 440  : 	}

  00003	c3		 ret	 0
??$_Unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@@Z ENDP ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_copy_al_unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 293  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 295  : 		_Ptr_copy_cat(_First, _Dest)));
; 296  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_copy_al_unchecked@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>, COMDAT

; 1315 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00000	48 8b c1	 mov	 rax, rcx

; 1316 : 	}

  00003	c3		 ret	 0
??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 892  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00003	48 85 d2	 test	 rdx, rdx
  00006	74 1c		 je	 SHORT $LN13@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00008	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0000a	48 c7 42 18 07
	00 00 00	 mov	 QWORD PTR [rdx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00012	48 89 4a 10	 mov	 QWORD PTR [rdx+16], rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00016	66 89 0a	 mov	 WORD PTR [rdx], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  00019	49 8b d0	 mov	 rdx, r8
  0001c	48 8b c8	 mov	 rcx, rax
  0001f	e9 00 00 00 00	 jmp	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
$LN13@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 895  : 		}

  00024	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PEAPEA_W@std@@YAPEAPEA_WPEAPEA_W@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAPEA_W@std@@YAPEAPEA_WPEAPEA_W@Z PROC	; std::_Unchecked<wchar_t * __ptr64 * __ptr64>, COMDAT

; 439  : 	return (_Src);

  00000	48 8b c1	 mov	 rax, rcx

; 440  : 	}

  00003	c3		 ret	 0
??$_Unchecked@PEAPEA_W@std@@YAPEAPEA_WPEAPEA_W@Z ENDP	; std::_Unchecked<wchar_t * __ptr64 * __ptr64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_copy_al_unchecked@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 293  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 294  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

  00004	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ; std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 295  : 		_Ptr_copy_cat(_First, _Dest)));
; 296  : 	}

  00009	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0000d	c3		 ret	 0
??$_Uninitialized_copy_al_unchecked@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_copy_cat@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBQEAV20@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
??$_Ptr_copy_cat@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBQEAV20@@Z PROC ; std::_Ptr_copy_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 709  : 	return {};

  00000	33 c0		 xor	 eax, eax

; 710  : 	}

  00002	c3		 ret	 0
??$_Ptr_copy_cat@$$CBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBQEAV20@@Z ENDP ; std::_Ptr_copy_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const ,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 265  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, no special optimization

$LN205:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 56		 push	 r14
  0000e	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00012	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0001b	48 89 5c 24 58	 mov	 QWORD PTR [rsp+88], rbx
  00020	49 8b d8	 mov	 rbx, r8
  00023	48 8b f2	 mov	 rsi, rdx
  00026	48 8b f9	 mov	 rdi, rcx

; 266  : 	_FwdIt _Next = _Dest;

  00029	48 89 5c 24 68	 mov	 QWORD PTR _Next$[rsp], rbx

; 267  : 
; 268  : 	_TRY_BEGIN

  0002e	45 33 f6	 xor	 r14d, r14d
$LL4@Uninitiali:

; 269  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00031	48 3b fe	 cmp	 rdi, rsi
  00034	74 4b		 je	 SHORT $LN3@Uninitiali
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00036	48 89 5c 24 50	 mov	 QWORD PTR $T2[rsp], rbx
  0003b	48 85 db	 test	 rbx, rbx
  0003e	74 32		 je	 SHORT $LN26@Uninitiali
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00040	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00048	4c 89 73 10	 mov	 QWORD PTR [rbx+16], r14

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004c	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00051	72 05		 jb	 SHORT $LN181@Uninitiali
  00053	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00056	eb 03		 jmp	 SHORT $LN182@Uninitiali
$LN181@Uninitiali:
  00058	48 8b c3	 mov	 rax, rbx
$LN182@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0005b	66 44 89 30	 mov	 WORD PTR [rax], r14w
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 776  : 		assign(_Right, 0, npos);

  0005f	49 83 c9 ff	 or	 r9, -1
  00063	45 33 c0	 xor	 r8d, r8d
  00066	48 8b d7	 mov	 rdx, rdi
  00069	48 8b cb	 mov	 rcx, rbx
  0006c	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00071	90		 npad	 1
$LN26@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 269  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00072	48 83 c3 20	 add	 rbx, 32			; 00000020H
  00076	48 89 5c 24 60	 mov	 QWORD PTR _Dest$[rsp], rbx
  0007b	48 83 c7 20	 add	 rdi, 32			; 00000020H
  0007f	eb b0		 jmp	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)
; 273  : 		_Al.destroy(_Next);
; 274  : 	_RERAISE;
; 275  : 	_CATCH_END
; 276  : 
; 277  : 	return (_Dest);

  00081	48 8b c3	 mov	 rax, rbx

; 278  : 	}

  00084	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00089	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008d	41 5e		 pop	 r14
  0008f	5f		 pop	 rdi
  00090	5e		 pop	 rsi
  00091	c3		 ret	 0
$LN204@Uninitiali:
??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 60	 mov	 rdx, QWORD PTR _Dest$[rbp]
  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL

  0001c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00021	53		 push	 rbx
  00022	55		 push	 rbp
  00023	57		 push	 rdi
  00024	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00028	48 8b ea	 mov	 rbp, rdx
__catch$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z$0:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)

  0002b	48 8b 5d 68	 mov	 rbx, QWORD PTR _Next$[rbp]
  0002f	48 8b 7d 60	 mov	 rdi, QWORD PTR _Dest$[rbp]
  00033	48 3b df	 cmp	 rbx, rdi
  00036	74 11		 je	 SHORT $LN6@catch$0
$LL7@catch$0:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)
; 273  : 		_Al.destroy(_Next);

  00038	48 8b d3	 mov	 rdx, rbx
  0003b	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)

  00040	48 83 c3 20	 add	 rbx, 32			; 00000020H
  00044	48 3b df	 cmp	 rbx, rdi
  00047	75 ef		 jne	 SHORT $LL7@catch$0
$LN6@catch$0:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)
; 273  : 		_Al.destroy(_Next);
; 274  : 	_RERAISE;

  00049	33 d2		 xor	 edx, edx
  0004b	33 c9		 xor	 ecx, ecx
  0004d	e8 00 00 00 00	 call	 _CxxThrowException
  00052	90		 npad	 1
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 60	 mov	 rdx, QWORD PTR _Dest$[rbp]
  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0

; 271  : 	_CATCH_ALL

  0001c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00021	53		 push	 rbx
  00022	55		 push	 rbp
  00023	57		 push	 rdi
  00024	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00028	48 8b ea	 mov	 rbp, rdx
__catch$??$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z$0:

; 272  : 	for (; _Next != _Dest; ++_Next)

  0002b	48 8b 5d 68	 mov	 rbx, QWORD PTR _Next$[rbp]
  0002f	48 8b 7d 60	 mov	 rdi, QWORD PTR _Dest$[rbp]
  00033	48 3b df	 cmp	 rbx, rdi
  00036	74 11		 je	 SHORT $LN6@catch$0
$LL7@catch$0:

; 273  : 		_Al.destroy(_Next);

  00038	48 8b d3	 mov	 rdx, rbx
  0003b	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 272  : 	for (; _Next != _Dest; ++_Next)

  00040	48 83 c3 20	 add	 rbx, 32			; 00000020H
  00044	48 3b df	 cmp	 rbx, rdi
  00047	75 ef		 jne	 SHORT $LL7@catch$0
$LN6@catch$0:

; 274  : 	_RERAISE;

  00049	33 d2		 xor	 edx, edx
  0004b	33 c9		 xor	 ecx, ecx
  0004d	e8 00 00 00 00	 call	 _CxxThrowException
  00052	90		 npad	 1
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEBV10@0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 754  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00003	48 85 d2	 test	 rdx, rdx
  00006	74 1c		 je	 SHORT $LN8@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00008	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0000a	48 c7 42 18 07
	00 00 00	 mov	 QWORD PTR [rdx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00012	48 89 4a 10	 mov	 QWORD PTR [rdx+16], rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00016	66 89 0a	 mov	 WORD PTR [rdx], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  00019	49 8b d0	 mov	 rdx, r8
  0001c	48 8b c8	 mov	 rcx, rax
  0001f	e9 00 00 00 00	 jmp	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
$LN8@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 756  : 		}

  00024	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_copy_cat@PEA_WV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAPEA_WAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
??$_Ptr_copy_cat@PEA_WV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAPEA_WAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::_Ptr_copy_cat<wchar_t * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 709  : 	return {};

  00000	33 c0		 xor	 eax, eax

; 710  : 	}

  00002	c3		 ret	 0
??$_Ptr_copy_cat@PEA_WV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAPEA_WAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::_Ptr_copy_cat<wchar_t * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 265  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, no special optimization

$LN193:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 56		 push	 r14
  0000e	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00012	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  0001b	48 89 5c 24 58	 mov	 QWORD PTR [rsp+88], rbx
  00020	49 8b d8	 mov	 rbx, r8
  00023	48 8b f2	 mov	 rsi, rdx
  00026	48 8b f9	 mov	 rdi, rcx

; 266  : 	_FwdIt _Next = _Dest;

  00029	48 89 5c 24 68	 mov	 QWORD PTR _Next$[rsp], rbx

; 267  : 
; 268  : 	_TRY_BEGIN

  0002e	45 33 f6	 xor	 r14d, r14d
$LL4@Uninitiali:

; 269  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00031	48 3b fe	 cmp	 rdi, rsi
  00034	74 5e		 je	 SHORT $LN3@Uninitiali
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00036	48 89 5c 24 50	 mov	 QWORD PTR $T2[rsp], rbx
  0003b	48 85 db	 test	 rbx, rbx
  0003e	74 45		 je	 SHORT $LN26@Uninitiali
  00040	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  00043	48 c7 43 18 07
	00 00 00	 mov	 QWORD PTR [rbx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  0004b	4c 89 73 10	 mov	 QWORD PTR [rbx+16], r14

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  0004f	48 83 7b 18 08	 cmp	 QWORD PTR [rbx+24], 8
  00054	72 05		 jb	 SHORT $LN162@Uninitiali
  00056	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00059	eb 03		 jmp	 SHORT $LN163@Uninitiali
$LN162@Uninitiali:
  0005b	48 8b c3	 mov	 rax, rbx
$LN163@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  0005e	66 44 89 30	 mov	 WORD PTR [rax], r14w

; 303  : 		return (*_First == 0 ? 0

  00062	66 83 3a 00	 cmp	 WORD PTR [rdx], 0
  00066	75 05		 jne	 SHORT $LN178@Uninitiali
  00068	4d 8b c6	 mov	 r8, r14
  0006b	eb 0f		 jmp	 SHORT $LN179@Uninitiali
$LN178@Uninitiali:
  0006d	49 83 c8 ff	 or	 r8, -1
$LL191@Uninitiali:
  00071	49 ff c0	 inc	 r8
  00074	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  0007a	75 f5		 jne	 SHORT $LL191@Uninitiali
$LN179@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0007c	48 8b cb	 mov	 rcx, rbx
  0007f	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00084	90		 npad	 1
$LN26@Uninitiali:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory

; 269  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  00085	48 83 c3 20	 add	 rbx, 32			; 00000020H
  00089	48 89 5c 24 60	 mov	 QWORD PTR _Dest$[rsp], rbx
  0008e	48 83 c7 08	 add	 rdi, 8
  00092	eb 9d		 jmp	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)
; 273  : 		_Al.destroy(_Next);
; 274  : 	_RERAISE;
; 275  : 	_CATCH_END
; 276  : 
; 277  : 	return (_Dest);

  00094	48 8b c3	 mov	 rax, rbx

; 278  : 	}

  00097	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  0009c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a0	41 5e		 pop	 r14
  000a2	5f		 pop	 rdi
  000a3	5e		 pop	 rsi
  000a4	c3		 ret	 0
$LN192@Uninitiali:
??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 60	 mov	 rdx, QWORD PTR _Dest$[rbp]
  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL

  0001c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00021	53		 push	 rbx
  00022	55		 push	 rbp
  00023	57		 push	 rdi
  00024	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00028	48 8b ea	 mov	 rbp, rdx
__catch$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z$0:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)

  0002b	48 8b 5d 68	 mov	 rbx, QWORD PTR _Next$[rbp]
  0002f	48 8b 7d 60	 mov	 rdi, QWORD PTR _Dest$[rbp]
  00033	48 3b df	 cmp	 rbx, rdi
  00036	74 11		 je	 SHORT $LN6@catch$0
$LL7@catch$0:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)
; 273  : 		_Al.destroy(_Next);

  00038	48 8b d3	 mov	 rdx, rbx
  0003b	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)

  00040	48 83 c3 20	 add	 rbx, 32			; 00000020H
  00044	48 3b df	 cmp	 rbx, rdi
  00047	75 ef		 jne	 SHORT $LL7@catch$0
$LN6@catch$0:

; 270  : 		_Al.construct(_Dest, *_First);
; 271  : 	_CATCH_ALL
; 272  : 	for (; _Next != _Dest; ++_Next)
; 273  : 		_Al.destroy(_Next);
; 274  : 	_RERAISE;

  00049	33 d2		 xor	 edx, edx
  0004b	33 c9		 xor	 ecx, ecx
  0004d	e8 00 00 00 00	 call	 _CxxThrowException
  00052	90		 npad	 1
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 60	 mov	 rdx, QWORD PTR _Dest$[rbp]
  0000d	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 80
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$dead$ = 104
_Next$ = 104
__formal$dead$ = 112
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA PROC ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0

; 271  : 	_CATCH_ALL

  0001c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00021	53		 push	 rbx
  00022	55		 push	 rbp
  00023	57		 push	 rdi
  00024	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00028	48 8b ea	 mov	 rbp, rdx
__catch$??$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z$0:

; 272  : 	for (; _Next != _Dest; ++_Next)

  0002b	48 8b 5d 68	 mov	 rbx, QWORD PTR _Next$[rbp]
  0002f	48 8b 7d 60	 mov	 rdi, QWORD PTR _Dest$[rbp]
  00033	48 3b df	 cmp	 rbx, rdi
  00036	74 11		 je	 SHORT $LN6@catch$0
$LL7@catch$0:

; 273  : 		_Al.destroy(_Next);

  00038	48 8b d3	 mov	 rdx, rbx
  0003b	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 272  : 	for (; _Next != _Dest; ++_Next)

  00040	48 83 c3 20	 add	 rbx, 32			; 00000020H
  00044	48 3b df	 cmp	 rbx, rdi
  00047	75 ef		 jne	 SHORT $LL7@catch$0
$LN6@catch$0:

; 274  : 	_RERAISE;

  00049	33 d2		 xor	 edx, edx
  0004b	33 c9		 xor	 ecx, ecx
  0004d	e8 00 00 00 00	 call	 _CxxThrowException
  00052	90		 npad	 1
?catch$0@?0???$_Uninitialized_copy_al_unchecked1@PEAPEA_WPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAPEA_W0PEAV10@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_copy_al_unchecked1<wchar_t * __ptr64 * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 636  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  00003	48 85 d2	 test	 rdx, rdx
  00006	74 1c		 je	 SHORT $LN3@construct
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00008	33 c9		 xor	 ecx, ecx

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0000a	48 c7 42 18 07
	00 00 00	 mov	 QWORD PTR [rdx+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00012	48 89 4a 10	 mov	 QWORD PTR [rdx+16], rcx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00016	66 89 0a	 mov	 WORD PTR [rdx], cx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 908  : 		_Assign_rv(_STD forward<_Myt>(_Right));

  00019	49 8b d0	 mov	 rdx, r8
  0001c	48 8b c8	 mov	 rcx, rax
  0001f	e9 00 00 00 00	 jmp	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
$LN3@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 638  : 		}

  00024	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>, COMDAT

; 892  : 		{	// construct _Ty(_Types...) at _Ptr

$LN153:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001a	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  0001f	48 85 d2	 test	 rdx, rdx
  00022	74 43		 je	 SHORT $LN152@construct
  00024	49 8b 10	 mov	 rdx, QWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	45 33 c0	 xor	 r8d, r8d

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0002a	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00032	4c 89 40 10	 mov	 QWORD PTR [rax+16], r8

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00036	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003b	72 05		 jb	 SHORT $LN134@construct
  0003d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00040	eb 03		 jmp	 SHORT $LN135@construct
$LN134@construct:
  00042	48 8b c8	 mov	 rcx, rax
$LN135@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00045	66 44 89 01	 mov	 WORD PTR [rcx], r8w

; 303  : 		return (*_First == 0 ? 0

  00049	66 44 39 02	 cmp	 WORD PTR [rdx], r8w
  0004d	74 0f		 je	 SHORT $LN150@construct
  0004f	49 83 c8 ff	 or	 r8, -1
$LL151@construct:
  00053	49 ff c0	 inc	 r8
  00056	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  0005c	75 f5		 jne	 SHORT $LL151@construct
$LN150@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00066	90		 npad	 1
$LN152@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 895  : 		}

  00067	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006b	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA PROC ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA ENDP ; `std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>, COMDAT

; 754  : 		{	// construct _Objty(_Types...) at _Ptr

$LN148:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001a	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  0001f	48 85 d2	 test	 rdx, rdx
  00022	74 43		 je	 SHORT $LN147@construct
  00024	49 8b 10	 mov	 rdx, QWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	45 33 c0	 xor	 r8d, r8d

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0002a	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00032	4c 89 40 10	 mov	 QWORD PTR [rax+16], r8

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00036	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003b	72 05		 jb	 SHORT $LN129@construct
  0003d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00040	eb 03		 jmp	 SHORT $LN130@construct
$LN129@construct:
  00042	48 8b c8	 mov	 rcx, rax
$LN130@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00045	66 44 89 01	 mov	 WORD PTR [rcx], r8w

; 303  : 		return (*_First == 0 ? 0

  00049	66 44 39 02	 cmp	 WORD PTR [rdx], r8w
  0004d	74 0f		 je	 SHORT $LN145@construct
  0004f	49 83 c8 ff	 or	 r8, -1
$LL146@construct:
  00053	49 ff c0	 inc	 r8
  00056	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  0005c	75 f5		 jne	 SHORT $LL146@construct
$LN145@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00066	90		 npad	 1
$LN147@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 756  : 		}

  00067	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006b	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
_Al$dead$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA PROC ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA ENDP ; `std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z
_TEXT	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>, COMDAT

; 636  : 		{	// construct _Objty(_Types...) at _Ptr

$LN143:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000e	48 c7 44 24 20
	fe ff ff ff	 mov	 QWORD PTR $T1[rsp], -2
  00017	48 8b c2	 mov	 rax, rdx

; 637  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001a	48 89 54 24 40	 mov	 QWORD PTR $T2[rsp], rdx
  0001f	48 85 d2	 test	 rdx, rdx
  00022	74 43		 je	 SHORT $LN142@construct
  00024	49 8b 10	 mov	 rdx, QWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 488  : 		_Mysize = 0;

  00027	45 33 c0	 xor	 r8d, r8d

; 2255 : 		this->_Myres() = this->_BUF_SIZE - 1;

  0002a	48 c7 40 18 07
	00 00 00	 mov	 QWORD PTR [rax+24], 7

; 2214 : 		_Traits::assign(this->_Myptr()[this->_Mysize() = _Newsize], _Elem());

  00032	4c 89 40 10	 mov	 QWORD PTR [rax+16], r8

; 505  : 		return (this->_BUF_SIZE <= this->_Myres

  00036	48 83 78 18 08	 cmp	 QWORD PTR [rax+24], 8
  0003b	72 05		 jb	 SHORT $LN124@construct
  0003d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00040	eb 03		 jmp	 SHORT $LN125@construct
$LN124@construct:
  00042	48 8b c8	 mov	 rcx, rax
$LN125@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd

; 345  : 		_Left = _Right;

  00045	66 44 89 01	 mov	 WORD PTR [rcx], r8w

; 303  : 		return (*_First == 0 ? 0

  00049	66 44 39 02	 cmp	 WORD PTR [rdx], r8w
  0004d	74 0f		 je	 SHORT $LN140@construct
  0004f	49 83 c8 ff	 or	 r8, -1
$LL141@construct:
  00053	49 ff c0	 inc	 r8
  00056	66 42 83 3c 42
	00		 cmp	 WORD PTR [rdx+r8*2], 0
  0005c	75 f5		 jne	 SHORT $LL141@construct
$LN140@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring

; 1177 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  00066	90		 npad	 1
$LN142@construct:
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0

; 638  : 		}

  00067	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006b	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA PROC ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA ENDP ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$dead$ = 64
$T2 = 64
_Ptr$ = 72
<_Args_0>$ = 80
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA PROC ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	48 8b 55 48	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0000d	48 8b 4d 40	 mov	 rcx, QWORD PTR $T2[rbp]
  00011	e8 00 00 00 00	 call	 ??3@YAXPEAX0@Z		; operator delete
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAPEA_W@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAPEA_W@Z@4HA ENDP ; `std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,wchar_t * __ptr64 & __ptr64>'::`1'::dtor$0
text$x	ENDS
END
